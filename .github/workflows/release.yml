---
name: Publish release images
on:
  push:
    tags:
      # Tag names are used passed as 'image_version' to image_tools.bake and
      # are validated there.
      - '*'

jobs:
  release:
    name: Release product images for ${{ matrix.product }}
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      # This setting can be changed to throttle the build load
      # max-parallel: 1
      # If we want more parallelism we can schedule a dedicated task for every tuple (product, product version)
      matrix:
        product:
          - airflow
          - druid
          - hadoop
          - hbase
          - hive
          - kafka
          - krb5
          - nifi
          - opa
          - spark-k8s
          - superset
          - testing-tools
          - trino
          - tools
          - zookeeper
    env:
      GITHUB_REF_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # tag=v3
      - name: Set up QEMU for multiarch builds
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # tag=v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # tag=v2
      - name: Install python 3
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # tag=v4
        with:
          python-version: '3.x'
      - run: pip install image-tools-stackabletech
      - name: Login to Stackable Nexus
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # tag=v3
        with:
          registry: docker.stackable.tech
          username: github
          password: ${{ secrets.NEXUS_PASSWORD }}
      - name: Publish release product images
        id: publish_images
        run: |
          BAKE_OUTPUT=$(bake --product "${{ matrix.product }}" --image-version "$GITHUB_REF_NAME" --organization stackable --architecture linux/amd64 --push 2>&1)
          echo "$BAKE_OUTPUT"
          # needed for multiline strings in github actions
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "PUSHED_MANIFESTS<<$EOF";
            # find all pushed manifests based on the output of the bake command
            # this is needed for image signing, since images should be referenced by their digest
            echo "$BAKE_OUTPUT" | awk '/^#[0-9]+ pushing manifest for docker.stackable.tech\/stackable\/${{ matrix.product }}:.+ done$/ { print $5 }' >> "$GITHUB_OUTPUT";
            echo "$EOF" >> "$GITHUB_OUTPUT";
          } >> "$GITHUB_OUTPUT"
      - name: Set up Cosign
        uses: sigstore/cosign-installer@v3.1.2
      - name: Sign images
        run: |
          while IFS= read -r MANIFEST; do
            echo "signing $MANIFEST";
            cosign sign -y "$MANIFEST";
          done <<< "${{steps.publish_images.outputs.PUSHED_MANIFESTS}}"
  preflight:
    name: ${{ matrix.product }} preflight checks
    # Run preflight checks and submit results to the RH certification portal.
    # This job only runs if the "release" job was successful
    # See: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds
    needs: release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      # This setting can be changed to throttle the build load
      # Another reason to have no parallelism is that the RedHat portal is not reliable and
      # and preflight submissions are not idempotent. This means that if one of the products below
      # fails, we need to clean up everything that was done for all other products in the failed run.
      max-parallel: 1
      matrix:
        product:
          - airflow
          - druid
          - hadoop
          - hbase
          - hive
          - kafka
          - nifi
          - opa
          - spark-k8s
          - superset
          - trino
          - tools
          - zookeeper
    env:
      GITHUB_REF_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # tag=v3
      - name: Install python 3
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # tag=v4
        with:
          python-version: '3.x'
      - run: pip install image-tools-stackabletech
      - name: Install preflight
        run: |
          wget https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/1.6.2/preflight-linux-amd64
          chmod +x preflight-linux-amd64
      - name: Submit images to OpenShift certification projects
        run: check-container --product "${{ matrix.product }}" --image-version "$GITHUB_REF_NAME" --executable ./preflight-linux-amd64 --token "${{ secrets.RH_PYXIS_API_TOKEN }}" --submit
