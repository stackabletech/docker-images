---
name: Publish release images
on:
  push:
    tags:
      # Tag names are used passed as 'image_version' to image_tools.bake and
      # are validated there.
      - '*'

jobs:
  release:
    name: Release product images for ${{ matrix.product }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      # This setting can be changed to throttle the build load
      # max-parallel: 1
      # If we want more parallelism we can schedule a dedicated task for every tuple (product, product version)
      matrix:
        product:
          - airflow
          - druid
          - hadoop
          - hbase
          - hive
          - kafka
          - krb5
          - nifi
          - opa
          - pyspark-k8s
          - spark-k8s
          - superset
          - testing-tools
          - trino
          - tools
          - zookeeper
    env:
      GITHUB_REF_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # tag=v3
      - name: Set up QEMU for multiarch builds
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # tag=v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # tag=v2
      - name: Install python 3
        uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b # tag=v4
        with:
          python-version: '3.x'
      - name: Login to Stackable Nexus
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2
        with:
          registry: docker.stackable.tech
          username: github
          password: ${{ secrets.NEXUS_PASSWORD }}
      - name: Publish release product images
        run: python -m image_tools.bake --product "${{ matrix.product }}" --image-version "$GITHUB_REF_NAME" --organization stackable --architecture linux/amd64 --push
  preflight:
    name: ${{ matrix.product }} preflight checks
    # Run preflight checks and submit results to the RH certification portal.
    # This job only runs if the "release" job was successful
    # See: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds
    needs: release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      # This setting can be changed to throttle the build load
      # Another reason to have no parallelism is that the RedHat portal is not reliable and
      # and preflight submissions are not idempotent. This means that if one of the products below
      # fails, we need to clean up everything that was done for all other products in the failed run.
      max-parallel: 1
      matrix:
        product:
          - airflow
          - druid
          - hadoop
          - hbase
          - hive
          - kafka
          - nifi
          - opa
          - pyspark-k8s
          - spark-k8s
          - superset
          - trino
          - tools
          - zookeeper
    env:
      GITHUB_REF_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # tag=v3
      - name: Install python 3
        uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b # tag=v4
        with:
          python-version: '3.x'
      - name: Install preflight
        run: |
          wget https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/1.6.2/preflight-linux-amd64
          chmod +x preflight-linux-amd64
      - name: Submit images to OpenShift certification projects
        run: python -m image_tools.preflight --product "${{ matrix.product }}" --image-version "$GITHUB_REF_NAME" --preflight-cmd ./preflight-linux-amd64 --token "${{ secrets.RH_PYXIS_API_TOKEN }}" --submit
