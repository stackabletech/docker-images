---
name: Build Trino

env:
  PRODUCT_NAME: trino

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 1/2 * *' # https://crontab.guru/#0_1_1/2_*_*
  push:
    branches:
      - main
    paths:
      - trino/**
      - .github/actions/**
      - .github/workflows/dev_trino.yaml
  pull_request:
    paths:
      - trino/**
      - .github/**

jobs:
  generate_matrix:
    name: generate_matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: shard
        uses: ./.github/actions/shard
        with:
          product: ${{ env.PRODUCT_NAME }}
    outputs:
      versions: ${{ steps.shard.outputs.versions }}

  build:
    name: Build/Publish ${{ matrix.versions }}-${{ matrix.runner.arch }} Image
    needs: [generate_matrix]
    permissions:
      id-token: write
    runs-on: ${{ matrix.runner.name }}
    strategy:
      matrix:
        runner:
          - { name: "ubuntu-latest", arch: "amd64" }
          - { name: "ubicloud-standard-8-arm", arch: "arm64" }
        versions: ${{ fromJson(needs.generate_matrix.outputs.versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Build Product Image
        id: build
        uses: ./.github/actions/build
        with:
          product-name: ${{ env.PRODUCT_NAME }} # todo: how to handle workflow_dispatch (use product input)
          product-version: ${{ matrix.versions }}
      - name: Publish Product Image
        uses: ./.github/actions/publish-image
        with:
          product: ${{ env.PRODUCT_NAME }}
          image-name: ${{ steps.build.outputs.image-name }}
          image-version: ${{ steps.build.outputs.image-version }}
          nexus-password: ${{ secrets.NEXUS_PASSWORD }}
          harbor-secret: ${{ secrets.HARBOR_ROBOT_SDP_GITHUB_ACTION_BUILD_SECRET }}

  publish_manifests:
    name: Build/Publish ${{ matrix.versions }} Manifests
    needs: [generate_matrix, build]
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ${{ fromJson(needs.generate_matrix.outputs.versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Build Product Manifest List
        uses: ./.github/actions/publish-manifest
        with:
          product: ${{ env.PRODUCT_NAME }} # todo: how to handle workflow_dispatch (use product input)
          image-version: ${{ matrix.versions }}-stackable0.0.0-dev
          nexus-password: ${{ secrets.NEXUS_PASSWORD }}
          harbor-secret: ${{ secrets.HARBOR_ROBOT_SDP_GITHUB_ACTION_BUILD_SECRET }}
