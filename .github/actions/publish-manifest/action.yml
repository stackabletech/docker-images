---
name: Publish Product Image Manifest
description: This action publishes a Docker image
inputs:
  product:
    description: The name of the product to publish
    required: true
  image-version:
    description: This is the container image end tag excluding the architecture information (right of ':')
    required: true
  nexus-password:
    description: The password to login to Nexus
    required: true
  harbor-secret:
    description: The secret to login to Harbor
    required: true
runs:
  using: composite
  steps:
    - name: Set up Cosign
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

    - name: Login to Stackable Nexus
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: docker.stackable.tech
        username: github
        password: ${{ inputs.nexus-password }}

    - name: Login to Stackable Harbor
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: oci.stackable.tech
        username: robot$sdp+github-action-build
        password: ${{ inputs.harbor-secret }}

    - name: Setup Environment Variables
      shell: bash
      run: |
        set -euo pipefail
        IMAGE_VERSION=${{ inputs.image-version }}
        echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV

    - name: Create Manifest
      shell: bash
      run: |
        set -euo pipefail
        MANIFEST_NAME="docker.stackable.tech/stackable/${{ inputs.product }}:$IMAGE_VERSION"
        # Create and push to Stackable Nexus
        # `docker manifest push` directly returns the digest of the manifest list
        # As it is an experimental feature, this might change in the future
        # Further reading: https://docs.docker.com/reference/cli/docker/manifest/push/
        # --amend because the manifest list would be updated since we use the same tag: 0.0.0-dev
        docker manifest create "$MANIFEST_NAME" --amend "${MANIFEST_NAME}-amd64" --amend "${MANIFEST_NAME}-arm64"
        DIGEST=$(docker manifest push $MANIFEST_NAME)

        # Refer to image via its digest (oci.stackable.tech/sdp/airflow@sha256:0a1b2c...)
        # This generates a signature and publishes it to the registry, next to the image
        # Uses the keyless signing flow with Github Actions as identity provider
        cosign sign -y "$MANIFEST_NAME@$DIGEST"

        # Push to oci.stackable.tech as well
        MANIFEST_NAME="oci.stackable.tech/sdp/${{ inputs.product }}:$IMAGE_VERSION"
        docker manifest create "$MANIFEST_NAME" --amend "${MANIFEST_NAME}-amd64" --amend "${MANIFEST_NAME}-arm64"
        DIGEST=$(docker manifest push $MANIFEST_NAME)
        cosign sign -y "$MANIFEST_NAME@$DIGEST"
