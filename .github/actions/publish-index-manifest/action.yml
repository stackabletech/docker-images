---
name: Publish and Sign Image Index Manifest
description: |
  This action publishes and signs a container image index manifest for
  multi-arch images
inputs:
  image-registry-uri:
    description: The URI of the container image registry
    required: true
  image-registry-username:
    description: The username used to login to the container image registry
    required: true
  image-registry-password:
    description: The password used to login to the container image registry
    required: true
  image-repository:
    description: |
      Last segment of the path, for example `stackable/kafka` or
      `k8s/sig-storage/csi-provisioner`
    required: true
  image-index-manifest-tag:
    description: |
      Human-readable tag (usually the version) without architecture information,
      for example: `3.4.1-stackable0.0.0-dev`
  image-architectures:
    description: |
      A JSON array of architectures to add to the image index manifest, like
      ["amd64", "arm64", "riscv"]
    default: |
      ["amd64", "arm64"]
runs:
  using: composite
  steps:
    - name: Set up Cosign
      uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0

    - name: Login to Container Registry (${{ inputs.image-registry-uri }})
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ${{ inputs.image-registry-uri }}
        username: ${{ inputs.image-registry-username }}
        password: ${{ inputs.image-registry-password }}

    - name: Create Image Index Manifest
      shell: bash
      env:
        IMAGE_INDEX_MANIFEST_TAG: ${{ inputs.image-index-manifest-tag }}
        IMAGE_ARCHITECTURES: ${{ inputs.image-architectures }}
        IMAGE_REPOSITORY: ${{ inputs.image-repository }}
        REGISTRY_URI: ${{ inputs.image-registry-uri }}
      run: |
        set -euo pipefail

        # Construct the image index uri, which for example contains:
        # docker.stackable.tech/stackable/kafka:3.4.1-stackable0.0.0-dev
        IMAGE_INDEX_URI="$REGISTRY_URI/$IMAGE_REPOSITORY:$IMAGE_INDEX_MANIFEST_TAG"
        echo "IMAGE_INDEX_URI=$IMAGE_INDEX_URI" >> $GITHUB_ENV

        AMEND_OPTIONS=$(
          jq \
          --raw-output \
          --null-input \
          --arg image_index_uri "$IMAGE_INDEX_URI" \
          --arg arch_list "$IMAGE_ARCHITECTURES" \
          '
            $arch_list
            | fromjson
            | [
                .[] as $arch | "--amend \($image_index_uri)-\($arch)"
              ]
            | join(" ")'
        )

        # `docker manifest push` directly returns the digest of the manifest list
        # As it is an experimental feature, this might change in the future.
        # We use --amend because the manifest list would be updated since we use
        # the same tag: 0.0.0-dev
        #
        # Further reading: https://docs.docker.com/reference/cli/docker/manifest/push/
        docker manifest create "$IMAGE_INDEX_URI" ${AMEND_OPTIONS[@]}
        docker manifest push "$IMAGE_INDEX_URI"

    - name: Sign Image Index Manifest
      shell: bash
      env:
        IMAGE_REPOSITORY: ${{ inputs.image-repository }}
        REGISTRY_URI: ${{ inputs.image-registry-uri }}
      run: |
        set -euo pipefail

        # Get the image index manifest digest
        DIGEST=$(.scripts/get_manifest_digest.sh "$IMAGE_INDEX_URI")

        # Construct the image repo digest, which for example contains:
        # docker.stackable.tech/stackable/kafka@sha256:91...
        IMAGE_REPO_DIGEST="$REGISTRY_URI/$IMAGE_REPOSITORY@$DIGEST"

        # This generates a signature and publishes it to the registry, next to
        # the image. This step uses the keyless signing flow with Github Actions
        # as the identity provider.
        cosign sign --yes "$IMAGE_REPO_DIGEST"
