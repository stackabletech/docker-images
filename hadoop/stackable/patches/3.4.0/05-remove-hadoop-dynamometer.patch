Entirely remove hadoop-dynamometer

From: Lars Francke <git@lars-francke.de>


---
 dev-support/bin/dist-layout-stitching              |    1 
 .../assemblies/hadoop-dynamometer-blockgen.xml     |   35 -
 .../assemblies/hadoop-dynamometer-infra.xml        |   35 -
 .../assemblies/hadoop-dynamometer-workload.xml     |   35 -
 .../resources/assemblies/hadoop-dynamometer.xml    |   73 -
 hadoop-project/src/site/site.xml                   |    1 
 .../hadoop-dynamometer-blockgen/pom.xml            |  130 --
 .../src/main/bash/generate-block-lists.sh          |   38 -
 .../dynamometer/blockgenerator/BlockInfo.java      |  102 --
 .../blockgenerator/GenerateBlockImagesDriver.java  |  141 --
 .../GenerateDNBlockInfosReducer.java               |   99 --
 .../dynamometer/blockgenerator/XMLParser.java      |  174 ---
 .../blockgenerator/XMLParserMapper.java            |   81 -
 .../dynamometer/blockgenerator/package-info.java   |   26 
 .../dynamometer/blockgenerator/TestBlockGen.java   |   89 --
 .../dynamometer/blockgenerator/TestXMLParser.java  |   93 --
 .../test/resources/fsimage_0000000000000061740.xml |  553 ----------
 .../hadoop-dynamometer-dist/pom.xml                |  128 --
 .../hadoop-dynamometer-infra/pom.xml               |  216 ----
 .../src/main/bash/create-slim-hadoop-tar.sh        |   53 -
 .../src/main/bash/parse-metrics.sh                 |   84 -
 .../src/main/bash/start-dynamometer-cluster.sh     |   41 -
 .../src/main/bash/upload-fsimage.sh                |   84 -
 .../apache/hadoop/tools/dynamometer/AMOptions.java |  317 ------
 .../dynamometer/AllowAllImpersonationProvider.java |   46 -
 .../tools/dynamometer/ApplicationMaster.java       |  889 ----------------
 .../BlockPlacementPolicyAlwaysSatisfied.java       |   58 -
 .../apache/hadoop/tools/dynamometer/Client.java    | 1134 --------------------
 .../hadoop/tools/dynamometer/DynoConstants.java    |  130 --
 .../hadoop/tools/dynamometer/DynoInfraUtils.java   |  594 ----------
 .../hadoop/tools/dynamometer/DynoResource.java     |   72 -
 .../tools/dynamometer/SimulatedDataNodes.java      |  185 ---
 .../hadoop/tools/dynamometer/package-info.java     |   29 -
 .../src/main/resources/start-component.sh          |  348 ------
 .../tools/dynamometer/TestDynamometerInfra.java    |  580 ----------
 .../tools/dynamometer/TestDynoInfraUtils.java      |   66 -
 .../src/test/resources/blocks/dn0-a-0-r-00000      |   34 -
 .../src/test/resources/blocks/dn1-a-0-r-00001      |   33 -
 .../src/test/resources/blocks/dn2-a-0-r-00002      |   33 -
 .../test/resources/conf/etc/hadoop/core-site.xml   |   20 
 .../test/resources/conf/etc/hadoop/hdfs-site.xml   |   20 
 .../resources/conf/etc/hadoop/log4j.properties     |   26 
 .../src/test/resources/hadoop_3_1/VERSION          |    7 
 .../hadoop_3_1/fsimage_0000000000000061740         |  Bin
 .../hadoop_3_1/fsimage_0000000000000061740.md5     |    1 
 .../src/test/resources/yarn-site.xml               |   19 
 .../hadoop-dynamometer-workload/pom.xml            |  151 ---
 .../src/main/bash/parse-start-timestamp.sh         |   52 -
 .../src/main/bash/start-workload.sh                |   42 -
 .../workloadgenerator/CreateFileMapper.java        |  147 ---
 .../workloadgenerator/VirtualInputFormat.java      |   57 -
 .../workloadgenerator/VirtualInputSplit.java       |   52 -
 .../workloadgenerator/VirtualRecordReader.java     |   78 -
 .../workloadgenerator/WorkloadDriver.java          |  213 ----
 .../workloadgenerator/WorkloadMapper.java          |   70 -
 .../audit/AuditCommandParser.java                  |   59 -
 .../audit/AuditLogDirectParser.java                |  158 ---
 .../audit/AuditLogHiveTableParser.java             |   72 -
 .../audit/AuditReplayCommand.java                  |  163 ---
 .../workloadgenerator/audit/AuditReplayMapper.java |  311 -----
 .../audit/AuditReplayReducer.java                  |   44 -
 .../workloadgenerator/audit/AuditReplayThread.java |  328 ------
 .../workloadgenerator/audit/CountTimeWritable.java |   82 -
 .../audit/NoSplitTextInputFormat.java              |   47 -
 .../workloadgenerator/audit/UserCommandKey.java    |  111 --
 .../workloadgenerator/audit/package-info.java      |   27 
 .../workloadgenerator/package-info.java            |   28 
 .../workloadgenerator/TestWorkloadGenerator.java   |  165 ---
 .../audit/TestAuditLogDirectParser.java            |  152 ---
 .../src/test/resources/audit_trace_direct/audit0   |    6 
 .../src/test/resources/audit_trace_hive/audit0     |    6 
 hadoop-tools/hadoop-dynamometer/pom.xml            |   55 -
 .../src/site/markdown/Dynamometer.md               |  302 -----
 .../src/site/resources/css/site.css                |   30 -
 .../images/dynamometer-architecture-infra.png      |  Bin
 .../images/dynamometer-architecture-replay.png     |  Bin
 hadoop-tools/pom.xml                               |    1 
 77 files changed, 9962 deletions(-)
 delete mode 100644 hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-blockgen.xml
 delete mode 100644 hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-infra.xml
 delete mode 100644 hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-workload.xml
 delete mode 100644 hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer.xml
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/pom.xml
 delete mode 100755 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/bash/generate-block-lists.sh
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/BlockInfo.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateBlockImagesDriver.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateDNBlockInfosReducer.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParser.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParserMapper.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/package-info.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestBlockGen.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestXMLParser.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/resources/fsimage_0000000000000061740.xml
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-dist/pom.xml
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/pom.xml
 delete mode 100755 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/create-slim-hadoop-tar.sh
 delete mode 100755 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/parse-metrics.sh
 delete mode 100755 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/start-dynamometer-cluster.sh
 delete mode 100755 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/upload-fsimage.sh
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AMOptions.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AllowAllImpersonationProvider.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/BlockPlacementPolicyAlwaysSatisfied.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/Client.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoConstants.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoInfraUtils.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoResource.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/SimulatedDataNodes.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/package-info.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/resources/start-component.sh
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynamometerInfra.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynoInfraUtils.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn0-a-0-r-00000
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn1-a-0-r-00001
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn2-a-0-r-00002
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/core-site.xml
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/hdfs-site.xml
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/log4j.properties
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/VERSION
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/fsimage_0000000000000061740
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/fsimage_0000000000000061740.md5
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/yarn-site.xml
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/pom.xml
 delete mode 100755 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/parse-start-timestamp.sh
 delete mode 100755 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/start-workload.sh
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/CreateFileMapper.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputFormat.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputSplit.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualRecordReader.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadDriver.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadMapper.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditCommandParser.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogDirectParser.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogHiveTableParser.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayCommand.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayMapper.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayReducer.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayThread.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/CountTimeWritable.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/NoSplitTextInputFormat.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/UserCommandKey.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/package-info.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/package-info.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/TestWorkloadGenerator.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/TestAuditLogDirectParser.java
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_direct/audit0
 delete mode 100644 hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_hive/audit0
 delete mode 100644 hadoop-tools/hadoop-dynamometer/pom.xml
 delete mode 100644 hadoop-tools/hadoop-dynamometer/src/site/markdown/Dynamometer.md
 delete mode 100644 hadoop-tools/hadoop-dynamometer/src/site/resources/css/site.css
 delete mode 100644 hadoop-tools/hadoop-dynamometer/src/site/resources/images/dynamometer-architecture-infra.png
 delete mode 100644 hadoop-tools/hadoop-dynamometer/src/site/resources/images/dynamometer-architecture-replay.png

diff --git a/dev-support/bin/dist-layout-stitching b/dev-support/bin/dist-layout-stitching
index d4bfd8aaada..e769b26ff84 100755
--- a/dev-support/bin/dist-layout-stitching
+++ b/dev-support/bin/dist-layout-stitching
@@ -149,7 +149,6 @@ run cp -p "${ROOT}/hadoop-client-modules/hadoop-client-runtime/target/hadoop-cli
 run cp -p "${ROOT}/hadoop-client-modules/hadoop-client-minicluster/target/hadoop-client-minicluster-${VERSION}.jar" share/hadoop/client/
 
 run copy "${ROOT}/hadoop-tools/hadoop-tools-dist/target/hadoop-tools-dist-${VERSION}" .
-run copy "${ROOT}/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-dist/target/hadoop-dynamometer-dist-${VERSION}" .
 
 
 echo
diff --git a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-blockgen.xml b/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-blockgen.xml
deleted file mode 100644
index 8d35141f64a..00000000000
--- a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-blockgen.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one
-  or more contributor license agreements.  See the NOTICE file
-  distributed with this work for additional information
-  regarding copyright ownership.  The ASF licenses this file
-  to you under the Apache License, Version 2.0 (the
-  "License"); you may not use this file except in compliance
-  with the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
-  <id>hadoop-dynamometer-blockgen</id>
-  <formats>
-    <format>dir</format>
-  </formats>
-  <includeBaseDirectory>false</includeBaseDirectory>
-
-  <fileSets>
-    <fileSet>
-      <directory>${basedir}/src/main/bash</directory>
-      <outputDirectory>dynamometer-blockgen/bin</outputDirectory>
-      <fileMode>0755</fileMode>
-    </fileSet>
-  </fileSets>
-
-</assembly>
diff --git a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-infra.xml b/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-infra.xml
deleted file mode 100644
index a8d4c09b952..00000000000
--- a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-infra.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one
-  or more contributor license agreements.  See the NOTICE file
-  distributed with this work for additional information
-  regarding copyright ownership.  The ASF licenses this file
-  to you under the Apache License, Version 2.0 (the
-  "License"); you may not use this file except in compliance
-  with the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
-  <id>hadoop-dynamometer-infra</id>
-  <formats>
-    <format>dir</format>
-  </formats>
-  <includeBaseDirectory>false</includeBaseDirectory>
-
-  <fileSets>
-    <fileSet>
-      <directory>${basedir}/src/main/bash</directory>
-      <outputDirectory>dynamometer-infra/bin</outputDirectory>
-      <fileMode>0755</fileMode>
-    </fileSet>
-  </fileSets>
-
-</assembly>
diff --git a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-workload.xml b/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-workload.xml
deleted file mode 100644
index 80cf304840e..00000000000
--- a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer-workload.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one
-  or more contributor license agreements.  See the NOTICE file
-  distributed with this work for additional information
-  regarding copyright ownership.  The ASF licenses this file
-  to you under the Apache License, Version 2.0 (the
-  "License"); you may not use this file except in compliance
-  with the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
-  <id>hadoop-dynamometer-workload</id>
-  <formats>
-    <format>dir</format>
-  </formats>
-  <includeBaseDirectory>false</includeBaseDirectory>
-
-  <fileSets>
-    <fileSet>
-      <directory>${basedir}/src/main/bash</directory>
-      <outputDirectory>dynamometer-workload/bin</outputDirectory>
-      <fileMode>0755</fileMode>
-    </fileSet>
-  </fileSets>
-
-</assembly>
diff --git a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer.xml b/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer.xml
deleted file mode 100644
index b2ce562231c..00000000000
--- a/hadoop-assemblies/src/main/resources/assemblies/hadoop-dynamometer.xml
+++ /dev/null
@@ -1,73 +0,0 @@
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-   contributor license agreements.  See the NOTICE file distributed with
-   this work for additional information regarding copyright ownership.
-   The ASF licenses this file to You under the Apache License, Version 2.0
-   (the "License"); you may not use this file except in compliance with
-   the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the Li2cense is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
-  <id>hadoop-dynamometer</id>
-  <formats>
-    <format>dir</format>
-  </formats>
-  <includeBaseDirectory>false</includeBaseDirectory>
-  <fileSets>
-    <fileSet>
-      <directory>../hadoop-dynamometer-blockgen/target</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/sources</outputDirectory>
-      <includes>
-        <include>*-sources.jar</include>
-      </includes>
-    </fileSet>
-    <fileSet>
-      <directory>../hadoop-dynamometer-blockgen/target/hadoop-dynamometer-blockgen-${project.version}/dynamometer-blockgen</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/dynamometer/dynamometer-blockgen</outputDirectory>
-    </fileSet>
-    <fileSet>
-      <directory>../hadoop-dynamometer-workload/target</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/sources</outputDirectory>
-      <includes>
-        <include>*-sources.jar</include>
-      </includes>
-    </fileSet>
-    <fileSet>
-      <directory>../hadoop-dynamometer-workload/target/hadoop-dynamometer-workload-${project.version}/dynamometer-workload</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/dynamometer/dynamometer-workload</outputDirectory>
-    </fileSet>
-    <fileSet>
-      <directory>../hadoop-dynamometer-infra/target</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/sources</outputDirectory>
-      <includes>
-        <include>*-sources.jar</include>
-      </includes>
-    </fileSet>
-    <fileSet>
-      <directory>../hadoop-dynamometer-infra/target/hadoop-dynamometer-infra-${project.version}/dynamometer-infra</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/dynamometer/dynamometer-infra</outputDirectory>
-    </fileSet>
-  </fileSets>
-  <dependencySets>
-    <dependencySet>
-      <outputDirectory>/share/hadoop/${hadoop.component}/lib</outputDirectory>
-      <unpack>false</unpack>
-      <scope>runtime</scope>
-      <useProjectArtifact>false</useProjectArtifact>
-      <excludes>
-        <!-- use slf4j from common to avoid multiple binding warnings -->
-        <exclude>org.slf4j:slf4j-api</exclude>
-        <exclude>org.slf4j:slf4j-reload4j</exclude>
-      </excludes>
-    </dependencySet>
-  </dependencySets>
-</assembly>
diff --git a/hadoop-project/src/site/site.xml b/hadoop-project/src/site/site.xml
index eb28b16f9f9..c42c8756bd9 100644
--- a/hadoop-project/src/site/site.xml
+++ b/hadoop-project/src/site/site.xml
@@ -198,7 +198,6 @@
       <item name="Resource Estimator Service" href="hadoop-resourceestimator/ResourceEstimator.html"/>
       <item name="Scheduler Load Simulator" href="hadoop-sls/SchedulerLoadSimulator.html"/>
       <item name="Hadoop Benchmarking" href="hadoop-project-dist/hadoop-common/Benchmarking.html"/>
-      <item name="Dynamometer" href="hadoop-dynamometer/Dynamometer.html"/>
     </menu>
 
     <menu name="Reference" inherit="top">
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/pom.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/pom.xml
deleted file mode 100644
index bbe4e3cec33..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/pom.xml
+++ /dev/null
@@ -1,130 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <parent>
-    <groupId>org.apache.hadoop</groupId>
-    <artifactId>hadoop-project</artifactId>
-    <version>3.4.0</version>
-    <relativePath>../../../hadoop-project</relativePath>
-  </parent>
-  <artifactId>hadoop-dynamometer-blockgen</artifactId>
-  <version>3.4.0</version>
-  <description>Apache Hadoop Dynamometer Block Listing Generator</description>
-  <name>Apache Hadoop Dynamometer Block Listing Generator</name>
-  <packaging>jar</packaging>
-
-  <dependencies>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-client</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.mockito</groupId>
-      <artifactId>mockito-core</artifactId>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-minicluster</artifactId>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-source-plugin</artifactId>
-        <configuration>
-          <attach>true</attach>
-        </configuration>
-        <executions>
-          <execution>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-    </plugins>
-  </build>
-
-  <profiles>
-    <profile>
-      <id>dist</id>
-      <activation>
-        <activeByDefault>false</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-assembly-plugin</artifactId>
-            <dependencies>
-              <dependency>
-                <groupId>org.apache.hadoop</groupId>
-                <artifactId>hadoop-assemblies</artifactId>
-                <version>${project.version}</version>
-              </dependency>
-            </dependencies>
-            <executions>
-              <execution>
-                <id>dist</id>
-                <phase>prepare-package</phase>
-                <goals>
-                  <goal>single</goal>
-                </goals>
-                <configuration>
-                  <appendAssemblyId>false</appendAssemblyId>
-                  <attach>false</attach>
-                  <finalName>${project.artifactId}-${project.version}</finalName>
-                  <descriptorRefs>
-                    <descriptorRef>hadoop-dynamometer-blockgen</descriptorRef>
-                  </descriptorRefs>
-                </configuration>
-              </execution>
-            </executions>
-          </plugin>
-       <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-dependency-plugin</artifactId>
-        <executions>
-          <execution>
-            <id>deplist</id>
-            <phase>compile</phase>
-            <goals>
-              <goal>list</goal>
-            </goals>
-            <configuration>
-              <!-- referenced by a built-in command -->
-              <outputFile>${project.basedir}/target/hadoop-tools-deps/${project.artifactId}.tools-builtin.txt</outputFile>
-            </configuration>
-          </execution>
-        </executions>
-      </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
-</project>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/bash/generate-block-lists.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/bash/generate-block-lists.sh
deleted file mode 100755
index 9ea63ba5412..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/bash/generate-block-lists.sh
+++ /dev/null
@@ -1,38 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-if type hadoop &> /dev/null; then
-  hadoop_cmd="hadoop"
-elif type "$HADOOP_COMMON_HOME/bin/hadoop" &> /dev/null; then
-  hadoop_cmd="$HADOOP_COMMON_HOME/bin/hadoop"
-elif type "$HADOOP_HOME/bin/hadoop" &> /dev/null; then
-  hadoop_cmd="$HADOOP_HOME/bin/hadoop"
-else
-  echo "Unable to find a valid hadoop command to execute; exiting."
-  exit 1
-fi
-
-script_pwd="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/../../.."
-
-for f in ${script_pwd}/lib/*.jar; do
-  # Skip adding the blockgen JAR since it is added by the `hadoop jar` command
-  if [[ "$f" != *"dynamometer-blockgen-"* ]]; then
-    export HADOOP_CLASSPATH="$HADOOP_CLASSPATH:$f"
-  fi
-done
-"$hadoop_cmd" jar "${script_pwd}"/lib/hadoop-dynamometer-blockgen-*.jar \
-  org.apache.hadoop.tools.dynamometer.blockgenerator.GenerateBlockImagesDriver "$@"
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/BlockInfo.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/BlockInfo.java
deleted file mode 100644
index 97739f60f63..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/BlockInfo.java
+++ /dev/null
@@ -1,102 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-
-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import org.apache.hadoop.io.LongWritable;
-import org.apache.hadoop.io.Writable;
-
-/**
- * This is the MapOutputValue class. It has the blockId and the block generation
- * stamp which is needed to generate the block images in the reducer.
- *
- * This also stores the replication of the block, but note that it does not
- * serialize this value as part of its {@link Writable} interface, and does not
- * consider the replication when doing equality / hash comparisons.
- */
-
-public class BlockInfo implements Writable {
-
-  LongWritable getBlockId() {
-    return blockId;
-  }
-
-  LongWritable getBlockGenerationStamp() {
-    return blockGenerationStamp;
-  }
-
-  LongWritable getSize() {
-    return size;
-  }
-
-  short getReplication() {
-    return replication;
-  }
-
-  private LongWritable blockId;
-  private LongWritable blockGenerationStamp;
-  private LongWritable size;
-  private transient short replication;
-
-  @SuppressWarnings("unused") // Used via reflection
-  private BlockInfo() {
-    this.blockId = new LongWritable();
-    this.blockGenerationStamp = new LongWritable();
-    this.size = new LongWritable();
-  }
-
-  BlockInfo(long blockid, long blockgenerationstamp, long size,
-      short replication) {
-    this.blockId = new LongWritable(blockid);
-    this.blockGenerationStamp = new LongWritable(blockgenerationstamp);
-    this.size = new LongWritable(size);
-    this.replication = replication;
-  }
-
-  public void write(DataOutput dataOutput) throws IOException {
-    blockId.write(dataOutput);
-    blockGenerationStamp.write(dataOutput);
-    size.write(dataOutput);
-  }
-
-  public void readFields(DataInput dataInput) throws IOException {
-    blockId.readFields(dataInput);
-    blockGenerationStamp.readFields(dataInput);
-    size.readFields(dataInput);
-  }
-
-  @Override
-  public boolean equals(Object o) {
-    if (!(o instanceof BlockInfo)) {
-      return false;
-    }
-    BlockInfo blkInfo = (BlockInfo) o;
-    return blkInfo.getBlockId().equals(this.getBlockId())
-        && blkInfo.getBlockGenerationStamp()
-            .equals(this.getBlockGenerationStamp())
-        && blkInfo.getSize().equals(this.getSize());
-  }
-
-  @Override
-  public int hashCode() {
-    return blockId.hashCode() + 357 * blockGenerationStamp.hashCode()
-        + 9357 * size.hashCode();
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateBlockImagesDriver.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateBlockImagesDriver.java
deleted file mode 100644
index 0f7624d2f8d..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateBlockImagesDriver.java
+++ /dev/null
@@ -1,141 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-
-import java.net.URI;
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.CommandLineParser;
-import org.apache.commons.cli.HelpFormatter;
-import org.apache.commons.cli.Option;
-import org.apache.commons.cli.Options;
-import org.apache.commons.cli.PosixParser;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.io.IntWritable;
-import org.apache.hadoop.io.NullWritable;
-import org.apache.hadoop.io.Text;
-import org.apache.hadoop.mapreduce.Job;
-import org.apache.hadoop.mapreduce.JobContext;
-import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
-import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
-import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
-import org.apache.hadoop.mapreduce.lib.output.LazyOutputFormat;
-import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
-import org.apache.hadoop.util.Tool;
-import org.apache.hadoop.util.ToolRunner;
-
-/**
- * This is the main driver class. It takes in the following arguments: -
- * Required: input path of the fsImage from the HDFS cluster to be simulated -
- * Required: output path for generated block image files for each Dynamometer
- * DataNode - Required: Number of DataNodes to generate blocks for - Optional:
- * Number of reducers to use for the job (defaults to number of DataNodes)
- */
-
-public class GenerateBlockImagesDriver extends Configured implements Tool {
-
-  public static final String FSIMAGE_INPUT_PATH_ARG = "fsimage_input_path";
-  public static final String BLOCK_IMAGE_OUTPUT_ARG = "block_image_output_dir";
-  public static final String NUM_REDUCERS_ARG = "num_reducers";
-  public static final String NUM_DATANODES_ARG = "num_datanodes";
-
-  public static final String NUM_DATANODES_KEY = "dyno.blockgen.num.datanodes";
-
-  public GenerateBlockImagesDriver(Configuration conf) {
-    setConf(conf);
-  }
-
-  public int run(String[] args) throws Exception {
-    Options options = new Options();
-    options.addOption("h", "help", false, "Shows this message");
-    options.addOption(Option.builder(FSIMAGE_INPUT_PATH_ARG)
-        .argName("Input path of the XML fsImage")
-        .hasArg().required(true)
-        .desc("Input path to the Hadoop fsImage XML file (required)")
-        .build());
-    options.addOption(Option.builder(BLOCK_IMAGE_OUTPUT_ARG).argName("BlockImage output directory")
-        .hasArg().required(true)
-        .desc("Directory where the generated files containing the "
-            + "block listing for each DataNode should be stored (required)")
-        .build());
-    options.addOption(Option.builder(NUM_REDUCERS_ARG).argName("Number of reducers").hasArg()
-        .required(false)
-        .desc(
-            "Number of reducers for this job (defaults to number of datanodes)")
-        .build());
-    options.addOption(Option.builder(NUM_DATANODES_ARG).argName("Number of datanodes").hasArg()
-        .required(true)
-        .desc("Number of DataNodes to create blocks for (required)")
-        .build());
-
-    CommandLineParser parser = new PosixParser();
-    CommandLine cli = parser.parse(options, args);
-    if (cli.hasOption("h")) {
-      HelpFormatter formatter = new HelpFormatter();
-      formatter.printHelp(200, "hadoop jar dynamometer-*.jar "
-              + "org.apache.hadoop.tools.dynamometer.blockgenerator."
-              + "GenerateBlockImagesDriver [options]",
-          null, options, null);
-      return 0;
-    }
-
-    String fsImageInputPath = cli.getOptionValue(FSIMAGE_INPUT_PATH_ARG);
-    String blockImageOutputDir = cli.getOptionValue(BLOCK_IMAGE_OUTPUT_ARG);
-    int numDataNodes = Integer.parseInt(cli.getOptionValue(NUM_DATANODES_ARG));
-    int numReducers = Integer.parseInt(
-        cli.getOptionValue(NUM_REDUCERS_ARG, String.valueOf(numDataNodes)));
-
-    FileSystem fs = FileSystem.get(new URI(blockImageOutputDir), getConf());
-    Job job = Job.getInstance(getConf(), "Create blocksImages for Dynamometer");
-    FileInputFormat.setInputPaths(job, new Path(fsImageInputPath));
-    Path blockImagesDir = new Path(blockImageOutputDir);
-    fs.delete(blockImagesDir, true);
-    FileOutputFormat.setOutputPath(job, blockImagesDir);
-    job.getConfiguration().setInt(NUM_DATANODES_KEY, numDataNodes);
-
-    job.setJarByClass(GenerateBlockImagesDriver.class);
-    job.setInputFormatClass(NoSplitTextInputFormat.class);
-    job.setNumReduceTasks(numReducers);
-    LazyOutputFormat.setOutputFormatClass(job, TextOutputFormat.class);
-    job.setMapperClass(XMLParserMapper.class);
-    job.setReducerClass(GenerateDNBlockInfosReducer.class);
-    job.setMapOutputKeyClass(IntWritable.class);
-    job.setMapOutputValueClass(BlockInfo.class);
-    job.setOutputKeyClass(NullWritable.class);
-    job.setOutputValueClass(Text.class);
-
-    boolean success = job.waitForCompletion(true);
-    return success ? 0 : 1;
-  }
-
-  public static void main(String[] args) throws Exception {
-    GenerateBlockImagesDriver driver = new GenerateBlockImagesDriver(
-        new Configuration());
-    System.exit(ToolRunner.run(driver, args));
-  }
-
-  /** A simple text input format that doesn't allow splitting of files. */
-  public static class NoSplitTextInputFormat extends TextInputFormat {
-    @Override
-    public boolean isSplitable(JobContext context, Path file) {
-      return false;
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateDNBlockInfosReducer.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateDNBlockInfosReducer.java
deleted file mode 100644
index 93cbe5fd721..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/GenerateDNBlockInfosReducer.java
+++ /dev/null
@@ -1,99 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-
-import java.io.IOException;
-import java.util.Iterator;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.io.IntWritable;
-import org.apache.hadoop.io.NullWritable;
-import org.apache.hadoop.io.Text;
-import org.apache.hadoop.mapreduce.Reducer;
-import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
-import org.apache.hadoop.mapreduce.lib.output.MultipleOutputs;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-
-/**
- * This Reducer class generates a simple text file for each DN, listing the
- * blocks to be generated.
- *
- * Input: {@link BlockInfo}'s from {@link XMLParserMapper}
- *
- * Output: A text file named as dni-XXX, where i is the ID of the DN and XXX is
- * a reducer ID. Each line in the file is in format:
- * blockID,blockGenStamp,blockSize
- */
-public class GenerateDNBlockInfosReducer
-    extends Reducer<IntWritable, BlockInfo, NullWritable, Text> {
-  private static final Logger LOG = LoggerFactory
-      .getLogger(GenerateDNBlockInfosReducer.class);
-
-  private MultipleOutputs<NullWritable, Text> multiOutputs;
-
-  @Override
-  public void setup(
-      Reducer<IntWritable, BlockInfo, NullWritable, Text>.Context context) {
-    multiOutputs = new MultipleOutputs<>(context);
-  }
-
-  @Override
-  public void cleanup(Context context)
-      throws IOException, InterruptedException {
-    multiOutputs.close();
-    multiOutputs = null;
-  }
-
-  @Override
-  public void reduce(IntWritable key, Iterable<BlockInfo> values,
-      Context context) throws IOException, InterruptedException {
-    long blockIndex = 0;
-    int datanodeId = key.get();
-    String dnFile = "dn" + datanodeId + "-a-"
-        + context.getTaskAttemptID().getId();
-    Iterator<BlockInfo> it = values.iterator();
-    long startTimestamp = System.currentTimeMillis();
-    long endTimestamp;
-
-    Path baseOutputPath = FileOutputFormat.getOutputPath(context);
-    String fullPath = new Path(baseOutputPath, dnFile).toString();
-
-    Text out = new Text();
-    while (it.hasNext()) {
-      BlockInfo blockInfo = it.next();
-      String blockLine = blockInfo.getBlockId() + ","
-          + blockInfo.getBlockGenerationStamp() + "," + blockInfo.getSize();
-      out.set(blockLine);
-      multiOutputs.write(NullWritable.get(), out, fullPath);
-
-      blockIndex++;
-
-      // Report progress for every 1000 blocks
-      if (blockIndex % 1000 == 0) {
-        context.progress();
-        endTimestamp = System.currentTimeMillis();
-        System.out.println("Time taken to process 1000 records in ms:"
-            + (endTimestamp - startTimestamp));
-        startTimestamp = endTimestamp;
-      }
-    }
-
-    LOG.info("Number of blocks processed:" + blockIndex);
-  }
-}
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParser.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParser.java
deleted file mode 100644
index d0f3e383ba6..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParser.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-// Checkstyle complains about the XML tags even though they are wrapped
-// within <pre> and {@code} tags. The SupressWarnings has to go before the
-// Javadoc to take effect.
-@SuppressWarnings("checkstyle:javadocstyle")
-/**
- * This class parses an fsimage file in XML format. It accepts the file
- * line-by-line and maintains an internal state machine to keep track of
- * contextual information. A single parser must process the entire file with the
- * lines in the order they appear in the original file.
- *
- * A file may be spread across multiple lines, so we need to track the
- * replication of the file we are currently processing to be aware of what the
- * replication factor is for each block we encounter. This is why we require a
- * single mapper.
- *
- * The format is illustrated below (line breaks for readability):
- * <pre>{@code
- * <inode><id>inode_ID<id/> <type>inode_type</type>
- * <replication>inode_replication</replication> [file attributes] <blocks>
- * <block><id>XXX</id><genstamp>XXX</genstamp><numBytes>XXX</numBytes><block/>
- * <blocks/> <inode/>
- * }</pre>
- *
- * This is true in both Hadoop 2 and 3.
- */
-class XMLParser {
-
-  private static final Pattern BLOCK_PATTERN = Pattern.compile("<block>"
-      + "<id>(\\d+)</id>"
-      + "<genstamp>(\\d+)</genstamp>"
-      + "<numBytes>(\\d+)</numBytes>"
-      + "</block>");
-
-  private State currentState = State.DEFAULT;
-  private short currentReplication;
-
-  /**
-   * Accept a single line of the XML file, and return a {@link BlockInfo} for
-   * any blocks contained within that line. Update internal state dependent on
-   * other XML values seen, e.g. the beginning of a file.
-   *
-   * @param line The XML line to parse.
-   * @return {@code BlockInfo}s for any blocks found.
-   */
-  List<BlockInfo> parseLine(String line) throws IOException {
-    if (currentState == State.DEFAULT) {
-      if (line.contains("<INodeSection>")) {
-        transitionTo(State.INODE_SECTION);
-      } else {
-        return Collections.emptyList();
-      }
-    }
-    if (line.contains("<inode>")) {
-      transitionTo(State.INODE);
-    }
-    if (line.contains("<type>FILE</type>")) {
-      transitionTo(State.FILE);
-    }
-    List<String> replicationStrings = valuesFromXMLString(line, "replication");
-    if (!replicationStrings.isEmpty()) {
-      if (replicationStrings.size() > 1) {
-        throw new IOException(String.format("Found %s replication strings",
-            replicationStrings.size()));
-      }
-      transitionTo(State.FILE_WITH_REPLICATION);
-      currentReplication = Short.parseShort(replicationStrings.get(0));
-    }
-    Matcher blockMatcher = BLOCK_PATTERN.matcher(line);
-    List<BlockInfo> blockInfos = new ArrayList<>();
-    while (blockMatcher.find()) {
-      if (currentState != State.FILE_WITH_REPLICATION) {
-        throw new IOException(
-            "Found a block string when in state: " + currentState);
-      }
-      long id = Long.parseLong(blockMatcher.group(1));
-      long gs = Long.parseLong(blockMatcher.group(2));
-      long size = Long.parseLong(blockMatcher.group(3));
-      blockInfos.add(new BlockInfo(id, gs, size, currentReplication));
-    }
-    if (line.contains("</inode>")) {
-      transitionTo(State.INODE_SECTION);
-    }
-    if (line.contains("</INodeSection>")) {
-      transitionTo(State.DEFAULT);
-    }
-    return blockInfos;
-  }
-
-  /**
-   * Attempt to transition to another state.
-   *
-   * @param nextState The new state to transition to.
-   * @throws IOException If the transition from the current state to
-   *                     {@code nextState} is not allowed.
-   */
-  private void transitionTo(State nextState) throws IOException {
-    if (currentState.transitionAllowed(nextState)) {
-      currentState = nextState;
-    } else {
-      throw new IOException("State transition not allowed; from " + currentState
-          + " to " + nextState);
-    }
-  }
-
-  /**
-   * @param xml An XML string
-   * @param field The field whose value(s) should be extracted
-   * @return List of the field's values.
-   */
-  private static List<String> valuesFromXMLString(String xml, String field) {
-    Matcher m = Pattern.compile("<" + field + ">(.+?)</" + field + ">")
-        .matcher(xml);
-    List<String> found = new ArrayList<>();
-    while (m.find()) {
-      found.add(m.group(1));
-    }
-    return found;
-  }
-
-  private enum State {
-    DEFAULT,
-    INODE_SECTION,
-    INODE,
-    FILE,
-    FILE_WITH_REPLICATION;
-
-    private final Set<State> allowedTransitions = new HashSet<>();
-    static {
-      DEFAULT.addTransitions(DEFAULT, INODE_SECTION);
-      INODE_SECTION.addTransitions(DEFAULT, INODE);
-      INODE.addTransitions(INODE_SECTION, FILE);
-      FILE.addTransitions(INODE_SECTION, FILE_WITH_REPLICATION);
-      FILE_WITH_REPLICATION.addTransitions(INODE_SECTION);
-    }
-
-    private void addTransitions(State... nextState) {
-      allowedTransitions.addAll(Arrays.asList(nextState));
-    }
-
-    boolean transitionAllowed(State nextState) {
-      return allowedTransitions.contains(nextState);
-    }
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParserMapper.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParserMapper.java
deleted file mode 100644
index 29c9fb3ce13..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParserMapper.java
+++ /dev/null
@@ -1,81 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-
-import java.io.IOException;
-import java.util.List;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.IntWritable;
-import org.apache.hadoop.io.LongWritable;
-import org.apache.hadoop.io.Text;
-import org.apache.hadoop.mapreduce.Mapper;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-
-/**
- * This Mapper class generates a list of {@link BlockInfo}'s from a given
- * fsimage.
- *
- * Input: fsimage in XML format. It should be generated using
- * {@code org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageViewer}.
- *
- * Output: list of all {@link BlockInfo}'s
- */
-public class XMLParserMapper
-    extends Mapper<LongWritable, Text, IntWritable, BlockInfo> {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(XMLParserMapper.class);
-
-  @Override
-  public void setup(Mapper.Context context) {
-    Configuration conf = context.getConfiguration();
-    numDataNodes = conf.getInt(GenerateBlockImagesDriver.NUM_DATANODES_KEY, -1);
-    parser = new XMLParser();
-  }
-
-  // Blockindexes should be generated serially
-  private int blockIndex = 0;
-  private int numDataNodes;
-  private XMLParser parser;
-
-  /**
-   * Read the input XML file line by line, and generate list of blocks. The
-   * actual parsing logic is handled by {@link XMLParser}. This mapper just
-   * delegates to that class and then writes the blocks to the corresponding
-   * index to be processed by reducers.
-   */
-  @Override
-  public void map(LongWritable lineNum, Text line,
-      Mapper<LongWritable, Text, IntWritable, BlockInfo>.Context context)
-      throws IOException, InterruptedException {
-    List<BlockInfo> blockInfos = parser.parseLine(line.toString());
-    for (BlockInfo blockInfo : blockInfos) {
-      for (short i = 0; i < blockInfo.getReplication(); i++) {
-        context.write(new IntWritable((blockIndex + i) % numDataNodes),
-            blockInfo);
-      }
-
-      blockIndex++;
-      if (blockIndex % 1000000 == 0) {
-        LOG.info("Processed " + blockIndex + " blocks");
-      }
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/package-info.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/package-info.java
deleted file mode 100644
index 2974432e4a0..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/package-info.java
+++ /dev/null
@@ -1,26 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/**
- * Tools to help generate block files as input to Dynamometer.
- */
-@InterfaceAudience.Private
-@InterfaceStability.Unstable
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestBlockGen.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestBlockGen.java
deleted file mode 100644
index 61c6dce0dbd..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestBlockGen.java
+++ /dev/null
@@ -1,89 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.hdfs.MiniDFSCluster;
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import static org.junit.Assert.assertEquals;
-
-
-/** Tests for block generation via {@link GenerateBlockImagesDriver}. */
-public class TestBlockGen {
-  private static final Logger LOG = LoggerFactory.getLogger(TestBlockGen.class);
-
-  private MiniDFSCluster dfsCluster;
-  private FileSystem fs;
-  private static final String FS_IMAGE_NAME = "fsimage_0000000000000061740.xml";
-  private static final String BLOCK_LIST_OUTPUT_DIR_NAME = "blockLists";
-  private Path tmpPath;
-
-  @Before
-  public void setup() throws Exception {
-    Configuration conf = new Configuration();
-    dfsCluster = new MiniDFSCluster.Builder(conf).build();
-    dfsCluster.waitActive();
-    LOG.info("Started MiniDFSCluster");
-    fs = dfsCluster.getFileSystem();
-    FileSystem.setDefaultUri(conf, fs.getUri());
-    tmpPath = fs.makeQualified(new Path("/tmp"));
-    fs.mkdirs(tmpPath);
-    String fsImageFile = this.getClass().getClassLoader()
-        .getResource(FS_IMAGE_NAME).getPath();
-
-    fs.copyFromLocalFile(new Path(fsImageFile),
-        new Path(tmpPath, FS_IMAGE_NAME));
-  }
-
-  @After
-  public void cleanUp() {
-    dfsCluster.shutdown();
-  }
-
-  @Test
-  public void testBlockGen() throws Exception {
-    LOG.info("Started test");
-
-    int datanodeCount = 40;
-
-    GenerateBlockImagesDriver driver = new GenerateBlockImagesDriver(
-        new Configuration());
-    driver.run(
-        new String[] {"-" + GenerateBlockImagesDriver.FSIMAGE_INPUT_PATH_ARG,
-            new Path(tmpPath, FS_IMAGE_NAME).toString(),
-            "-" + GenerateBlockImagesDriver.BLOCK_IMAGE_OUTPUT_ARG,
-            new Path(tmpPath, BLOCK_LIST_OUTPUT_DIR_NAME).toString(),
-            "-" + GenerateBlockImagesDriver.NUM_DATANODES_ARG,
-            String.valueOf(datanodeCount)});
-
-    for (int i = 0; i < datanodeCount; i++) {
-      final int idx = i;
-      assertEquals(1, fs.listStatus(
-          new Path(tmpPath, BLOCK_LIST_OUTPUT_DIR_NAME),
-          (path) -> path.getName().startsWith(String.format("dn%d-", idx))
-      ).length);
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestXMLParser.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestXMLParser.java
deleted file mode 100644
index 149b72a3749..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/java/org/apache/hadoop/tools/dynamometer/blockgenerator/TestXMLParser.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.blockgenerator;
-
-import java.util.HashMap;
-import java.util.Map;
-import org.junit.Test;
-import static org.junit.Assert.*;
-
-
-/** Tests for {@link XMLParser}. */
-public class TestXMLParser {
-
-  /**
-   * Testing whether {@link XMLParser} correctly parses an XML fsimage file into
-   * {@link BlockInfo}'s. Note that some files have multiple lines.
-   */
-  @Test
-  public void testBlocksFromLine() throws Exception {
-    String[] lines = {
-        "<INodeSection><lastInodeId>1"
-            + "</lastInodeId><inode><id>2</id><type>FILE</type>"
-            + "<name>fake-file</name>"
-            + "<replication>3</replication><mtime>3</mtime>"
-            + "<atime>4</atime>" + "<perferredBlockSize>5</perferredBlockSize>"
-            + "<permission>hdfs:hdfs:rw-------</permission>"
-            + "<blocks><block><id>6</id><genstamp>7</genstamp>"
-            + "<numBytes>8</numBytes></block>"
-            + "<block><id>9</id><genstamp>10</genstamp>"
-            + "<numBytes>11</numBytes></block></inode>",
-        "<inode><type>DIRECTORY</type></inode>", "<inode><type>FILE</type>",
-        "<replication>12</replication>",
-        "<blocks><block><id>13</id><genstamp>14</genstamp>"
-            + "<numBytes>15</numBytes></block>",
-        "</inode>",
-        "</INodeSection>"
-    };
-
-    short replCount = 0; // This is ignored
-    Map<BlockInfo, Short> expectedBlockCount = new HashMap<>();
-    expectedBlockCount.put(new BlockInfo(6, 7, 8, replCount), (short) 3);
-    expectedBlockCount.put(new BlockInfo(9, 10, 11, replCount), (short) 3);
-    expectedBlockCount.put(new BlockInfo(13, 14, 15, replCount), (short) 12);
-
-    final Map<BlockInfo, Short> actualBlockCount = new HashMap<>();
-    XMLParser parser = new XMLParser();
-    for (String line : lines) {
-      for (BlockInfo info : parser.parseLine(line)) {
-        actualBlockCount.put(info, info.getReplication());
-      }
-    }
-
-    for (Map.Entry<BlockInfo, Short> expect : expectedBlockCount.entrySet()) {
-      assertEquals(expect.getValue(), actualBlockCount.get(expect.getKey()));
-    }
-  }
-
-  @Test
-  public void testNonInodeSectionIgnored() throws Exception {
-    String[] lines = {
-        "<INodeSection>",
-        "</INodeSection>",
-        "<OtherSection>",
-        "<inode><id>1</id><type>FILE</type><name>fake-file</name>"
-            + "<replication>1</replication>",
-        "<blocks><block><id>2</id><genstamp>1</genstamp>"
-            + "<numBytes>1</numBytes></block>",
-        "</inode>",
-        "<replication>3</replication>",
-        "</OtherSection>"
-    };
-
-    XMLParser parser = new XMLParser();
-    for (String line : lines) {
-      assertTrue((parser.parseLine(line).isEmpty()));
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/resources/fsimage_0000000000000061740.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/resources/fsimage_0000000000000061740.xml
deleted file mode 100644
index fea4d1249ae..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/test/resources/fsimage_0000000000000061740.xml
+++ /dev/null
@@ -1,553 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<fsimage><NameSection>
-<genstampV1>1000</genstampV1><genstampV2>11100</genstampV2><genstampV1Limit>0</genstampV1Limit><lastAllocatedBlockId>1073751924</lastAllocatedBlockId><txid>61740</txid></NameSection>
-<INodeSection><lastInodeId>26700</lastInodeId><inode><id>16385</id><type>DIRECTORY</type><name></name><mtime>1494453394091</mtime><permission>hdfs:hdfs:rwxr-xr-x</permission><nsquota>9223372036854775807</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>16386</id><type>DIRECTORY</type><name>tmp</name><mtime>1494453775668</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>16387</id><type>DIRECTORY</type><name>data</name><mtime>1494453387057</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>16388</id><type>DIRECTORY</type><name>user</name><mtime>1494453399239</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>16389</id><type>DIRECTORY</type><name>hdfs</name><mtime>1494453399239</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>16390</id><type>DIRECTORY</type><name>files</name><mtime>1494614176953</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26491</id><type>DIRECTORY</type><name>0</name><mtime>1494614175397</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26492</id><type>DIRECTORY</type><name>0</name><mtime>1494614175198</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26493</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175183</mtime><atime>1494614175049</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751825</id><genstamp>11001</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26494</id><type>DIRECTORY</type><name>1</name><mtime>1494614175224</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26495</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175222</mtime><atime>1494614175212</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751826</id><genstamp>11002</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26496</id><type>DIRECTORY</type><name>2</name><mtime>1494614175259</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26497</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175257</mtime><atime>1494614175234</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751827</id><genstamp>11003</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26498</id><type>DIRECTORY</type><name>3</name><mtime>1494614175280</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26499</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175278</mtime><atime>1494614175269</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751828</id><genstamp>11004</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26500</id><type>DIRECTORY</type><name>4</name><mtime>1494614175302</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26501</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175299</mtime><atime>1494614175291</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751829</id><genstamp>11005</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26502</id><type>DIRECTORY</type><name>5</name><mtime>1494614175323</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26503</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175321</mtime><atime>1494614175312</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751830</id><genstamp>11006</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26504</id><type>DIRECTORY</type><name>6</name><mtime>1494614175345</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26505</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175343</mtime><atime>1494614175333</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751831</id><genstamp>11007</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26506</id><type>DIRECTORY</type><name>7</name><mtime>1494614175366</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26507</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175363</mtime><atime>1494614175355</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751832</id><genstamp>11008</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26508</id><type>DIRECTORY</type><name>8</name><mtime>1494614175387</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26509</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175385</mtime><atime>1494614175376</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751833</id><genstamp>11009</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26510</id><type>DIRECTORY</type><name>9</name><mtime>1494614175413</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26511</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175410</mtime><atime>1494614175402</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751834</id><genstamp>11010</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26512</id><type>DIRECTORY</type><name>1</name><mtime>1494614175626</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26513</id><type>DIRECTORY</type><name>0</name><mtime>1494614175447</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26514</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175445</mtime><atime>1494614175437</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751835</id><genstamp>11011</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26515</id><type>DIRECTORY</type><name>1</name><mtime>1494614175467</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26516</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175464</mtime><atime>1494614175456</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751836</id><genstamp>11012</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26517</id><type>DIRECTORY</type><name>2</name><mtime>1494614175486</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26518</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175484</mtime><atime>1494614175475</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751837</id><genstamp>11013</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26519</id><type>DIRECTORY</type><name>3</name><mtime>1494614175514</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26520</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175512</mtime><atime>1494614175496</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751838</id><genstamp>11014</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26521</id><type>DIRECTORY</type><name>4</name><mtime>1494614175533</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26522</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175531</mtime><atime>1494614175523</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751839</id><genstamp>11015</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26523</id><type>DIRECTORY</type><name>5</name><mtime>1494614175552</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26524</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175549</mtime><atime>1494614175540</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751840</id><genstamp>11016</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26525</id><type>DIRECTORY</type><name>6</name><mtime>1494614175574</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26526</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175572</mtime><atime>1494614175563</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751841</id><genstamp>11017</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26527</id><type>DIRECTORY</type><name>7</name><mtime>1494614175603</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26528</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175592</mtime><atime>1494614175583</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751842</id><genstamp>11018</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26529</id><type>DIRECTORY</type><name>8</name><mtime>1494614175622</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26530</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175620</mtime><atime>1494614175612</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751843</id><genstamp>11019</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26531</id><type>DIRECTORY</type><name>9</name><mtime>1494614175643</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26532</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175640</mtime><atime>1494614175631</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751844</id><genstamp>11020</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26533</id><type>DIRECTORY</type><name>2</name><mtime>1494614175829</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26534</id><type>DIRECTORY</type><name>0</name><mtime>1494614175669</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26535</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175666</mtime><atime>1494614175658</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751845</id><genstamp>11021</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26536</id><type>DIRECTORY</type><name>1</name><mtime>1494614175688</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26537</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175686</mtime><atime>1494614175678</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751846</id><genstamp>11022</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26538</id><type>DIRECTORY</type><name>2</name><mtime>1494614175708</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26539</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175705</mtime><atime>1494614175697</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751847</id><genstamp>11023</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26540</id><type>DIRECTORY</type><name>3</name><mtime>1494614175727</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26541</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175725</mtime><atime>1494614175716</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751848</id><genstamp>11024</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26542</id><type>DIRECTORY</type><name>4</name><mtime>1494614175746</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26543</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175744</mtime><atime>1494614175736</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751849</id><genstamp>11025</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26544</id><type>DIRECTORY</type><name>5</name><mtime>1494614175772</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26545</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175770</mtime><atime>1494614175755</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751850</id><genstamp>11026</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26546</id><type>DIRECTORY</type><name>6</name><mtime>1494614175790</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26547</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175788</mtime><atime>1494614175780</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751851</id><genstamp>11027</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26548</id><type>DIRECTORY</type><name>7</name><mtime>1494614175808</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26549</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175806</mtime><atime>1494614175798</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751852</id><genstamp>11028</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26550</id><type>DIRECTORY</type><name>8</name><mtime>1494614175826</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26551</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175823</mtime><atime>1494614175816</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751853</id><genstamp>11029</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26552</id><type>DIRECTORY</type><name>9</name><mtime>1494614175853</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26553</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175842</mtime><atime>1494614175834</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751854</id><genstamp>11030</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26554</id><type>DIRECTORY</type><name>3</name><mtime>1494614176026</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26555</id><type>DIRECTORY</type><name>0</name><mtime>1494614175875</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26556</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175873</mtime><atime>1494614175865</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751855</id><genstamp>11031</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26557</id><type>DIRECTORY</type><name>1</name><mtime>1494614175893</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26558</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175891</mtime><atime>1494614175883</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751856</id><genstamp>11032</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26559</id><type>DIRECTORY</type><name>2</name><mtime>1494614175911</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26560</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175908</mtime><atime>1494614175901</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751857</id><genstamp>11033</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26561</id><type>DIRECTORY</type><name>3</name><mtime>1494614175930</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26562</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175927</mtime><atime>1494614175919</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751858</id><genstamp>11034</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26563</id><type>DIRECTORY</type><name>4</name><mtime>1494614175947</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26564</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175946</mtime><atime>1494614175938</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751859</id><genstamp>11035</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26565</id><type>DIRECTORY</type><name>5</name><mtime>1494614175964</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26566</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175962</mtime><atime>1494614175955</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751860</id><genstamp>11036</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26567</id><type>DIRECTORY</type><name>6</name><mtime>1494614175980</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26568</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175978</mtime><atime>1494614175971</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751861</id><genstamp>11037</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26569</id><type>DIRECTORY</type><name>7</name><mtime>1494614176000</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26570</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614175997</mtime><atime>1494614175989</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751862</id><genstamp>11038</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26571</id><type>DIRECTORY</type><name>8</name><mtime>1494614176018</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26572</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176016</mtime><atime>1494614176009</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751863</id><genstamp>11039</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26573</id><type>DIRECTORY</type><name>9</name><mtime>1494614176040</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26574</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176038</mtime><atime>1494614176031</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751864</id><genstamp>11040</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26575</id><type>DIRECTORY</type><name>4</name><mtime>1494614176214</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26576</id><type>DIRECTORY</type><name>0</name><mtime>1494614176063</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26577</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176061</mtime><atime>1494614176053</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751865</id><genstamp>11041</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26578</id><type>DIRECTORY</type><name>1</name><mtime>1494614176081</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26579</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176080</mtime><atime>1494614176071</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751866</id><genstamp>11042</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26580</id><type>DIRECTORY</type><name>2</name><mtime>1494614176101</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26581</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176098</mtime><atime>1494614176089</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751867</id><genstamp>11043</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26582</id><type>DIRECTORY</type><name>3</name><mtime>1494614176118</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26583</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176115</mtime><atime>1494614176108</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751868</id><genstamp>11044</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26584</id><type>DIRECTORY</type><name>4</name><mtime>1494614176136</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26585</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176134</mtime><atime>1494614176127</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751869</id><genstamp>11045</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26586</id><type>DIRECTORY</type><name>5</name><mtime>1494614176153</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26587</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176151</mtime><atime>1494614176144</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751870</id><genstamp>11046</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26588</id><type>DIRECTORY</type><name>6</name><mtime>1494614176178</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26589</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176176</mtime><atime>1494614176160</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751871</id><genstamp>11047</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26590</id><type>DIRECTORY</type><name>7</name><mtime>1494614176194</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26591</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176193</mtime><atime>1494614176186</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751872</id><genstamp>11048</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26592</id><type>DIRECTORY</type><name>8</name><mtime>1494614176211</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26593</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176209</mtime><atime>1494614176201</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751873</id><genstamp>11049</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26594</id><type>DIRECTORY</type><name>9</name><mtime>1494614176228</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26595</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176226</mtime><atime>1494614176219</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751874</id><genstamp>11050</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26596</id><type>DIRECTORY</type><name>5</name><mtime>1494614176388</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26597</id><type>DIRECTORY</type><name>0</name><mtime>1494614176249</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26598</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176247</mtime><atime>1494614176240</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751875</id><genstamp>11051</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26599</id><type>DIRECTORY</type><name>1</name><mtime>1494614176266</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26600</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176264</mtime><atime>1494614176257</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751876</id><genstamp>11052</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26601</id><type>DIRECTORY</type><name>2</name><mtime>1494614176288</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26602</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176286</mtime><atime>1494614176274</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751877</id><genstamp>11053</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26603</id><type>DIRECTORY</type><name>3</name><mtime>1494614176304</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26604</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176303</mtime><atime>1494614176295</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751878</id><genstamp>11054</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26605</id><type>DIRECTORY</type><name>4</name><mtime>1494614176320</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26606</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176318</mtime><atime>1494614176311</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751879</id><genstamp>11055</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26607</id><type>DIRECTORY</type><name>5</name><mtime>1494614176336</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26608</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176334</mtime><atime>1494614176327</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751880</id><genstamp>11056</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26609</id><type>DIRECTORY</type><name>6</name><mtime>1494614176354</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26610</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176351</mtime><atime>1494614176343</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751881</id><genstamp>11057</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26611</id><type>DIRECTORY</type><name>7</name><mtime>1494614176369</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26612</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176368</mtime><atime>1494614176360</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751882</id><genstamp>11058</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26613</id><type>DIRECTORY</type><name>8</name><mtime>1494614176385</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26614</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176383</mtime><atime>1494614176376</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751883</id><genstamp>11059</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26615</id><type>DIRECTORY</type><name>9</name><mtime>1494614176401</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26616</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176399</mtime><atime>1494614176392</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751884</id><genstamp>11060</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26617</id><type>DIRECTORY</type><name>6</name><mtime>1494614176584</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26618</id><type>DIRECTORY</type><name>0</name><mtime>1494614176432</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26619</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176421</mtime><atime>1494614176413</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751885</id><genstamp>11061</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26620</id><type>DIRECTORY</type><name>1</name><mtime>1494614176450</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26621</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176448</mtime><atime>1494614176440</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751886</id><genstamp>11062</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26622</id><type>DIRECTORY</type><name>2</name><mtime>1494614176468</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26623</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176465</mtime><atime>1494614176457</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751887</id><genstamp>11063</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26624</id><type>DIRECTORY</type><name>3</name><mtime>1494614176486</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26625</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176483</mtime><atime>1494614176475</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751888</id><genstamp>11064</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26626</id><type>DIRECTORY</type><name>4</name><mtime>1494614176503</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26627</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176501</mtime><atime>1494614176493</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751889</id><genstamp>11065</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26628</id><type>DIRECTORY</type><name>5</name><mtime>1494614176519</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26629</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176517</mtime><atime>1494614176511</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751890</id><genstamp>11066</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26630</id><type>DIRECTORY</type><name>6</name><mtime>1494614176550</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26631</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176540</mtime><atime>1494614176526</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751891</id><genstamp>11067</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26632</id><type>DIRECTORY</type><name>7</name><mtime>1494614176566</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26633</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176564</mtime><atime>1494614176557</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751892</id><genstamp>11068</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26634</id><type>DIRECTORY</type><name>8</name><mtime>1494614176580</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26635</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176578</mtime><atime>1494614176572</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751893</id><genstamp>11069</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26636</id><type>DIRECTORY</type><name>9</name><mtime>1494614176596</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26637</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176594</mtime><atime>1494614176588</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751894</id><genstamp>11070</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26638</id><type>DIRECTORY</type><name>7</name><mtime>1494614176756</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26639</id><type>DIRECTORY</type><name>0</name><mtime>1494614176616</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26640</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176613</mtime><atime>1494614176606</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751895</id><genstamp>11071</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26641</id><type>DIRECTORY</type><name>1</name><mtime>1494614176631</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26642</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176629</mtime><atime>1494614176622</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751896</id><genstamp>11072</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26643</id><type>DIRECTORY</type><name>2</name><mtime>1494614176647</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26644</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176645</mtime><atime>1494614176638</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751897</id><genstamp>11073</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26645</id><type>DIRECTORY</type><name>3</name><mtime>1494614176662</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26646</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176660</mtime><atime>1494614176653</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751898</id><genstamp>11074</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26647</id><type>DIRECTORY</type><name>4</name><mtime>1494614176678</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26648</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176676</mtime><atime>1494614176669</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751899</id><genstamp>11075</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26649</id><type>DIRECTORY</type><name>5</name><mtime>1494614176703</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26650</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176701</mtime><atime>1494614176694</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751900</id><genstamp>11076</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26651</id><type>DIRECTORY</type><name>6</name><mtime>1494614176719</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26652</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176717</mtime><atime>1494614176710</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751901</id><genstamp>11077</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26653</id><type>DIRECTORY</type><name>7</name><mtime>1494614176736</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26654</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176734</mtime><atime>1494614176726</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751902</id><genstamp>11078</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26655</id><type>DIRECTORY</type><name>8</name><mtime>1494614176753</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26656</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176751</mtime><atime>1494614176743</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751903</id><genstamp>11079</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26657</id><type>DIRECTORY</type><name>9</name><mtime>1494614176770</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26658</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176768</mtime><atime>1494614176761</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751904</id><genstamp>11080</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26659</id><type>DIRECTORY</type><name>8</name><mtime>1494614176936</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26660</id><type>DIRECTORY</type><name>0</name><mtime>1494614176791</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26661</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176789</mtime><atime>1494614176782</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751905</id><genstamp>11081</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26662</id><type>DIRECTORY</type><name>1</name><mtime>1494614176822</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26663</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176820</mtime><atime>1494614176798</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751906</id><genstamp>11082</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26664</id><type>DIRECTORY</type><name>2</name><mtime>1494614176837</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26665</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176835</mtime><atime>1494614176828</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751907</id><genstamp>11083</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26666</id><type>DIRECTORY</type><name>3</name><mtime>1494614176853</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26667</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176851</mtime><atime>1494614176844</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751908</id><genstamp>11084</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26668</id><type>DIRECTORY</type><name>4</name><mtime>1494614176868</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26669</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176866</mtime><atime>1494614176859</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751909</id><genstamp>11085</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26670</id><type>DIRECTORY</type><name>5</name><mtime>1494614176886</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26671</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176883</mtime><atime>1494614176875</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751910</id><genstamp>11086</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26672</id><type>DIRECTORY</type><name>6</name><mtime>1494614176901</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26673</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176900</mtime><atime>1494614176892</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751911</id><genstamp>11087</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26674</id><type>DIRECTORY</type><name>7</name><mtime>1494614176917</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26675</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176915</mtime><atime>1494614176908</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751912</id><genstamp>11088</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26676</id><type>DIRECTORY</type><name>8</name><mtime>1494614176933</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26677</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176931</mtime><atime>1494614176924</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751913</id><genstamp>11089</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26678</id><type>DIRECTORY</type><name>9</name><mtime>1494614176949</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26679</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176947</mtime><atime>1494614176940</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751914</id><genstamp>11090</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26680</id><type>DIRECTORY</type><name>9</name><mtime>1494614177104</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26681</id><type>DIRECTORY</type><name>0</name><mtime>1494614176970</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26682</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176967</mtime><atime>1494614176961</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751915</id><genstamp>11091</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26683</id><type>DIRECTORY</type><name>1</name><mtime>1494614176984</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26684</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176982</mtime><atime>1494614176976</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751916</id><genstamp>11092</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26685</id><type>DIRECTORY</type><name>2</name><mtime>1494614176999</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26686</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614176998</mtime><atime>1494614176991</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751917</id><genstamp>11093</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26687</id><type>DIRECTORY</type><name>3</name><mtime>1494614177016</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26688</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614177014</mtime><atime>1494614177007</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751918</id><genstamp>11094</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26689</id><type>DIRECTORY</type><name>4</name><mtime>1494614177031</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26690</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614177029</mtime><atime>1494614177022</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751919</id><genstamp>11095</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26691</id><type>DIRECTORY</type><name>5</name><mtime>1494614177046</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26692</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614177044</mtime><atime>1494614177037</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751920</id><genstamp>11096</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26693</id><type>DIRECTORY</type><name>6</name><mtime>1494614177063</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26694</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614177061</mtime><atime>1494614177054</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751921</id><genstamp>11097</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26695</id><type>DIRECTORY</type><name>7</name><mtime>1494614177086</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26696</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614177084</mtime><atime>1494614177077</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751922</id><genstamp>11098</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26697</id><type>DIRECTORY</type><name>8</name><mtime>1494614177101</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26698</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614177099</mtime><atime>1494614177093</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751923</id><genstamp>11099</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-<inode><id>26699</id><type>DIRECTORY</type><name>9</name><mtime>1494614177117</mtime><permission>hdfs:hdfs:rwxr-x---</permission><nsquota>-1</nsquota><dsquota>-1</dsquota></inode>
-<inode><id>26700</id><type>FILE</type><name>foo</name><replication>1</replication><mtime>1494614177115</mtime><atime>1494614177108</atime><perferredBlockSize>536870912</perferredBlockSize><permission>hdfs:hdfs:rw-r-----</permission><blocks><block><id>1073751924</id><genstamp>11100</genstamp><numBytes>4</numBytes></block>
-</blocks>
-</inode>
-</INodeSection>
-<INodeReferenceSection></INodeReferenceSection><SnapshotSection><snapshotCounter>0</snapshotCounter></SnapshotSection>
-<INodeDirectorySection><directory><parent>16385</parent><inode>16387</inode><inode>16386</inode><inode>16388</inode></directory>
-<directory><parent>16386</parent><inode>16390</inode></directory>
-<directory><parent>16388</parent><inode>16389</inode></directory>
-<directory><parent>16390</parent><inode>26491</inode><inode>26512</inode><inode>26533</inode><inode>26554</inode><inode>26575</inode><inode>26596</inode><inode>26617</inode><inode>26638</inode><inode>26659</inode><inode>26680</inode></directory>
-<directory><parent>26491</parent><inode>26492</inode><inode>26494</inode><inode>26496</inode><inode>26498</inode><inode>26500</inode><inode>26502</inode><inode>26504</inode><inode>26506</inode><inode>26508</inode><inode>26510</inode></directory>
-<directory><parent>26492</parent><inode>26493</inode></directory>
-<directory><parent>26494</parent><inode>26495</inode></directory>
-<directory><parent>26496</parent><inode>26497</inode></directory>
-<directory><parent>26498</parent><inode>26499</inode></directory>
-<directory><parent>26500</parent><inode>26501</inode></directory>
-<directory><parent>26502</parent><inode>26503</inode></directory>
-<directory><parent>26504</parent><inode>26505</inode></directory>
-<directory><parent>26506</parent><inode>26507</inode></directory>
-<directory><parent>26508</parent><inode>26509</inode></directory>
-<directory><parent>26510</parent><inode>26511</inode></directory>
-<directory><parent>26512</parent><inode>26513</inode><inode>26515</inode><inode>26517</inode><inode>26519</inode><inode>26521</inode><inode>26523</inode><inode>26525</inode><inode>26527</inode><inode>26529</inode><inode>26531</inode></directory>
-<directory><parent>26513</parent><inode>26514</inode></directory>
-<directory><parent>26515</parent><inode>26516</inode></directory>
-<directory><parent>26517</parent><inode>26518</inode></directory>
-<directory><parent>26519</parent><inode>26520</inode></directory>
-<directory><parent>26521</parent><inode>26522</inode></directory>
-<directory><parent>26523</parent><inode>26524</inode></directory>
-<directory><parent>26525</parent><inode>26526</inode></directory>
-<directory><parent>26527</parent><inode>26528</inode></directory>
-<directory><parent>26529</parent><inode>26530</inode></directory>
-<directory><parent>26531</parent><inode>26532</inode></directory>
-<directory><parent>26533</parent><inode>26534</inode><inode>26536</inode><inode>26538</inode><inode>26540</inode><inode>26542</inode><inode>26544</inode><inode>26546</inode><inode>26548</inode><inode>26550</inode><inode>26552</inode></directory>
-<directory><parent>26534</parent><inode>26535</inode></directory>
-<directory><parent>26536</parent><inode>26537</inode></directory>
-<directory><parent>26538</parent><inode>26539</inode></directory>
-<directory><parent>26540</parent><inode>26541</inode></directory>
-<directory><parent>26542</parent><inode>26543</inode></directory>
-<directory><parent>26544</parent><inode>26545</inode></directory>
-<directory><parent>26546</parent><inode>26547</inode></directory>
-<directory><parent>26548</parent><inode>26549</inode></directory>
-<directory><parent>26550</parent><inode>26551</inode></directory>
-<directory><parent>26552</parent><inode>26553</inode></directory>
-<directory><parent>26554</parent><inode>26555</inode><inode>26557</inode><inode>26559</inode><inode>26561</inode><inode>26563</inode><inode>26565</inode><inode>26567</inode><inode>26569</inode><inode>26571</inode><inode>26573</inode></directory>
-<directory><parent>26555</parent><inode>26556</inode></directory>
-<directory><parent>26557</parent><inode>26558</inode></directory>
-<directory><parent>26559</parent><inode>26560</inode></directory>
-<directory><parent>26561</parent><inode>26562</inode></directory>
-<directory><parent>26563</parent><inode>26564</inode></directory>
-<directory><parent>26565</parent><inode>26566</inode></directory>
-<directory><parent>26567</parent><inode>26568</inode></directory>
-<directory><parent>26569</parent><inode>26570</inode></directory>
-<directory><parent>26571</parent><inode>26572</inode></directory>
-<directory><parent>26573</parent><inode>26574</inode></directory>
-<directory><parent>26575</parent><inode>26576</inode><inode>26578</inode><inode>26580</inode><inode>26582</inode><inode>26584</inode><inode>26586</inode><inode>26588</inode><inode>26590</inode><inode>26592</inode><inode>26594</inode></directory>
-<directory><parent>26576</parent><inode>26577</inode></directory>
-<directory><parent>26578</parent><inode>26579</inode></directory>
-<directory><parent>26580</parent><inode>26581</inode></directory>
-<directory><parent>26582</parent><inode>26583</inode></directory>
-<directory><parent>26584</parent><inode>26585</inode></directory>
-<directory><parent>26586</parent><inode>26587</inode></directory>
-<directory><parent>26588</parent><inode>26589</inode></directory>
-<directory><parent>26590</parent><inode>26591</inode></directory>
-<directory><parent>26592</parent><inode>26593</inode></directory>
-<directory><parent>26594</parent><inode>26595</inode></directory>
-<directory><parent>26596</parent><inode>26597</inode><inode>26599</inode><inode>26601</inode><inode>26603</inode><inode>26605</inode><inode>26607</inode><inode>26609</inode><inode>26611</inode><inode>26613</inode><inode>26615</inode></directory>
-<directory><parent>26597</parent><inode>26598</inode></directory>
-<directory><parent>26599</parent><inode>26600</inode></directory>
-<directory><parent>26601</parent><inode>26602</inode></directory>
-<directory><parent>26603</parent><inode>26604</inode></directory>
-<directory><parent>26605</parent><inode>26606</inode></directory>
-<directory><parent>26607</parent><inode>26608</inode></directory>
-<directory><parent>26609</parent><inode>26610</inode></directory>
-<directory><parent>26611</parent><inode>26612</inode></directory>
-<directory><parent>26613</parent><inode>26614</inode></directory>
-<directory><parent>26615</parent><inode>26616</inode></directory>
-<directory><parent>26617</parent><inode>26618</inode><inode>26620</inode><inode>26622</inode><inode>26624</inode><inode>26626</inode><inode>26628</inode><inode>26630</inode><inode>26632</inode><inode>26634</inode><inode>26636</inode></directory>
-<directory><parent>26618</parent><inode>26619</inode></directory>
-<directory><parent>26620</parent><inode>26621</inode></directory>
-<directory><parent>26622</parent><inode>26623</inode></directory>
-<directory><parent>26624</parent><inode>26625</inode></directory>
-<directory><parent>26626</parent><inode>26627</inode></directory>
-<directory><parent>26628</parent><inode>26629</inode></directory>
-<directory><parent>26630</parent><inode>26631</inode></directory>
-<directory><parent>26632</parent><inode>26633</inode></directory>
-<directory><parent>26634</parent><inode>26635</inode></directory>
-<directory><parent>26636</parent><inode>26637</inode></directory>
-<directory><parent>26638</parent><inode>26639</inode><inode>26641</inode><inode>26643</inode><inode>26645</inode><inode>26647</inode><inode>26649</inode><inode>26651</inode><inode>26653</inode><inode>26655</inode><inode>26657</inode></directory>
-<directory><parent>26639</parent><inode>26640</inode></directory>
-<directory><parent>26641</parent><inode>26642</inode></directory>
-<directory><parent>26643</parent><inode>26644</inode></directory>
-<directory><parent>26645</parent><inode>26646</inode></directory>
-<directory><parent>26647</parent><inode>26648</inode></directory>
-<directory><parent>26649</parent><inode>26650</inode></directory>
-<directory><parent>26651</parent><inode>26652</inode></directory>
-<directory><parent>26653</parent><inode>26654</inode></directory>
-<directory><parent>26655</parent><inode>26656</inode></directory>
-<directory><parent>26657</parent><inode>26658</inode></directory>
-<directory><parent>26659</parent><inode>26660</inode><inode>26662</inode><inode>26664</inode><inode>26666</inode><inode>26668</inode><inode>26670</inode><inode>26672</inode><inode>26674</inode><inode>26676</inode><inode>26678</inode></directory>
-<directory><parent>26660</parent><inode>26661</inode></directory>
-<directory><parent>26662</parent><inode>26663</inode></directory>
-<directory><parent>26664</parent><inode>26665</inode></directory>
-<directory><parent>26666</parent><inode>26667</inode></directory>
-<directory><parent>26668</parent><inode>26669</inode></directory>
-<directory><parent>26670</parent><inode>26671</inode></directory>
-<directory><parent>26672</parent><inode>26673</inode></directory>
-<directory><parent>26674</parent><inode>26675</inode></directory>
-<directory><parent>26676</parent><inode>26677</inode></directory>
-<directory><parent>26678</parent><inode>26679</inode></directory>
-<directory><parent>26680</parent><inode>26681</inode><inode>26683</inode><inode>26685</inode><inode>26687</inode><inode>26689</inode><inode>26691</inode><inode>26693</inode><inode>26695</inode><inode>26697</inode><inode>26699</inode></directory>
-<directory><parent>26681</parent><inode>26682</inode></directory>
-<directory><parent>26683</parent><inode>26684</inode></directory>
-<directory><parent>26685</parent><inode>26686</inode></directory>
-<directory><parent>26687</parent><inode>26688</inode></directory>
-<directory><parent>26689</parent><inode>26690</inode></directory>
-<directory><parent>26691</parent><inode>26692</inode></directory>
-<directory><parent>26693</parent><inode>26694</inode></directory>
-<directory><parent>26695</parent><inode>26696</inode></directory>
-<directory><parent>26697</parent><inode>26698</inode></directory>
-<directory><parent>26699</parent><inode>26700</inode></directory>
-</INodeDirectorySection>
-<FileUnderConstructionSection></FileUnderConstructionSection>
-<SnapshotDiffSection><diff><inodeid>16385</inodeid></diff></SnapshotDiffSection>
-<SecretManagerSection><currentId>0</currentId><tokenSequenceNumber>0</tokenSequenceNumber></SecretManagerSection><CacheManagerSection><nextDirectiveId>1</nextDirectiveId></CacheManagerSection>
-</fsimage>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-dist/pom.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-dist/pom.xml
deleted file mode 100644
index ea884927791..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-dist/pom.xml
+++ /dev/null
@@ -1,128 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
-                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <parent>
-    <groupId>org.apache.hadoop</groupId>
-    <artifactId>hadoop-project-dist</artifactId>
-    <version>3.4.0</version>
-    <relativePath>../../../hadoop-project-dist</relativePath>
-  </parent>
-  <artifactId>hadoop-dynamometer-dist</artifactId>
-  <version>3.4.0</version>
-  <description>Apache Hadoop Dynamometer Dist</description>
-  <name>Apache Hadoop Dynamometer Dist</name>
-  <packaging>jar</packaging>
-
-  <properties>
-    <hadoop.component>tools</hadoop.component>
-  </properties>
-
-  <dependencies>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-dynamometer-blockgen</artifactId>
-      <scope>compile</scope>
-      <version>${project.version}</version>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-dynamometer-workload</artifactId>
-      <scope>compile</scope>
-      <version>${project.version}</version>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-dynamometer-infra</artifactId>
-      <scope>compile</scope>
-      <version>${project.version}</version>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <plugins>
-      <plugin>
-        <artifactId>maven-deploy-plugin</artifactId>
-        <configuration>
-          <skip>true</skip>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.rat</groupId>
-        <artifactId>apache-rat-plugin</artifactId>
-        <configuration>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-
-  <profiles>
-    <profile>
-      <id>dist</id>
-      <activation>
-        <activeByDefault>false</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-         <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-assembly-plugin</artifactId>
-            <dependencies>
-              <dependency>
-                <groupId>org.apache.hadoop</groupId>
-                <artifactId>hadoop-assemblies</artifactId>
-                <version>${project.version}</version>
-              </dependency>
-            </dependencies>
-            <executions>
-              <execution>
-                <id>dist</id>
-                <phase>prepare-package</phase>
-                <goals>
-                  <goal>single</goal>
-                </goals>
-                <configuration>
-                  <appendAssemblyId>false</appendAssemblyId>
-                  <attach>false</attach>
-                  <finalName>${project.artifactId}-${project.version}</finalName>
-                  <descriptorRefs>
-                    <descriptorRef>hadoop-dynamometer</descriptorRef>
-                  </descriptorRefs>
-                </configuration>
-              </execution>
-            </executions>
-          </plugin>
-          <plugin>
-          <artifactId>maven-dependency-plugin</artifactId>
-          <executions>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>copy-dependencies</goal>
-            </goals>
-            <configuration>
-              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/share/hadoop/tools/lib</outputDirectory>
-            </configuration>
-          </execution>
-          </executions>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
-</project>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/pom.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/pom.xml
deleted file mode 100644
index 7a4379b1570..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/pom.xml
+++ /dev/null
@@ -1,216 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <parent>
-    <groupId>org.apache.hadoop</groupId>
-    <artifactId>hadoop-project</artifactId>
-    <version>3.4.0</version>
-    <relativePath>../../../hadoop-project</relativePath>
-  </parent>
-  <artifactId>hadoop-dynamometer-infra</artifactId>
-  <version>3.4.0</version>
-  <description>Apache Hadoop Dynamometer Cluster Simulator</description>
-  <name>Apache Hadoop Dynamometer Cluster Simulator</name>
-  <packaging>jar</packaging>
-
-  <dependencies>
-    <dependency>
-      <groupId>commons-cli</groupId>
-      <artifactId>commons-cli</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.commons</groupId>
-      <artifactId>commons-lang3</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop.thirdparty</groupId>
-      <artifactId>hadoop-shaded-guava</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <!-- JUnit is required by MiniDFSCluster, which is used outside of tests -->
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-client</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-hdfs</artifactId>
-      <type>test-jar</type>
-      <scope>compile</scope>
-      <exclusions>
-        <exclusion>
-          <groupId>org.ow2.asm</groupId>
-          <artifactId>asm-commons</artifactId>
-        </exclusion>
-      </exclusions>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-minicluster</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-dynamometer-workload</artifactId>
-      <scope>compile</scope>
-      <version>${project.version}</version>
-    </dependency>
-    <dependency>
-      <groupId>org.mockito</groupId>
-      <artifactId>mockito-core</artifactId>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-common</artifactId>
-      <type>test-jar</type>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-yarn-server-tests</artifactId>
-      <type>test-jar</type>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-dynamometer-workload</artifactId>
-      <type>test-jar</type>
-      <scope>test</scope>
-      <version>${project.version}</version>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-source-plugin</artifactId>
-        <configuration>
-          <attach>true</attach>
-        </configuration>
-        <executions>
-          <execution>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.rat</groupId>
-        <artifactId>apache-rat-plugin</artifactId>
-        <configuration>
-          <excludes>
-            <exclude>src/test/resources/blocks/dn1-a-0-r-00001</exclude>
-            <exclude>src/test/resources/blocks/dn0-a-0-r-00000</exclude>
-            <exclude>src/test/resources/blocks/dn2-a-0-r-00002</exclude>
-            <exclude>src/test/resources/hadoop_3_1/fsimage_0000000000000061740.md5</exclude>
-            <exclude>src/test/resources/hadoop_3_1/VERSION</exclude>
-          </excludes>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-surefire-plugin</artifactId>
-        <configuration>
-          <forkedProcessTimeoutInSeconds>1800</forkedProcessTimeoutInSeconds>
-          <environmentVariables>
-            <JAVA_HOME>${java.home}</JAVA_HOME>
-          </environmentVariables>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-
-  <profiles>
-    <profile>
-      <id>dist</id>
-      <activation>
-        <activeByDefault>false</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-assembly-plugin</artifactId>
-            <dependencies>
-              <dependency>
-                <groupId>org.apache.hadoop</groupId>
-                <artifactId>hadoop-assemblies</artifactId>
-                <version>${project.version}</version>
-              </dependency>
-            </dependencies>
-            <executions>
-              <execution>
-                <id>dist</id>
-                <phase>prepare-package</phase>
-                <goals>
-                  <goal>single</goal>
-                </goals>
-                <configuration>
-                  <appendAssemblyId>false</appendAssemblyId>
-                  <attach>false</attach>
-                  <finalName>${project.artifactId}-${project.version}</finalName>
-                  <descriptorRefs>
-                    <descriptorRef>hadoop-dynamometer-infra</descriptorRef>
-                  </descriptorRefs>
-                </configuration>
-              </execution>
-            </executions>
-          </plugin>
-       <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-dependency-plugin</artifactId>
-        <executions>
-          <execution>
-            <id>deplist</id>
-            <phase>compile</phase>
-            <goals>
-              <goal>list</goal>
-            </goals>
-            <configuration>
-              <!-- referenced by a built-in command -->
-              <outputFile>${project.basedir}/target/hadoop-tools-deps/${project.artifactId}.tools-builtin.txt</outputFile>
-            </configuration>
-          </execution>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>copy-dependencies</goal>
-            </goals>
-            <configuration>
-              <outputDirectory>${project.build.directory}/lib</outputDirectory>
-              <includeScope>runtime</includeScope>
-            </configuration>
-          </execution>
-        </executions>
-      </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
-</project>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/create-slim-hadoop-tar.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/create-slim-hadoop-tar.sh
deleted file mode 100755
index 12669a33dd0..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/create-slim-hadoop-tar.sh
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-if [[ "$#" != 1 ]] || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
-  echo "Usage: ./create-slim-hadoop-tar.sh path-to-hadoop-tar"
-  echo "  Takes path-to-hadoop-tar as a hadoop.tar.gz binary distribution"
-  echo "  and removes portions of it that are unnecessary for dynamometer"
-  echo "  (e.g. unrelated components like YARN)."
-  echo "  This overwrites the original file."
-  echo "  This is idempotent; you can safely rerun it on the same tar."
-  exit 1
-fi
-
-hadoopTar="$1"
-
-# ls output is intended for human consumption
-# shellcheck disable=SC2012
-echo "Slimming $hadoopTar; size before is $(ls -lh "$hadoopTar" | awk '{ print $5 }')"
-
-hadoopTarTmp="$hadoopTar.temporary"
-
-mkdir -p "$hadoopTarTmp"
-
-tar xzf "$hadoopTar" -C "$hadoopTarTmp"
-baseDir="$(find -H "$hadoopTarTmp" -maxdepth 1 -mindepth 1 -type d | head -n 1)" # Should only be one subdir
-hadoopShare="$baseDir/share/hadoop"
-
-# Remove unnecessary files
-rm -rf "${baseDir}/share/doc" "${hadoopShare}/mapreduce ${hadoopShare}/yarn" \
-       "${hadoopShare}/kms" "${hadoopShare}/tools" "${hadoopShare}/httpfs" \
-       "${hadoopShare}"/*/sources "${hadoopShare}"/*/jdiff
-
-tar czf "$hadoopTarTmp.tar.gz" -C "$hadoopTarTmp" .
-rm -rf "$hadoopTarTmp"
-mv -f "$hadoopTarTmp.tar.gz" "$hadoopTar"
-
-# ls output is intended for human consumption
-# shellcheck disable=SC2012
-echo "Finished; size after is $(ls -lh "$hadoopTar" | awk '{ print $5 }')"
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/parse-metrics.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/parse-metrics.sh
deleted file mode 100755
index 1ea94c2edab..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/parse-metrics.sh
+++ /dev/null
@@ -1,84 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# This script is used for fetching the standard Hadoop metrics which the
-# Dynamometer NameNode generates during its execution (standard Hadoop metrics).
-# Those metrics are uploaded onto HDFS when the Dynamometer application completes.
-# This script will download them locally and parse out the specified metric for
-# the given time period. This is useful to, for example, isolate only the metrics
-# produced during the workload replay portion of a job. For this, specify startTimeMs
-# as the start time of the workload job (which it logs during execution) and
-# periodMinutes the period (in minutes) of the replay.
-
-if [ $# -lt 5 ]; then
-  echo "Usage:"
-  echo "./parse-metrics.sh applicationID outputFileName startTimeMs periodMinutes metricName [ context ] [ isCounter ]"
-  echo "If no file namenode_metrics_{applicationID} is present in the working directory,"
-  echo "attempts to download one from HDFS for applicationID. Filters values"
-  echo "for the specified metric, during the range"
-  echo "(startTimeMs, startTimeMs + periodMinutes) optionally filtering on the context as well"
-  echo "(which is just applied as a regex search across the metric line output)"
-  echo "and outputs CSV pairs of (seconds_since_start_time,value)."
-  echo "If isCounter is true, treats the metrics as a counter and outputs per-second rate values."
-  exit 1
-fi
-
-appId="$1"
-output="$2"
-start_ts="$3"
-period_minutes="$4"
-metric="$5"
-context="$6"
-is_counter="$7"
-
-localFile="namenode_metrics_$appId"
-if [ ! -f "$localFile" ]; then
-  remoteFile=".dynamometer/$appId/namenode_metrics"
-  echo "Downloading file from HDFS: $remoteFile"
-  if ! hdfs dfs -copyToLocal "$remoteFile" "$localFile"; then
-    exit 1
-  fi
-fi
-
-read -d '' -r awk_script <<'EOF'
-BEGIN {
-    metric_regex="[[:space:]]"metric"=([[:digit:].E]+)";
-    end_ts=start_ts+(period_minutes*60*1000)
-    last_val=0
-    last_ts=start_ts
-}
-"true" ~ is_counter && $0 ~ metric_regex && $0 ~ context && $1 < start_ts {
-    match($0, metric_regex, val_arr);
-    last_val=val_arr[1]
-    last_ts=$1
-}
-$0 ~ metric_regex && $0 ~ context && $1 >= start_ts && $1 <= end_ts {
-    match($0, metric_regex, val_arr);
-    val=val_arr[1]
-    if (is_counter == "true") {
-      tmp=val
-      val=val-last_val
-      val=val/(($1-last_ts)/1000)
-      last_ts=$1
-      last_val=tmp
-    }
-    printf("%.0f,%.6f\n", ($0-start_ts)/1000, val)
-}
-EOF
-
-gawk -v metric="$metric" -v context="$context" -v start_ts="$start_ts" \
-  -v period_minutes="$period_minutes" -v is_counter="$is_counter" -v OFS="," "$awk_script" "$localFile" > "$output"
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/start-dynamometer-cluster.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/start-dynamometer-cluster.sh
deleted file mode 100755
index 44fcb85eff6..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/start-dynamometer-cluster.sh
+++ /dev/null
@@ -1,41 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# This script simply passes its arguments along to the infrastructure / cluster
-# driver after finding a hadoop command in PATH/HADOOP_COMMON_HOME/HADOOP_HOME
-# (searching in that order).
-
-if type hadoop &> /dev/null; then
-  hadoop_cmd="hadoop"
-elif type "$HADOOP_COMMON_HOME/bin/hadoop" &> /dev/null; then
-  hadoop_cmd="$HADOOP_COMMON_HOME/bin/hadoop"
-elif type "$HADOOP_HOME/bin/hadoop" &> /dev/null; then
-  hadoop_cmd="$HADOOP_HOME/bin/hadoop"
-else
-  echo "Unable to find a valid hadoop command to execute; exiting."
-  exit 1
-fi
-
-script_pwd="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/../../.."
-
-for f in ${script_pwd}/lib/*.jar; do
-  # Skip adding the infra JAR since it is added by the `hadoop jar` command
-  if [[ "$f" != *"dynamometer-infra-"* ]]; then
-    export HADOOP_CLASSPATH="$HADOOP_CLASSPATH:$f"
-  fi
-done
-"$hadoop_cmd" jar "${script_pwd}"/lib/hadoop-dynamometer-infra-*.jar org.apache.hadoop.tools.dynamometer.Client "$@"
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/upload-fsimage.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/upload-fsimage.sh
deleted file mode 100755
index 8308adbfef6..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/bash/upload-fsimage.sh
+++ /dev/null
@@ -1,84 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-if [ $# -lt 2 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
-  echo "Usage: ./upload-fsimage.sh image-txid remote-dir [ name-dir ]"
-  echo "       Takes the steps necessary to place all necessary components for"
-  echo "       the fsimage with the specified transaction ID (leading 0s not"
-  echo "       required) onto HDFS. This includes the fsimage file itself,"
-  echo "       the MD5 hash, the VERSION file, and the XML version of the"
-  echo "       fsimage file, which will be temporarily generated by this script"
-  echo "       (into \$TMPDIR if specified, else /tmp)."
-  echo "       These files will be uploaded to remote_dir (created if it does"
-  echo "       not yet exist). This is the same directory that should be passed"
-  echo "       to the Client as fs_image_dir."
-  echo "       If name-dir is specified, looks for fsimage files under"
-  echo "       \${name-dir}/current. Otherwise, looks in the current directory."
-  exit 1
-fi
-image_txid="$1"
-remote_dir="$2"
-if [[ $# -ge 3 ]]; then
-  name_dir="$3/current"
-else
-  name_dir="$(pwd)"
-fi
-
-image_file_count="$(find -H "${name_dir}" -maxdepth 1 -mindepth 1 -name "fsimage_*$image_txid" -type f | wc -l)"
-if [[ "$image_file_count" != 1 ]]; then
-  echo "Error; found $image_file_count matching fsimage files."
-  exit 1
-fi
-image_file="$(find -H "${name_dir}" -maxdepth 1 -mindepth 1 -name "fsimage_*$image_txid" -type f)"
-image_file_name="$(basename "${image_file}")"
-echo "Using fsimage: $image_file_name"
-image_file_md5="${image_file}.md5"
-version_file="${name_dir}/VERSION"
-
-if ! [[ -f "$image_file_md5" ]]; then
-  echo "Unable to find MD5 file for fsimage; looked at $image_file_md5"
-  exit 1
-fi
-if ! [[ -f "$version_file" ]]; then
-  echo "Unable to find VERSION file; looked at $version_file"
-  exit 1
-fi
-
-if ! tmp_dir="$(mktemp -d)"; then
-  echo "mktemp failed to make a temporary directory; exiting"
-  exit 1
-fi
-image_file_xml="${tmp_dir}/${image_file_name}.xml"
-echo "Creating temporary XML fsimage file at $image_file_xml"
-hdfs oiv -p XML -i "$image_file" -o "$image_file_xml"
-echo "Created temporary XML fsimage file"
-
-if ! hdfs dfs -mkdir -p "$remote_dir"; then
-  echo "Unable to create ${remote_dir}; exiting"
-  rm -rf "${tmp_dir}"
-  exit 1
-fi
-for file in ${image_file} ${image_file_xml} ${image_file_md5} ${version_file}; do
-  echo "Uploading ${file}..."
-  if ! hdfs dfs -copyFromLocal -f "$file" "${remote_dir}"; then
-    echo "Error while uploading ${file}; exiting"
-      rm -rf "${tmp_dir}"
-    exit 1
-  fi
-done
-rm -rf "${tmp_dir}"
-echo "Complete!"
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AMOptions.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AMOptions.java
deleted file mode 100644
index b7726e4d733..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AMOptions.java
+++ /dev/null
@@ -1,317 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import org.apache.hadoop.util.Preconditions;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.TimeUnit;
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.Options;
-import org.apache.hadoop.conf.Configuration;
-
-/**
- * Options supplied to the Client which are then passed through to the
- * ApplicationMaster.
- */
-final class AMOptions {
-
-  public static final String NAMENODE_MEMORY_MB_ARG = "namenode_memory_mb";
-  public static final String NAMENODE_MEMORY_MB_DEFAULT = "2048";
-  public static final String NAMENODE_VCORES_ARG = "namenode_vcores";
-  public static final String NAMENODE_VCORES_DEFAULT = "1";
-  public static final String NAMENODE_NODELABEL_ARG = "namenode_nodelabel";
-  public static final String NAMENODE_ARGS_ARG = "namenode_args";
-  public static final String DATANODE_MEMORY_MB_ARG = "datanode_memory_mb";
-  public static final String DATANODE_MEMORY_MB_DEFAULT = "2048";
-  public static final String DATANODE_VCORES_ARG = "datanode_vcores";
-  public static final String DATANODE_VCORES_DEFAULT = "1";
-  public static final String DATANODE_NODELABEL_ARG = "datanode_nodelabel";
-  public static final String DATANODE_ARGS_ARG = "datanode_args";
-  public static final String NAMENODE_METRICS_PERIOD_ARG =
-      "namenode_metrics_period";
-  public static final String NAMENODE_METRICS_PERIOD_DEFAULT = "60";
-  public static final String SHELL_ENV_ARG = "shell_env";
-  public static final String DATANODES_PER_CLUSTER_ARG =
-      "datanodes_per_cluster";
-  public static final String DATANODES_PER_CLUSTER_DEFAULT = "1";
-  public static final String DATANODE_LAUNCH_DELAY_ARG =
-      "datanode_launch_delay";
-  public static final String DATANODE_LAUNCH_DELAY_DEFAULT = "0s";
-  public static final String NAMENODE_NAME_DIR_ARG = "namenode_name_dir";
-  public static final String NAMENODE_EDITS_DIR_ARG = "namenode_edits_dir";
-
-  private final int datanodeMemoryMB;
-  private final int datanodeVirtualCores;
-  private final String datanodeArgs;
-  private final String datanodeNodeLabelExpression;
-  private final int datanodesPerCluster;
-  private final String datanodeLaunchDelay;
-  private final int namenodeMemoryMB;
-  private final int namenodeVirtualCores;
-  private final String namenodeArgs;
-  private final String namenodeNodeLabelExpression;
-  private final int namenodeMetricsPeriod;
-  private final String namenodeNameDir;
-  private final String namenodeEditsDir;
-  // Original shellEnv as passed in through arguments
-  private final Map<String, String> originalShellEnv;
-  // Extended shellEnv including custom environment variables
-  private final Map<String, String> shellEnv;
-
-  @SuppressWarnings("checkstyle:parameternumber")
-  private AMOptions(int datanodeMemoryMB, int datanodeVirtualCores,
-      String datanodeArgs, String datanodeNodeLabelExpression,
-      int datanodesPerCluster, String datanodeLaunchDelay, int namenodeMemoryMB,
-      int namenodeVirtualCores, String namenodeArgs,
-      String namenodeNodeLabelExpression, int namenodeMetricsPeriod,
-      String namenodeNameDir, String namenodeEditsDir,
-      Map<String, String> shellEnv) {
-    this.datanodeMemoryMB = datanodeMemoryMB;
-    this.datanodeVirtualCores = datanodeVirtualCores;
-    this.datanodeArgs = datanodeArgs;
-    this.datanodeNodeLabelExpression = datanodeNodeLabelExpression;
-    this.datanodesPerCluster = datanodesPerCluster;
-    this.datanodeLaunchDelay = datanodeLaunchDelay;
-    this.namenodeMemoryMB = namenodeMemoryMB;
-    this.namenodeVirtualCores = namenodeVirtualCores;
-    this.namenodeArgs = namenodeArgs;
-    this.namenodeNodeLabelExpression = namenodeNodeLabelExpression;
-    this.namenodeMetricsPeriod = namenodeMetricsPeriod;
-    this.namenodeNameDir = namenodeNameDir;
-    this.namenodeEditsDir = namenodeEditsDir;
-    this.originalShellEnv = shellEnv;
-    this.shellEnv = new HashMap<>(this.originalShellEnv);
-    this.shellEnv.put(DynoConstants.NN_ADDITIONAL_ARGS_ENV, this.namenodeArgs);
-    this.shellEnv.put(DynoConstants.DN_ADDITIONAL_ARGS_ENV, this.datanodeArgs);
-    this.shellEnv.put(DynoConstants.NN_FILE_METRIC_PERIOD_ENV,
-        String.valueOf(this.namenodeMetricsPeriod));
-    this.shellEnv.put(DynoConstants.NN_NAME_DIR_ENV, this.namenodeNameDir);
-    this.shellEnv.put(DynoConstants.NN_EDITS_DIR_ENV, this.namenodeEditsDir);
-  }
-
-  /**
-   * Verifies that arguments are valid; throws IllegalArgumentException if not.
-   */
-  void verify(long maxMemory, int maxVcores) throws IllegalArgumentException {
-    Preconditions.checkArgument(
-        datanodeMemoryMB > 0 && datanodeMemoryMB <= maxMemory,
-        "datanodeMemoryMB (%s) must be between 0 and %s", datanodeMemoryMB,
-        maxMemory);
-    Preconditions.checkArgument(
-        datanodeVirtualCores > 0 && datanodeVirtualCores <= maxVcores,
-        "datanodeVirtualCores (%s) must be between 0 and %s",
-        datanodeVirtualCores, maxVcores);
-    Preconditions.checkArgument(
-        namenodeMemoryMB > 0 && namenodeMemoryMB <= maxMemory,
-        "namenodeMemoryMB (%s) must be between 0 and %s", namenodeMemoryMB,
-        maxMemory);
-    Preconditions.checkArgument(
-        namenodeVirtualCores > 0 && namenodeVirtualCores <= maxVcores,
-        "namenodeVirtualCores (%s) must be between 0 and %s",
-        namenodeVirtualCores, maxVcores);
-    Preconditions.checkArgument(datanodesPerCluster > 0,
-        "datanodesPerCluster (%s) must be > 0", datanodesPerCluster);
-  }
-
-  /**
-   * Same as {@link #verify(long, int)} but does not set a max.
-   */
-  void verify() throws IllegalArgumentException {
-    verify(Integer.MAX_VALUE, Integer.MAX_VALUE);
-  }
-
-  void addToVargs(List<String> vargs) {
-    vargs.add("--" + DATANODE_MEMORY_MB_ARG + " " + datanodeMemoryMB);
-    vargs.add("--" + DATANODE_VCORES_ARG + " " + datanodeVirtualCores);
-    addStringValToVargs(vargs, DATANODE_ARGS_ARG, datanodeArgs);
-    addStringValToVargs(vargs, DATANODE_NODELABEL_ARG,
-        datanodeNodeLabelExpression);
-    vargs.add("--" + DATANODES_PER_CLUSTER_ARG + " " + datanodesPerCluster);
-    vargs.add("--" + DATANODE_LAUNCH_DELAY_ARG + " " + datanodeLaunchDelay);
-    vargs.add("--" + NAMENODE_MEMORY_MB_ARG + " " + namenodeMemoryMB);
-    vargs.add("--" + NAMENODE_VCORES_ARG + " " + namenodeVirtualCores);
-    addStringValToVargs(vargs, NAMENODE_ARGS_ARG, namenodeArgs);
-    addStringValToVargs(vargs, NAMENODE_NODELABEL_ARG,
-        namenodeNodeLabelExpression);
-    vargs.add("--" + NAMENODE_METRICS_PERIOD_ARG + " " + namenodeMetricsPeriod);
-    addStringValToVargs(vargs, NAMENODE_NAME_DIR_ARG, namenodeNameDir);
-    addStringValToVargs(vargs, NAMENODE_EDITS_DIR_ARG, namenodeEditsDir);
-    for (Map.Entry<String, String> entry : originalShellEnv.entrySet()) {
-      vargs.add(
-          "--" + SHELL_ENV_ARG + " " + entry.getKey() + "=" + entry.getValue());
-    }
-  }
-
-  private void addStringValToVargs(List<String> vargs, String optionName,
-      String val) {
-    if (!val.isEmpty()) {
-      vargs.add("--" + optionName + " \\\"" + val + "\\\"");
-    }
-  }
-
-  int getDataNodeMemoryMB() {
-    return datanodeMemoryMB;
-  }
-
-  int getDataNodeVirtualCores() {
-    return datanodeVirtualCores;
-  }
-
-  String getDataNodeNodeLabelExpression() {
-    return datanodeNodeLabelExpression;
-  }
-
-  int getDataNodesPerCluster() {
-    return datanodesPerCluster;
-  }
-
-  long getDataNodeLaunchDelaySec() {
-    // Leverage the human-readable time parsing capabilities of Configuration
-    String tmpConfKey = "___temp_config_property___";
-    Configuration tmpConf = new Configuration();
-    tmpConf.set(tmpConfKey, datanodeLaunchDelay);
-    return tmpConf.getTimeDuration(tmpConfKey, 0, TimeUnit.SECONDS);
-  }
-
-  int getNameNodeMemoryMB() {
-    return namenodeMemoryMB;
-  }
-
-  int getNameNodeVirtualCores() {
-    return namenodeVirtualCores;
-  }
-
-  String getNameNodeNodeLabelExpression() {
-    return namenodeNodeLabelExpression;
-  }
-
-  Map<String, String> getShellEnv() {
-    return shellEnv;
-  }
-
-  /**
-   * Set all of the command line options relevant to this class into the passed
-   * {@link Options}.
-   *
-   * @param opts
-   *          Where to set the command line options.
-   */
-  static void setOptions(Options opts) {
-    opts.addOption(SHELL_ENV_ARG, true,
-        "Environment for shell script. Specified as env_key=env_val pairs");
-    opts.addOption(NAMENODE_MEMORY_MB_ARG, true,
-        "Amount of memory in MB to be requested to run the NN (default "
-            + NAMENODE_MEMORY_MB_DEFAULT + "). "
-            + "Ignored unless the NameNode is run within YARN.");
-    opts.addOption(NAMENODE_VCORES_ARG, true,
-        "Amount of virtual cores to be requested to run the NN (default "
-            + NAMENODE_VCORES_DEFAULT + "). "
-            + "Ignored unless the NameNode is run within YARN.");
-    opts.addOption(NAMENODE_ARGS_ARG, true,
-        "Additional arguments to add when starting the NameNode. "
-            + "Ignored unless the NameNode is run within YARN.");
-    opts.addOption(NAMENODE_NODELABEL_ARG, true,
-        "The node label to specify for the container to use to "
-            + "run the NameNode.");
-    opts.addOption(NAMENODE_METRICS_PERIOD_ARG, true,
-        "The period in seconds for the NameNode's metrics to be emitted to "
-            + "file; if <=0, disables this functionality. Otherwise, a "
-            + "metrics file will be stored in the container logs for the "
-            + "NameNode (default " + NAMENODE_METRICS_PERIOD_DEFAULT + ").");
-    opts.addOption(NAMENODE_NAME_DIR_ARG, true,
-        "The directory to use for the NameNode's name data directory. "
-            + "If not specified, a location  within the container's working "
-            + "directory will be used.");
-    opts.addOption(NAMENODE_EDITS_DIR_ARG, true,
-        "The directory to use for the NameNode's edits directory. "
-            + "If not specified, a location  within the container's working "
-            + "directory will be used.");
-    opts.addOption(DATANODE_MEMORY_MB_ARG, true,
-        "Amount of memory in MB to be requested to run the DNs (default "
-            + DATANODE_MEMORY_MB_DEFAULT + ")");
-    opts.addOption(DATANODE_VCORES_ARG, true,
-        "Amount of virtual cores to be requested to run the DNs (default "
-            + DATANODE_VCORES_DEFAULT + ")");
-    opts.addOption(DATANODE_ARGS_ARG, true,
-        "Additional arguments to add when starting the DataNodes.");
-    opts.addOption(DATANODE_NODELABEL_ARG, true, "The node label to specify "
-        + "for the container to use to run the DataNode.");
-    opts.addOption(DATANODES_PER_CLUSTER_ARG, true,
-        "How many simulated DataNodes to run within each YARN container "
-            + "(default " + DATANODES_PER_CLUSTER_DEFAULT + ")");
-    opts.addOption(DATANODE_LAUNCH_DELAY_ARG, true,
-        "The period over which to launch the DataNodes; this will "
-            + "be used as the maximum delay and each DataNode container will "
-            + "be launched with some random delay less than  this value. "
-            + "Accepts human-readable time durations (e.g. 10s, 1m) (default "
-            + DATANODE_LAUNCH_DELAY_DEFAULT + ")");
-
-    opts.addOption("help", false, "Print usage");
-  }
-
-  /**
-   * Initialize an {@code AMOptions} from a command line parser.
-   *
-   * @param cliParser
-   *          Where to initialize from.
-   * @return A new {@code AMOptions} filled out with options from the parser.
-   */
-  static AMOptions initFromParser(CommandLine cliParser) {
-    Map<String, String> originalShellEnv = new HashMap<>();
-    if (cliParser.hasOption(SHELL_ENV_ARG)) {
-      for (String env : cliParser.getOptionValues(SHELL_ENV_ARG)) {
-        String trimmed = env.trim();
-        int index = trimmed.indexOf('=');
-        if (index == -1) {
-          originalShellEnv.put(trimmed, "");
-          continue;
-        }
-        String key = trimmed.substring(0, index);
-        String val = "";
-        if (index < (trimmed.length() - 1)) {
-          val = trimmed.substring(index + 1);
-        }
-        originalShellEnv.put(key, val);
-      }
-    }
-    return new AMOptions(
-        Integer.parseInt(cliParser.getOptionValue(DATANODE_MEMORY_MB_ARG,
-            DATANODE_MEMORY_MB_DEFAULT)),
-        Integer.parseInt(cliParser.getOptionValue(DATANODE_VCORES_ARG,
-            DATANODE_VCORES_DEFAULT)),
-        cliParser.getOptionValue(DATANODE_ARGS_ARG, ""),
-        cliParser.getOptionValue(DATANODE_NODELABEL_ARG, ""),
-        Integer.parseInt(cliParser.getOptionValue(DATANODES_PER_CLUSTER_ARG,
-            DATANODES_PER_CLUSTER_DEFAULT)),
-        cliParser.getOptionValue(DATANODE_LAUNCH_DELAY_ARG,
-            DATANODE_LAUNCH_DELAY_DEFAULT),
-        Integer.parseInt(cliParser.getOptionValue(NAMENODE_MEMORY_MB_ARG,
-            NAMENODE_MEMORY_MB_DEFAULT)),
-        Integer.parseInt(cliParser.getOptionValue(NAMENODE_VCORES_ARG,
-            NAMENODE_VCORES_DEFAULT)),
-        cliParser.getOptionValue(NAMENODE_ARGS_ARG, ""),
-        cliParser.getOptionValue(NAMENODE_NODELABEL_ARG, ""),
-        Integer.parseInt(cliParser.getOptionValue(NAMENODE_METRICS_PERIOD_ARG,
-            NAMENODE_METRICS_PERIOD_DEFAULT)),
-        cliParser.getOptionValue(NAMENODE_NAME_DIR_ARG, ""),
-        cliParser.getOptionValue(NAMENODE_EDITS_DIR_ARG, ""), originalShellEnv);
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AllowAllImpersonationProvider.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AllowAllImpersonationProvider.java
deleted file mode 100644
index 14f52ac2b28..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AllowAllImpersonationProvider.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import java.net.InetAddress;
-
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.authorize.ImpersonationProvider;
-
-/**
- * An {@link ImpersonationProvider} that indiscriminately allows all users to
- * proxy as any other user.
- */
-public class AllowAllImpersonationProvider extends Configured
-    implements ImpersonationProvider {
-
-  public void init(String configurationPrefix) {
-    // Do nothing
-  }
-
-  public void authorize(UserGroupInformation user, InetAddress remoteAddress) {
-    // Do nothing
-  }
-
-  // Although this API was removed from the interface by HADOOP-17367, we need
-  // to keep it here because TestDynamometerInfra uses an old hadoop binary.
-  public void authorize(UserGroupInformation user, String remoteAddress) {
-    // Do nothing
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java
deleted file mode 100644
index e44f811f0db..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java
+++ /dev/null
@@ -1,889 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import org.apache.hadoop.thirdparty.com.google.common.base.Joiner;
-import org.apache.hadoop.util.Lists;
-import org.apache.hadoop.thirdparty.com.google.common.primitives.Ints;
-import java.io.IOException;
-import java.nio.ByteBuffer;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-import java.util.Optional;
-import java.util.Properties;
-import java.util.Random;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ConcurrentMap;
-import java.util.concurrent.atomic.AtomicInteger;
-
-import java.util.function.Supplier;
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.GnuParser;
-import org.apache.commons.cli.HelpFormatter;
-import org.apache.commons.cli.Options;
-import org.apache.commons.cli.ParseException;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.FileStatus;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.io.DataOutputBuffer;
-import org.apache.hadoop.net.NetUtils;
-import org.apache.hadoop.security.Credentials;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.yarn.api.ApplicationConstants;
-import org.apache.hadoop.yarn.api.ApplicationConstants.Environment;
-import org.apache.hadoop.yarn.api.ContainerManagementProtocol;
-import org.apache.hadoop.yarn.api.records.ApplicationAccessType;
-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerLaunchContext;
-import org.apache.hadoop.yarn.api.records.ContainerState;
-import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.api.records.FinalApplicationStatus;
-import org.apache.hadoop.yarn.api.records.LocalResource;
-import org.apache.hadoop.yarn.api.records.LocalResourceType;
-import org.apache.hadoop.yarn.api.records.LocalResourceVisibility;
-import org.apache.hadoop.yarn.api.records.NodeReport;
-import org.apache.hadoop.yarn.api.records.Priority;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.URL;
-import org.apache.hadoop.yarn.api.records.UpdatedContainer;
-import org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest;
-import org.apache.hadoop.yarn.client.api.async.AMRMClientAsync;
-import org.apache.hadoop.yarn.client.api.async.NMClientAsync;
-import org.apache.hadoop.yarn.client.api.async.impl.NMClientAsyncImpl;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.security.AMRMTokenIdentifier;
-import org.apache.hadoop.yarn.util.Records;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-
-/**
- * The ApplicationMaster for Dynamometer. This will launch DataNodes in YARN
- * containers. If the RPC address of a NameNode is specified, it will configure
- * the DataNodes to talk to that NameNode. Else, a NameNode will be launched as
- * part of this YARN application. This does not implement any retry/failure
- * handling.
- * TODO: Add proper retry/failure handling
- * <p>
- * The AM will persist until it has run for a period of time equal to the
- * timeout specified or until the application is killed.
- * <p>
- * If the NameNode is launched internally, it will upload some information
- * onto the remote HDFS instance (i.e., the default FileSystem) about its
- * hostname and ports. This is in the location determined by the
- * {@link DynoConstants#DYNAMOMETER_STORAGE_DIR} and
- * {@link DynoConstants#NN_INFO_FILE_NAME} constants and is in the
- * {@link Properties} file format. This is consumed by this AM as well as the
- * {@link Client} to determine how to contact the NameNode.
- * <p>
- * Information about the location of the DataNodes is logged by the AM.
- */
-@InterfaceAudience.Public
-@InterfaceStability.Unstable
-public class ApplicationMaster {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(ApplicationMaster.class);
-  private static final Random RAND = new Random();
-
-  // Configuration
-  private Configuration conf;
-
-  // Handle to communicate with the Resource Manager
-  private AMRMClientAsync<ContainerRequest> amRMClient;
-
-  // Handle to communicate with the Node Manager
-  private NMClientAsync nmClientAsync;
-  // Listen to process the response from the Node Manager
-  private NMCallbackHandler containerListener;
-  // The collection of options passed in via the Client
-  private AMOptions amOptions;
-
-  private List<LocalResource> blockListFiles;
-  private int numTotalDataNodes;
-  private int numTotalDataNodeContainers;
-
-  // Counter for completed datanodes (complete denotes successful or failed )
-  private AtomicInteger numCompletedDataNodeContainers = new AtomicInteger();
-  // Allocated datanode count so that we know how many datanodes has the RM
-  // allocated to us
-  private AtomicInteger numAllocatedDataNodeContainers = new AtomicInteger();
-  // Count of failed datanodes
-  private AtomicInteger numFailedDataNodeContainers = new AtomicInteger();
-
-  // True iff the application has completed and is ready for cleanup
-  // Once true, will never be false. This variable should not be accessed
-  // directly but rather through the isComplete, waitForCompletion, and
-  // markCompleted methods.
-  private boolean completed = false;
-  private final Object completionLock = new Object();
-
-  private ByteBuffer allTokens;
-
-  // Launch threads
-  private List<Thread> launchThreads = new ArrayList<>();
-
-  // True iff this AM should launch and manage a Namanode
-  private boolean launchNameNode;
-  // The service RPC address of a remote NameNode to be contacted by the
-  // launched DataNodes
-  private String namenodeServiceRpcAddress = "";
-  // Directory to use for remote storage (a location on the remote FS which
-  // can be accessed by all components)
-  private Path remoteStoragePath;
-  // The ACLs to view the launched containers
-  private Map<ApplicationAccessType, String> applicationAcls;
-  // The container the NameNode is running within
-  private volatile Container namenodeContainer;
-  // Map of the containers that the DataNodes are running within
-  private ConcurrentMap<ContainerId, Container> datanodeContainers =
-      new ConcurrentHashMap<>();
-
-  // Username of the user who launched this application.
-  private String launchingUser;
-
-  /**
-   * @param args Command line args
-   */
-  public static void main(String[] args) {
-    boolean result = false;
-    try {
-      ApplicationMaster appMaster = new ApplicationMaster();
-      LOG.info("Initializing ApplicationMaster");
-      boolean doRun = appMaster.init(args);
-      if (!doRun) {
-        System.exit(0);
-      }
-      result = appMaster.run();
-    } catch (Throwable t) {
-      LOG.error("Error running ApplicationMaster", t);
-      System.exit(1);
-    }
-    if (result) {
-      LOG.info("Application Master completed successfully. exiting");
-      System.exit(0);
-    } else {
-      LOG.info("Application Master failed. exiting");
-      System.exit(2);
-    }
-  }
-
-  public ApplicationMaster() {
-    // Set up the configuration
-    conf = new YarnConfiguration();
-  }
-
-  /**
-   * Parse command line options.
-   *
-   * @param args Command line args
-   * @return Whether init successful and run should be invoked
-   * @throws ParseException on error while parsing options
-   */
-  public boolean init(String[] args) throws ParseException {
-
-    Options opts = new Options();
-    AMOptions.setOptions(opts);
-    CommandLine cliParser = new GnuParser().parse(opts, args);
-
-    if (args.length == 0) {
-      printUsage(opts);
-      throw new IllegalArgumentException(
-          "No args specified for application master to initialize");
-    }
-
-    if (cliParser.hasOption("help")) {
-      printUsage(opts);
-      return false;
-    }
-
-    Map<String, String> envs = System.getenv();
-
-    remoteStoragePath = new Path(
-        envs.get(DynoConstants.REMOTE_STORAGE_PATH_ENV));
-    applicationAcls = new HashMap<>();
-    applicationAcls.put(ApplicationAccessType.VIEW_APP,
-        envs.get(DynoConstants.JOB_ACL_VIEW_ENV));
-    launchingUser = envs.get(Environment.USER.name());
-    if (envs.containsKey(DynoConstants.REMOTE_NN_RPC_ADDR_ENV)) {
-      launchNameNode = false;
-      namenodeServiceRpcAddress = envs
-          .get(DynoConstants.REMOTE_NN_RPC_ADDR_ENV);
-    } else {
-      launchNameNode = true;
-      // namenodeServiceRpcAddress will be set in run() once properties are
-      // available
-    }
-
-    ContainerId containerId =
-        ContainerId.fromString(envs.get(Environment.CONTAINER_ID.name()));
-    ApplicationAttemptId appAttemptID = containerId.getApplicationAttemptId();
-    LOG.info("Application master for app: appId={}, clusterTimestamp={}, "
-        + "attemptId={}", appAttemptID.getApplicationId().getId(),
-        appAttemptID.getApplicationId().getClusterTimestamp(),
-        appAttemptID.getAttemptId());
-
-    amOptions = AMOptions.initFromParser(cliParser);
-
-    return true;
-  }
-
-  /**
-   * Helper function to print usage.
-   *
-   * @param opts arsed command line options
-   */
-  private void printUsage(Options opts) {
-    new HelpFormatter().printHelp("ApplicationMaster", opts);
-  }
-
-  /**
-   * Main run function for the application master.
-   *
-   * @return True if the application completed successfully; false if if exited
-   *         unexpectedly, failed, was killed, etc.
-   * @throws YarnException for issues while contacting YARN daemons
-   * @throws IOException for other issues
-   * @throws InterruptedException when the thread is interrupted
-   */
-  public boolean run() throws YarnException, IOException, InterruptedException {
-    LOG.info("Starting ApplicationMaster");
-
-    Credentials credentials = UserGroupInformation.getCurrentUser()
-        .getCredentials();
-    DataOutputBuffer dob = new DataOutputBuffer();
-    credentials.writeTokenStorageToStream(dob);
-    // Now remove the AM->RM token so that containers cannot access it.
-    credentials.getAllTokens().removeIf((token) ->
-            token.getKind().equals(AMRMTokenIdentifier.KIND_NAME));
-    allTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());
-
-    AMRMClientAsync.AbstractCallbackHandler allocListener =
-        new RMCallbackHandler();
-    amRMClient = AMRMClientAsync.createAMRMClientAsync(1000, allocListener);
-    amRMClient.init(conf);
-    amRMClient.start();
-
-    containerListener = createNMCallbackHandler();
-    nmClientAsync = new NMClientAsyncImpl(containerListener);
-    nmClientAsync.init(conf);
-    nmClientAsync.start();
-
-    // Register self with ResourceManager
-    // This will start heartbeating to the RM
-    String appMasterHostname = NetUtils.getHostname();
-    amRMClient.registerApplicationMaster(appMasterHostname, -1, "");
-
-    // Supplier to use to indicate to wait-loops to stop waiting
-    Supplier<Boolean> exitCritera = this::isComplete;
-
-    Optional<Properties> namenodeProperties = Optional.empty();
-    if (launchNameNode) {
-      ContainerRequest nnContainerRequest = setupContainerAskForRM(
-          amOptions.getNameNodeMemoryMB(), amOptions.getNameNodeVirtualCores(),
-          0, amOptions.getNameNodeNodeLabelExpression());
-      LOG.info("Requested NameNode ask: " + nnContainerRequest.toString());
-      amRMClient.addContainerRequest(nnContainerRequest);
-
-      // Wait for the NN container to make its information available on the
-      // shared
-      // remote file storage
-      Path namenodeInfoPath = new Path(remoteStoragePath,
-          DynoConstants.NN_INFO_FILE_NAME);
-      LOG.info("Waiting on availability of NameNode information at "
-          + namenodeInfoPath);
-
-      namenodeProperties = DynoInfraUtils.waitForAndGetNameNodeProperties(
-          exitCritera, conf, namenodeInfoPath, LOG);
-      if (!namenodeProperties.isPresent()) {
-        cleanup();
-        return false;
-      }
-      namenodeServiceRpcAddress = DynoInfraUtils
-          .getNameNodeServiceRpcAddr(namenodeProperties.get()).toString();
-      LOG.info("NameNode information: " + namenodeProperties.get());
-      LOG.info("NameNode can be reached at: " + DynoInfraUtils
-          .getNameNodeHdfsUri(namenodeProperties.get()).toString());
-      DynoInfraUtils.waitForNameNodeStartup(namenodeProperties.get(),
-          exitCritera, LOG);
-    } else {
-      LOG.info("Using remote NameNode with RPC address: "
-          + namenodeServiceRpcAddress);
-    }
-
-    blockListFiles = Collections
-        .synchronizedList(getDataNodeBlockListingFiles());
-    numTotalDataNodes = blockListFiles.size();
-    if (numTotalDataNodes == 0) {
-      LOG.error(
-          "No block listing files were found! Cannot run with 0 DataNodes.");
-      markCompleted();
-      return false;
-    }
-    numTotalDataNodeContainers = (int) Math.ceil(((double) numTotalDataNodes)
-        / Math.max(1, amOptions.getDataNodesPerCluster()));
-
-    LOG.info("Requesting {} DataNode containers with {} MB memory, {} vcores",
-        numTotalDataNodeContainers, amOptions.getDataNodeMemoryMB(),
-        amOptions.getDataNodeVirtualCores());
-    for (int i = 0; i < numTotalDataNodeContainers; ++i) {
-      ContainerRequest datanodeAsk = setupContainerAskForRM(
-          amOptions.getDataNodeMemoryMB(), amOptions.getDataNodeVirtualCores(),
-          1, amOptions.getDataNodeNodeLabelExpression());
-      amRMClient.addContainerRequest(datanodeAsk);
-      LOG.debug("Requested datanode ask: " + datanodeAsk.toString());
-    }
-    LOG.info("Finished requesting datanode containers");
-
-    if (launchNameNode) {
-      DynoInfraUtils.waitForNameNodeReadiness(namenodeProperties.get(),
-          numTotalDataNodes, true, exitCritera, conf, LOG);
-    }
-
-    waitForCompletion();
-    return cleanup();
-  }
-
-  private NMCallbackHandler createNMCallbackHandler() {
-    return new NMCallbackHandler();
-  }
-
-  /**
-   * Wait until the application has finished and is ready for cleanup.
-   */
-  private void waitForCompletion() throws InterruptedException {
-    synchronized (completionLock) {
-      while (!completed) {
-        completionLock.wait();
-      }
-    }
-  }
-
-  /**
-   * Check completion status of the application.
-   *
-   * @return True iff it has completed.
-   */
-  private boolean isComplete() {
-    synchronized (completionLock) {
-      return completed;
-    }
-  }
-
-  /**
-   * Mark that this application should begin cleaning up and exit.
-   */
-  private void markCompleted() {
-    synchronized (completionLock) {
-      completed = true;
-      completionLock.notify();
-    }
-  }
-
-  /**
-   * @return True iff the application successfully completed
-   */
-  private boolean cleanup() {
-    // Join all launched threads
-    // needed for when we time out
-    // and we need to release containers
-    for (Thread launchThread : launchThreads) {
-      try {
-        launchThread.join(10000);
-      } catch (InterruptedException e) {
-        LOG.info("Exception thrown in thread join: " + e.getMessage());
-        e.printStackTrace();
-      }
-    }
-
-    // When the application completes, it should stop all running containers
-    LOG.info("Application completed. Stopping running containers");
-    nmClientAsync.stop();
-
-    // When the application completes, it should send a finish application
-    // signal to the RM
-    LOG.info("Application completed. Signalling finish to RM");
-
-    FinalApplicationStatus appStatus;
-    String appMessage = null;
-    boolean success;
-    if (numFailedDataNodeContainers.get() == 0
-        && numCompletedDataNodeContainers.get() == numTotalDataNodes) {
-      appStatus = FinalApplicationStatus.SUCCEEDED;
-      success = true;
-    } else {
-      appStatus = FinalApplicationStatus.FAILED;
-      appMessage = "Diagnostics: total=" + numTotalDataNodeContainers
-          + ", completed=" + numCompletedDataNodeContainers.get()
-          + ", allocated=" + numAllocatedDataNodeContainers.get()
-          + ", failed=" + numFailedDataNodeContainers.get();
-      success = false;
-    }
-    try {
-      amRMClient.unregisterApplicationMaster(appStatus, appMessage, null);
-    } catch (YarnException|IOException ex) {
-      LOG.error("Failed to unregister application", ex);
-    }
-
-    amRMClient.stop();
-    return success;
-  }
-
-  private class RMCallbackHandler
-      extends AMRMClientAsync.AbstractCallbackHandler {
-
-    @Override
-    public void onContainersCompleted(
-        List<ContainerStatus> completedContainers) {
-      LOG.info("Got response from RM for container ask, completedCnt="
-          + completedContainers.size());
-      for (ContainerStatus containerStatus : completedContainers) {
-        String containerInfo = "containerID=" + containerStatus.getContainerId()
-            + ", state=" + containerStatus.getState() + ", exitStatus="
-            + containerStatus.getExitStatus() + ", diagnostics="
-            + StringUtils.abbreviate(containerStatus.getDiagnostics(), 1000);
-        String component;
-        if (isNameNode(containerStatus.getContainerId())) {
-          component = "NAMENODE";
-        } else if (isDataNode(containerStatus.getContainerId())) {
-          component = "DATANODE";
-        } else {
-          LOG.error("Received container status for unknown container: "
-              + containerInfo);
-          continue;
-        }
-        LOG.info(
-            "Got container status for " + component + ": " + containerInfo);
-
-        // non complete containers should not be here
-        assert (containerStatus.getState() == ContainerState.COMPLETE);
-
-        if (component.equals("NAMENODE")) {
-          LOG.info("NameNode container completed; marking application as done");
-          markCompleted();
-        }
-
-        // increment counters for completed/failed containers
-        int exitStatus = containerStatus.getExitStatus();
-        int completedIdx = numCompletedDataNodeContainers.incrementAndGet();
-        if (0 != exitStatus) {
-          numFailedDataNodeContainers.incrementAndGet();
-        } else {
-          LOG.info("DataNode {} completed successfully, containerId={}",
-              completedIdx, containerStatus.getContainerId());
-        }
-      }
-
-      if (numCompletedDataNodeContainers.get() == numTotalDataNodeContainers) {
-        LOG.info(
-            "All datanode containers completed; marking application as done");
-        markCompleted();
-      }
-    }
-
-    @Override
-    public void onContainersAllocated(List<Container> allocatedContainers) {
-      LOG.info("Got response from RM for container ask, allocatedCnt="
-          + allocatedContainers.size());
-      for (Container container : allocatedContainers) {
-        LaunchContainerRunnable containerLauncher;
-        String componentType;
-        Resource rsrc = container.getResource();
-        if (launchNameNode
-            && rsrc.getMemorySize() >= amOptions.getNameNodeMemoryMB()
-            && rsrc.getVirtualCores() >= amOptions.getNameNodeVirtualCores()
-            && namenodeContainer == null) {
-          namenodeContainer = container;
-          componentType = "NAMENODE";
-          containerLauncher = new LaunchContainerRunnable(container, true);
-        } else if (rsrc.getMemorySize() >= amOptions.getDataNodeMemoryMB()
-            && rsrc.getVirtualCores() >= amOptions.getDataNodeVirtualCores()
-            && numAllocatedDataNodeContainers.get() < numTotalDataNodes) {
-          if (launchNameNode && namenodeContainer == null) {
-            LOG.error("Received a container with following resources suited "
-                + "for a DataNode but no NameNode container exists: "
-                + "containerMem=" + rsrc.getMemorySize() + ", containerVcores="
-                + rsrc.getVirtualCores());
-            continue;
-          }
-          numAllocatedDataNodeContainers.getAndIncrement();
-          datanodeContainers.put(container.getId(), container);
-          componentType = "DATANODE";
-          containerLauncher = new LaunchContainerRunnable(container, false);
-        } else {
-          LOG.warn("Received unwanted container allocation: " + container);
-          nmClientAsync.stopContainerAsync(container.getId(),
-              container.getNodeId());
-          continue;
-        }
-        LOG.info("Launching " + componentType + " on a new container."
-            + ", containerId=" + container.getId() + ", containerNode="
-            + container.getNodeId().getHost() + ":"
-            + container.getNodeId().getPort() + ", containerNodeURI="
-            + container.getNodeHttpAddress() + ", containerResourceMemory="
-            + rsrc.getMemorySize() + ", containerResourceVirtualCores="
-            + rsrc.getVirtualCores());
-        Thread launchThread = new Thread(containerLauncher);
-
-        // launch and start the container on a separate thread to keep
-        // the main thread unblocked
-        // as all containers may not be allocated at one go.
-        launchThreads.add(launchThread);
-        launchThread.start();
-      }
-    }
-
-    @Override
-    public void onShutdownRequest() {
-      markCompleted();
-    }
-
-    @Override
-    public void onNodesUpdated(List<NodeReport> updatedNodes) {
-      LOG.info("onNodesUpdated: " + Joiner.on(",").join(updatedNodes));
-    }
-
-    @Override
-    public float getProgress() {
-      return 0.0f;
-    }
-
-    @Override
-    public void onError(Throwable e) {
-      markCompleted();
-      amRMClient.stop();
-    }
-
-    @Override
-    public void onContainersUpdated(List<UpdatedContainer> containers) {
-      LOG.info("onContainersUpdated: " + Joiner.on(",").join(containers));
-    }
-  }
-
-  private class NMCallbackHandler
-      extends NMClientAsync.AbstractCallbackHandler {
-
-    @Override
-    public void onContainerStopped(ContainerId containerId) {
-      if (isNameNode(containerId)) {
-        LOG.info("NameNode container stopped: " + containerId);
-        namenodeContainer = null;
-        markCompleted();
-      } else if (isDataNode(containerId)) {
-        LOG.debug("DataNode container stopped: " + containerId);
-        datanodeContainers.remove(containerId);
-      } else {
-        LOG.error(
-            "onContainerStopped received unknown container ID: " + containerId);
-      }
-    }
-
-    @Override
-    public void onContainerStatusReceived(ContainerId containerId,
-        ContainerStatus containerStatus) {
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Container Status: id=" + containerId + ", status="
-            + containerStatus);
-      }
-    }
-
-    @Override
-    public void onContainerStarted(ContainerId containerId,
-        Map<String, ByteBuffer> allServiceResponse) {
-      if (isNameNode(containerId)) {
-        LOG.info("NameNode container started at ID " + containerId);
-      } else if (isDataNode(containerId)) {
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Succeeded to start DataNode Container " + containerId);
-        }
-        nmClientAsync.getContainerStatusAsync(containerId,
-            datanodeContainers.get(containerId).getNodeId());
-      } else {
-        LOG.error(
-            "onContainerStarted received unknown container ID: " + containerId);
-      }
-    }
-
-    @Override
-    public void onStartContainerError(ContainerId containerId, Throwable t) {
-      if (isNameNode(containerId)) {
-        LOG.error("Failed to start namenode container ID " + containerId, t);
-        namenodeContainer = null;
-        markCompleted();
-      } else if (isDataNode(containerId)) {
-        LOG.error("Failed to start DataNode Container " + containerId);
-        datanodeContainers.remove(containerId);
-        numCompletedDataNodeContainers.incrementAndGet();
-        numFailedDataNodeContainers.incrementAndGet();
-      } else {
-        LOG.error("onStartContainerError received unknown container ID: "
-            + containerId);
-      }
-    }
-
-    @Override
-    public void onGetContainerStatusError(ContainerId containerId,
-        Throwable t) {
-      LOG.error("Failed to query the status of Container " + containerId);
-    }
-
-    @Override
-    public void onStopContainerError(ContainerId containerId, Throwable t) {
-      if (isNameNode(containerId)) {
-        LOG.error("Failed to stop NameNode container ID " + containerId);
-        namenodeContainer = null;
-      } else if (isDataNode(containerId)) {
-        LOG.error("Failed to stop DataNode Container " + containerId);
-        datanodeContainers.remove(containerId);
-      } else {
-        LOG.error("onStopContainerError received unknown containerID: "
-            + containerId);
-      }
-    }
-
-    @Override
-    @Deprecated
-    public void onContainerResourceIncreased(ContainerId containerId,
-        Resource resource) {
-      LOG.info("onContainerResourceIncreased: {}, {}", containerId, resource);
-    }
-
-    @Override
-    public void onContainerResourceUpdated(ContainerId containerId,
-        Resource resource) {
-      LOG.info("onContainerResourceUpdated: {}, {}", containerId, resource);
-    }
-
-    @Override
-    @Deprecated
-    public void onIncreaseContainerResourceError(ContainerId containerId,
-        Throwable t) {
-      LOG.info("onIncreaseContainerResourceError: {}", containerId, t);
-    }
-
-    @Override
-    public void onUpdateContainerResourceError(ContainerId containerId,
-        Throwable t) {
-      LOG.info("onUpdateContainerResourceError: {}", containerId, t);
-    }
-  }
-
-  /**
-   * Thread to connect to the {@link ContainerManagementProtocol} and launch the
-   * container that will execute the shell command.
-   */
-  private class LaunchContainerRunnable implements Runnable {
-
-    // Allocated container
-    private Container container;
-    private boolean isNameNodeLauncher;
-
-    /**
-     * @param lcontainer Allocated container
-     * @param isNameNode True iff this should launch a NameNode
-     */
-    LaunchContainerRunnable(Container lcontainer, boolean isNameNode) {
-      this.container = lcontainer;
-      this.isNameNodeLauncher = isNameNode;
-    }
-
-    /**
-     * Get the map of local resources to be used for launching this container.
-     */
-    private Map<String, LocalResource> getLocalResources() {
-      Map<String, LocalResource> localResources = new HashMap<>();
-
-      Map<String, String> envs = System.getenv();
-      addAsLocalResourceFromEnv(DynoConstants.CONF_ZIP, localResources, envs);
-      addAsLocalResourceFromEnv(DynoConstants.START_SCRIPT, localResources,
-          envs);
-      addAsLocalResourceFromEnv(DynoConstants.HADOOP_BINARY, localResources,
-          envs);
-      addAsLocalResourceFromEnv(DynoConstants.VERSION, localResources, envs);
-      addAsLocalResourceFromEnv(DynoConstants.DYNO_DEPENDENCIES, localResources,
-          envs);
-      if (isNameNodeLauncher) {
-        addAsLocalResourceFromEnv(DynoConstants.FS_IMAGE, localResources, envs);
-        addAsLocalResourceFromEnv(DynoConstants.FS_IMAGE_MD5, localResources,
-            envs);
-      } else {
-        int blockFilesToLocalize = Math.max(1,
-            amOptions.getDataNodesPerCluster());
-        for (int i = 0; i < blockFilesToLocalize; i++) {
-          try {
-            localResources.put(
-                DynoConstants.BLOCK_LIST_RESOURCE_PATH_PREFIX + i,
-                blockListFiles.remove(0));
-          } catch (IndexOutOfBoundsException e) {
-            break;
-          }
-        }
-      }
-      return localResources;
-    }
-
-    /**
-     * Connects to CM, sets up container launch context for shell command and
-     * eventually dispatches the container start request to the CM.
-     */
-    @Override
-    public void run() {
-      LOG.info("Setting up container launch context for containerid="
-          + container.getId() + ", isNameNode=" + isNameNodeLauncher);
-      ContainerLaunchContext ctx = Records
-          .newRecord(ContainerLaunchContext.class);
-
-      // Set the environment
-      ctx.setEnvironment(amOptions.getShellEnv());
-      ctx.setApplicationACLs(applicationAcls);
-
-      try {
-        ctx.setLocalResources(getLocalResources());
-
-        ctx.setCommands(getContainerStartCommand());
-      } catch (IOException e) {
-        LOG.error("Error while configuring container!", e);
-        return;
-      }
-
-      // Set up tokens for the container
-      ctx.setTokens(allTokens.duplicate());
-
-      nmClientAsync.startContainerAsync(container, ctx);
-      LOG.info("Starting {}; track at: http://{}/node/containerlogs/{}/{}/",
-          isNameNodeLauncher ? "NAMENODE" : "DATANODE",
-          container.getNodeHttpAddress(), container.getId(), launchingUser);
-    }
-
-    /**
-     * Return the command used to start this container.
-     */
-    private List<String> getContainerStartCommand() throws IOException {
-      // Set the necessary command to execute on the allocated container
-      List<String> vargs = new ArrayList<>();
-
-      // Set executable command
-      vargs.add("./" + DynoConstants.START_SCRIPT.getResourcePath());
-      String component = isNameNodeLauncher ? "namenode" : "datanode";
-      vargs.add(component);
-      if (isNameNodeLauncher) {
-        vargs.add(remoteStoragePath.getFileSystem(conf)
-            .makeQualified(remoteStoragePath).toString());
-      } else {
-        vargs.add(namenodeServiceRpcAddress);
-        vargs.add(String.valueOf(amOptions.getDataNodeLaunchDelaySec() < 1 ? 0
-            : RAND.nextInt(
-                Ints.checkedCast(amOptions.getDataNodeLaunchDelaySec()))));
-      }
-
-      // Add log redirect params
-      vargs.add("1>" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + "/stdout");
-      vargs.add("2>" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + "/stderr");
-
-      LOG.info("Completed setting up command for " + component + ": " + vargs);
-      return Lists.newArrayList(Joiner.on(" ").join(vargs));
-    }
-
-    /**
-     * Add the given resource into the map of resources, using information from
-     * the supplied environment variables.
-     *
-     * @param resource The resource to add.
-     * @param localResources Map of local resources to insert into.
-     * @param env Map of environment variables.
-     */
-    public void addAsLocalResourceFromEnv(DynoResource resource,
-        Map<String, LocalResource> localResources, Map<String, String> env) {
-      LOG.debug("Adding resource to localResources: " + resource);
-      String resourcePath = resource.getResourcePath();
-      if (resourcePath == null) {
-        // Default to using the file name in the path
-        resourcePath = resource.getPath(env).getName();
-      }
-      localResources.put(resourcePath,
-          LocalResource.newInstance(URL.fromPath(resource.getPath(env)),
-              resource.getType(), LocalResourceVisibility.APPLICATION,
-              resource.getLength(env), resource.getTimestamp(env)));
-    }
-  }
-
-  private List<LocalResource> getDataNodeBlockListingFiles()
-      throws IOException {
-    Path blockListDirPath = new Path(
-        System.getenv().get(DynoConstants.BLOCK_LIST_PATH_ENV));
-    LOG.info("Looking for block listing files in " + blockListDirPath);
-    FileSystem blockZipFS = blockListDirPath.getFileSystem(conf);
-    List<LocalResource> files = new LinkedList<>();
-    for (FileStatus stat : blockZipFS.listStatus(blockListDirPath,
-        DynoConstants.BLOCK_LIST_FILE_FILTER)) {
-      LocalResource blockListResource = LocalResource.newInstance(
-          URL.fromPath(stat.getPath()),
-          LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,
-          stat.getLen(), stat.getModificationTime());
-      files.add(blockListResource);
-    }
-    return files;
-  }
-
-  /**
-   * Return true iff {@code containerId} represents the NameNode container.
-   */
-  private boolean isNameNode(ContainerId containerId) {
-    return namenodeContainer != null
-        && namenodeContainer.getId().equals(containerId);
-  }
-
-  /**
-   * Return true iff {@code containerId} represents a DataNode container.
-   */
-  private boolean isDataNode(ContainerId containerId) {
-    return datanodeContainers.containsKey(containerId);
-  }
-
-  /**
-   * Setup the request that will be sent to the RM for the container ask.
-   *
-   * @return the setup ResourceRequest to be sent to RM
-   */
-  private ContainerRequest setupContainerAskForRM(int memory, int vcores,
-      int priority, String nodeLabel) {
-    Priority pri = Records.newRecord(Priority.class);
-    pri.setPriority(priority);
-
-    // Set up resource type requirements
-    // For now, memory and CPU are supported so we set memory and cpu
-    // requirements
-    Resource capability = Records.newRecord(Resource.class);
-    capability.setMemorySize(memory);
-    capability.setVirtualCores(vcores);
-
-    return new ContainerRequest(capability, null, null, pri, true, nodeLabel);
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/BlockPlacementPolicyAlwaysSatisfied.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/BlockPlacementPolicyAlwaysSatisfied.java
deleted file mode 100644
index de12aec4137..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/BlockPlacementPolicyAlwaysSatisfied.java
+++ /dev/null
@@ -1,58 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import org.apache.hadoop.hdfs.protocol.DatanodeInfo;
-import org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault;
-import org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementStatus;
-
-/**
- * A BlockPlacementPolicy which always considered itself satisfied. This avoids
- * the issue that the Dynamometer NameNode will complain about blocks being
- * under-replicated because they're not being put on distinct racks.
- */
-public class BlockPlacementPolicyAlwaysSatisfied
-    extends BlockPlacementPolicyDefault {
-
-  private static final BlockPlacementStatusSatisfied SATISFIED =
-      new BlockPlacementStatusSatisfied();
-
-  private static class BlockPlacementStatusSatisfied
-      implements BlockPlacementStatus {
-    @Override
-    public boolean isPlacementPolicySatisfied() {
-      return true;
-    }
-
-    public String getErrorDescription() {
-      return null;
-    }
-
-    @Override
-    public int getAdditionalReplicasRequired() {
-      return 0;
-    }
-  }
-
-  @Override
-  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,
-      int numberOfReplicas) {
-    return SATISFIED;
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/Client.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/Client.java
deleted file mode 100644
index 0c57542747e..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/Client.java
+++ /dev/null
@@ -1,1134 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import org.apache.hadoop.classification.VisibleForTesting;
-import org.apache.hadoop.thirdparty.com.google.common.base.Joiner;
-import org.apache.hadoop.util.Preconditions;
-import org.apache.hadoop.thirdparty.com.google.common.base.Splitter;
-import org.apache.hadoop.util.Lists;
-import java.util.Optional;
-import java.util.function.Supplier;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.WorkloadDriver;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.URI;
-import java.net.URL;
-import java.nio.ByteBuffer;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Properties;
-import java.util.Set;
-import java.util.concurrent.TimeUnit;
-import java.util.stream.Collectors;
-import java.util.zip.ZipEntry;
-import java.util.zip.ZipOutputStream;
-
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.CommandLineParser;
-import org.apache.commons.cli.GnuParser;
-import org.apache.commons.cli.HelpFormatter;
-import org.apache.commons.cli.Option;
-import org.apache.commons.cli.OptionGroup;
-import org.apache.commons.cli.Options;
-import org.apache.commons.cli.ParseException;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.fs.FileStatus;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.io.DataOutputBuffer;
-import org.apache.hadoop.io.IOUtils;
-import org.apache.hadoop.mapreduce.Job;
-import org.apache.hadoop.mapreduce.JobStatus;
-import org.apache.hadoop.mapreduce.MRJobConfig;
-import org.apache.hadoop.security.Credentials;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.token.Token;
-import org.apache.hadoop.util.ClassUtil;
-import org.apache.hadoop.util.Tool;
-import org.apache.hadoop.util.ToolRunner;
-import org.apache.hadoop.yarn.api.ApplicationConstants;
-import org.apache.hadoop.yarn.api.ApplicationConstants.Environment;
-import org.apache.hadoop.yarn.api.protocolrecords.GetNewApplicationResponse;
-import org.apache.hadoop.yarn.api.records.ApplicationAccessType;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.ApplicationReport;
-import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
-import org.apache.hadoop.yarn.api.records.ContainerLaunchContext;
-import org.apache.hadoop.yarn.api.records.LocalResource;
-import org.apache.hadoop.yarn.api.records.LocalResourceType;
-import org.apache.hadoop.yarn.api.records.LocalResourceVisibility;
-import org.apache.hadoop.yarn.api.records.QueueInfo;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.YarnApplicationState;
-import org.apache.hadoop.yarn.api.records.YarnClusterMetrics;
-import org.apache.hadoop.yarn.client.api.YarnClient;
-import org.apache.hadoop.yarn.client.api.YarnClientApplication;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.util.Apps;
-import org.apache.hadoop.yarn.util.Records;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-
-/**
- * Client for submitting a Dynamometer YARN application, and optionally, a
- * workload MapReduce job. This client uploads resources to HDFS as necessary
- * for them to be accessed by the YARN app, then launches an
- * {@link ApplicationMaster}, which is responsible for managing the lifetime of
- * the application.
- * <p>
- * The Dynamometer YARN application starts up the DataNodes of an HDFS
- * cluster. If the namenode_servicerpc_addr option is specified, it should point
- * to the service RPC address of an existing namenode, which the datanodes will
- * talk to. Else, a namenode will be launched internal to this YARN application.
- * The ApplicationMaster's logs contain links to the NN / DN containers to be
- * able to access their logs. Some of this information is also printed by the
- * client.
- * <p>
- * The application will store files in the submitting user's home directory
- * under a `.dynamometer/applicationID/` folder. This is mostly for uses
- * internal to the application, but if the NameNode is launched through YARN,
- * the NameNode's metrics will also be uploaded to a file `namenode_metrics`
- * within this folder. This file is also accessible as part of the NameNode's
- * logs, but this centralized location is easier to access for subsequent
- * parsing.
- * <p>
- * If the NameNode is launched internally, this Client will monitor the
- * status of the NameNode, printing information about its availability as the
- * DataNodes register (e.g., outstanding under replicated blocks as block
- * reports arrive). If this is configured to launch the workload job, once the
- * NameNode has gathered information from all of its DataNodes, the client will
- * launch a workload job which is configured to act against the newly launched
- * NameNode. Once the workload job completes, the infrastructure application
- * will be shut down. At this time only the audit log replay
- * ({@link AuditReplayMapper}) workload is supported.
- * <p>
- * If there is no workload job configured, this application will, by
- * default, persist indefinitely until killed by YARN. You can specify the
- * timeout option to have it exit automatically after some time. This timeout
- * will enforced if there is a workload job configured as well.
- */
-@InterfaceAudience.Public
-@InterfaceStability.Unstable
-public class Client extends Configured implements Tool {
-
-  private static final Logger LOG = LoggerFactory.getLogger(Client.class);
-
-  public static final String APPNAME_ARG = "appname";
-  public static final String APPNAME_DEFAULT = "DynamometerTest";
-  public static final String QUEUE_ARG = "queue";
-  public static final String QUEUE_DEFAULT = "default";
-  public static final String TIMEOUT_ARG = "timeout";
-  public static final String TIMEOUT_DEFAULT = "-1";
-  public static final String HADOOP_VERSION_ARG = "hadoop_version";
-  public static final String HADOOP_BINARY_PATH_ARG = "hadoop_binary_path";
-  public static final String NAMENODE_SERVICERPC_ADDR_ARG =
-      "namenode_servicerpc_addr";
-  public static final String FS_IMAGE_DIR_ARG = "fs_image_dir";
-  public static final String BLOCK_LIST_PATH_ARG = "block_list_path";
-  public static final String CONF_PATH_ARG = "conf_path";
-  public static final String MASTER_VCORES_ARG = "master_vcores";
-  public static final String MASTER_VCORES_DEFAULT = "1";
-  public static final String MASTER_MEMORY_MB_ARG = "master_memory_mb";
-  public static final String MASTER_MEMORY_MB_DEFAULT = "2048";
-  public static final String TOKEN_FILE_LOCATION_ARG = "token_file_location";
-  public static final String WORKLOAD_REPLAY_ENABLE_ARG =
-      "workload_replay_enable";
-  public static final String WORKLOAD_INPUT_PATH_ARG = "workload_input_path";
-  public static final String WORKLOAD_OUTPUT_PATH_ARG = "workload_output_path";
-  public static final String WORKLOAD_THREADS_PER_MAPPER_ARG =
-      "workload_threads_per_mapper";
-  public static final String WORKLOAD_START_DELAY_ARG = "workload_start_delay";
-  public static final String WORKLOAD_RATE_FACTOR_ARG = "workload_rate_factor";
-  public static final String WORKLOAD_RATE_FACTOR_DEFAULT = "1.0";
-  public static final String WORKLOAD_CONFIG_ARG = "workload_config";
-
-  private static final String[] ARCHIVE_FILE_TYPES =
-      {".zip", ".tar", ".tgz", ".tar.gz"};
-
-  private static final String START_SCRIPT_LOCATION = Client.class
-      .getClassLoader()
-      .getResource(DynoConstants.START_SCRIPT.getResourcePath()).toString();
-
-  private YarnClient yarnClient;
-  // Application master specific info to register a new Application with RM/ASM
-  private String appName = "";
-  // Queue for App master
-  private String amQueue = "";
-  // Amt. of memory resource to request for to run the App Master
-  private int amMemory = 10;
-  // Amt. of virtual core resource to request for to run the App Master
-  private int amVCores = 1;
-
-  // Dependency JARs. Should include, at minimum, the JAR for the App Master
-  private final String[] dependencyJars;
-
-  private String hadoopBinary = "";
-  // Location of DN conf zip
-  private String confPath = "";
-  // Location of root dir for DN block image zips
-  private String blockListPath = "";
-  // Location of NN fs image
-  private String fsImagePath = "";
-  // Location of NN fs image md5 file
-  private String fsImageMD5Path = "";
-  // Location of NN VERSION file
-  private String versionFilePath = "";
-  // Service RPC address of the NameNode, if it is external
-  private String remoteNameNodeRpcAddress = "";
-  // True iff the NameNode should be launched within YARN
-  private boolean launchNameNode;
-  // The path to the file which contains the delegation tokens to be used for
-  // the launched
-  // containers (may be null)
-  private String tokenFileLocation;
-
-  // Holds all of the options which are passed to the AM
-  private AMOptions amOptions;
-
-  // The ApplicationId of the YARN infrastructure application.
-  private ApplicationId infraAppId;
-  // The current state of the YARN infrastructure application.
-  private volatile YarnApplicationState infraAppState =
-      YarnApplicationState.NEW;
-  private volatile JobStatus.State workloadAppState = JobStatus.State.PREP;
-  // Total number of DataNodes which will be launched.
-  private int numTotalDataNodes;
-
-  // Whether or not the workload job should be launched.
-  private boolean launchWorkloadJob = false;
-  // The workload job itself.
-  private volatile Job workloadJob;
-  // The input path for the workload job.
-  private String workloadInputPath = "";
-  // The output path for the workload job metric results.
-  private String workloadOutputPath = "";
-  // The number of threads to use per mapper for the workload job.
-  private int workloadThreadsPerMapper;
-  // The startup delay for the workload job.
-  private long workloadStartDelayMs;
-  private double workloadRateFactor = 0.0;
-  private Map<String, String> workloadExtraConfigs;
-
-  // Start time for client
-  private final long clientStartTime = System.currentTimeMillis();
-  // Timeout threshold for client. Kill app after time interval expires.
-  private long clientTimeout;
-
-  // Command line options
-  private Options opts;
-
-  /**
-   * @param args Command line arguments
-   * @throws Exception on error
-   */
-  public static void main(String[] args) throws Exception {
-    Client client = new Client(
-        ClassUtil.findContainingJar(ApplicationMaster.class));
-    System.exit(ToolRunner.run(new YarnConfiguration(), client, args));
-  }
-
-  public int run(String[] args) {
-    boolean result;
-    try {
-      LOG.info("Initializing Client");
-      try {
-        boolean doRun = init(args);
-        if (!doRun) {
-          return 0;
-        }
-      } catch (IllegalArgumentException e) {
-        System.err.println(e.getLocalizedMessage());
-        printUsage();
-        return -1;
-      }
-      result = run();
-    } catch (Throwable t) {
-      LOG.error("Error running Client", t);
-      return 1;
-    }
-    if (result) {
-      LOG.info("Application completed successfully");
-      return 0;
-    }
-    LOG.error("Application failed to complete successfully");
-    return 2;
-  }
-
-  public Client(String... dependencyJars) {
-    Preconditions.checkArgument(
-        dependencyJars != null && dependencyJars.length > 0,
-        "Must specify at least one dependency JAR for the ApplicationMaster");
-    this.dependencyJars = dependencyJars;
-    opts = new Options();
-    opts.addOption(APPNAME_ARG, true,
-        "Application Name. (default '" + APPNAME_DEFAULT + "')");
-    opts.addOption(QUEUE_ARG, true, "RM Queue in which this application is "
-        + "to be submitted (default '" + QUEUE_DEFAULT + "')");
-    opts.addOption(TIMEOUT_ARG, true, "Application timeout in milliseconds "
-        + "(default " + TIMEOUT_DEFAULT + " = unlimited)");
-    opts.addOption(MASTER_MEMORY_MB_ARG, true, "Amount of memory in MB to be "
-        + "requested to run the application master (default "
-        + MASTER_MEMORY_MB_DEFAULT + ")");
-    opts.addOption(MASTER_VCORES_ARG, true, "Amount of virtual cores to be "
-        + "requested to run the application master (default "
-        + MASTER_VCORES_DEFAULT + ")");
-    // Dynamometer
-    opts.addOption(CONF_PATH_ARG, true, "Location of the directory or archive "
-        + "containing the Hadoop configuration. If this is already on a "
-        + "remote FS, will save the copy step, but must be an archive file. "
-        + "This must have the standard Hadoop conf layout containing e.g. "
-        + "etc/hadoop/*-site.xml");
-    opts.addOption(BLOCK_LIST_PATH_ARG, true,
-        "Location on HDFS of the files containing the DN block lists.");
-    opts.addOption(FS_IMAGE_DIR_ARG, true, "Location of the directory "
-        + "containing, at minimum, the VERSION file for the namenode. If "
-        + "running the namenode within YARN (namenode_info_path is not "
-        + "specified), this must also include the fsimage file and its md5 "
-        + "hash with names conforming to: `fsimage_XXXXXXXX[.md5]`.");
-    for (String option :
-        new String[] {CONF_PATH_ARG, BLOCK_LIST_PATH_ARG, FS_IMAGE_DIR_ARG}) {
-      opts.getOption(option).setRequired(true);
-    }
-    OptionGroup hadoopBinaryGroup = new OptionGroup();
-    hadoopBinaryGroup.addOption(new Option(HADOOP_BINARY_PATH_ARG, true,
-        "Location of Hadoop binary to be deployed (archive). One of this or "
-            + "hadoop_version is required."));
-    hadoopBinaryGroup.addOption(new Option(HADOOP_VERSION_ARG, true,
-        "Version of Hadoop (like '2.7.4' or '3.0.0-beta1') for which to "
-            + "download a binary. If this is specified, a Hadoop tarball "
-            + "will be downloaded from an Apache mirror. By default the "
-            + "Berkeley OCF mirror is used; specify "
-            + DynoInfraUtils.APACHE_DOWNLOAD_MIRROR_KEY
-            + " as a configuration or system property to change which mirror "
-            + "is used. The tarball will be downloaded to the working "
-            + "directory. One of this or hadoop_binary_path is required."));
-    hadoopBinaryGroup.setRequired(true);
-    opts.addOptionGroup(hadoopBinaryGroup);
-    opts.addOption(NAMENODE_SERVICERPC_ADDR_ARG, true, "Specify this option "
-        + "to run the NameNode external to YARN. This is the service RPC "
-        + "address of the NameNode, e.g. localhost:9020.");
-    opts.addOption(TOKEN_FILE_LOCATION_ARG, true, "If specified, this file "
-        + "will be used as the delegation token(s) for the launched "
-        + "containers. Otherwise, the delegation token(s) for the default "
-        + "FileSystem will be used.");
-    AMOptions.setOptions(opts);
-
-    opts.addOption(WORKLOAD_REPLAY_ENABLE_ARG, false, "If specified, this "
-        + "client will additionally launch the workload replay job to replay "
-        + "audit logs against the HDFS cluster which is started.");
-    opts.addOption(WORKLOAD_INPUT_PATH_ARG, true,
-        "Location of the audit traces to replay (Required for workload)");
-    opts.addOption(WORKLOAD_OUTPUT_PATH_ARG, true,
-        "Location of the metrics output (Required for workload)");
-    opts.addOption(WORKLOAD_THREADS_PER_MAPPER_ARG, true, "Number of threads "
-        + "per mapper to use to replay the workload. (default "
-        + AuditReplayMapper.NUM_THREADS_DEFAULT + ")");
-    opts.addOption(WORKLOAD_START_DELAY_ARG, true, "Delay between launching "
-        + "the Workload MR job and starting the audit logic replay; this is "
-        + "used in an attempt to allow all mappers to be launched before any "
-        + "of them start replaying. Workloads with more mappers may need a "
-        + "longer delay to get all of the containers allocated. Human-readable "
-        + "units accepted (e.g. 30s, 10m). (default "
-        + WorkloadDriver.START_TIME_OFFSET_DEFAULT + ")");
-    opts.addOption(WORKLOAD_RATE_FACTOR_ARG, true, "Rate factor "
-        + "(multiplicative speed factor) to apply to workload replay (Default "
-        + WORKLOAD_RATE_FACTOR_DEFAULT + ")");
-    opts.addOption(WORKLOAD_CONFIG_ARG, true, "Additional configurations to "
-        + "pass only to the workload job. This can be used multiple times "
-        + "and should be specified as a key=value pair, e.g. '-"
-        + WORKLOAD_CONFIG_ARG + " conf.one=val1 -" + WORKLOAD_CONFIG_ARG
-        + " conf.two=val2'");
-  }
-
-  /**
-   * Helper function to print out usage.
-   */
-  private void printUsage() {
-    HelpFormatter formatter = new HelpFormatter();
-    // Option names are long so increasing the width is helpful
-    formatter.setWidth(100);
-    formatter.printHelp("Client", opts);
-  }
-
-  /**
-   * Parse command line options.
-   *
-   * @param args Parsed command line options
-   * @return Whether the init was successful to run the client
-   * @throws ParseException on error while parsing
-   * @throws IOException for other errors
-   */
-  public boolean init(String[] args) throws ParseException, IOException {
-
-    List<String> list = Arrays.asList(args);
-    if (list.contains("-h") || list.contains("--help")) {
-      printUsage();
-      return false;
-    }
-
-    CommandLineParser parser = new GnuParser();
-    CommandLine commandLine = parser.parse(opts, args);
-
-    yarnClient = YarnClient.createYarnClient();
-    yarnClient.init(getConf());
-
-    LOG.info("Starting with arguments: [\"{}\"]",
-        Joiner.on("\" \"").join(args));
-
-    Path fsImageDir = new Path(commandLine.getOptionValue(FS_IMAGE_DIR_ARG,
-        ""));
-    versionFilePath = new Path(fsImageDir, "VERSION").toString();
-    if (commandLine.hasOption(NAMENODE_SERVICERPC_ADDR_ARG)) {
-      launchNameNode = false;
-      remoteNameNodeRpcAddress =
-          commandLine.getOptionValue(NAMENODE_SERVICERPC_ADDR_ARG);
-    } else {
-      launchNameNode = true;
-      FileSystem localFS = FileSystem.getLocal(getConf());
-      fsImageDir = fsImageDir.makeQualified(localFS.getUri(),
-          localFS.getWorkingDirectory());
-      FileSystem fsImageFS = fsImageDir.getFileSystem(getConf());
-      FileStatus[] fsImageFiles = fsImageFS.listStatus(fsImageDir,
-          (path) -> path.getName().matches("^fsimage_(\\d)+$"));
-      if (fsImageFiles.length != 1) {
-        throw new IllegalArgumentException(
-            "Must be exactly one fsimage file present in fs_image_dir");
-      }
-      fsImagePath = fsImageFiles[0].getPath().toString();
-      fsImageMD5Path = fsImageFiles[0].getPath().suffix(".md5").toString();
-    }
-
-    if (amMemory < 0) {
-      throw new IllegalArgumentException("Invalid memory specified for "
-          + "application master, exiting. Specified memory=" + amMemory);
-    }
-    if (amVCores < 0) {
-      throw new IllegalArgumentException("Invalid virtual cores specified for "
-          + "application master, exiting. Specified virtual cores=" + amVCores);
-    }
-
-    this.appName = commandLine.getOptionValue(APPNAME_ARG, APPNAME_DEFAULT);
-    this.amQueue = commandLine.getOptionValue(QUEUE_ARG, QUEUE_DEFAULT);
-    this.amMemory = Integer.parseInt(commandLine
-        .getOptionValue(MASTER_MEMORY_MB_ARG, MASTER_MEMORY_MB_DEFAULT));
-    this.amVCores = Integer.parseInt(
-        commandLine.getOptionValue(MASTER_VCORES_ARG, MASTER_VCORES_DEFAULT));
-    this.confPath = commandLine.getOptionValue(CONF_PATH_ARG);
-    this.blockListPath = commandLine.getOptionValue(BLOCK_LIST_PATH_ARG);
-    if (commandLine.hasOption(HADOOP_BINARY_PATH_ARG)) {
-      this.hadoopBinary = commandLine.getOptionValue(HADOOP_BINARY_PATH_ARG);
-    } else {
-      this.hadoopBinary = DynoInfraUtils.fetchHadoopTarball(
-          new File(".").getAbsoluteFile(),
-          commandLine.getOptionValue(HADOOP_VERSION_ARG), getConf(), LOG)
-          .toString();
-    }
-    this.amOptions = AMOptions.initFromParser(commandLine);
-    this.clientTimeout = Integer
-        .parseInt(commandLine.getOptionValue(TIMEOUT_ARG, TIMEOUT_DEFAULT));
-    this.tokenFileLocation = commandLine.
-        getOptionValue(TOKEN_FILE_LOCATION_ARG);
-
-    amOptions.verify();
-
-    Path blockPath = new Path(blockListPath);
-    FileSystem blockListFS = blockPath.getFileSystem(getConf());
-    if (blockListFS.getUri().equals(FileSystem.getLocal(getConf()).getUri())
-        || !blockListFS.exists(blockPath)) {
-      throw new IllegalArgumentException(
-          "block list path must already exist on remote fs!");
-    }
-    numTotalDataNodes = blockListFS.listStatus(blockPath,
-        DynoConstants.BLOCK_LIST_FILE_FILTER).length;
-
-    if (commandLine.hasOption(WORKLOAD_REPLAY_ENABLE_ARG)) {
-      if (!commandLine.hasOption(WORKLOAD_INPUT_PATH_ARG)
-          || !commandLine.hasOption(WORKLOAD_START_DELAY_ARG)) {
-        throw new IllegalArgumentException("workload_replay_enable was "
-            + "specified; must include all required workload_ parameters.");
-      }
-      launchWorkloadJob = true;
-      workloadInputPath = commandLine.getOptionValue(WORKLOAD_INPUT_PATH_ARG);
-      workloadOutputPath = commandLine.getOptionValue(WORKLOAD_OUTPUT_PATH_ARG);
-      workloadThreadsPerMapper = Integer
-          .parseInt(commandLine.getOptionValue(WORKLOAD_THREADS_PER_MAPPER_ARG,
-              String.valueOf(AuditReplayMapper.NUM_THREADS_DEFAULT)));
-      workloadRateFactor = Double.parseDouble(commandLine.getOptionValue(
-          WORKLOAD_RATE_FACTOR_ARG, WORKLOAD_RATE_FACTOR_DEFAULT));
-      workloadExtraConfigs = new HashMap<>();
-      if (commandLine.getOptionValues(WORKLOAD_CONFIG_ARG) != null) {
-        for (String opt : commandLine.getOptionValues(WORKLOAD_CONFIG_ARG)) {
-          Iterator<String> kvPair =
-              Splitter.on("=").trimResults().split(opt).iterator();
-          workloadExtraConfigs.put(kvPair.next(), kvPair.next());
-        }
-      }
-      String delayString = commandLine.getOptionValue(WORKLOAD_START_DELAY_ARG,
-          WorkloadDriver.START_TIME_OFFSET_DEFAULT);
-      // Store a temporary config to leverage Configuration's time duration
-      // parsing.
-      getConf().set("___temp___", delayString);
-      workloadStartDelayMs = getConf().getTimeDuration("___temp___", 0,
-          TimeUnit.MILLISECONDS);
-    }
-
-    return true;
-  }
-
-  /**
-   * Main run function for the client.
-   *
-   * @return true if application completed successfully
-   * @throws IOException for general issues
-   * @throws YarnException for issues while contacting YARN daemons
-   */
-  public boolean run() throws IOException, YarnException {
-
-    LOG.info("Running Client");
-    yarnClient.start();
-
-    YarnClusterMetrics clusterMetrics = yarnClient.getYarnClusterMetrics();
-    LOG.info("Got Cluster metric info from ASM, numNodeManagers={}",
-        clusterMetrics.getNumNodeManagers());
-
-    QueueInfo queueInfo = yarnClient.getQueueInfo(this.amQueue);
-    LOG.info("Queue info: queueName={}, queueCurrentCapacity={}, "
-        + "queueMaxCapacity={}, queueApplicationCount={}, "
-        + "queueChildQueueCount={}", queueInfo.getQueueName(),
-        queueInfo.getCurrentCapacity(), queueInfo.getMaximumCapacity(),
-        queueInfo.getApplications().size(), queueInfo.getChildQueues().size());
-
-    // Get a new application id
-    YarnClientApplication app = yarnClient.createApplication();
-    GetNewApplicationResponse appResponse = app.getNewApplicationResponse();
-    long maxMem = appResponse.getMaximumResourceCapability().getMemorySize();
-    LOG.info("Max mem capabililty of resources in this cluster " + maxMem);
-    int maxVCores = appResponse.getMaximumResourceCapability()
-        .getVirtualCores();
-    LOG.info("Max virtual cores capabililty of resources in this cluster {}",
-        maxVCores);
-    if (amMemory > maxMem || amMemory < 0 || amVCores > maxVCores
-        || amVCores < 0) {
-      throw new IllegalArgumentException("Invalid AM memory or vcores: memory="
-          + amMemory + ", vcores=" + amVCores);
-    }
-    amOptions.verify(maxMem, maxVCores);
-
-    // set the application name
-    ApplicationSubmissionContext appContext =
-        app.getApplicationSubmissionContext();
-    infraAppId = appContext.getApplicationId();
-    appContext.setApplicationName(appName);
-
-    // Set up the container launch context for the application master
-    ContainerLaunchContext amContainer = Records
-        .newRecord(ContainerLaunchContext.class);
-    Map<ApplicationAccessType, String> acls = new HashMap<>();
-    acls.put(ApplicationAccessType.VIEW_APP, getConf().get(
-        MRJobConfig.JOB_ACL_VIEW_JOB, MRJobConfig.DEFAULT_JOB_ACL_VIEW_JOB));
-    amContainer.setApplicationACLs(acls);
-
-    FileSystem fs = FileSystem.get(getConf());
-    fs.mkdirs(getRemoteStoragePath(getConf(), infraAppId));
-
-    // Set the env variables to be setup in the env where the application master
-    // will be run
-    Map<String, String> env = setupRemoteResourcesGetEnv();
-
-    amContainer.setEnvironment(env);
-
-    // All of the resources for both AM and NN/DNs have been put on remote
-    // storage
-    // Only the application master JAR is needed as a local resource for the AM
-    // so
-    // we explicitly add it here
-    Map<String, LocalResource> localResources = new HashMap<>();
-    LocalResource scRsrc = LocalResource.newInstance(
-        org.apache.hadoop.yarn.api.records.URL
-            .fromPath(DynoConstants.DYNO_DEPENDENCIES.getPath(env)),
-        LocalResourceType.ARCHIVE, LocalResourceVisibility.APPLICATION,
-        DynoConstants.DYNO_DEPENDENCIES.getLength(env),
-        DynoConstants.DYNO_DEPENDENCIES.getTimestamp(env));
-    localResources.put(DynoConstants.DYNO_DEPENDENCIES.getResourcePath(),
-        scRsrc);
-    // Set local resource info into app master container launch context
-    amContainer.setLocalResources(localResources);
-
-    // Set the necessary command to execute the application master
-    amContainer.setCommands(getAMCommand());
-
-    Resource capability = Records.newRecord(Resource.class);
-    capability.setMemorySize(amMemory);
-    capability.setVirtualCores(amVCores);
-    appContext.setResource(capability);
-
-    // Setup security tokens
-    if (UserGroupInformation.isSecurityEnabled()) {
-      ByteBuffer fsTokens;
-      if (tokenFileLocation != null) {
-        fsTokens = ByteBuffer
-            .wrap(Files.readAllBytes(Paths.get(tokenFileLocation)));
-      } else {
-        Credentials credentials = new Credentials();
-        String tokenRenewer = getConf().get(YarnConfiguration.RM_PRINCIPAL);
-        if (tokenRenewer == null || tokenRenewer.length() == 0) {
-          throw new IOException("Can't get Master Kerberos principal for the "
-              + "RM to use as renewer");
-        }
-
-        // For now, only getting tokens for the default file-system.
-        final Token<?>[] tokens = fs.addDelegationTokens(tokenRenewer,
-            credentials);
-        if (tokens != null) {
-          for (Token<?> token : tokens) {
-            LOG.info("Got dt for " + fs.getUri() + "; " + token);
-          }
-        }
-        DataOutputBuffer dob = new DataOutputBuffer();
-        credentials.writeTokenStorageToStream(dob);
-        fsTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());
-      }
-      amContainer.setTokens(fsTokens);
-    }
-
-    appContext.setAMContainerSpec(amContainer);
-
-    // Set the queue to which this application is to be submitted in the RM
-    appContext.setQueue(amQueue);
-
-    LOG.info("Submitting application to RM");
-    yarnClient.submitApplication(appContext);
-
-    // Monitor the application
-    return monitorInfraApplication();
-
-  }
-
-  /**
-   * Set up the remote resources for the application. Upload them to remote
-   * storage as necessary, and set up the requisite environment variables. Does
-   * not set up any local resources.
-   *
-   * @return A Map representing the environment to be used for the
-   *         ApplicationMaster containing the information about all of the
-   *         remote resources.
-   */
-  private Map<String, String> setupRemoteResourcesGetEnv() throws IOException {
-    LOG.info("Set the environment for the application master");
-    Map<String, String> env = new HashMap<>();
-
-    // Copy local resources to a remote FS to prepare them for localization
-    // by containers. We do not need to set them as local resources here as
-    // the AM does not need them.
-    if (launchNameNode) {
-      setupRemoteResource(infraAppId, DynoConstants.FS_IMAGE, env, fsImagePath);
-      setupRemoteResource(infraAppId, DynoConstants.FS_IMAGE_MD5, env,
-          fsImageMD5Path);
-    } else {
-      env.put(DynoConstants.REMOTE_NN_RPC_ADDR_ENV, remoteNameNodeRpcAddress);
-    }
-    setupRemoteResource(infraAppId, DynoConstants.VERSION, env,
-        versionFilePath);
-    setupRemoteResource(infraAppId, DynoConstants.CONF_ZIP, env, confPath);
-    setupRemoteResource(infraAppId, DynoConstants.START_SCRIPT, env,
-        START_SCRIPT_LOCATION);
-    setupRemoteResource(infraAppId, DynoConstants.HADOOP_BINARY, env,
-        hadoopBinary);
-    setupRemoteResource(infraAppId, DynoConstants.DYNO_DEPENDENCIES, env,
-        dependencyJars);
-
-    env.put(DynoConstants.BLOCK_LIST_PATH_ENV, blockListPath);
-    env.put(DynoConstants.JOB_ACL_VIEW_ENV, getConf().get(
-        MRJobConfig.JOB_ACL_VIEW_JOB, MRJobConfig.DEFAULT_JOB_ACL_VIEW_JOB));
-
-    env.put(DynoConstants.REMOTE_STORAGE_PATH_ENV,
-        getRemoteStoragePath(getConf(), infraAppId).toString());
-
-    env.put(Environment.CLASSPATH.key(), getAMClassPathEnv());
-    return env;
-  }
-
-  private String getAMClassPathEnv() {
-    // Add AppMaster.jar location to classpath
-    // At some point we should not be required to add
-    // the hadoop specific classpaths to the env.
-    // It should be provided out of the box.
-    // For now setting all required classpaths including
-    // the classpath to "." for the application jar
-    StringBuilder classPathEnv = new StringBuilder(Environment.CLASSPATH.$())
-        .append(ApplicationConstants.CLASS_PATH_SEPARATOR).append("./")
-        .append(DynoConstants.DYNO_DEPENDENCIES.getResourcePath()).append("/*");
-    for (String c : getConf().getStrings(
-        YarnConfiguration.YARN_APPLICATION_CLASSPATH,
-        YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) {
-      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);
-      classPathEnv.append(c.trim());
-    }
-    classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR)
-        .append("./log4j.properties");
-
-    // add the runtime classpath needed for tests to work
-    if (getConf().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {
-      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);
-      classPathEnv.append(System.getProperty("java.class.path"));
-    }
-    return classPathEnv.toString();
-  }
-
-  private List<String> getAMCommand() {
-    List<String> vargs = new ArrayList<>();
-
-    // Set java executable command
-    vargs.add(Environment.JAVA_HOME.$() + "/bin/java");
-    // Set Xmx based on am memory size
-    long appMasterHeapSize = Math.round(amMemory * 0.85);
-    vargs.add("-Xmx" + appMasterHeapSize + "m");
-    // Set class name
-    vargs.add(ApplicationMaster.class.getCanonicalName());
-    // Set params for Application Master
-
-    amOptions.addToVargs(vargs);
-
-    vargs.add("1>" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + "/stdout");
-    vargs.add("2>" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + "/stderr");
-
-    LOG.info("Completed setting up app master command: " + vargs);
-    return Lists.newArrayList(Joiner.on(" ").join(vargs));
-  }
-
-  /**
-   * Upload a local resource to HDFS, or if it is nonlocal, just set environment
-   * appropriately. The location, length and timestamp information is added to
-   * AM container's environment, so it can launch containers later with the
-   * correct resource settings.
-   */
-  private void setupRemoteResource(ApplicationId appId, DynoResource resource,
-      Map<String, String> env, String... srcPaths) throws IOException {
-
-    FileStatus remoteFileStatus;
-    Path dstPath;
-
-    Preconditions.checkArgument(srcPaths.length > 0,
-        "Must supply at least one source path");
-    Preconditions.checkArgument(
-        resource.getType() == LocalResourceType.ARCHIVE || srcPaths.length == 1,
-        "Can only specify multiple source paths if using an ARCHIVE type");
-
-    List<URI> srcURIs = Arrays.stream(srcPaths).map(URI::create)
-        .collect(Collectors.toList());
-    Set<String> srcSchemes = srcURIs.stream().map(URI::getScheme)
-        .collect(Collectors.toSet());
-    Preconditions.checkArgument(srcSchemes.size() == 1,
-        "All source paths must have the same scheme");
-    String srcScheme = srcSchemes.iterator().next();
-
-    String srcPathString = "[" + Joiner.on(",").join(srcPaths) + "]";
-
-    if (srcScheme == null
-        || srcScheme.equals(FileSystem.getLocal(getConf()).getScheme())
-        || srcScheme.equals("jar")) {
-      // Need to upload this resource to remote storage
-      List<File> srcFiles = srcURIs.stream().map(URI::getSchemeSpecificPart)
-          .map(File::new).collect(Collectors.toList());
-      Path dstPathBase = getRemoteStoragePath(getConf(), appId);
-      boolean shouldArchive = srcFiles.size() > 1
-          || srcFiles.get(0).isDirectory()
-          || (resource.getType() == LocalResourceType.ARCHIVE
-              && Arrays.stream(ARCHIVE_FILE_TYPES).noneMatch(
-                  suffix -> srcFiles.get(0).getName().endsWith(suffix)));
-      if (shouldArchive) {
-        if ("jar".equals(srcScheme)) {
-          throw new IllegalArgumentException(String.format("Resources in JARs "
-                  + "can't be zipped; resource %s is ARCHIVE and src is: %s",
-              resource.getResourcePath(), srcPathString));
-        } else if (resource.getType() != LocalResourceType.ARCHIVE) {
-          throw new IllegalArgumentException(
-              String.format("Resource type is %s but srcPaths were: %s",
-                  resource.getType(), srcPathString));
-        }
-        dstPath = new Path(dstPathBase, resource.getResourcePath())
-            .suffix(".zip");
-      } else {
-        dstPath = new Path(dstPathBase, srcFiles.get(0).getName());
-      }
-      FileSystem remoteFS = dstPath.getFileSystem(getConf());
-      LOG.info("Uploading resource " + resource + " from " + srcPathString
-          + " to " + dstPath);
-      try (OutputStream outputStream = remoteFS.create(dstPath, true)) {
-        if ("jar".equals(srcScheme)) {
-          try (InputStream inputStream = new URL(srcPaths[0]).openStream()) {
-            IOUtils.copyBytes(inputStream, outputStream, getConf());
-          }
-        } else if (shouldArchive) {
-          List<File> filesToZip;
-          if (srcFiles.size() == 1 && srcFiles.get(0).isDirectory()) {
-            File[] childFiles = srcFiles.get(0).listFiles();
-            if (childFiles == null || childFiles.length == 0) {
-              throw new IllegalArgumentException(
-                  "Specified a directory to archive with no contents");
-            }
-            filesToZip = Lists.newArrayList(childFiles);
-          } else {
-            filesToZip = srcFiles;
-          }
-          ZipOutputStream zout = new ZipOutputStream(outputStream);
-          for (File fileToZip : filesToZip) {
-            addFileToZipRecursively(fileToZip.getParentFile(), fileToZip, zout);
-          }
-          zout.close();
-        } else {
-          try (InputStream inputStream = new FileInputStream(srcFiles.get(0))) {
-            IOUtils.copyBytes(inputStream, outputStream, getConf());
-          }
-        }
-      }
-      remoteFileStatus = remoteFS.getFileStatus(dstPath);
-    } else {
-      if (srcPaths.length > 1) {
-        throw new IllegalArgumentException("If resource is on remote, must be "
-            + "a single file: " + srcPathString);
-      }
-      LOG.info("Using resource {} directly from current location: {}",
-          resource, srcPaths[0]);
-      dstPath = new Path(srcPaths[0]);
-      // non-local file system; we can just use it directly from where it is
-      remoteFileStatus = FileSystem.get(dstPath.toUri(), getConf())
-          .getFileStatus(dstPath);
-      if (remoteFileStatus.isDirectory()) {
-        throw new IllegalArgumentException("If resource is on remote "
-            + "filesystem, must be a file: " + srcPaths[0]);
-      }
-    }
-    env.put(resource.getLocationEnvVar(), dstPath.toString());
-    env.put(resource.getTimestampEnvVar(),
-        String.valueOf(remoteFileStatus.getModificationTime()));
-    env.put(resource.getLengthEnvVar(),
-        String.valueOf(remoteFileStatus.getLen()));
-  }
-
-  /**
-   * Get the directory on the default FS which will be used for storing files
-   * relevant to this Dynamometer application. This is inside of the
-   * {@value DynoConstants#DYNAMOMETER_STORAGE_DIR} directory within the
-   * submitter's home directory.
-   *
-   * @param conf Configuration for this application.
-   * @param appId This application's ID.
-   * @return Fully qualified path on the default FS.
-   */
-  private static Path getRemoteStoragePath(Configuration conf,
-      ApplicationId appId) throws IOException {
-    FileSystem remoteFS = FileSystem.get(conf);
-    return remoteFS.makeQualified(new Path(remoteFS.getHomeDirectory(),
-        DynoConstants.DYNAMOMETER_STORAGE_DIR + "/" + appId));
-  }
-
-  private void addFileToZipRecursively(File root, File file,
-      ZipOutputStream out) throws IOException {
-
-    File[] files = file.listFiles();
-    if (files == null) { // Not a directory
-      String relativePath = file.getAbsolutePath()
-          .substring(root.getAbsolutePath().length() + 1);
-      try {
-        try (FileInputStream in = new FileInputStream(file.getAbsolutePath())) {
-          out.putNextEntry(new ZipEntry(relativePath));
-          IOUtils.copyBytes(in, out, getConf(), false);
-          out.closeEntry();
-        }
-      } catch (FileNotFoundException fnfe) {
-        LOG.warn("Skipping file; it is a symlink with a nonexistent target: {}",
-            file);
-      }
-    } else {
-      for (File containedFile : files) {
-        addFileToZipRecursively(root, containedFile, out);
-      }
-    }
-  }
-
-  /**
-   * Monitor the submitted application for completion. Kill application if time
-   * expires.
-   *
-   * @return true if application completed successfully
-   */
-  private boolean monitorInfraApplication() throws YarnException, IOException {
-
-    boolean loggedApplicationInfo = false;
-    boolean success = false;
-
-    Thread namenodeMonitoringThread = new Thread(() -> {
-      Supplier<Boolean> exitCritera = () ->
-          Apps.isApplicationFinalState(infraAppState);
-      Optional<Properties> namenodeProperties = Optional.empty();
-      while (!exitCritera.get()) {
-        try {
-          if (!namenodeProperties.isPresent()) {
-            namenodeProperties = DynoInfraUtils
-                .waitForAndGetNameNodeProperties(exitCritera, getConf(),
-                    getNameNodeInfoPath(), LOG);
-            if (namenodeProperties.isPresent()) {
-              Properties props = namenodeProperties.get();
-              LOG.info("NameNode can be reached via HDFS at: {}",
-                  DynoInfraUtils.getNameNodeHdfsUri(props));
-              LOG.info("NameNode web UI available at: {}",
-                  DynoInfraUtils.getNameNodeWebUri(props));
-              LOG.info("NameNode can be tracked at: {}",
-                  DynoInfraUtils.getNameNodeTrackingUri(props));
-            } else {
-              // Only happens if we should be shutting down
-              break;
-            }
-          }
-          DynoInfraUtils.waitForNameNodeStartup(namenodeProperties.get(),
-              exitCritera, LOG);
-          DynoInfraUtils.waitForNameNodeReadiness(namenodeProperties.get(),
-              numTotalDataNodes, false, exitCritera, getConf(), LOG);
-          break;
-        } catch (IOException ioe) {
-          LOG.error(
-              "Unexpected exception while waiting for NameNode readiness",
-              ioe);
-        } catch (InterruptedException ie) {
-          return;
-        }
-      }
-      if (!Apps.isApplicationFinalState(infraAppState) && launchWorkloadJob) {
-        launchAndMonitorWorkloadDriver(namenodeProperties.get());
-      }
-    });
-    if (launchNameNode) {
-      namenodeMonitoringThread.start();
-    }
-
-    while (true) {
-
-      // Check app status every 1 second.
-      try {
-        Thread.sleep(1000);
-      } catch (InterruptedException e) {
-        LOG.debug("Thread sleep in monitoring loop interrupted");
-      }
-
-      // Get application report for the appId we are interested in
-      ApplicationReport report = yarnClient.getApplicationReport(infraAppId);
-
-      if (report.getTrackingUrl() != null && !loggedApplicationInfo) {
-        loggedApplicationInfo = true;
-        LOG.info("Track the application at: " + report.getTrackingUrl());
-        LOG.info("Kill the application using: yarn application -kill "
-            + report.getApplicationId());
-      }
-
-      LOG.debug("Got application report from ASM for: appId={}, "
-          + "clientToAMToken={}, appDiagnostics={}, appMasterHost={}, "
-          + "appQueue={}, appMasterRpcPort={}, appStartTime={}, "
-          + "yarnAppState={}, distributedFinalState={}, appTrackingUrl={}, "
-          + "appUser={}",
-          infraAppId.getId(), report.getClientToAMToken(),
-          report.getDiagnostics(), report.getHost(), report.getQueue(),
-          report.getRpcPort(), report.getStartTime(),
-          report.getYarnApplicationState(), report.getFinalApplicationStatus(),
-          report.getTrackingUrl(), report.getUser());
-
-      infraAppState = report.getYarnApplicationState();
-      if (infraAppState == YarnApplicationState.KILLED) {
-        if (!launchWorkloadJob) {
-          success = true;
-        } else if (workloadJob == null) {
-          LOG.error("Infra app was killed before workload job was launched.");
-        } else if (!workloadJob.isComplete()) {
-          LOG.error("Infra app was killed before workload job completed.");
-        } else if (workloadJob.isSuccessful()) {
-          success = true;
-        }
-        LOG.info("Infra app was killed; exiting from client.");
-        break;
-      } else if (infraAppState == YarnApplicationState.FINISHED
-          || infraAppState == YarnApplicationState.FAILED) {
-        LOG.info("Infra app exited unexpectedly. YarnState="
-            + infraAppState.toString() + ". Exiting from client.");
-        break;
-      }
-
-      if ((clientTimeout != -1)
-          && (System.currentTimeMillis() > (clientStartTime + clientTimeout))) {
-        LOG.info("Reached client specified timeout of {} ms for application. "
-            + "Killing application", clientTimeout);
-        attemptCleanup();
-        break;
-      }
-
-      if (isCompleted(workloadAppState)) {
-        LOG.info("Killing infrastructure app");
-        try {
-          forceKillApplication(infraAppId);
-        } catch (YarnException | IOException e) {
-          LOG.error("Exception encountered while killing infra app", e);
-        }
-      }
-    }
-    if (launchNameNode) {
-      try {
-        namenodeMonitoringThread.interrupt();
-        namenodeMonitoringThread.join();
-      } catch (InterruptedException ie) {
-        LOG.warn("Interrupted while joining workload job thread; "
-            + "continuing to cleanup.");
-      }
-    }
-    attemptCleanup();
-    return success;
-  }
-
-  /**
-   * Return the path to the property file containing information about the
-   * launched NameNode.
-   */
-  @VisibleForTesting
-  Path getNameNodeInfoPath() throws IOException {
-    return new Path(getRemoteStoragePath(getConf(), infraAppId),
-        DynoConstants.NN_INFO_FILE_NAME);
-  }
-
-  /**
-   * Launch the workload driver ({@link WorkloadDriver}) and monitor the job.
-   * Waits for the launched job to complete.
-   *
-   * @param nameNodeProperties The set of properties with information about the
-   *                           launched NameNode.
-   */
-  private void launchAndMonitorWorkloadDriver(Properties nameNodeProperties) {
-    URI nameNodeURI = DynoInfraUtils.getNameNodeHdfsUri(nameNodeProperties);
-    LOG.info("Launching workload job using input path: " + workloadInputPath);
-    try {
-      long workloadStartTime = System.currentTimeMillis()
-          + workloadStartDelayMs;
-      Configuration workloadConf = new Configuration(getConf());
-      workloadConf.set(AuditReplayMapper.INPUT_PATH_KEY, workloadInputPath);
-      workloadConf.set(AuditReplayMapper.OUTPUT_PATH_KEY, workloadOutputPath);
-      workloadConf.setInt(AuditReplayMapper.NUM_THREADS_KEY,
-          workloadThreadsPerMapper);
-      workloadConf.setDouble(AuditReplayMapper.RATE_FACTOR_KEY,
-          workloadRateFactor);
-      for (Map.Entry<String, String> configPair : workloadExtraConfigs
-          .entrySet()) {
-        workloadConf.set(configPair.getKey(), configPair.getValue());
-      }
-      workloadJob = WorkloadDriver.getJobForSubmission(workloadConf,
-          nameNodeURI.toString(), workloadStartTime, AuditReplayMapper.class);
-      workloadJob.submit();
-      while (!Apps.isApplicationFinalState(infraAppState) &&
-          !isCompleted(workloadAppState)) {
-        workloadJob.monitorAndPrintJob();
-        Thread.sleep(5000);
-        workloadAppState = workloadJob.getJobState();
-      }
-      if (isCompleted(workloadAppState)) {
-        LOG.info("Workload job completed successfully!");
-      } else {
-        LOG.warn("Workload job failed.");
-      }
-    } catch (Exception e) {
-      LOG.error("Exception encountered while running workload job", e);
-    }
-  }
-
-  /**
-   * Best-effort attempt to clean up any remaining applications (infrastructure
-   * or workload).
-   */
-  public void attemptCleanup() {
-    LOG.info("Attempting to clean up remaining running applications.");
-    if (workloadJob != null) {
-      try {
-        workloadAppState = workloadJob.getJobState();
-      } catch (IOException ioe) {
-        LOG.warn("Unable to fetch completion status of workload job. Will "
-                + "proceed to attempt to kill it.", ioe);
-      } catch (InterruptedException ie) {
-        Thread.currentThread().interrupt();
-        return;
-      }
-      if (!isCompleted(workloadAppState)) {
-        try {
-          LOG.info("Attempting to kill workload app: {}",
-              workloadJob.getJobID());
-          workloadJob.killJob();
-          LOG.info("Killed workload app");
-        } catch (IOException ioe) {
-          LOG.error("Unable to kill workload app ({})", workloadJob.getJobID(),
-              ioe);
-        }
-      }
-    }
-    if (infraAppId != null && !Apps.isApplicationFinalState(infraAppState)) {
-      try {
-        LOG.info("Attempting to kill infrastructure app: " + infraAppId);
-        forceKillApplication(infraAppId);
-        LOG.info("Killed infrastructure app");
-      } catch (YarnException | IOException e) {
-        LOG.error("Unable to kill infrastructure app ({})", infraAppId, e);
-      }
-    }
-  }
-
-  /**
-   * Check if the input state represents completion.
-   */
-  private static boolean isCompleted(JobStatus.State state) {
-    return state == JobStatus.State.SUCCEEDED || state == JobStatus.State.FAILED
-        || state == JobStatus.State.KILLED;
-  }
-
-  /**
-   * Kill a submitted application by sending a call to the AM.
-   *
-   * @param appId Application Id to be killed.
-   */
-  private void forceKillApplication(ApplicationId appId)
-      throws YarnException, IOException {
-    // Response can be ignored as it is non-null on success or
-    // throws an exception in case of failures
-    yarnClient.killApplication(appId);
-  }
-
-  @VisibleForTesting
-  Job getWorkloadJob() {
-    return workloadJob;
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoConstants.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoConstants.java
deleted file mode 100644
index c789f67502a..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoConstants.java
+++ /dev/null
@@ -1,130 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import java.util.regex.Pattern;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
-import org.apache.hadoop.fs.PathFilter;
-
-import static org.apache.hadoop.yarn.api.records.LocalResourceType.*;
-
-/**
- * Constants used in both Client and Application Master.
- */
-@InterfaceAudience.Private
-@InterfaceStability.Unstable
-public final class DynoConstants {
-
-  private DynoConstants() {}
-
-  // Directory to use for remote storage (a location on the remote FS which
-  // can be accessed by all components). This will be the name of the directory
-  // within the submitter's home directory.
-  public static final String DYNAMOMETER_STORAGE_DIR = ".dynamometer";
-
-  /* The following used for Client -> AM communication */
-
-  // Resource for the zip file of all of the configuration for the
-  // DataNodes/NameNode
-  public static final DynoResource CONF_ZIP =
-      new DynoResource("CONF_ZIP", ARCHIVE, "conf");
-  // Resource for the Hadoop binary archive (distribution tar)
-  public static final DynoResource HADOOP_BINARY =
-      new DynoResource("HADOOP_BINARY", ARCHIVE, "hadoopBinary");
-  // Resource for the script used to start the DataNodes/NameNode
-  public static final DynoResource START_SCRIPT =
-      new DynoResource("START_SCRIPT", FILE, "start-component.sh");
-  // Resource for the file system image file used by the NameNode
-  public static final DynoResource FS_IMAGE =
-      new DynoResource("FS_IMAGE", FILE, null);
-  // Resource for the md5 file accompanying the file system image for the
-  // NameNode
-  public static final DynoResource FS_IMAGE_MD5 =
-      new DynoResource("FS_IMAGE_MD5", FILE, null);
-  // Resource for the VERSION file accompanying the file system image
-  public static final DynoResource VERSION =
-      new DynoResource("VERSION", FILE, "VERSION");
-  // Resource for the archive containing all dependencies
-  public static final DynoResource DYNO_DEPENDENCIES =
-      new DynoResource("DYNO_DEPS", ARCHIVE, "dependencies");
-
-  // Environment variable which will contain the location of the directory
-  // which holds all of the block files for the DataNodes
-  public static final String BLOCK_LIST_PATH_ENV = "BLOCK_ZIP_PATH";
-  // The format of the name of a single block file
-  public static final Pattern BLOCK_LIST_FILE_PATTERN =
-      Pattern.compile("dn[0-9]+-a-[0-9]+-r-[0-9]+");
-  // The file name to use when localizing the block file on a DataNode; will be
-  // suffixed with an integer
-  public static final String BLOCK_LIST_RESOURCE_PATH_PREFIX = "blocks/block";
-  public static final PathFilter BLOCK_LIST_FILE_FILTER = (path) ->
-      DynoConstants.BLOCK_LIST_FILE_PATTERN.matcher(path.getName()).find();
-
-  // Environment variable which will contain the full path of the directory
-  // which should be used for remote (shared) storage
-  public static final String REMOTE_STORAGE_PATH_ENV = "REMOTE_STORAGE_PATH";
-  // Environment variable which will contain the RPC address of the NameNode
-  // which the DataNodes should contact, if the NameNode is not launched
-  // internally by this application
-  public static final String REMOTE_NN_RPC_ADDR_ENV = "REMOTE_NN_RPC_ADDR";
-
-  // Environment variable which will contain the view ACLs for the launched
-  // containers.
-  public static final String JOB_ACL_VIEW_ENV = "JOB_ACL_VIEW";
-
-  /* The following used for AM -> DN, NN communication */
-
-  // The name of the file which will store information about the NameNode
-  // (within the remote storage directory)
-  public static final String NN_INFO_FILE_NAME = "nn_info.prop";
-
-  // Environment variable which will contain additional arguments for the
-  // NameNode
-  public static final String NN_ADDITIONAL_ARGS_ENV = "NN_ADDITIONAL_ARGS";
-  // Environment variable which will contain additional arguments for the
-  // DataNode
-  public static final String DN_ADDITIONAL_ARGS_ENV = "DN_ADDITIONAL_ARGS";
-  // Environment variable which will contain the directory to use for the
-  // NameNode's name directory;
-  // if not specified a directory within the YARN container working directory
-  // will be used.
-  public static final String NN_NAME_DIR_ENV = "NN_NAME_DIR";
-  // Environment variable which will contain the directory to use for the
-  // NameNode's edits directory;
-  // if not specified a directory within the YARN container working directory
-  // will be used.
-  public static final String NN_EDITS_DIR_ENV = "NN_EDITS_DIR";
-
-  public static final String NN_FILE_METRIC_PERIOD_ENV =
-      "NN_FILE_METRIC_PERIOD";
-
-  /*
-   * These are used as the names of properties and as the environment variables
-   */
-
-  // The port to use on the NameNode host when contacting for client RPCs
-  public static final String NN_RPC_PORT = "NN_RPC_PORT";
-  // The hostname of the machine running the NameNode
-  public static final String NN_HOSTNAME = "NN_HOSTNAME";
-  // The port to use on the NameNode host when contacting for service RPCs
-  public static final String NN_SERVICERPC_PORT = "NN_SERVICERPC_PORT";
-  // The port to use on the NameNode host when contacting for HTTP access
-  public static final String NN_HTTP_PORT = "NN_HTTP_PORT";
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoInfraUtils.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoInfraUtils.java
deleted file mode 100644
index f6c8a6ac4d5..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoInfraUtils.java
+++ /dev/null
@@ -1,594 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import org.apache.hadoop.thirdparty.com.google.common.base.Joiner;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
-import java.net.HttpURLConnection;
-import java.net.InetSocketAddress;
-import java.net.MalformedURLException;
-import java.net.URI;
-import java.net.URL;
-import java.nio.charset.StandardCharsets;
-import java.util.HashSet;
-import java.util.Optional;
-import java.util.Properties;
-import java.util.Set;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.function.Supplier;
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.io.IOUtils;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.CommonConfigurationKeysPublic;
-import org.apache.hadoop.fs.FSDataInputStream;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.hdfs.DFSUtilClient;
-import org.apache.hadoop.hdfs.DistributedFileSystem;
-import org.apache.hadoop.hdfs.client.BlockReportOptions;
-import org.apache.hadoop.hdfs.protocol.ClientDatanodeProtocol;
-import org.apache.hadoop.hdfs.protocol.DatanodeInfo;
-import org.apache.hadoop.net.NetUtils;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.util.Time;
-import org.apache.hadoop.yarn.YarnUncaughtExceptionHandler;
-import org.apache.hadoop.yarn.api.ApplicationConstants.Environment;
-
-import com.fasterxml.jackson.core.JsonFactory;
-import com.fasterxml.jackson.core.JsonParser;
-import com.fasterxml.jackson.core.JsonToken;
-import org.slf4j.Logger;
-
-
-/**
- * A collection of utilities used by the Dynamometer infrastructure application.
- */
-@InterfaceAudience.Private
-@InterfaceStability.Unstable
-public final class DynoInfraUtils {
-
-  private DynoInfraUtils() {}
-
-  public static final String DYNO_CONF_PREFIX = "dyno.";
-  public static final String DYNO_INFRA_PREFIX = DYNO_CONF_PREFIX + "infra.";
-
-  public static final String APACHE_DOWNLOAD_MIRROR_KEY = DYNO_CONF_PREFIX
-      + "apache-mirror";
-  // Set a generic mirror as the default.
-  public static final String APACHE_DOWNLOAD_MIRROR_DEFAULT =
-      "http://mirrors.ocf.berkeley.edu/apache/";
-  private static final String APACHE_DOWNLOAD_MIRROR_SUFFIX_FORMAT =
-      "hadoop/common/hadoop-%s/hadoop-%s.tar.gz";
-  public static final String HADOOP_TAR_FILENAME_FORMAT = "hadoop-%s.tar.gz";
-
-  public static final String DATANODE_LIVE_MIN_FRACTION_KEY =
-      DYNO_INFRA_PREFIX + "ready.datanode-min-fraction";
-  public static final float DATANODE_LIVE_MIN_FRACTION_DEFAULT = 0.99f;
-  public static final String MISSING_BLOCKS_MAX_FRACTION_KEY =
-      DYNO_INFRA_PREFIX + "ready.missing-blocks-max-fraction";
-  public static final float MISSING_BLOCKS_MAX_FRACTION_DEFAULT = 0.0001f;
-  public static final String UNDERREPLICATED_BLOCKS_MAX_FRACTION_KEY =
-      DYNO_INFRA_PREFIX + "ready.underreplicated-blocks-max-fraction";
-  public static final float UNDERREPLICATED_BLOCKS_MAX_FRACTION_DEFAULT = 0.01f;
-
-  // The JMX bean queries to execute for various beans.
-  public static final String NAMENODE_STARTUP_PROGRESS_JMX_QUERY =
-      "Hadoop:service=NameNode,name=StartupProgress";
-  public static final String FSNAMESYSTEM_JMX_QUERY =
-      "Hadoop:service=NameNode,name=FSNamesystem";
-  public static final String FSNAMESYSTEM_STATE_JMX_QUERY =
-      "Hadoop:service=NameNode,name=FSNamesystemState";
-  public static final String NAMENODE_INFO_JMX_QUERY =
-      "Hadoop:service=NameNode,name=NameNodeInfo";
-  // The JMX property names of various properties.
-  public static final String JMX_MISSING_BLOCKS = "MissingBlocks";
-  public static final String JMX_UNDER_REPLICATED_BLOCKS =
-      "UnderReplicatedBlocks";
-  public static final String JMX_BLOCKS_TOTAL = "BlocksTotal";
-  public static final String JMX_LIVE_NODE_COUNT = "NumLiveDataNodes";
-  public static final String JMX_LIVE_NODES_LIST = "LiveNodes";
-
-  /**
-   * If a file matching {@value HADOOP_TAR_FILENAME_FORMAT} and {@code version}
-   * is found in {@code destinationDir}, return its path. Otherwise, first
-   * download the tarball from an Apache mirror. If the
-   * {@value APACHE_DOWNLOAD_MIRROR_KEY} configuration or system property
-   * (checked in that order) is set, use that as the mirror; else use
-   * {@value APACHE_DOWNLOAD_MIRROR_DEFAULT}.
-   *
-   * @param destinationDir destination directory to save a tarball
-   * @param version The version of Hadoop to download, like "2.7.4"
-   *                or "3.0.0-beta1"
-   * @param conf configuration
-   * @param log logger instance
-   * @return The path to the tarball.
-   * @throws IOException on failure
-   */
-  public static File fetchHadoopTarball(File destinationDir, String version,
-      Configuration conf, Logger log) throws IOException {
-    log.info("Looking for Hadoop tarball for version: " + version);
-    File destinationFile = new File(destinationDir,
-        String.format(HADOOP_TAR_FILENAME_FORMAT, version));
-    if (destinationFile.exists()) {
-      log.info("Found tarball at: " + destinationFile.getAbsolutePath());
-      return destinationFile;
-    }
-    String apacheMirror = conf.get(APACHE_DOWNLOAD_MIRROR_KEY);
-    if (apacheMirror == null) {
-      apacheMirror = System.getProperty(APACHE_DOWNLOAD_MIRROR_KEY,
-          APACHE_DOWNLOAD_MIRROR_DEFAULT);
-    }
-
-    if (!destinationDir.exists()) {
-      if (!destinationDir.mkdirs()) {
-        throw new IOException("Unable to create local dir: " + destinationDir);
-      }
-    }
-    URL downloadURL = new URL(apacheMirror + String
-        .format(APACHE_DOWNLOAD_MIRROR_SUFFIX_FORMAT, version, version));
-    log.info("Downloading tarball from: <{}> to <{}>", downloadURL,
-        destinationFile.getAbsolutePath());
-    FileUtils.copyURLToFile(downloadURL, destinationFile, 10000, 60000);
-    log.info("Completed downloading of Hadoop tarball");
-    return destinationFile;
-  }
-
-  /**
-   * Get the URI that can be used to access the launched NameNode for HDFS RPCs.
-   *
-   * @param nameNodeProperties The set of properties representing the
-   *                           information about the launched NameNode.
-   * @return The HDFS URI.
-   */
-  static URI getNameNodeHdfsUri(Properties nameNodeProperties) {
-    return URI.create(String.format("hdfs://%s:%s/",
-        nameNodeProperties.getProperty(DynoConstants.NN_HOSTNAME),
-        nameNodeProperties.getProperty(DynoConstants.NN_RPC_PORT)));
-  }
-
-  /**
-   * Get the URI that can be used to access the launched NameNode for HDFS
-   * Service RPCs (i.e. from DataNodes).
-   *
-   * @param nameNodeProperties The set of properties representing the
-   *                           information about the launched NameNode.
-   * @return The service RPC URI.
-   */
-  static URI getNameNodeServiceRpcAddr(Properties nameNodeProperties) {
-    return URI.create(String.format("hdfs://%s:%s/",
-        nameNodeProperties.getProperty(DynoConstants.NN_HOSTNAME),
-        nameNodeProperties.getProperty(DynoConstants.NN_SERVICERPC_PORT)));
-  }
-
-  /**
-   * Get the URI that can be used to access the launched NameNode's web UI, e.g.
-   * for JMX calls.
-   *
-   * @param nameNodeProperties The set of properties representing the
-   *                           information about the launched NameNode.
-   * @return The URI to the web UI.
-   */
-  static URI getNameNodeWebUri(Properties nameNodeProperties) {
-    return URI.create(String.format("http://%s:%s/",
-        nameNodeProperties.getProperty(DynoConstants.NN_HOSTNAME),
-        nameNodeProperties.getProperty(DynoConstants.NN_HTTP_PORT)));
-  }
-
-  /**
-   * Get the URI that can be used to access the tracking interface for the
-   * NameNode, i.e. the web UI of the NodeManager hosting the NameNode
-   * container.
-   *
-   * @param nameNodeProperties The set of properties representing the
-   *                           information about the launched NameNode.
-   * @return The tracking URI.
-   */
-  static URI getNameNodeTrackingUri(Properties nameNodeProperties)
-      throws IOException {
-    return URI.create(String.format("http://%s:%s/node/containerlogs/%s/%s/",
-        nameNodeProperties.getProperty(DynoConstants.NN_HOSTNAME),
-        nameNodeProperties.getProperty(Environment.NM_HTTP_PORT.name()),
-        nameNodeProperties.getProperty(Environment.CONTAINER_ID.name()),
-        UserGroupInformation.getCurrentUser().getShortUserName()));
-  }
-
-  /**
-   * Get the set of properties representing information about the launched
-   * NameNode. This method will wait for the information to be available until
-   * it is interrupted, or {@code shouldExit} returns true. It polls for a file
-   * present at {@code nameNodeInfoPath} once a second and uses that file to
-   * load the NameNode information.
-   *
-   * @param shouldExit Should return true iff this should stop waiting.
-   * @param conf The configuration.
-   * @param nameNodeInfoPath The path at which to expect the NameNode
-   *                         information file to be present.
-   * @param log Where to log information.
-   * @return Absent if this exited prematurely (i.e. due to {@code shouldExit}),
-   *         else returns a set of properties representing information about the
-   *         launched NameNode.
-   */
-  static Optional<Properties> waitForAndGetNameNodeProperties(
-      Supplier<Boolean> shouldExit, Configuration conf, Path nameNodeInfoPath,
-      Logger log) throws IOException, InterruptedException {
-    while (!shouldExit.get()) {
-      try (FSDataInputStream nnInfoInputStream = nameNodeInfoPath
-          .getFileSystem(conf).open(nameNodeInfoPath)) {
-        Properties nameNodeProperties = new Properties();
-        nameNodeProperties.load(nnInfoInputStream);
-        return Optional.of(nameNodeProperties);
-      } catch (FileNotFoundException fnfe) {
-        log.debug("NameNode host information not yet available");
-        Thread.sleep(1000);
-      } catch (IOException ioe) {
-        log.warn("Unable to fetch NameNode host information; retrying", ioe);
-        Thread.sleep(1000);
-      }
-    }
-    return Optional.empty();
-  }
-
-  /**
-   * Wait for the launched NameNode to finish starting up. Continues until
-   * {@code shouldExit} returns true.
-   *
-   * @param nameNodeProperties The set of properties containing information
-   *                           about the NameNode.
-   * @param shouldExit Should return true iff this should stop waiting.
-   * @param log Where to log information.
-   */
-  static void waitForNameNodeStartup(Properties nameNodeProperties,
-      Supplier<Boolean> shouldExit, Logger log)
-      throws IOException, InterruptedException {
-    if (shouldExit.get()) {
-      return;
-    }
-    log.info("Waiting for NameNode to finish starting up...");
-    waitForNameNodeJMXValue("Startup progress",
-        NAMENODE_STARTUP_PROGRESS_JMX_QUERY, "PercentComplete", 1.0, 0.01,
-        false, nameNodeProperties, shouldExit, log);
-    log.info("NameNode has started!");
-  }
-
-  /**
-   * Wait for the launched NameNode to be ready, i.e. to have at least 99% of
-   * its DataNodes register, have fewer than 0.01% of its blocks missing, and
-   * less than 1% of its blocks under replicated. Continues until the criteria
-   * have been met or {@code shouldExit} returns true.
-   *
-   * @param nameNodeProperties The set of properties containing information
-   *                           about the NameNode.
-   * @param numTotalDataNodes Total expected number of DataNodes to register.
-   * @param shouldExit Should return true iff this should stop waiting.
-   * @param log Where to log information.
-   */
-  static void waitForNameNodeReadiness(final Properties nameNodeProperties,
-      int numTotalDataNodes, boolean triggerBlockReports,
-      Supplier<Boolean> shouldExit, final Configuration conf, final Logger log)
-      throws IOException, InterruptedException {
-    if (shouldExit.get()) {
-      return;
-    }
-    int minDataNodes = (int) (conf.getFloat(DATANODE_LIVE_MIN_FRACTION_KEY,
-        DATANODE_LIVE_MIN_FRACTION_DEFAULT) * numTotalDataNodes);
-    log.info(String.format(
-        "Waiting for %d DataNodes to register with the NameNode...",
-        minDataNodes));
-    waitForNameNodeJMXValue("Number of live DataNodes",
-        FSNAMESYSTEM_STATE_JMX_QUERY, JMX_LIVE_NODE_COUNT, minDataNodes,
-        numTotalDataNodes * 0.001, false, nameNodeProperties, shouldExit, log);
-    final int totalBlocks = Integer.parseInt(fetchNameNodeJMXValue(
-        nameNodeProperties, FSNAMESYSTEM_STATE_JMX_QUERY, JMX_BLOCKS_TOTAL));
-    final AtomicBoolean doneWaiting = new AtomicBoolean(false);
-    if (triggerBlockReports) {
-      // This will be significantly lower than the actual expected number of
-      // blocks because it does not
-      // take into account replication factor. However the block reports are
-      // pretty binary; either a full
-      // report has been received or it hasn't. Thus we don't mind the large
-      // underestimate here.
-      final int blockThreshold = totalBlocks / numTotalDataNodes * 2;
-      // The Configuration object here is based on the host cluster, which may
-      // have security enabled; we need to disable it to talk to the Dyno NN
-      conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,
-          "simple");
-      conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,
-          "false");
-      final DistributedFileSystem dfs = (DistributedFileSystem) FileSystem
-          .get(getNameNodeHdfsUri(nameNodeProperties), conf);
-      log.info("Launching thread to trigger block reports for Datanodes with <"
-          + blockThreshold + " blocks reported");
-      Thread blockReportThread = new Thread(() -> {
-        // Here we count both Missing and UnderReplicated within under
-        // replicated
-        long lastUnderRepBlocks = Long.MAX_VALUE;
-        try {
-          while (true) { // this will eventually exit via an interrupt
-            try {
-              Thread.sleep(TimeUnit.MINUTES.toMillis(1));
-              long underRepBlocks = Long
-                  .parseLong(fetchNameNodeJMXValue(nameNodeProperties,
-                      FSNAMESYSTEM_JMX_QUERY, JMX_MISSING_BLOCKS))
-                  + Long.parseLong(fetchNameNodeJMXValue(nameNodeProperties,
-                      FSNAMESYSTEM_STATE_JMX_QUERY,
-                      JMX_UNDER_REPLICATED_BLOCKS));
-              long blockDecrease = lastUnderRepBlocks - underRepBlocks;
-              lastUnderRepBlocks = underRepBlocks;
-              if (blockDecrease < 0
-                  || blockDecrease > (totalBlocks * 0.001)) {
-                continue;
-              }
-
-              String liveNodeListString = fetchNameNodeJMXValue(
-                  nameNodeProperties, NAMENODE_INFO_JMX_QUERY,
-                  JMX_LIVE_NODES_LIST);
-              Set<String> datanodesToReport = parseStaleDataNodeList(
-                  liveNodeListString, blockThreshold, log);
-              if (datanodesToReport.isEmpty() && doneWaiting.get()) {
-                log.info("BlockReportThread exiting; all DataNodes have "
-                    + "reported blocks");
-                break;
-              }
-              log.info("Queueing {} Datanodes for block report: {}",
-                      datanodesToReport.size(),
-                      Joiner.on(",").join(datanodesToReport));
-              DatanodeInfo[] datanodes = dfs.getDataNodeStats();
-              int cnt = 0;
-              for (DatanodeInfo datanode : datanodes) {
-                if (datanodesToReport.contains(datanode.getXferAddr(true))) {
-                  Thread.sleep(1); // to throw an interrupt if one is found
-                  triggerDataNodeBlockReport(conf, datanode.getIpcAddr(true));
-                  cnt++;
-                  Thread.sleep(1000);
-                }
-              }
-              if (cnt != datanodesToReport.size()) {
-                log.warn("Found {} Datanodes to queue block reports for but "
-                        + "was only able to trigger {}",
-                    datanodesToReport.size(), cnt);
-              }
-            } catch (IOException ioe) {
-              log.warn("Exception encountered in block report thread", ioe);
-            }
-          }
-        } catch (InterruptedException ie) {
-          // Do nothing; just exit
-        }
-        log.info("Block reporting thread exiting");
-      });
-      blockReportThread.setDaemon(true);
-      blockReportThread
-          .setUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());
-      blockReportThread.start();
-    }
-    float maxMissingBlocks = totalBlocks * conf.getFloat(
-        MISSING_BLOCKS_MAX_FRACTION_KEY, MISSING_BLOCKS_MAX_FRACTION_DEFAULT);
-    log.info("Waiting for MissingBlocks to fall below {}...",
-        maxMissingBlocks);
-    waitForNameNodeJMXValue("Number of missing blocks", FSNAMESYSTEM_JMX_QUERY,
-        JMX_MISSING_BLOCKS, maxMissingBlocks, totalBlocks * 0.0001, true,
-        nameNodeProperties, shouldExit, log);
-    float maxUnderreplicatedBlocks = totalBlocks
-        * conf.getFloat(UNDERREPLICATED_BLOCKS_MAX_FRACTION_KEY,
-            UNDERREPLICATED_BLOCKS_MAX_FRACTION_DEFAULT);
-    log.info("Waiting for UnderReplicatedBlocks to fall below {}...",
-        maxUnderreplicatedBlocks);
-    waitForNameNodeJMXValue("Number of under replicated blocks",
-        FSNAMESYSTEM_STATE_JMX_QUERY, JMX_UNDER_REPLICATED_BLOCKS,
-        maxUnderreplicatedBlocks, totalBlocks * 0.001, true, nameNodeProperties,
-        shouldExit, log);
-    log.info("NameNode is ready for use!");
-    doneWaiting.set(true);
-  }
-
-  /**
-   * Trigger a block report on a given DataNode.
-   *
-   * @param conf Configuration
-   * @param dataNodeTarget The target; should be like {@code <host>:<port>}
-   */
-  private static void triggerDataNodeBlockReport(Configuration conf,
-      String dataNodeTarget) throws IOException {
-    InetSocketAddress datanodeAddr = NetUtils.createSocketAddr(dataNodeTarget);
-
-    ClientDatanodeProtocol dnProtocol = DFSUtilClient
-        .createClientDatanodeProtocolProxy(datanodeAddr,
-            UserGroupInformation.getCurrentUser(), conf,
-            NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));
-
-    dnProtocol.triggerBlockReport(new BlockReportOptions.Factory().build());
-  }
-
-  /**
-   * Poll the launched NameNode's JMX for a specific value, waiting for it to
-   * cross some threshold. Continues until the threshold has been crossed or
-   * {@code shouldExit} returns true. Periodically logs the current value.
-   *
-   * @param valueName The human-readable name of the value which is being
-   *                  polled (for printing purposes only).
-   * @param jmxBeanQuery The JMX bean query to execute; should return a JMX
-   *                     property matching {@code jmxProperty}.
-   * @param jmxProperty The name of the JMX property whose value should be
-   *                    polled.
-   * @param threshold The threshold value to wait for the JMX property to be
-   *                  above/below.
-   * @param printThreshold The threshold between each log statement; controls
-   *                       how frequently the value is printed. For example,
-   *                       if this was 10, a statement would be logged every
-   *                       time the value has changed by more than 10.
-   * @param decreasing True iff the property's value is decreasing and this
-   *                   should wait until it is lower than threshold; else the
-   *                   value is treated as increasing and will wait until it
-   *                   is higher than threshold.
-   * @param nameNodeProperties The set of properties containing information
-   *                           about the NameNode.
-   * @param shouldExit Should return true iff this should stop waiting.
-   * @param log Where to log information.
-   */
-  @SuppressWarnings("checkstyle:parameternumber")
-  private static void waitForNameNodeJMXValue(String valueName,
-      String jmxBeanQuery, String jmxProperty, double threshold,
-      double printThreshold, boolean decreasing, Properties nameNodeProperties,
-      Supplier<Boolean> shouldExit, Logger log) throws InterruptedException {
-    double lastPrintedValue = decreasing ? Double.MAX_VALUE : Double.MIN_VALUE;
-    double value;
-    int retryCount = 0;
-    long startTime = Time.monotonicNow();
-    while (!shouldExit.get()) {
-      try {
-        value = Double.parseDouble(fetchNameNodeJMXValue(nameNodeProperties,
-            jmxBeanQuery, jmxProperty));
-        if ((decreasing && value <= threshold)
-            || (!decreasing && value >= threshold)) {
-          log.info(String.format(
-              "%s = %.2f; %s threshold of %.2f; done waiting after %d ms.",
-              valueName, value, decreasing ? "below" : "above", threshold,
-              Time.monotonicNow() - startTime));
-          break;
-        } else if (Math.abs(value - lastPrintedValue) >= printThreshold) {
-          log.info(String.format("%s: %.2f", valueName, value));
-          lastPrintedValue = value;
-        }
-      } catch (IOException ioe) {
-        if (++retryCount % 20 == 0) {
-          log.warn("Unable to fetch {}; retried {} times / waited {} ms",
-              valueName, retryCount, Time.monotonicNow() - startTime, ioe);
-        }
-      }
-      Thread.sleep(3000);
-    }
-  }
-
-  static Set<String> parseStaleDataNodeList(String liveNodeJsonString,
-      final int blockThreshold, final Logger log) throws IOException {
-    final Set<String> dataNodesToReport = new HashSet<>();
-
-    JsonFactory fac = new JsonFactory();
-    JsonParser parser = fac.createParser(IOUtils
-        .toInputStream(liveNodeJsonString, StandardCharsets.UTF_8.name()));
-
-    int objectDepth = 0;
-    String currentNodeAddr = null;
-    for (JsonToken tok = parser.nextToken(); tok != null; tok = parser
-        .nextToken()) {
-      if (tok == JsonToken.START_OBJECT) {
-        objectDepth++;
-      } else if (tok == JsonToken.END_OBJECT) {
-        objectDepth--;
-      } else if (tok == JsonToken.FIELD_NAME) {
-        if (objectDepth == 1) {
-          // This is where the Datanode identifiers are stored
-          currentNodeAddr = parser.getCurrentName();
-        } else if (objectDepth == 2) {
-          if (parser.getCurrentName().equals("numBlocks")) {
-            JsonToken valueToken = parser.nextToken();
-            if (valueToken != JsonToken.VALUE_NUMBER_INT
-                || currentNodeAddr == null) {
-              throw new IOException(String.format("Malformed LiveNodes JSON; "
-                      + "got token = %s; currentNodeAddr = %s: %s",
-                  valueToken, currentNodeAddr, liveNodeJsonString));
-            }
-            int numBlocks = parser.getIntValue();
-            if (numBlocks < blockThreshold) {
-              log.debug(String.format(
-                  "Queueing Datanode <%s> for block report; numBlocks = %d",
-                  currentNodeAddr, numBlocks));
-              dataNodesToReport.add(currentNodeAddr);
-            } else {
-              log.debug(String.format(
-                  "Not queueing Datanode <%s> for block report; numBlocks = %d",
-                  currentNodeAddr, numBlocks));
-            }
-          }
-        }
-      }
-    }
-    return dataNodesToReport;
-  }
-
-  /**
-   * Fetch a value from the launched NameNode's JMX.
-   *
-   * @param nameNodeProperties The set of properties containing information
-   *                           about the NameNode.
-   * @param jmxBeanQuery The JMX bean query to execute; should return a
-   *                     JMX property matching {@code jmxProperty}.
-   * @param property The name of the JMX property whose value should be polled.
-   * @return The value associated with the property.
-   */
-  static String fetchNameNodeJMXValue(Properties nameNodeProperties,
-      String jmxBeanQuery, String property) throws IOException {
-    URI nnWebUri = getNameNodeWebUri(nameNodeProperties);
-    URL queryURL;
-    try {
-      queryURL = new URL(nnWebUri.getScheme(), nnWebUri.getHost(),
-          nnWebUri.getPort(), "/jmx?qry=" + jmxBeanQuery);
-    } catch (MalformedURLException e) {
-      throw new IllegalArgumentException("Invalid JMX query: \"" + jmxBeanQuery
-          + "\" against " + "NameNode URI: " + nnWebUri);
-    }
-    HttpURLConnection conn = (HttpURLConnection) queryURL.openConnection();
-    if (conn.getResponseCode() != 200) {
-      throw new IOException(
-          "Unable to retrieve JMX: " + conn.getResponseMessage());
-    }
-    InputStream in = conn.getInputStream();
-    JsonFactory fac = new JsonFactory();
-    JsonParser parser = fac.createParser(in);
-    if (parser.nextToken() != JsonToken.START_OBJECT
-        || parser.nextToken() != JsonToken.FIELD_NAME
-        || !parser.getCurrentName().equals("beans")
-        || parser.nextToken() != JsonToken.START_ARRAY
-        || parser.nextToken() != JsonToken.START_OBJECT) {
-      throw new IOException(
-          "Unexpected format of JMX JSON response for: " + jmxBeanQuery);
-    }
-    int objectDepth = 1;
-    String ret = null;
-    while (objectDepth > 0) {
-      JsonToken tok = parser.nextToken();
-      if (tok == JsonToken.START_OBJECT) {
-        objectDepth++;
-      } else if (tok == JsonToken.END_OBJECT) {
-        objectDepth--;
-      } else if (tok == JsonToken.FIELD_NAME) {
-        if (parser.getCurrentName().equals(property)) {
-          parser.nextToken();
-          ret = parser.getText();
-          break;
-        }
-      }
-    }
-    parser.close();
-    in.close();
-    conn.disconnect();
-    if (ret == null) {
-      throw new IOException(
-          "Property " + property + " not found within " + jmxBeanQuery);
-    } else {
-      return ret;
-    }
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoResource.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoResource.java
deleted file mode 100644
index 1a9253f5aa6..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/DynoResource.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import java.util.Map;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.yarn.api.records.LocalResourceType;
-
-class DynoResource {
-
-  private final String name;
-  private final LocalResourceType type;
-  private final String resourcePath;
-
-  DynoResource(String name, LocalResourceType type, String resourcePath) {
-    this.name = name;
-    this.type = type;
-    this.resourcePath = resourcePath;
-  }
-
-  public Path getPath(Map<String, String> env) {
-    return new Path(env.get(getLocationEnvVar()));
-  }
-
-  public long getTimestamp(Map<String, String> env) {
-    return Long.parseLong(env.get(getTimestampEnvVar()));
-  }
-
-  public long getLength(Map<String, String> env) {
-    return Long.parseLong(env.get(getLengthEnvVar()));
-  }
-
-  public String getLocationEnvVar() {
-    return name + "_LOCATION";
-  }
-
-  public String getTimestampEnvVar() {
-    return name + "_TIMESTAMP";
-  }
-
-  public String getLengthEnvVar() {
-    return name + "_LENGTH";
-  }
-
-  public LocalResourceType getType() {
-    return type;
-  }
-
-  public String getResourcePath() {
-    return resourcePath;
-  }
-
-  public String toString() {
-    return name;
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/SimulatedDataNodes.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/SimulatedDataNodes.java
deleted file mode 100644
index 0189d1fd1a1..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/SimulatedDataNodes.java
+++ /dev/null
@@ -1,185 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.net.URI;
-import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-
-import org.apache.commons.lang3.exception.ExceptionUtils;
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.fs.FSDataInputStream;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.hdfs.HdfsConfiguration;
-import org.apache.hadoop.hdfs.MiniDFSCluster;
-import org.apache.hadoop.hdfs.protocol.Block;
-import org.apache.hadoop.hdfs.protocol.HdfsConstants;
-import org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption;
-import org.apache.hadoop.hdfs.server.datanode.DataNode;
-import org.apache.hadoop.hdfs.server.datanode.DataNodeTestUtils;
-import org.apache.hadoop.hdfs.server.datanode.SimulatedFSDataset;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.util.Time;
-import org.apache.hadoop.util.Tool;
-import org.apache.hadoop.util.ToolRunner;
-
-/**
- * Starts up a number of DataNodes within the same JVM. These DataNodes all use
- * {@link org.apache.hadoop.hdfs.server.datanode.SimulatedFSDataset}, so they do
- * not store any actual data, and do not persist anything to disk; they maintain
- * all metadata in memory. This is useful for testing and simulation purposes.
- * <p>
- * The DataNodes will attempt to connect to a NameNode defined by the default
- * FileSystem. There will be one DataNode started for each block list file
- * passed as an argument. Each of these files should contain a list of blocks
- * that the corresponding DataNode should contain, as specified by a triplet of
- * block ID, block size, and generation stamp. Each line of the file is one
- * block, in the format:
- * <p>
- * {@code blockID,blockGenStamp,blockSize}
- * <p>
- * This class is loosely based off of
- * {@link org.apache.hadoop.hdfs.DataNodeCluster}.
- */
-public class SimulatedDataNodes extends Configured implements Tool {
-
-  // Set this arbitrarily large (100TB) since we don't care about storage
-  // capacity
-  private static final long STORAGE_CAPACITY = 100 * 2L << 40;
-  private static final String USAGE = "Usage: "
-      + "org.apache.hadoop.tools.dynamometer.SimulatedDataNodes "
-      + "bpid blockListFile1 [ blockListFileN ... ]\n"
-      + "   bpid should be the ID of the block pool to which these DataNodes "
-      + "belong.\n"
-      + "   Each blockListFile specified should contain a list of blocks to "
-      + "be served by one DataNode.\n"
-      + "   See the Javadoc of this class for more detail.";
-
-  static void printUsageExit(String err) {
-    System.out.println(err);
-    System.out.println(USAGE);
-    throw new RuntimeException(err);
-  }
-
-  public static void main(String[] args) throws Exception {
-    SimulatedDataNodes datanodes = new SimulatedDataNodes();
-    ToolRunner.run(new HdfsConfiguration(), datanodes, args);
-  }
-
-  public int run(String[] args) throws Exception {
-    if (args.length < 2) {
-      printUsageExit("Not enough arguments");
-    }
-    String bpid = args[0];
-    List<Path> blockListFiles = new ArrayList<>();
-    for (int i = 1; i < args.length; i++) {
-      blockListFiles.add(new Path(args[i]));
-    }
-
-    URI defaultFS = FileSystem.getDefaultUri(getConf());
-    if (!HdfsConstants.HDFS_URI_SCHEME.equals(defaultFS.getScheme())) {
-      printUsageExit(
-          "Must specify an HDFS-based default FS! Got <" + defaultFS + ">");
-    }
-    String nameNodeAdr = defaultFS.getAuthority();
-    if (nameNodeAdr == null) {
-      printUsageExit("No NameNode address and port in config");
-    }
-    System.out.println("DataNodes will connect to NameNode at " + nameNodeAdr);
-
-    String loc = DataNode.getStorageLocations(getConf()).get(0).toString();
-    loc = loc.substring(loc.indexOf("]") + 1); // delete storage type
-    String path = new URI(loc).getPath();
-    System.setProperty(MiniDFSCluster.PROP_TEST_BUILD_DATA, path);
-    SimulatedFSDataset.setFactory(getConf());
-    getConf().setLong(SimulatedFSDataset.CONFIG_PROPERTY_CAPACITY,
-        STORAGE_CAPACITY);
-
-    UserGroupInformation.setConfiguration(getConf());
-    MiniDFSCluster mc = new MiniDFSCluster();
-    try {
-      mc.formatDataNodeDirs();
-    } catch (IOException e) {
-      System.out.println("Error formatting DataNode dirs: " + e);
-      throw new RuntimeException("Error formatting DataNode dirs", e);
-    }
-
-    try {
-      System.out.println("Found " + blockListFiles.size()
-          + " block listing files; launching DataNodes accordingly.");
-      mc.startDataNodes(getConf(), blockListFiles.size(), null, false,
-          StartupOption.REGULAR, null, null, null, null, false, true, true,
-          null, null, null);
-      long startTime = Time.monotonicNow();
-      System.out.println("Waiting for DataNodes to connect to NameNode and "
-          + "init storage directories.");
-      Set<DataNode> datanodesWithoutFSDataset = new HashSet<>(
-          mc.getDataNodes());
-      while (!datanodesWithoutFSDataset.isEmpty()) {
-        datanodesWithoutFSDataset
-            .removeIf((dn) -> DataNodeTestUtils.getFSDataset(dn) != null);
-        Thread.sleep(100);
-      }
-      System.out.println("Waited " + (Time.monotonicNow() - startTime)
-          + " ms for DataNode FSDatasets to be ready");
-
-      for (int dnIndex = 0; dnIndex < blockListFiles.size(); dnIndex++) {
-        Path blockListFile = blockListFiles.get(dnIndex);
-        try (FSDataInputStream fsdis =
-            blockListFile.getFileSystem(getConf()).open(blockListFile);
-            BufferedReader reader = new BufferedReader(
-                new InputStreamReader(fsdis, StandardCharsets.UTF_8))) {
-          List<Block> blockList = new ArrayList<>();
-          int cnt = 0;
-          for (String line = reader.readLine(); line != null; line = reader
-              .readLine()) {
-            // Format of the listing files is blockID,blockGenStamp,blockSize
-            String[] blockInfo = line.split(",");
-            blockList.add(new Block(Long.parseLong(blockInfo[0]),
-                Long.parseLong(blockInfo[2]), Long.parseLong(blockInfo[1])));
-            cnt++;
-          }
-          try {
-            mc.injectBlocks(dnIndex, blockList, bpid);
-          } catch (IOException ioe) {
-            System.out.printf("Error injecting blocks into DataNode %d for "
-                    + "block pool %s: %s%n", dnIndex, bpid,
-                ExceptionUtils.getStackTrace(ioe));
-          }
-          System.out.printf(
-              "Injected %d blocks into DataNode %d for block pool %s%n",
-              cnt, dnIndex, bpid);
-        }
-      }
-
-    } catch (IOException e) {
-      System.out.println(
-          "Error creating DataNodes: " + ExceptionUtils.getStackTrace(e));
-      return 1;
-    }
-    return 0;
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/package-info.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/package-info.java
deleted file mode 100644
index b6a7630a93c..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/package-info.java
+++ /dev/null
@@ -1,29 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/**
- * The Dynamometer tool is used to stress test the HDFS NameNode by setting
- * up a realistic environment consistent of fake DataNodes and a real NameNode
- * with a real FS namesystem and near-real user workload (RPCs). Please see
- * the documentation for more detail.
- */
-@InterfaceAudience.Private
-@InterfaceStability.Unstable
-package org.apache.hadoop.tools.dynamometer;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/resources/start-component.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/resources/start-component.sh
deleted file mode 100644
index 3a07b72f182..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/resources/start-component.sh
+++ /dev/null
@@ -1,348 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# Script for launching Dynamometer components within YARN containers.
-# USAGE:
-# ./start-component.sh namenode hdfs_storage
-# OR
-# ./start-component.sh datanode nn_servicerpc_address sleep_time_sec
-# First parameter should be component being launched, either `datanode` or `namenode`
-# If component is namenode, hdfs_storage is expected to point to a location to
-#   write out shared files such as the file containing the information about
-#   which ports the NN started on (at nn_info.prop) and the namenode's metrics
-#   (at namenode_metrics)
-# If component is datanode, nn_servicerpc_address is expected to point to the
-#   servicerpc address of the namenode. sleep_time_sec is the amount of time that
-#   should be allowed to elapse before launching anything. The
-#   `org.apache.hadoop.tools.dynamometer.SimulatedDataNodes` class will be used to start multiple
-#   DataNodes within the same JVM, and they will store their block files in memory.
-
-component="$1"
-if [[ "$component" != "datanode" && "$component" != "namenode" ]]; then
-  echo "Unknown component type: '${component}'"
-  exit 1
-fi
-if [[ "$component" = "namenode" ]]; then
-  if [[ $# -lt 2 ]]; then
-    echo "Not enough arguments for NameNode"
-    exit 1
-  fi
-  hdfsStoragePath="$2"
-else
-  if [[ $# -lt 3 ]]; then
-    echo "Not enough arguments for DataNode"
-    exit 1
-  fi
-  nnServiceRpcAddress="$2"
-  launchDelaySec="$3"
-fi
-containerID=${CONTAINER_ID##*_}
-
-echo "Starting ${component} with ID ${containerID}"
-echo "PWD is: $(pwd)"
-
-confDir="$(pwd)/conf/etc/hadoop"
-umask 022
-baseDir="$(pwd)/dyno-node"
-
-# Set Hadoop's log dir to that of the NodeManager,
-# then YARN will automatically help us handle the logs
-# May be a comma-separated list; just take the first one
-logDir=${LOG_DIRS%%,*}
-
-pidDir="$baseDir/pid"
-baseHttpPort=50075
-baseRpcPort=9000
-baseServiceRpcPort=9020
-
-rm -rf "$baseDir"
-mkdir -p "$pidDir"
-chmod 755 "$baseDir"
-chmod 700 "$pidDir"
-
-# Set Hadoop variables for component
-hadoopHome="$(find -H "$(pwd)/hadoopBinary" -maxdepth 1 -mindepth 1 -type d | head -n 1)"
-# Save real environment for later
-hadoopConfOriginal=${HADOOP_CONF_DIR:-$confDir}
-hadoopHomeOriginal=${HADOOP_HOME:-$hadoopHome}
-echo "Saving original HADOOP_HOME as: $hadoopHomeOriginal"
-echo "Saving original HADOOP_CONF_DIR as: $hadoopConfOriginal"
-## @description  A function to perform an HDFS command under the system Hadoop
-##               instead of the Hadoop-under-test.
-## @audience     private
-## @stability    evolving
-function hdfs_original {
-  HADOOP_HOME="${hadoopHomeOriginal}" HADOOP_CONF_DIR="${hadoopConfOriginal}" \
-  HADOOP_HDFS_HOME="${hadoopHomeOriginal}" HADOOP_COMMON_HOME="${hadoopHomeOriginal}" \
-  "${hadoopHomeOriginal}/bin/hdfs" "$@"
-}
-
-extraClasspathDir="$(pwd)/additionalClasspath/"
-mkdir -p "${extraClasspathDir}"
-
-# DataNodes need junit jar to run SimulatedDataNodes
-junitClassPath="$(find "${hadoopHome}" -name "junit*.jar" | head -n 1)"
-if [[ -z "$junitClassPath" ]]; then
-  echo "Can't find junit jar file in ${hadoopHome}."
-  exit 1
-fi
-
-# Change environment variables for the Hadoop process
-export HADOOP_HOME="$hadoopHome"
-export HADOOP_PREFIX="$hadoopHome"
-export PATH="$HADOOP_HOME/bin:$PATH"
-export HADOOP_HDFS_HOME="$hadoopHome"
-export HADOOP_COMMON_HOME="$hadoopHome"
-export HADOOP_YARN_HOME="$hadoopHome"
-export LIBHDFS_OPTS="-Djava.library.path=$hadoopHome/lib/native"
-export HADOOP_MAPRED_HOME="$hadoopHome"
-export HADOOP_CONF_DIR="${confDir}"
-export YARN_CONF_DIR="${confDir}"
-export HADOOP_LOG_DIR="${logDir}"
-export HADOOP_PID_DIR="${pidDir}"
-HADOOP_CLASSPATH="$(pwd)/dependencies/*:$extraClasspathDir:$junitClassPath"
-export HADOOP_CLASSPATH
-echo "Environment variables are set as:"
-echo "(note that this doesn't include changes made by hadoop-env.sh)"
-printenv
-echo -e "\n\n"
-
-# Starting from base_port, add the last two digits of the containerID,
-# then keep searching upwards for a free port
-# find_available_port base_port
-find_available_port() {
-  basePort="$1"
-  currPort=$((basePort+((10#$containerID)%100)))
-  while netstat -nl | grep -q ":${currPort}[[:space:]]"; do
-    currPort=$((currPort+1))
-  done
-  echo "$currPort"
-}
-
-configOverrides=(
-  -D "hadoop.tmp.dir=${baseDir}"
-  -D "hadoop.security.authentication=simple"
-  -D "hadoop.security.authorization=false"
-  -D "dfs.http.policy=HTTP_ONLY"
-  -D "dfs.nameservices="
-  -D "dfs.web.authentication.kerberos.principal="
-  -D "dfs.web.authentication.kerberos.keytab="
-  -D "hadoop.http.filter.initializers="
-  -D "dfs.datanode.kerberos.principal="
-  -D "dfs.datanode.keytab.file="
-  -D "dfs.domain.socket.path="
-  -D "dfs.client.read.shortcircuit=false"
-)
-# NOTE: Must manually unset dfs.namenode.shared.edits.dir in configs
-#       because setting it to be empty is not enough (must be null)
-
-if [[ "$component" = "datanode" ]]; then
-
-  if ! dataDirsOrig="$(hdfs getconf "${configOverrides[@]}" -confKey dfs.datanode.data.dir)"; then
-    echo "Unable to fetch data directories from config; using default"
-    dataDirsOrig="/data-dir/1,/data-dir/2"
-  fi
-  dataDirsOrig=(${dataDirsOrig//,/ })
-  dataDirs=""
-  for dataDir in "${dataDirsOrig[@]}"; do
-    stripped="file://$baseDir/${dataDir#file://}"
-    dataDirs="$dataDirs,$stripped"
-  done
-  dataDirs=${dataDirs:1}
-
-  echo "Going to sleep for $launchDelaySec sec..."
-  for _ in $(seq 1 "${launchDelaySec}"); do
-    sleep 1
-    if ! kill -0 $PPID 2>/dev/null; then
-      echo "Parent process ($PPID) exited while waiting; now exiting"
-      exit 0
-     fi
-  done
-
-  versionFile="$(pwd)/VERSION"
-  bpId="$(grep "${versionFile}" -e blockpoolID | awk -F= '{print $2}')"
-  listingFiles=()
-  blockDir="$(pwd)/blocks"
-  for listingFile in "${blockDir}"/*; do
-    listingFiles+=("file://${listingFile}")
-  done
-
-  datanodeClusterConfigs=(
-    -D "fs.defaultFS=${nnServiceRpcAddress}"
-    -D "dfs.datanode.hostname=$(hostname)"
-    -D "dfs.datanode.data.dir=${dataDirs}"
-    -D "dfs.datanode.ipc.address=0.0.0.0:0"
-    -D "dfs.datanode.http.address=0.0.0.0:0"
-    -D "dfs.datanode.address=0.0.0.0:0"
-    -D "dfs.datanode.directoryscan.interval=-1"
-    -D "fs.du.interval=43200000"
-    -D "fs.getspaceused.jitterMillis=21600000"
-    ${configOverrides[@]}
-    "${bpId}"
-    ${listingFiles[@]}
-  )
-
-  echo "Executing the following:"
-  echo "${HADOOP_HOME}/bin/hadoop org.apache.hadoop.tools.dynamometer.SimulatedDataNodes \
-    $DN_ADDITIONAL_ARGS" "${datanodeClusterConfigs[@]}"
-  # The argument splitting of DN_ADDITIONAL_ARGS is desirable behavior here
-  # shellcheck disable=SC2086
-  "${HADOOP_HOME}/bin/hadoop" org.apache.hadoop.tools.dynamometer.SimulatedDataNodes \
-    $DN_ADDITIONAL_ARGS "${datanodeClusterConfigs[@]}" &
-  launchSuccess="$?"
-  componentPID="$!"
-  if [[ ${launchSuccess} -ne 0 ]]; then
-    echo "Unable to launch DataNode cluster; exiting."
-    exit 1
-  fi
-
-elif [[ "$component" = "namenode" ]]; then
-
-  nnHostname="${NM_HOST}"
-  nnRpcPort="$(find_available_port "$baseRpcPort")"
-  nnServiceRpcPort="$(find_available_port "$baseServiceRpcPort")"
-  nnHttpPort="$(find_available_port "$baseHttpPort")"
-
-  nnInfoLocalPath="$(pwd)/nn_info.prop"
-  rm -f "$nnInfoLocalPath"
-  # Port and host information to be uploaded to the non-Dynamometer HDFS
-  # to be consumed by the AM and Client
-  cat > "$nnInfoLocalPath" << EOF
-NN_HOSTNAME=${nnHostname}
-NN_RPC_PORT=${nnRpcPort}
-NN_SERVICERPC_PORT=${nnServiceRpcPort}
-NN_HTTP_PORT=${nnHttpPort}
-NM_HTTP_PORT=${NM_HTTP_PORT}
-CONTAINER_ID=${CONTAINER_ID}
-EOF
-  echo "Using the following ports for the namenode:"
-  cat "$nnInfoLocalPath"
-  nnInfoRemotePath="$hdfsStoragePath/nn_info.prop"
-  # We use the original conf dir since we are uploading to the non-dynamometer cluster
-  hdfs_original dfs -copyFromLocal -f "$nnInfoLocalPath" "$nnInfoRemotePath"
-  echo "Uploaded namenode port info to $nnInfoRemotePath"
-
-  if [[ "$NN_FILE_METRIC_PERIOD" -gt 0 ]]; then
-    nnMetricOutputFileLocal="$HADOOP_LOG_DIR/namenode_metrics"
-    nnMetricPropsFileLocal="$extraClasspathDir/hadoop-metrics2-namenode.properties"
-    if [[ -f "$confDir/hadoop-metrics2-namenode.properties" ]]; then
-      cp "$confDir/hadoop-metrics2-namenode.properties" "$nnMetricPropsFileLocal"
-      chmod u+w "$nnMetricPropsFileLocal"
-    elif [[ -f "$confDir/hadoop-metrics2.properties" ]]; then
-      cp "$confDir/hadoop-metrics2.properties" "$nnMetricPropsFileLocal"
-      chmod u+w "$nnMetricPropsFileLocal"
-    fi
-    cat >> "$nnMetricPropsFileLocal" << EOF
-namenode.sink.dyno-file.period=${NN_FILE_METRIC_PERIOD}
-namenode.sink.dyno-file.class=org.apache.hadoop.metrics2.sink.FileSink
-namenode.sink.dyno-file.filename=${nnMetricOutputFileLocal}
-EOF
-  fi
-
-  nameDir="${NN_NAME_DIR:-${baseDir}/name-data}"
-  editsDir="${NN_EDITS_DIR:-${baseDir}/name-data}"
-  checkpointDir="$baseDir/checkpoint"
-  rm -rf "$nameDir" "$editsDir" "$checkpointDir"
-  mkdir -p "$nameDir/current" "$editsDir/current" "$checkpointDir"
-  chmod -R 700 "$nameDir" "$editsDir" "$checkpointDir"
-  # Link all of the fsimage files into the name dir
-  find "$(pwd)" -maxdepth 1 -mindepth 1 \( -name "fsimage_*" -or -name "VERSION" \) -execdir ln -snf "$(pwd)/{}" "$nameDir/current/{}" \;
-  chmod 700 "$nameDir"/current/*
-
-  namenodeConfigs=(
-    -D "fs.defaultFS=hdfs://${nnHostname}:${nnRpcPort}"
-    -D "dfs.namenode.rpc-address=${nnHostname}:${nnRpcPort}"
-    -D "dfs.namenode.servicerpc-address=${nnHostname}:${nnServiceRpcPort}"
-    -D "dfs.namenode.http-address=${nnHostname}:${nnHttpPort}"
-    -D "dfs.namenode.https-address=${nnHostname}:0"
-    -D "dfs.namenode.name.dir=file://${nameDir}"
-    -D "dfs.namenode.edits.dir=file://${editsDir}"
-    -D "dfs.namenode.checkpoint.dir=file://${baseDir}/checkpoint"
-    -D "dfs.namenode.kerberos.internal.spnego.principal="
-    -D "dfs.hosts="
-    -D "dfs.hosts.exclude="
-    -D "dfs.namenode.legacy-oiv-image.dir="
-    -D "dfs.namenode.kerberos.principal="
-    -D "dfs.namenode.keytab.file="
-    -D "dfs.namenode.safemode.threshold-pct=0.0f"
-    -D "dfs.permissions.enabled=true"
-    -D "dfs.cluster.administrators=\"*\""
-    -D "dfs.block.replicator.classname=org.apache.hadoop.tools.dynamometer.BlockPlacementPolicyAlwaysSatisfied"
-    -D "hadoop.security.impersonation.provider.class=org.apache.hadoop.tools.dynamometer.AllowAllImpersonationProvider"
-    ${configOverrides[@]}
-  )
-
-  echo "Executing the following:"
-  echo "${HADOOP_HOME}/sbin/hadoop-daemon.sh start namenode" "${namenodeConfigs[@]}" "$NN_ADDITIONAL_ARGS"
-  # The argument splitting of NN_ADDITIONAL_ARGS is desirable behavior here
-  # shellcheck disable=SC2086
-  if ! "${HADOOP_HOME}/sbin/hadoop-daemon.sh" start namenode "${namenodeConfigs[@]}" $NN_ADDITIONAL_ARGS; then
-    echo "Unable to launch NameNode; exiting."
-    exit 1
-  fi
-  componentPIDFile="${pidDir}/hadoop-$(whoami)-${component}.pid"
-  while [[ ! -f "$componentPIDFile" ]]; do sleep 1; done
-  componentPID=$(cat "$componentPIDFile")
-
-  if [[ "$NN_FILE_METRIC_PERIOD" -gt 0 ]]; then
-    nnMetricOutputFileRemote="$hdfsStoragePath/namenode_metrics"
-    echo "Going to attempt to upload metrics to: $nnMetricOutputFileRemote"
-
-    touch "$nnMetricOutputFileLocal"
-    (tail -n 999999 -f "$nnMetricOutputFileLocal" & echo $! >&3) 3>metricsTailPIDFile | \
-      hdfs_original dfs -appendToFile - "$nnMetricOutputFileRemote" &
-    metricsTailPID="$(cat metricsTailPIDFile)"
-    if [[ "$metricsTailPID" = "" ]]; then
-      echo "Unable to upload metrics to HDFS"
-    else
-      echo "Metrics will be uploaded to HDFS by PID: $metricsTailPID"
-    fi
-  fi
-fi
-
-echo "Started $component at pid $componentPID"
-
-## @description  Perform cleanup, killing any outstanding processes and deleting files
-## @audience     private
-## @stability    evolving
-function cleanup {
-  echo "Cleaning up $component at pid $componentPID"
-  kill -9 "$componentPID"
-
-  if [[ "$metricsTailPID" != "" ]]; then
-    echo "Stopping metrics streaming at pid $metricsTailPID"
-    kill "$metricsTailPID"
-  fi
-
-  echo "Deleting any remaining files"
-  rm -rf "$baseDir"
-}
-
-trap cleanup EXIT
-
-echo "Waiting for parent process (PID: $PPID) OR $component process to exit"
-while kill -0 "${componentPID}" 2>/dev/null && kill -0 $PPID 2>/dev/null; do
-  sleep 1
-done
-
-if kill -0 $PPID 2>/dev/null; then
-  echo "$component process exited; continuing to finish"
-  exit 1
-else
-  echo "Parent process exited; continuing to finish"
-  exit 0
-fi
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynamometerInfra.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynamometerInfra.java
deleted file mode 100644
index 8818b1ef244..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynamometerInfra.java
+++ /dev/null
@@ -1,580 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import org.apache.hadoop.util.Sets;
-import java.util.Optional;
-import java.util.concurrent.TimeoutException;
-import java.util.concurrent.TimeUnit;
-import java.util.function.Supplier;
-import org.apache.hadoop.test.PlatformAssumptions;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditLogDirectParser;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper;
-import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.URI;
-import java.net.URISyntaxException;
-import java.net.URL;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Properties;
-import java.util.Set;
-import java.util.UUID;
-import java.util.zip.ZipEntry;
-import java.util.zip.ZipOutputStream;
-import org.apache.commons.io.FileUtils;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.FSDataInputStream;
-import org.apache.hadoop.fs.FSDataOutputStream;
-import org.apache.hadoop.fs.FileStatus;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.fs.permission.FsPermission;
-import org.apache.hadoop.hdfs.DistributedFileSystem;
-import org.apache.hadoop.hdfs.MiniDFSCluster;
-import org.apache.hadoop.io.IOUtils;
-import org.apache.hadoop.test.GenericTestUtils;
-import org.apache.hadoop.mapreduce.Counters;
-import org.apache.hadoop.util.JarFinder;
-import org.apache.hadoop.util.Shell;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.ApplicationReport;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.YarnApplicationState;
-import org.apache.hadoop.yarn.client.api.YarnClient;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.MiniYARNCluster;
-import org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container;
-import org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsManager;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration;
-import org.apache.hadoop.yarn.util.resource.DominantResourceCalculator;
-import org.apache.hadoop.yarn.util.resource.ResourceCalculator;
-import org.junit.After;
-import org.junit.AfterClass;
-import org.junit.Assert;
-import org.junit.Assume;
-import org.junit.BeforeClass;
-import org.junit.Ignore;
-import org.junit.Test;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import static org.apache.hadoop.tools.dynamometer.DynoInfraUtils.fetchHadoopTarball;
-import static org.apache.hadoop.hdfs.MiniDFSCluster.PROP_TEST_BUILD_DATA;
-import static org.hamcrest.CoreMatchers.notNullValue;
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-
-/**
- * Start a Dynamometer cluster in a MiniYARNCluster. Ensure that the NameNode is
- * able to start correctly, exit safemode, and run some commands. Subsequently
- * the workload job is launched and it is verified that it completes
- * successfully and is able to replay commands as expected.
- *
- * To run this test JAVA_HOME must be set correctly, and the {@code tar} utility
- * must be available.
- *
- * You can optionally specify which version of HDFS should be started within the
- * Dynamometer cluster; the default is {@value HADOOP_BIN_VERSION_DEFAULT}. This
- * can be adjusted by setting the {@value HADOOP_BIN_VERSION_KEY} property. This
- * will automatically download the correct Hadoop tarball for the specified
- * version. It downloads from an Apache mirror (by default
- * {@value DynoInfraUtils#APACHE_DOWNLOAD_MIRROR_DEFAULT}); which mirror is used
- * can be controlled with the {@value DynoInfraUtils#APACHE_DOWNLOAD_MIRROR_KEY}
- * property. Note that mirrors normally contain only the latest releases on any
- * given release line; you may need to use
- * {@code http://archive.apache.org/dist/} for older releases. The downloaded
- * tarball will be stored in the test directory and can be reused between test
- * executions. Alternatively, you can specify the {@value HADOOP_BIN_PATH_KEY}
- * property to point directly to a Hadoop tarball which is present locally and
- * no download will occur.
- */
-@Ignore
-public class TestDynamometerInfra {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(TestDynamometerInfra.class);
-
-  private static final int MINICLUSTER_NUM_NMS = 3;
-  private static final int MINICLUSTER_NUM_DNS = 1;
-
-  private static final String HADOOP_BIN_PATH_KEY = "dyno.hadoop.bin.path";
-  private static final String HADOOP_BIN_VERSION_KEY =
-      "dyno.hadoop.bin.version";
-  private static final String HADOOP_BIN_VERSION_DEFAULT = "3.1.4";
-  private static final String FSIMAGE_FILENAME = "fsimage_0000000000000061740";
-  private static final String VERSION_FILENAME = "VERSION";
-
-  private static final String HADOOP_BIN_UNPACKED_DIR_PREFIX =
-      "hadoop_unpacked_";
-
-  private static final String NAMENODE_NODELABEL = "dyno_namenode";
-  private static final String DATANODE_NODELABEL = "dyno_datanode";
-
-  private static final String OUTPUT_PATH = "/tmp/trace_output_direct";
-
-  private static MiniDFSCluster miniDFSCluster;
-  private static MiniYARNCluster miniYARNCluster;
-  private static YarnClient yarnClient;
-  private static FileSystem fs;
-  private static Configuration conf;
-  private static Configuration yarnConf;
-  private static Path fsImageTmpPath;
-  private static Path fsVersionTmpPath;
-  private static Path blockImageOutputDir;
-  private static Path auditTraceDir;
-  private static Path confZip;
-  private static File testBaseDir;
-  private static File hadoopTarballPath;
-  private static File hadoopUnpackedDir;
-
-  private ApplicationId infraAppId;
-
-  @BeforeClass
-  public static void setupClass() throws Exception {
-    PlatformAssumptions.assumeNotWindows("Dynamometer will not run on Windows");
-    Assume.assumeThat("JAVA_HOME must be set properly",
-        System.getenv("JAVA_HOME"), notNullValue());
-    try {
-      Shell.ShellCommandExecutor tarCheck = new Shell.ShellCommandExecutor(
-          new String[]{"bash", "-c", "command -v tar"});
-      tarCheck.execute();
-      Assume.assumeTrue("tar command is not available",
-          tarCheck.getExitCode() == 0);
-    } catch (IOException ioe) {
-      Assume.assumeNoException("Unable to execute a shell command", ioe);
-    }
-
-    conf = new Configuration();
-    // Follow the conventions of MiniDFSCluster
-    testBaseDir = new File(
-        System.getProperty(PROP_TEST_BUILD_DATA, "build/test/data"));
-    String hadoopBinVersion = System.getProperty(HADOOP_BIN_VERSION_KEY,
-        HADOOP_BIN_VERSION_DEFAULT);
-    if (System.getProperty(HADOOP_BIN_PATH_KEY) == null) {
-      hadoopTarballPath = fetchHadoopTarball(testBaseDir, hadoopBinVersion,
-          conf, LOG);
-    } else {
-      hadoopTarballPath = new File(System.getProperty(HADOOP_BIN_PATH_KEY));
-    }
-    if (testBaseDir.exists()) {
-      // Delete any old unpacked bin dirs that weren't previously cleaned up
-      File[] oldUnpackedDirs = testBaseDir.listFiles(
-          (dir, name) -> name.startsWith(HADOOP_BIN_UNPACKED_DIR_PREFIX));
-      if (oldUnpackedDirs != null) {
-        for (File oldDir : oldUnpackedDirs) {
-          FileUtils.deleteQuietly(oldDir);
-        }
-      }
-    }
-    // Set up the Hadoop binary to be used as the system-level Hadoop install
-    hadoopUnpackedDir = new File(testBaseDir,
-        HADOOP_BIN_UNPACKED_DIR_PREFIX + UUID.randomUUID());
-    assertTrue("Failed to make temporary directory",
-        hadoopUnpackedDir.mkdirs());
-    Shell.ShellCommandExecutor shexec = new Shell.ShellCommandExecutor(
-        new String[] {"tar", "xzf", hadoopTarballPath.getAbsolutePath(), "-C",
-            hadoopUnpackedDir.getAbsolutePath()});
-    shexec.execute();
-    if (shexec.getExitCode() != 0) {
-      fail("Unable to execute tar to expand Hadoop binary");
-    }
-
-    conf.setInt(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB, 128);
-    conf.setBoolean(YarnConfiguration.NODE_LABELS_ENABLED, true);
-    for (String q : new String[] {"root", "root.default"}) {
-      conf.setInt(CapacitySchedulerConfiguration.PREFIX + q + "."
-          + CapacitySchedulerConfiguration.CAPACITY, 100);
-      String accessibleNodeLabelPrefix = CapacitySchedulerConfiguration.PREFIX
-          + q + "." + CapacitySchedulerConfiguration.ACCESSIBLE_NODE_LABELS;
-      conf.set(accessibleNodeLabelPrefix,
-          CapacitySchedulerConfiguration.ALL_ACL);
-      conf.setInt(accessibleNodeLabelPrefix + "." + DATANODE_NODELABEL + "."
-          + CapacitySchedulerConfiguration.CAPACITY, 100);
-      conf.setInt(accessibleNodeLabelPrefix + "." + NAMENODE_NODELABEL + "."
-          + CapacitySchedulerConfiguration.CAPACITY, 100);
-    }
-    // This is necessary to have the RM respect our vcore allocation request
-    conf.setClass(CapacitySchedulerConfiguration.RESOURCE_CALCULATOR_CLASS,
-        DominantResourceCalculator.class, ResourceCalculator.class);
-    conf.setBoolean(YarnConfiguration.NM_DISK_HEALTH_CHECK_ENABLE, false);
-    miniYARNCluster = new MiniYARNCluster(TestDynamometerInfra.class.getName(),
-        1, MINICLUSTER_NUM_NMS, 1, 1);
-    miniYARNCluster.init(conf);
-    miniYARNCluster.start();
-
-    yarnConf = miniYARNCluster.getConfig();
-    miniDFSCluster = new MiniDFSCluster.Builder(conf).format(true)
-        .numDataNodes(MINICLUSTER_NUM_DNS).build();
-    miniDFSCluster.waitClusterUp();
-    FileSystem.setDefaultUri(conf, miniDFSCluster.getURI());
-    FileSystem.setDefaultUri(yarnConf, miniDFSCluster.getURI());
-    fs = miniDFSCluster.getFileSystem();
-
-    URL url = Thread.currentThread().getContextClassLoader()
-        .getResource("yarn-site.xml");
-    if (url == null) {
-      throw new RuntimeException(
-          "Could not find 'yarn-site.xml' dummy file in classpath");
-    }
-    yarnConf.set(YarnConfiguration.YARN_APPLICATION_CLASSPATH,
-        new File(url.getPath()).getParent());
-    // Write the XML to a buffer before writing to the file. writeXml() can
-    // trigger a read of the existing yarn-site.xml, so writing directly could
-    // trigger a read of the file while it is in an inconsistent state
-    // (partially written)
-    try (ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()) {
-      yarnConf.writeXml(bytesOut);
-      try (OutputStream fileOut = new FileOutputStream(
-          new File(url.getPath()))) {
-        fileOut.write(bytesOut.toByteArray());
-      }
-    }
-
-    yarnClient = YarnClient.createYarnClient();
-    yarnClient.init(new Configuration(yarnConf));
-    yarnClient.start();
-
-    fsImageTmpPath = fs.makeQualified(new Path("/tmp/" + FSIMAGE_FILENAME));
-    fsVersionTmpPath = fs.makeQualified(new Path("/tmp/" + VERSION_FILENAME));
-    blockImageOutputDir = fs.makeQualified(new Path("/tmp/blocks"));
-    auditTraceDir = fs.makeQualified(new Path("/tmp/audit_trace_direct"));
-    confZip = fs.makeQualified(new Path("/tmp/conf.zip"));
-
-    uploadFsimageResourcesToHDFS(hadoopBinVersion);
-
-    miniYARNCluster.waitForNodeManagersToConnect(30000);
-
-    RMNodeLabelsManager nodeLabelManager = miniYARNCluster.getResourceManager()
-        .getRMContext().getNodeLabelManager();
-    nodeLabelManager.addToCluserNodeLabelsWithDefaultExclusivity(
-        Sets.newHashSet(NAMENODE_NODELABEL, DATANODE_NODELABEL));
-    Map<NodeId, Set<String>> nodeLabels = new HashMap<>();
-    nodeLabels.put(miniYARNCluster.getNodeManager(0).getNMContext().getNodeId(),
-        Sets.newHashSet(NAMENODE_NODELABEL));
-    nodeLabels.put(miniYARNCluster.getNodeManager(1).getNMContext().getNodeId(),
-        Sets.newHashSet(DATANODE_NODELABEL));
-    nodeLabelManager.addLabelsToNode(nodeLabels);
-  }
-
-  @AfterClass
-  public static void teardownClass() throws Exception {
-    if (miniDFSCluster != null) {
-      miniDFSCluster.shutdown(true);
-      miniDFSCluster = null;
-    }
-    if (yarnClient != null) {
-      yarnClient.stop();
-      yarnClient = null;
-    }
-    if (miniYARNCluster != null) {
-      miniYARNCluster.getResourceManager().stop();
-      miniYARNCluster.getResourceManager().waitForServiceToStop(30000);
-      miniYARNCluster.stop();
-      miniYARNCluster.waitForServiceToStop(30000);
-      FileUtils.deleteDirectory(miniYARNCluster.getTestWorkDir());
-      miniYARNCluster = null;
-    }
-    if (hadoopUnpackedDir != null) {
-      FileUtils.deleteDirectory(hadoopUnpackedDir);
-    }
-  }
-
-  @After
-  public void tearDown() throws Exception {
-    if (infraAppId != null && yarnClient != null) {
-      yarnClient.killApplication(infraAppId);
-    }
-    infraAppId = null;
-  }
-
-  @Test(timeout = 15 * 60 * 1000)
-  public void testNameNodeInYARN() throws Exception {
-    Configuration localConf = new Configuration(yarnConf);
-    localConf.setLong(AuditLogDirectParser.AUDIT_START_TIMESTAMP_KEY, 60000);
-
-    final Client client = createAndStartClient(localConf);
-
-    awaitApplicationStartup();
-
-    long startTime = System.currentTimeMillis();
-    long maxWaitTimeMs = TimeUnit.MINUTES.toMillis(10);
-    Supplier<Boolean> exitCheckSupplier = () -> {
-      if (System.currentTimeMillis() - startTime > maxWaitTimeMs) {
-        // Wait at most 10 minutes for the NameNode to start and be ready
-        return true;
-      }
-      try {
-        // Exit immediately if the YARN app fails
-        return yarnClient.getApplicationReport(infraAppId)
-            .getYarnApplicationState() == YarnApplicationState.FAILED;
-      } catch (IOException | YarnException e) {
-        return true;
-      }
-    };
-    Optional<Properties> namenodeProperties = DynoInfraUtils
-        .waitForAndGetNameNodeProperties(exitCheckSupplier, localConf,
-            client.getNameNodeInfoPath(), LOG);
-    if (!namenodeProperties.isPresent()) {
-      fail("Unable to fetch NameNode properties");
-    }
-
-    DynoInfraUtils.waitForNameNodeReadiness(namenodeProperties.get(), 3, false,
-        exitCheckSupplier, localConf, LOG);
-
-    assertClusterIsFunctional(localConf, namenodeProperties.get());
-
-    Map<ContainerId, Container> namenodeContainers = miniYARNCluster
-        .getNodeManager(0).getNMContext().getContainers();
-    Map<ContainerId, Container> datanodeContainers = miniYARNCluster
-        .getNodeManager(1).getNMContext().getContainers();
-    Map<ContainerId, Container> amContainers = miniYARNCluster.getNodeManager(2)
-        .getNMContext().getContainers();
-    assertEquals(1, namenodeContainers.size());
-    assertEquals(2,
-        namenodeContainers.keySet().iterator().next().getContainerId());
-    assertEquals(2, datanodeContainers.size());
-    assertEquals(1, amContainers.size());
-    assertEquals(1, amContainers.keySet().iterator().next().getContainerId());
-
-    LOG.info("Waiting for workload job to start and complete");
-    GenericTestUtils.waitFor(() -> {
-      try {
-        return client.getWorkloadJob() != null
-            && client.getWorkloadJob().isComplete();
-      } catch (IOException | IllegalStateException e) {
-        return false;
-      }
-    }, 3000, 60000);
-    LOG.info("Workload job completed");
-
-    if (!client.getWorkloadJob().isSuccessful()) {
-      fail("Workload job failed");
-    }
-    Counters counters = client.getWorkloadJob().getCounters();
-    assertEquals(6,
-        counters.findCounter(AuditReplayMapper.REPLAYCOUNTERS.TOTALCOMMANDS)
-            .getValue());
-    assertEquals(1,
-        counters
-            .findCounter(AuditReplayMapper.REPLAYCOUNTERS.TOTALINVALIDCOMMANDS)
-            .getValue());
-
-    LOG.info("Waiting for infra application to exit");
-    GenericTestUtils.waitFor(() -> {
-      try {
-        ApplicationReport report = yarnClient
-            .getApplicationReport(infraAppId);
-        return report
-              .getYarnApplicationState() == YarnApplicationState.KILLED;
-      } catch (IOException | YarnException e) {
-        return false;
-      }
-    }, 3000, 300000);
-
-    LOG.info("Waiting for metrics file to be ready");
-    // Try to read the metrics file
-    Path hdfsStoragePath = new Path(fs.getHomeDirectory(),
-        DynoConstants.DYNAMOMETER_STORAGE_DIR + "/" + infraAppId);
-    final Path metricsPath = new Path(hdfsStoragePath, "namenode_metrics");
-    GenericTestUtils.waitFor(() -> {
-      try {
-        FSDataInputStream in = fs.open(metricsPath);
-        String metricsOutput = in.readUTF();
-        in.close();
-        // Just assert that there is some metrics content in there
-        assertTrue(metricsOutput.contains("JvmMetrics"));
-        return true;
-      } catch (IOException ioe) {
-        return false;
-      }
-    }, 3000, 60000);
-    assertTrue(fs.exists(new Path(OUTPUT_PATH)));
-  }
-
-  private void assertClusterIsFunctional(Configuration localConf,
-      Properties namenodeProperties) throws IOException {
-    // Test that we can successfully write to / read from the cluster
-    try {
-      URI nameNodeUri = DynoInfraUtils.getNameNodeHdfsUri(namenodeProperties);
-      DistributedFileSystem dynoFS =
-          (DistributedFileSystem) FileSystem.get(nameNodeUri, localConf);
-      Path testFile = new Path("/tmp/test/foo");
-      dynoFS.mkdir(testFile.getParent(), FsPermission.getDefault());
-      FSDataOutputStream out = dynoFS.create(testFile, (short) 1);
-      out.write(42);
-      out.hsync();
-      out.close();
-      FileStatus[] stats = dynoFS.listStatus(testFile.getParent());
-      assertEquals(1, stats.length);
-      assertEquals("foo", stats[0].getPath().getName());
-    } catch (IOException e) {
-      LOG.error("Failed to write or read", e);
-      throw e;
-    }
-  }
-
-  private void awaitApplicationStartup()
-      throws TimeoutException, InterruptedException {
-    LOG.info("Waiting for application ID to become available");
-    GenericTestUtils.waitFor(() -> {
-      try {
-        List<ApplicationReport> apps = yarnClient.getApplications();
-        if (apps.size() == 1) {
-          infraAppId = apps.get(0).getApplicationId();
-          return true;
-        } else if (apps.size() > 1) {
-          fail("Unexpected: more than one application");
-        }
-      } catch (IOException | YarnException e) {
-        fail("Unexpected exception: " + e);
-      }
-      return false;
-    }, 1000, 60000);
-  }
-
-  private Client createAndStartClient(Configuration localConf) {
-    final Client client = new Client(JarFinder.getJar(ApplicationMaster.class),
-        JarFinder.getJar(Assert.class));
-    client.setConf(localConf);
-    Thread appThread = new Thread(() -> {
-      try {
-        client.run(new String[] {"-" + Client.MASTER_MEMORY_MB_ARG, "128",
-            "-" + Client.CONF_PATH_ARG, confZip.toString(),
-            "-" + Client.BLOCK_LIST_PATH_ARG,
-            blockImageOutputDir.toString(), "-" + Client.FS_IMAGE_DIR_ARG,
-            fsImageTmpPath.getParent().toString(),
-            "-" + Client.HADOOP_BINARY_PATH_ARG,
-            hadoopTarballPath.getAbsolutePath(),
-            "-" + AMOptions.DATANODES_PER_CLUSTER_ARG, "2",
-            "-" + AMOptions.DATANODE_MEMORY_MB_ARG, "128",
-            "-" + AMOptions.DATANODE_NODELABEL_ARG, DATANODE_NODELABEL,
-            "-" + AMOptions.NAMENODE_MEMORY_MB_ARG, "256",
-            "-" + AMOptions.NAMENODE_METRICS_PERIOD_ARG, "1",
-            "-" + AMOptions.NAMENODE_NODELABEL_ARG, NAMENODE_NODELABEL,
-            "-" + AMOptions.SHELL_ENV_ARG,
-            "HADOOP_HOME=" + getHadoopHomeLocation(),
-            "-" + AMOptions.SHELL_ENV_ARG,
-            "HADOOP_CONF_DIR=" + getHadoopHomeLocation() + "/etc/hadoop",
-            "-" + Client.WORKLOAD_REPLAY_ENABLE_ARG,
-            "-" + Client.WORKLOAD_INPUT_PATH_ARG,
-            fs.makeQualified(new Path("/tmp/audit_trace_direct")).toString(),
-            "-" + Client.WORKLOAD_OUTPUT_PATH_ARG,
-            fs.makeQualified(new Path(OUTPUT_PATH)).toString(),
-            "-" + Client.WORKLOAD_THREADS_PER_MAPPER_ARG, "1",
-            "-" + Client.WORKLOAD_START_DELAY_ARG, "10s",
-            "-" + AMOptions.NAMENODE_ARGS_ARG,
-            "-Ddfs.namenode.safemode.extension=0"});
-      } catch (Exception e) {
-        LOG.error("Error running client", e);
-      }
-    });
-
-    appThread.start();
-    return client;
-  }
-
-  private static URI getResourcePath(String resourceName) {
-    try {
-      return TestDynamometerInfra.class.getClassLoader()
-          .getResource(resourceName).toURI();
-    } catch (URISyntaxException e) {
-      return null;
-    }
-  }
-
-  /**
-   * Get the Hadoop home location (i.e. for {@code HADOOP_HOME}) as the only
-   * directory within the unpacked location of the Hadoop tarball.
-   *
-   * @return The absolute path to the Hadoop home directory.
-   */
-  private String getHadoopHomeLocation() {
-    File[] files = hadoopUnpackedDir.listFiles();
-    if (files == null || files.length != 1) {
-      fail("Should be 1 directory within the Hadoop unpacked dir");
-    }
-    return files[0].getAbsolutePath();
-  }
-
-  /**
-   * Look for the resource files relevant to {@code hadoopBinVersion} and upload
-   * them onto the MiniDFSCluster's HDFS for use by the subsequent jobs.
-   *
-   * @param hadoopBinVersion
-   *          The version string (e.g. "3.1.1") for which to look for resources.
-   */
-  private static void uploadFsimageResourcesToHDFS(String hadoopBinVersion)
-      throws IOException {
-    // Keep only the major/minor version for the resources path
-    String[] versionComponents = hadoopBinVersion.split("\\.");
-    if (versionComponents.length < 2) {
-      fail(
-          "At least major and minor version are required to be specified; got: "
-              + hadoopBinVersion);
-    }
-    String hadoopResourcesPath = "hadoop_" + versionComponents[0] + "_"
-        + versionComponents[1];
-    String fsImageResourcePath = hadoopResourcesPath + "/" + FSIMAGE_FILENAME;
-    fs.copyFromLocalFile(new Path(getResourcePath(fsImageResourcePath)),
-        fsImageTmpPath);
-    fs.copyFromLocalFile(
-        new Path(getResourcePath(fsImageResourcePath + ".md5")),
-        fsImageTmpPath.suffix(".md5"));
-    fs.copyFromLocalFile(
-        new Path(getResourcePath(hadoopResourcesPath + "/" + VERSION_FILENAME)),
-        fsVersionTmpPath);
-    fs.mkdirs(auditTraceDir);
-    IOUtils.copyBytes(
-        TestDynamometerInfra.class.getClassLoader()
-            .getResourceAsStream("audit_trace_direct/audit0"),
-        fs.create(new Path(auditTraceDir, "audit0")), conf, true);
-    fs.mkdirs(blockImageOutputDir);
-    for (String blockFile : new String[] {"dn0-a-0-r-00000", "dn1-a-0-r-00001",
-        "dn2-a-0-r-00002"}) {
-      IOUtils.copyBytes(
-          TestDynamometerInfra.class.getClassLoader()
-              .getResourceAsStream("blocks/" + blockFile),
-          fs.create(new Path(blockImageOutputDir, blockFile)), conf, true);
-    }
-    File tempConfZip = new File(testBaseDir, "conf.zip");
-    ZipOutputStream zos = new ZipOutputStream(
-        new FileOutputStream(tempConfZip));
-    for (String file : new String[] {"core-site.xml", "hdfs-site.xml",
-        "log4j.properties"}) {
-      zos.putNextEntry(new ZipEntry("etc/hadoop/" + file));
-      InputStream is = TestDynamometerInfra.class.getClassLoader()
-          .getResourceAsStream("conf/etc/hadoop/" + file);
-      IOUtils.copyBytes(is, zos, conf, false);
-      is.close();
-      zos.closeEntry();
-    }
-    zos.close();
-    fs.copyFromLocalFile(new Path(tempConfZip.toURI()), confZip);
-    tempConfZip.delete();
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynoInfraUtils.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynoInfraUtils.java
deleted file mode 100644
index 0881347e734..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/java/org/apache/hadoop/tools/dynamometer/TestDynoInfraUtils.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer;
-
-import java.util.Set;
-import org.junit.Test;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
-
-
-/** Tests for {@link DynoInfraUtils}. */
-public class TestDynoInfraUtils {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(TestDynoInfraUtils.class);
-
-  @Test
-  public void testParseStaleDatanodeListSingleDatanode() throws Exception {
-    // Confirm all types of values can be properly parsed
-    String json = "{"
-        + "\"1.2.3.4:5\": {"
-        + "  \"numBlocks\": 5,"
-        + "  \"fooString\":\"stringValue\","
-        + "  \"fooInteger\": 1,"
-        + "  \"fooFloat\": 1.0,"
-        + "  \"fooArray\": []"
-        + "}"
-        + "}";
-    Set<String> out = DynoInfraUtils.parseStaleDataNodeList(json, 10, LOG);
-    assertEquals(1, out.size());
-    assertTrue(out.contains("1.2.3.4:5"));
-  }
-
-  @Test
-  public void testParseStaleDatanodeListMultipleDatanodes() throws Exception {
-    String json = "{"
-        + "\"1.2.3.4:1\": {\"numBlocks\": 0}, "
-        + "\"1.2.3.4:2\": {\"numBlocks\": 15}, "
-        + "\"1.2.3.4:3\": {\"numBlocks\": 5}, "
-        + "\"1.2.3.4:4\": {\"numBlocks\": 10} "
-        + "}";
-    Set<String> out = DynoInfraUtils.parseStaleDataNodeList(json, 10, LOG);
-    assertEquals(2, out.size());
-    assertTrue(out.contains("1.2.3.4:1"));
-    assertTrue(out.contains("1.2.3.4:3"));
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn0-a-0-r-00000 b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn0-a-0-r-00000
deleted file mode 100644
index d2768e86cf8..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn0-a-0-r-00000
+++ /dev/null
@@ -1,34 +0,0 @@
-1073751825,11001,4
-1073751921,11097,4
-1073751918,11094,4
-1073751915,11091,4
-1073751912,11088,4
-1073751909,11085,4
-1073751906,11082,4
-1073751903,11079,4
-1073751900,11076,4
-1073751897,11073,4
-1073751894,11070,4
-1073751891,11067,4
-1073751888,11064,4
-1073751885,11061,4
-1073751882,11058,4
-1073751879,11055,4
-1073751876,11052,4
-1073751924,11100,4
-1073751873,11049,4
-1073751870,11046,4
-1073751867,11043,4
-1073751864,11040,4
-1073751861,11037,4
-1073751858,11034,4
-1073751855,11031,4
-1073751852,11028,4
-1073751849,11025,4
-1073751846,11022,4
-1073751843,11019,4
-1073751840,11016,4
-1073751837,11013,4
-1073751834,11010,4
-1073751831,11007,4
-1073751828,11004,4
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn1-a-0-r-00001 b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn1-a-0-r-00001
deleted file mode 100644
index f8b3d74d02f..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn1-a-0-r-00001
+++ /dev/null
@@ -1,33 +0,0 @@
-1073751847,11023,4
-1073751922,11098,4
-1073751841,11017,4
-1073751829,11005,4
-1073751919,11095,4
-1073751856,11032,4
-1073751886,11062,4
-1073751916,11092,4
-1073751871,11047,4
-1073751880,11056,4
-1073751913,11089,4
-1073751826,11002,4
-1073751868,11044,4
-1073751910,11086,4
-1073751853,11029,4
-1073751838,11014,4
-1073751907,11083,4
-1073751889,11065,4
-1073751865,11041,4
-1073751904,11080,4
-1073751874,11050,4
-1073751877,11053,4
-1073751901,11077,4
-1073751850,11026,4
-1073751862,11038,4
-1073751898,11074,4
-1073751832,11008,4
-1073751883,11059,4
-1073751895,11071,4
-1073751844,11020,4
-1073751859,11035,4
-1073751892,11068,4
-1073751835,11011,4
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn2-a-0-r-00002 b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn2-a-0-r-00002
deleted file mode 100644
index d191112a544..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/blocks/dn2-a-0-r-00002
+++ /dev/null
@@ -1,33 +0,0 @@
-1073751890,11066,4
-1073751887,11063,4
-1073751845,11021,4
-1073751884,11060,4
-1073751881,11057,4
-1073751830,11006,4
-1073751878,11054,4
-1073751842,11018,4
-1073751875,11051,4
-1073751872,11048,4
-1073751839,11015,4
-1073751869,11045,4
-1073751866,11042,4
-1073751863,11039,4
-1073751836,11012,4
-1073751860,11036,4
-1073751857,11033,4
-1073751920,11096,4
-1073751917,11093,4
-1073751827,11003,4
-1073751914,11090,4
-1073751854,11030,4
-1073751911,11087,4
-1073751908,11084,4
-1073751833,11009,4
-1073751905,11081,4
-1073751851,11027,4
-1073751902,11078,4
-1073751899,11075,4
-1073751896,11072,4
-1073751848,11024,4
-1073751893,11069,4
-1073751923,11099,4
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/core-site.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/core-site.xml
deleted file mode 100644
index cdb482a5425..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/core-site.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version='1.0' encoding='UTF-8'?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<configuration>
-  <property>
-  <name>hadoop.security.impersonation.provider.class</name>
-  <value>org.apache.hadoop.tools.dynamometer.AllowAllImpersonationProvider</value>
-  </property>
-</configuration>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/hdfs-site.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/hdfs-site.xml
deleted file mode 100644
index 34069d4b040..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/hdfs-site.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version='1.0' encoding='UTF-8'?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<configuration>
-  <property>
-    <name>dfs.datanode.data.dir</name>
-    <value>file:///dynamometer/dfs/data1,file:///dynamometer/dfs/data2</value>
-  </property>
-</configuration>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/log4j.properties b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/log4j.properties
deleted file mode 100644
index d06da872168..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/conf/etc/hadoop/log4j.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-hadoop.root.logger=INFO,RFA
-hadoop.log.dir=.
-hadoop.log.file=hadoop.log
-
-log4j.rootLogger=${hadoop.root.logger}
-log4j.appender.RFA=org.apache.log4j.ConsoleAppender
-log4j.appender.RFA.target=System.err
-log4j.appender.RFA.layout=org.apache.log4j.PatternLayout
-log4j.appender.console=org.apache.log4j.ConsoleAppender
-log4j.appender.console.target=System.err
-log4j.appender.console.layout=org.apache.log4j.PatternLayout
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/VERSION b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/VERSION
deleted file mode 100644
index ff3f84e1048..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/VERSION
+++ /dev/null
@@ -1,7 +0,0 @@
-#Wed Jan 09 11:28:34 PST 2019
-namespaceID=1157798435
-clusterID=CID-91db90f5-16f6-4309-a88e-263223234059
-cTime=1547062025277
-storageType=NAME_NODE
-blockpoolID=BP-963098314-0.0.0.0-1494453277231
-layoutVersion=-64
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/fsimage_0000000000000061740 b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/fsimage_0000000000000061740
deleted file mode 100644
index 6ea4f237a83b7e6d995cf268a21f63a6b744bee2..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 13795
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
VvwMd>e2|;<V)}lsjEs!B{{R^A;Nt)Q

diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/fsimage_0000000000000061740.md5 b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/fsimage_0000000000000061740.md5
deleted file mode 100644
index 178794afdf1..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/hadoop_3_1/fsimage_0000000000000061740.md5
+++ /dev/null
@@ -1 +0,0 @@
-211ac2f198a2d8f0488638d3b11f5238 *fsimage_0000000000000061740
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/yarn-site.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/yarn-site.xml
deleted file mode 100644
index bbe179963b0..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/test/resources/yarn-site.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<configuration>
-  <!-- Dummy (invalid) config file to be overwritten by tests with MiniCluster configuration. -->
-</configuration>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/pom.xml b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/pom.xml
deleted file mode 100644
index 919d5cf776f..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/pom.xml
+++ /dev/null
@@ -1,151 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <parent>
-    <groupId>org.apache.hadoop</groupId>
-    <artifactId>hadoop-project</artifactId>
-    <version>3.4.0</version>
-    <relativePath>../../../hadoop-project</relativePath>
-  </parent>
-  <artifactId>hadoop-dynamometer-workload</artifactId>
-  <version>3.4.0</version>
-  <description>Apache Hadoop Dynamometer Workload Simulator</description>
-  <name>Apache Hadoop Dynamometer Workload Simulator</name>
-  <packaging>jar</packaging>
-
-  <dependencies>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-client</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.mockito</groupId>
-      <artifactId>mockito-core</artifactId>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-minicluster</artifactId>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-source-plugin</artifactId>
-        <configuration>
-          <attach>true</attach>
-        </configuration>
-        <executions>
-          <execution>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-      <plugin>
-        <artifactId>maven-jar-plugin</artifactId>
-        <executions>
-          <execution>
-            <goals>
-              <goal>test-jar</goal>
-            </goals>
-            <phase>test-compile</phase>
-          </execution>
-        </executions>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.rat</groupId>
-        <artifactId>apache-rat-plugin</artifactId>
-        <configuration>
-          <excludes>
-            <exclude>src/test/resources/audit_trace_direct/audit0</exclude>
-            <exclude>src/test/resources/audit_trace_hive/audit0</exclude>
-          </excludes>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-
-  <profiles>
-    <profile>
-      <id>dist</id>
-      <activation>
-        <activeByDefault>false</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-assembly-plugin</artifactId>
-            <dependencies>
-              <dependency>
-                <groupId>org.apache.hadoop</groupId>
-                <artifactId>hadoop-assemblies</artifactId>
-                <version>${project.version}</version>
-              </dependency>
-            </dependencies>
-            <executions>
-              <execution>
-                <id>dist</id>
-                <phase>prepare-package</phase>
-                <goals>
-                  <goal>single</goal>
-                </goals>
-                <configuration>
-                  <appendAssemblyId>false</appendAssemblyId>
-                  <attach>false</attach>
-                  <finalName>${project.artifactId}-${project.version}</finalName>
-                  <descriptorRefs>
-                    <descriptorRef>hadoop-dynamometer-workload</descriptorRef>
-                  </descriptorRefs>
-                </configuration>
-              </execution>
-            </executions>
-          </plugin>
-       <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-dependency-plugin</artifactId>
-        <executions>
-          <execution>
-            <id>deplist</id>
-            <phase>compile</phase>
-            <goals>
-              <goal>list</goal>
-            </goals>
-            <configuration>
-              <!-- referenced by a built-in command -->
-              <outputFile>${project.basedir}/target/hadoop-tools-deps/${project.artifactId}.tools-builtin.txt</outputFile>
-            </configuration>
-          </execution>
-        </executions>
-      </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
-</project>
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/parse-start-timestamp.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/parse-start-timestamp.sh
deleted file mode 100755
index f7e299e2605..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/parse-start-timestamp.sh
+++ /dev/null
@@ -1,52 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# This script will determine the timestamp of the last transaction appearing in a
-# given fsimage by looking at the corresponding edits file. This is useful to determine
-# from whence to start collecting audit logs to replay against the fsimage.
-
-if [ $# -lt 1 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
-  echo "Usage: ./parse-start-timestamp.sh image-txid [ edits-dir ]"
-  echo "       Finds the last timestamp present in the edit file which ends in"
-  echo "       the specified transaction ID (leading 0s not required)."
-  echo "       If edits-dir is specified, looks for edit files under"
-  echo "       edits-dir/current. Otherwise, looks in the current directory."
-  exit 1
-fi
-if [[ $(command -v gawk) == "" ]]; then
-  echo "This script requires gawk to be available."
-  exit 1
-fi
-image_txid="$1"
-if [[ $# -ge 2 ]]; then
-  edits_dir="$2/current"
-else
-  edits_dir="$(pwd)"
-fi
-
-edits_file_count="$(find -H "${edits_dir}" -maxdepth 1 -type f -name "edits_*-*$image_txid" | wc -l)"
-if [[ "$edits_file_count" != 1 ]]; then
-  echo "Error; found $edits_file_count matching edit files."
-  exit 1
-fi
-edits_file="$(find -H "${edits_dir}" -maxdepth 1 -type f -name "edits_*-*$image_txid")"
-
-# Shellcheck complains about the $ in the single-quote because it won't expand, but this is intentional
-# shellcheck disable=SC2016
-awk_script='/TIMESTAMP/ { line=$0 } END { match(line, />([[:digit:]]+)</, output); print output[1] }'
-echo "Start timestamp for $image_txid is: (this may take a moment)"
-hdfs oev -i "$edits_dir/$edits_file" -o >(gawk "$awk_script")
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/start-workload.sh b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/start-workload.sh
deleted file mode 100755
index 7c4cec00c01..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/bash/start-workload.sh
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/usr/bin/env bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# This script simply passes its arguments along to the workload driver
-# driver after finding a hadoop command in PATH/HADOOP_COMMON_HOME/HADOOP_HOME
-# (searching in that order).
-
-if type hadoop &> /dev/null; then
-  hadoop_cmd="hadoop"
-elif type "$HADOOP_COMMON_HOME/bin/hadoop" &> /dev/null; then
-  hadoop_cmd="$HADOOP_COMMON_HOME/bin/hadoop"
-elif type "$HADOOP_HOME/bin/hadoop" &> /dev/null; then
-  hadoop_cmd="$HADOOP_HOME/bin/hadoop"
-else
-  echo "Unable to find a valid hadoop command to execute; exiting."
-  exit 1
-fi
-
-script_pwd="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/../../.."
-
-for f in ${script_pwd}/lib/*.jar; do
-  # Skip adding the workload JAR since it is added by the `hadoop jar` command
-  if [[ "$f" != *"dynamometer-workload-"* ]]; then
-    export HADOOP_CLASSPATH="$HADOOP_CLASSPATH:$f"
-  fi
-done
-"$hadoop_cmd" jar "${script_pwd}"/lib/hadoop-dynamometer-workload-*.jar \
-  org.apache.hadoop.tools.dynamometer.workloadgenerator.WorkloadDriver "$@"
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/CreateFileMapper.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/CreateFileMapper.java
deleted file mode 100644
index 318b47d19ff..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/CreateFileMapper.java
+++ /dev/null
@@ -1,147 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-
-import org.apache.hadoop.util.Lists;
-import java.io.IOException;
-import java.io.OutputStream;
-import java.net.URI;
-import java.util.List;
-import java.util.concurrent.TimeUnit;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.io.NullWritable;
-import org.apache.hadoop.mapreduce.Mapper;
-
-/**
- * CreateFileMapper continuously creates 1 byte files for the specified duration
- * to increase the number of file objects on the NN.
- * <p>
- * Configuration options available:
- * <ul>
- *   <li>{@value NUM_MAPPERS_KEY} (required): Number of mappers to launch.</li>
- *   <li>{@value DURATION_MIN_KEY} (required): Number of minutes to induce
- *       workload for.</li>
- *   <li>{@value SHOULD_DELETE_KEY} (default: {@value SHOULD_DELETE_DEFAULT}):
- *       If true, delete the files after creating them. This can be useful for
- *       generating constant load without increasing the number of file
- *       objects.</li>
- *   <li>{@value FILE_PARENT_PATH_KEY} (default:
- *       {@value FILE_PARENT_PATH_DEFAULT}): The root directory in which to
- *       create files.</li>
- * </ul>
- */
-public class CreateFileMapper
-    extends WorkloadMapper<NullWritable, NullWritable, NullWritable,
-    NullWritable> {
-
-  public static final String NUM_MAPPERS_KEY = "createfile.num-mappers";
-  public static final String DURATION_MIN_KEY = "createfile.duration-min";
-  public static final String FILE_PARENT_PATH_KEY =
-      "createfile.file-parent-path";
-  public static final String FILE_PARENT_PATH_DEFAULT = "/tmp/createFileMapper";
-  public static final String SHOULD_DELETE_KEY = "createfile.should-delete";
-  public static final boolean SHOULD_DELETE_DEFAULT = false;
-
-  /** Custom {@link org.apache.hadoop.mapreduce.Counter} definitions. */
-  public enum CREATEFILECOUNTERS {
-    NUMFILESCREATED
-  }
-
-  private long startTimestampMs;
-  private FileSystem fs;
-  private Configuration conf;
-  private int taskID;
-  private String fileParentPath;
-  private boolean shouldDelete;
-  private long endTimeStampMs;
-
-  @Override
-  public String getDescription() {
-    return "This mapper creates 1-byte files for the specified duration.";
-  }
-
-  @Override
-  public List<String> getConfigDescriptions() {
-    return Lists.newArrayList(
-        NUM_MAPPERS_KEY + " (required): Number of mappers to launch.",
-        DURATION_MIN_KEY
-            + " (required): Number of minutes to induce workload for.",
-        SHOULD_DELETE_KEY + " (default: " + SHOULD_DELETE_DEFAULT
-            + "): If true, delete the files after creating "
-            + "them. This can be useful for generating constant load without "
-            + "increasing the number of file objects.",
-        FILE_PARENT_PATH_KEY + " (default: " + FILE_PARENT_PATH_DEFAULT
-            + "): The root directory in which to create files.");
-  }
-
-  @Override
-  public boolean verifyConfigurations(Configuration confToVerify) {
-    return confToVerify.get(NUM_MAPPERS_KEY) != null
-        && confToVerify.get(DURATION_MIN_KEY) != null;
-  }
-
-  @Override
-  public void map(NullWritable key, NullWritable value,
-      Mapper.Context mapperContext) throws IOException, InterruptedException {
-    taskID = mapperContext.getTaskAttemptID().getTaskID().getId();
-    conf = mapperContext.getConfiguration();
-    String namenodeURI = conf.get(WorkloadDriver.NN_URI);
-    startTimestampMs = conf.getLong(WorkloadDriver.START_TIMESTAMP_MS, -1);
-    fileParentPath = conf.get(FILE_PARENT_PATH_KEY, FILE_PARENT_PATH_DEFAULT);
-    shouldDelete = conf.getBoolean(SHOULD_DELETE_KEY, SHOULD_DELETE_DEFAULT);
-    int durationMin = conf.getInt(DURATION_MIN_KEY, -1);
-    if (durationMin < 0) {
-      throw new IOException("Duration must be positive; got: " + durationMin);
-    }
-    endTimeStampMs = startTimestampMs
-        + TimeUnit.MILLISECONDS.convert(durationMin, TimeUnit.MINUTES);
-    fs = FileSystem.get(URI.create(namenodeURI), conf);
-    System.out.println("Start timestamp: " + startTimestampMs);
-
-    long currentEpoch = System.currentTimeMillis();
-    long delay = startTimestampMs - currentEpoch;
-    if (delay > 0) {
-      System.out.println("Sleeping for " + delay + " ms");
-      Thread.sleep(delay);
-    }
-
-    String mapperSpecifcPathPrefix = fileParentPath + "/mapper" + taskID;
-    System.out.println("Mapper path prefix: " + mapperSpecifcPathPrefix);
-    long numFilesCreated = 0;
-    Path path;
-    final byte[] content = {0x0};
-    while (System.currentTimeMillis() < endTimeStampMs) {
-      path = new Path(mapperSpecifcPathPrefix + "/file" + numFilesCreated);
-      OutputStream out = fs.create(path);
-      out.write(content);
-      out.close();
-      numFilesCreated++;
-      mapperContext.getCounter(CREATEFILECOUNTERS.NUMFILESCREATED)
-          .increment(1L);
-      if (numFilesCreated % 1000 == 0) {
-        mapperContext.progress();
-        System.out.println("Number of files created: " + numFilesCreated);
-      }
-      if (shouldDelete) {
-        fs.delete(path, true);
-      }
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputFormat.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputFormat.java
deleted file mode 100644
index 220641262e1..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputFormat.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.mapreduce.InputSplit;
-import org.apache.hadoop.mapreduce.JobContext;
-import org.apache.hadoop.mapreduce.RecordReader;
-import org.apache.hadoop.mapreduce.TaskAttemptContext;
-import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
-
-
-/**
- * An input format which does not read any input, but rather starts a
- * configurable number of mappers and runs them for a configurable duration.
- */
-public class VirtualInputFormat<K, V> extends FileInputFormat<K, V> {
-  // Number of splits = Number of mappers. Creates fakeSplits to launch
-  // the required number of mappers
-  @Override
-  public List<InputSplit> getSplits(JobContext job) throws IOException {
-    Configuration conf = job.getConfiguration();
-    int numMappers = conf.getInt(CreateFileMapper.NUM_MAPPERS_KEY, -1);
-    if (numMappers == -1) {
-      throw new IOException("Number of mappers should be provided as input");
-    }
-    List<InputSplit> splits = new ArrayList<InputSplit>(numMappers);
-    for (int i = 0; i < numMappers; i++) {
-      splits.add(new VirtualInputSplit());
-    }
-    return splits;
-  }
-
-  @Override
-  public RecordReader<K, V> createRecordReader(InputSplit split,
-      TaskAttemptContext context) throws IOException, InterruptedException {
-    return new VirtualRecordReader<>();
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputSplit.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputSplit.java
deleted file mode 100644
index cd4c87fcfe8..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualInputSplit.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-
-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import org.apache.hadoop.io.Writable;
-import org.apache.hadoop.mapreduce.InputSplit;
-
-
-/**
- * A fake input split.
- */
-public class VirtualInputSplit extends InputSplit implements Writable {
-
-  @Override
-  public void write(DataOutput out) throws IOException {
-    // do Nothing
-  }
-
-  @Override
-  public void readFields(DataInput in) throws IOException {
-    // do Nothing
-  }
-
-  @Override
-  public long getLength() throws IOException, InterruptedException {
-    return 0;
-  }
-
-  @Override
-  public String[] getLocations() throws IOException, InterruptedException {
-    return new String[] {};
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualRecordReader.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualRecordReader.java
deleted file mode 100644
index b9c176e8fb8..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/VirtualRecordReader.java
+++ /dev/null
@@ -1,78 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-
-import java.io.IOException;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.NullWritable;
-import org.apache.hadoop.mapreduce.InputSplit;
-import org.apache.hadoop.mapreduce.RecordReader;
-import org.apache.hadoop.mapreduce.TaskAttemptContext;
-
-
-/**
- * A simple fake record reader which simply runs for some time duration.
- */
-@SuppressWarnings("unchecked")
-public class VirtualRecordReader<K, V> extends RecordReader<K, V> {
-  private int durationMs;
-  private long startTimestampInMs;
-  private long endTimestampInMs;
-  private int numRows = 1;
-
-  @Override
-  public void initialize(InputSplit split, TaskAttemptContext context)
-      throws IOException, InterruptedException {
-    Configuration conf = context.getConfiguration();
-    durationMs = conf.getInt(CreateFileMapper.DURATION_MIN_KEY, 0) * 60 * 1000;
-    startTimestampInMs = conf.getInt(WorkloadDriver.START_TIMESTAMP_MS, 0);
-    endTimestampInMs = startTimestampInMs + durationMs;
-  }
-
-  // The map function per split should be invoked only once.
-  @Override
-  public boolean nextKeyValue() throws IOException, InterruptedException {
-    if (numRows > 0) {
-      numRows--;
-      return true;
-    } else {
-      return false;
-    }
-  }
-
-  @Override
-  public K getCurrentKey() throws IOException, InterruptedException {
-    return (K) NullWritable.get();
-  }
-
-  @Override
-  public V getCurrentValue() throws IOException, InterruptedException {
-    return (V) NullWritable.get();
-  }
-
-  @Override
-  public float getProgress() throws IOException, InterruptedException {
-    long remainingMs = endTimestampInMs - System.currentTimeMillis();
-    return (remainingMs * 100.0f) / durationMs;
-  }
-
-  @Override
-  public void close() throws IOException {
-    // do Nothing
-  }
-};
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadDriver.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadDriver.java
deleted file mode 100644
index 7c416bb14b2..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadDriver.java
+++ /dev/null
@@ -1,213 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper;
-import java.io.IOException;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.concurrent.TimeUnit;
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.CommandLineParser;
-import org.apache.commons.cli.HelpFormatter;
-import org.apache.commons.cli.Option;
-import org.apache.commons.cli.OptionGroup;
-import org.apache.commons.cli.Options;
-import org.apache.commons.cli.PosixParser;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.mapreduce.MRJobConfig;
-import org.apache.hadoop.mapreduce.Job;
-import org.apache.hadoop.util.Tool;
-import org.apache.hadoop.util.ToolRunner;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-
-/**
- * This is the driver for generating generic workloads against a NameNode under
- * test. It launches a map-only job with a mapper class specified by the
- * {@value MAPPER_CLASS_NAME} argument. See the specific mappers (currently
- * {@link AuditReplayMapper} and {@link CreateFileMapper}) for information on
- * their specific behavior and parameters.
- */
-public class WorkloadDriver extends Configured implements Tool {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(WorkloadDriver.class);
-
-  public static final String START_TIMESTAMP_MS = "start_timestamp_ms";
-  public static final String START_TIME_OFFSET = "start_time_offset";
-  public static final String START_TIME_OFFSET_DEFAULT = "1m";
-  public static final String NN_URI = "nn_uri";
-  public static final String MAPPER_CLASS_NAME = "mapper_class_name";
-
-  public int run(String[] args) throws Exception {
-    Option helpOption = new Option("h", "help", false,
-        "Shows this message. Additionally specify the " + MAPPER_CLASS_NAME
-            + " argument to show help for a specific mapper class.");
-    Options options = new Options();
-    options.addOption(helpOption);
-    options.addOption(Option.builder(NN_URI).argName("NN URI").hasArg()
-        .desc("URI of the NameNode under test").required()
-        .build());
-    OptionGroup startTimeOptions = new OptionGroup();
-    startTimeOptions.addOption(Option.builder(START_TIMESTAMP_MS).argName("Start Timestamp")
-        .hasArg().desc("Mapper start UTC timestamp in ms")
-        .build());
-    startTimeOptions
-        .addOption(Option.builder(START_TIME_OFFSET_DEFAULT).argName("Start Time Offset").hasArg()
-            .desc("Mapper start time as an offset from current "
-                + "time. Human-readable formats accepted, e.g. 10m (default "
-                + START_TIME_OFFSET_DEFAULT + ").")
-            .build());
-    options.addOptionGroup(startTimeOptions);
-    Option mapperClassOption = Option.builder(MAPPER_CLASS_NAME).argName("Mapper ClassName")
-        .hasArg()
-        .desc("Class name of the mapper; must be a WorkloadMapper "
-            + "subclass. Mappers supported currently: \n"
-            + "1. AuditReplayMapper \n"
-            + "2. CreateFileMapper \n"
-            + "Fully specified class names are also supported.")
-        .required().build();
-    options.addOption(mapperClassOption);
-
-    Options helpOptions = new Options();
-    helpOptions.addOption(helpOption);
-    Option mapperClassNotRequiredOption = (Option) mapperClassOption.clone();
-    mapperClassNotRequiredOption.setRequired(false);
-    helpOptions.addOption(mapperClassNotRequiredOption);
-
-    CommandLineParser parser = new PosixParser();
-    CommandLine cli = parser.parse(helpOptions, args, true);
-    if (cli.hasOption("h")) {
-      String footer = null;
-      if (cli.hasOption(MAPPER_CLASS_NAME)) {
-        footer = getMapperUsageInfo(cli.getOptionValue(MAPPER_CLASS_NAME));
-      }
-
-      HelpFormatter formatter = new HelpFormatter();
-      formatter.printHelp(200, "./start-workload [options]", null, options,
-          footer);
-      return 1;
-    }
-
-    cli = parser.parse(options, args);
-    String nnURI = cli.getOptionValue(NN_URI);
-    long startTimestampMs;
-    if (cli.hasOption(START_TIMESTAMP_MS)) {
-      startTimestampMs = Long.parseLong(cli.getOptionValue(START_TIMESTAMP_MS));
-    } else {
-      // Leverage the human-readable time parsing capabilities of Configuration
-      String tmpConfKey = "___temp_config_property___";
-      Configuration tmpConf = new Configuration();
-      tmpConf.set(tmpConfKey,
-          cli.getOptionValue(START_TIME_OFFSET, START_TIME_OFFSET_DEFAULT));
-      startTimestampMs = tmpConf.getTimeDuration(tmpConfKey, 0,
-          TimeUnit.MILLISECONDS) + System.currentTimeMillis();
-    }
-    Class<? extends WorkloadMapper<?, ?, ?, ?>> mapperClass = getMapperClass(
-        cli.getOptionValue(MAPPER_CLASS_NAME));
-    if (!mapperClass.newInstance().verifyConfigurations(getConf())) {
-      System.err
-          .println(getMapperUsageInfo(cli.getOptionValue(MAPPER_CLASS_NAME)));
-      return 1;
-    }
-
-    Job job = getJobForSubmission(getConf(), nnURI, startTimestampMs,
-        mapperClass);
-
-    boolean success = job.waitForCompletion(true);
-    return success ? 0 : 1;
-  }
-
-  public static Job getJobForSubmission(Configuration baseConf, String nnURI,
-      long startTimestampMs, Class<? extends WorkloadMapper<?, ?, ?, ?>>
-      mapperClass) throws IOException, InstantiationException,
-      IllegalAccessException {
-    Configuration conf = new Configuration(baseConf);
-    conf.set(NN_URI, nnURI);
-    conf.setBoolean(MRJobConfig.MAP_SPECULATIVE, false);
-
-    String startTimeString = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss z")
-        .format(new Date(startTimestampMs));
-    LOG.info("The workload will start at " + startTimestampMs + " ms ("
-        + startTimeString + ")");
-    conf.setLong(START_TIMESTAMP_MS, startTimestampMs);
-
-    Job job = Job.getInstance(conf, "Dynamometer Workload Driver");
-    job.setJarByClass(mapperClass);
-    job.setMapperClass(mapperClass);
-    mapperClass.newInstance().configureJob(job);
-
-    return job;
-  }
-
-  public static void main(String[] args) throws Exception {
-    WorkloadDriver driver = new WorkloadDriver();
-    System.exit(ToolRunner.run(driver, args));
-  }
-
-  // The cast is actually checked via isAssignableFrom but the compiler doesn't
-  // recognize this
-  @SuppressWarnings("unchecked")
-  private Class<? extends WorkloadMapper<?, ?, ?, ?>> getMapperClass(
-      String className) {
-    String[] potentialQualifiedClassNames = {
-        WorkloadDriver.class.getPackage().getName() + "." + className,
-        AuditReplayMapper.class.getPackage().getName() + "." + className,
-        className
-    };
-    for (String qualifiedClassName : potentialQualifiedClassNames) {
-      Class<?> mapperClass;
-      try {
-        mapperClass = getConf().getClassByName(qualifiedClassName);
-      } catch (ClassNotFoundException cnfe) {
-        continue;
-      }
-      if (!WorkloadMapper.class.isAssignableFrom(mapperClass)) {
-        throw new IllegalArgumentException(className + " is not a subclass of "
-            + WorkloadMapper.class.getCanonicalName());
-      }
-      return (Class<? extends WorkloadMapper<?, ?, ?, ?>>) mapperClass;
-    }
-    throw new IllegalArgumentException("Unable to find workload mapper class: "
-        + className);
-  }
-
-  private String getMapperUsageInfo(String mapperClassName)
-      throws ClassNotFoundException, InstantiationException,
-      IllegalAccessException {
-    WorkloadMapper<?, ?, ?, ?> mapper = getMapperClass(mapperClassName)
-        .newInstance();
-    StringBuilder builder = new StringBuilder("Usage for ");
-    builder.append(mapper.getClass().getSimpleName());
-    builder.append(":\n");
-    builder.append(mapper.getDescription());
-    for (String configDescription : mapper.getConfigDescriptions()) {
-      builder.append("\n    ");
-      builder.append(configDescription);
-    }
-    builder.append("\nConfiguration parameters can be set at the ");
-    builder.append("_start_ of the argument list like:\n");
-    builder.append("  -Dconfiguration.key=configurationValue");
-
-    return builder.toString();
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadMapper.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadMapper.java
deleted file mode 100644
index d73f5962d74..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/WorkloadMapper.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-
-import java.util.List;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.NullWritable;
-import org.apache.hadoop.mapreduce.InputFormat;
-import org.apache.hadoop.mapreduce.Job;
-import org.apache.hadoop.mapreduce.Mapper;
-import org.apache.hadoop.mapreduce.lib.output.NullOutputFormat;
-
-/**
- * Represents the base class for a generic workload-generating mapper. By
- * default, it will expect to use {@link VirtualInputFormat} as its
- * {@link InputFormat}. Subclasses requiring a reducer or expecting a different
- * {@link InputFormat} should override the {@link #configureJob(Job)} method.
- */
-public abstract class WorkloadMapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT> extends
-    Mapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT> {
-
-  /**
-   * Get the description of the behavior of this mapper.
-   * @return description string.
-   */
-  public abstract String getDescription();
-
-  /**
-   * Get a list of the description of each configuration that this mapper
-   * accepts.
-   * @return list of the description of each configuration.
-   */
-  public abstract List<String> getConfigDescriptions();
-
-  /**
-   * Verify that the provided configuration contains all configurations required
-   * by this mapper.
-   * @param conf configuration.
-   * @return whether or not all configurations required are provided.
-   */
-  public abstract boolean verifyConfigurations(Configuration conf);
-
-  /**
-   * Setup input and output formats and optional reducer.
-   */
-  public void configureJob(Job job) {
-    job.setInputFormatClass(VirtualInputFormat.class);
-
-    job.setNumReduceTasks(0);
-    job.setOutputKeyClass(NullWritable.class);
-    job.setOutputValueClass(NullWritable.class);
-    job.setOutputFormatClass(NullOutputFormat.class);
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditCommandParser.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditCommandParser.java
deleted file mode 100644
index c076a2061ef..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditCommandParser.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import java.io.IOException;
-import java.util.function.Function;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.Text;
-
-/**
- * This interface represents a pluggable command parser. It will accept in one
- * line of {@link Text} input at a time and return an {@link AuditReplayCommand}
- * which represents the input text. Each input line should produce exactly one
- * command.
- */
-public interface AuditCommandParser {
-
-  /**
-   * Initialize this parser with the given configuration. Guaranteed to be
-   * called prior to any calls to {@link #parse(Text, Function)}.
-   *
-   * @param conf The Configuration to be used to set up this parser.
-   * @throws IOException if error on initializing a parser.
-   */
-  void initialize(Configuration conf) throws IOException;
-
-  /**
-   * Convert a line of input into an {@link AuditReplayCommand}. Since
-   * {@link AuditReplayCommand}s store absolute timestamps, relativeToAbsolute
-   * can be used to convert relative timestamps (i.e., milliseconds elapsed
-   * between the start of the audit log and this command) into absolute
-   * timestamps.
-   *
-   * @param inputLine Single input line to convert.
-   * @param relativeToAbsolute Function converting relative timestamps
-   *                           (in milliseconds) to absolute timestamps
-   *                           (in milliseconds).
-   * @return A command representing the input line.
-   * @throws IOException if error on parsing.
-   */
-  AuditReplayCommand parse(Text inputLine,
-      Function<Long, Long> relativeToAbsolute) throws IOException;
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogDirectParser.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogDirectParser.java
deleted file mode 100644
index e649b69be73..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogDirectParser.java
+++ /dev/null
@@ -1,158 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import org.apache.hadoop.thirdparty.com.google.common.base.Splitter;
-import java.io.IOException;
-import java.text.DateFormat;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.HashMap;
-import java.util.Map;
-import java.util.TimeZone;
-import java.util.function.Function;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.Text;
-
-/**
- * This {@link AuditCommandParser} is used to read commands from an audit log in
- * the original format audit logs are produced in with a standard configuration.
- * It requires setting the {@value AUDIT_START_TIMESTAMP_KEY} configuration to
- * specify what the start time of the audit log was to determine when events
- * occurred relative to this start time.
- * <p>
- * By default, this assumes that the audit log is in the default log format
- * set up by Hadoop, like:
- * <pre>{@code
- *   1970-01-01 00:00:00,000 INFO FSNamesystem.audit: allowed=true ...
- * }</pre>
- * You can adjust this parsing behavior using the various configurations
- * available.
- */
-public class AuditLogDirectParser implements AuditCommandParser {
-
-  /** See class Javadoc for more detail. */
-  public static final String AUDIT_START_TIMESTAMP_KEY =
-      "auditreplay.log-start-time.ms";
-
-  /**
-   * The format string used to parse the date which is present in the audit
-   * log. This must be a format understood by {@link SimpleDateFormat}.
-   */
-  public static final String AUDIT_LOG_DATE_FORMAT_KEY =
-      "auditreplay.log-date.format";
-  public static final String AUDIT_LOG_DATE_FORMAT_DEFAULT =
-      "yyyy-MM-dd HH:mm:ss,SSS";
-
-  /**
-   * The time zone to use when parsing the audit log timestamp. This must
-   * be a format recognized by {@link TimeZone#getTimeZone(String)}.
-   */
-  public static final String AUDIT_LOG_DATE_TIME_ZONE_KEY =
-      "auditreplay.log-date.time-zone";
-  public static final String AUDIT_LOG_DATE_TIME_ZONE_DEFAULT = "UTC";
-
-  /**
-   * The regex to use when parsing the audit log lines. This should match
-   * against a single log line, and create two named capture groups. One
-   * must be titled "timestamp" and return a timestamp which can be parsed
-   * by a {@link DateFormat date formatter}. The other must be titled "message"
-   * and return the audit content, such as "allowed=true ugi=user ...". See
-   * {@link #AUDIT_LOG_PARSE_REGEX_DEFAULT} for an example.
-   */
-  public static final String AUDIT_LOG_PARSE_REGEX_KEY =
-      "auditreplay.log-parse-regex";
-  public static final String AUDIT_LOG_PARSE_REGEX_DEFAULT =
-      "^(?<timestamp>.+?) INFO [^:]+: (?<message>.+)$";
-
-  private static final Splitter SPACE_SPLITTER = Splitter.on(" ").trimResults()
-      .omitEmptyStrings();
-
-  private long startTimestamp;
-  private DateFormat dateFormat;
-  private Pattern logLineParseRegex;
-
-  @Override
-  public void initialize(Configuration conf) throws IOException {
-    startTimestamp = conf.getLong(AUDIT_START_TIMESTAMP_KEY, -1);
-    if (startTimestamp < 0) {
-      throw new IOException(
-          "Invalid or missing audit start timestamp: " + startTimestamp);
-    }
-    dateFormat = new SimpleDateFormat(conf.get(AUDIT_LOG_DATE_FORMAT_KEY,
-        AUDIT_LOG_DATE_FORMAT_DEFAULT));
-    String timeZoneString = conf.get(AUDIT_LOG_DATE_TIME_ZONE_KEY,
-        AUDIT_LOG_DATE_TIME_ZONE_DEFAULT);
-    dateFormat.setTimeZone(TimeZone.getTimeZone(timeZoneString));
-    String logLineParseRegexString =
-        conf.get(AUDIT_LOG_PARSE_REGEX_KEY, AUDIT_LOG_PARSE_REGEX_DEFAULT);
-    if (!logLineParseRegexString.contains("(?<timestamp>")
-        && logLineParseRegexString.contains("(?<message>")) {
-      throw new IllegalArgumentException("Must configure regex with named "
-          + "capture groups 'timestamp' and 'message'");
-    }
-    logLineParseRegex = Pattern.compile(logLineParseRegexString);
-  }
-
-  @Override
-  public AuditReplayCommand parse(Text inputLine,
-      Function<Long, Long> relativeToAbsolute) throws IOException {
-    Matcher m = logLineParseRegex.matcher(inputLine.toString());
-    if (!m.find()) {
-      throw new IOException(
-          "Unable to find valid message pattern from audit log line: `"
-              + inputLine + "` using regex `" + logLineParseRegex + "`");
-    }
-    long relativeTimestamp;
-    try {
-      relativeTimestamp = dateFormat.parse(m.group("timestamp")).getTime()
-          - startTimestamp;
-    } catch (ParseException p) {
-      throw new IOException(
-          "Exception while parsing timestamp from audit log line: `"
-          + inputLine + "`", p);
-    }
-    // Sanitize the = in the rename options field into a : so we can split on =
-    String auditMessageSanitized =
-        m.group("message").replace("(options=", "(options:");
-
-    Map<String, String> parameterMap = new HashMap<String, String>();
-    String[] auditMessageSanitizedList = auditMessageSanitized.split("\t");
-
-    for (String auditMessage : auditMessageSanitizedList) {
-      String[] splitMessage = auditMessage.split("=", 2);
-      try {
-        parameterMap.put(splitMessage[0], splitMessage[1]);
-      } catch (ArrayIndexOutOfBoundsException e) {
-        throw new IOException(
-            "Exception while parsing a message from audit log line: `"
-            + inputLine + "`", e);
-      }
-    }
-
-    return new AuditReplayCommand(relativeToAbsolute.apply(relativeTimestamp),
-        // Split the UGI on space to remove the auth and proxy portions of it
-        SPACE_SPLITTER.split(parameterMap.get("ugi")).iterator().next(),
-        parameterMap.get("cmd").replace("(options:", "(options="),
-        parameterMap.get("src"), parameterMap.get("dst"),
-        parameterMap.get("ip"));
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogHiveTableParser.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogHiveTableParser.java
deleted file mode 100644
index abc10f4e33f..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditLogHiveTableParser.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import java.io.IOException;
-import java.util.function.Function;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.Text;
-
-/**
- * This {@link AuditCommandParser} is used to read commands assuming that the
- * input was generated by a Hive query storing uncompressed output files, in
- * which fields should be separated by the start-of-heading (U+0001) character.
- * The fields available should be, in order:
- *
- * <pre>
- *   relativeTimestampMs,ugi,command,src,dest,sourceIP
- * </pre>
- *
- * Where relativeTimestampMs represents the time elapsed between the start of
- * the audit log and the occurrence of the audit event. Assuming your audit logs
- * are available in Hive, this can be generated with a query looking like:
- *
- * <pre>
- *   INSERT OVERWRITE DIRECTORY '${outputPath}'
- *   SELECT (timestamp - ${startTime} AS relTime, ugi, cmd, src, dst, ip
- *   FROM '${auditLogTableLocation}'
- *   WHERE
- *     timestamp {@literal >=} ${startTime}
- *     AND timestamp {@literal <} ${endTime}
- *   DISTRIBUTE BY src
- *   SORT BY relTime ASC;
- * </pre>
- *
- * Note that the sorting step is important; events in each distinct file must be
- * in time-ascending order.
- */
-public class AuditLogHiveTableParser implements AuditCommandParser {
-
-  private static final String FIELD_SEPARATOR = "\u0001";
-
-  @Override
-  public void initialize(Configuration conf) throws IOException {
-    // Nothing to be done
-  }
-
-  @Override
-  public AuditReplayCommand parse(Text inputLine,
-      Function<Long, Long> relativeToAbsolute) throws IOException {
-    String[] fields = inputLine.toString().split(FIELD_SEPARATOR);
-    long absoluteTimestamp = relativeToAbsolute
-        .apply(Long.parseLong(fields[0]));
-    return new AuditReplayCommand(absoluteTimestamp, fields[1], fields[2],
-        fields[3], fields[4], fields[5]);
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayCommand.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayCommand.java
deleted file mode 100644
index 038312d2e9f..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayCommand.java
+++ /dev/null
@@ -1,163 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import java.io.IOException;
-import java.util.Objects;
-import java.util.concurrent.Delayed;
-import java.util.concurrent.TimeUnit;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-/**
- * This class represents a single command to be replayed by the workload
- * generator. It implements the {@link Delayed} interface so that they can be
- * fetched in timestamp order from a {@link java.util.concurrent.DelayQueue}.
- * You can use the {@link #getPoisonPill(long)} method to retrieve "Poison Pill"
- * {@link AuditReplayCommand} which has {@link #isPoison()} as true,
- * representing to a consumer(s) of the {@link java.util.concurrent.DelayQueue}
- * that it should stop processing further items and instead terminate itself.
- */
-class AuditReplayCommand implements Delayed {
-
-  private static final Logger LOG = LoggerFactory
-      .getLogger(AuditReplayCommand.class);
-  private static final Pattern SIMPLE_UGI_PATTERN = Pattern
-      .compile("([^/@ ]*).*?");
-
-  private long absoluteTimestamp;
-  private String ugi;
-  private String command;
-  private String src;
-  private String dest;
-  private String sourceIP;
-
-  AuditReplayCommand(long absoluteTimestamp, String ugi, String command,
-      String src, String dest, String sourceIP) {
-    this.absoluteTimestamp = absoluteTimestamp;
-    this.ugi = ugi;
-    this.command = command;
-    this.src = src;
-    this.dest = dest;
-    this.sourceIP = sourceIP;
-  }
-
-  long getAbsoluteTimestamp() {
-    return absoluteTimestamp;
-  }
-
-  String getSimpleUgi() {
-    Matcher m = SIMPLE_UGI_PATTERN.matcher(ugi);
-    if (m.matches()) {
-      return m.group(1);
-    } else {
-      LOG.error("Error parsing simple UGI <{}>; falling back to current user",
-          ugi);
-      try {
-        return UserGroupInformation.getCurrentUser().getShortUserName();
-      } catch (IOException ioe) {
-        return "";
-      }
-    }
-  }
-
-  String getCommand() {
-    return command;
-  }
-
-  String getSrc() {
-    return src;
-  }
-
-  String getDest() {
-    return dest;
-  }
-
-  String getSourceIP() {
-    return sourceIP;
-  }
-
-  @Override
-  public long getDelay(TimeUnit unit) {
-    return unit.convert(absoluteTimestamp - System.currentTimeMillis(),
-        TimeUnit.MILLISECONDS);
-  }
-
-  @Override
-  public int compareTo(Delayed o) {
-    return Long.compare(absoluteTimestamp,
-        ((AuditReplayCommand) o).absoluteTimestamp);
-  }
-
-  /**
-   * If true, the thread which consumes this item should not process any further
-   * items and instead simply terminate itself.
-   */
-  boolean isPoison() {
-    return false;
-  }
-
-  /**
-   * A command representing a Poison Pill, indicating that the processing thread
-   * should not process any further items and instead should terminate itself.
-   * Always returns true for {@link #isPoison()}. It does not contain any other
-   * information besides a timestamp; other getter methods wil return null.
-   */
-  private static final class PoisonPillCommand extends AuditReplayCommand {
-
-    private PoisonPillCommand(long absoluteTimestamp) {
-      super(absoluteTimestamp, null, null, null, null, null);
-    }
-
-    @Override
-    boolean isPoison() {
-      return true;
-    }
-
-  }
-
-  static AuditReplayCommand getPoisonPill(long relativeTimestamp) {
-    return new PoisonPillCommand(relativeTimestamp);
-  }
-
-  @Override
-  public boolean equals(Object other) {
-    if (!(other instanceof AuditReplayCommand)) {
-      return false;
-    }
-    AuditReplayCommand o = (AuditReplayCommand) other;
-    return absoluteTimestamp == o.absoluteTimestamp && ugi.equals(o.ugi)
-        && command.equals(o.command) && src.equals(o.src) && dest.equals(o.dest)
-        && sourceIP.equals(o.sourceIP);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(absoluteTimestamp, ugi, command, src, dest, sourceIP);
-  }
-
-  @Override
-  public String toString() {
-    return String.format("AuditReplayCommand(absoluteTimestamp=%d, ugi=%s, "
-            + "command=%s, src=%s, dest=%s, sourceIP=%s",
-        absoluteTimestamp, ugi, command, src, dest, sourceIP);
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayMapper.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayMapper.java
deleted file mode 100644
index fdd8f20d85b..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayMapper.java
+++ /dev/null
@@ -1,311 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import org.apache.hadoop.util.Lists;
-import java.util.Optional;
-import java.util.function.Function;
-
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.mapreduce.Job;
-import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.WorkloadDriver;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.WorkloadMapper;
-import java.io.IOException;
-import java.lang.reflect.InvocationTargetException;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ConcurrentMap;
-import java.util.concurrent.DelayQueue;
-import java.util.concurrent.ScheduledThreadPoolExecutor;
-import java.util.concurrent.TimeUnit;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.io.LongWritable;
-import org.apache.hadoop.io.Text;
-import org.apache.hadoop.mapreduce.MRJobConfig;
-import org.apache.hadoop.mapreduce.Mapper;
-import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import static org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.CommandType.READ;
-import static org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.CommandType.WRITE;
-
-/**
- * AuditReplayMapper replays the given audit trace against the NameNode under
- * test. Each mapper spawns a number of threads equal to the
- * {@value NUM_THREADS_KEY} configuration (by default
- * {@value NUM_THREADS_DEFAULT}) to use for replaying. Each mapper reads a
- * single input file which will be consumed by all of the available threads. A
- * {@link FileInputFormat} with splitting disabled is used so any files present
- * in the input path directory (given by the {@value INPUT_PATH_KEY}
- * configuration) will be used as input; one file per mapper. The expected
- * format of these files is determined by the value of the
- * {@value COMMAND_PARSER_KEY} configuration, which defaults to
- * {@link AuditLogDirectParser}.
- * <p>
- * This generates a number of {@link org.apache.hadoop.mapreduce.Counter}
- * values which can be used to get information into the replay, including the
- * number of commands replayed, how many of them were "invalid" (threw an
- * exception), how many were "late" (replayed later than they should have been),
- * and the latency (from client perspective) of each command. If there are a
- * large number of "late" commands, you likely need to increase the number of
- * threads used and/or the number of mappers.
- * <p>
- * By default, commands will be replayed at the same rate as they were
- * originally performed. However a rate factor can be specified via the
- * {@value RATE_FACTOR_KEY} configuration; all of the (relative) timestamps will
- * be divided by this rate factor, effectively changing the rate at which they
- * are replayed. For example, a rate factor of 2 would make the replay occur
- * twice as fast, and a rate factor of 0.5 would make it occur half as fast.
- */
-public class AuditReplayMapper extends WorkloadMapper<LongWritable, Text,
-    UserCommandKey, CountTimeWritable> {
-
-  public static final String INPUT_PATH_KEY = "auditreplay.input-path";
-  public static final String OUTPUT_PATH_KEY = "auditreplay.output-path";
-  public static final String NUM_THREADS_KEY = "auditreplay.num-threads";
-  public static final int NUM_THREADS_DEFAULT = 1;
-  public static final String CREATE_BLOCKS_KEY = "auditreplay.create-blocks";
-  public static final boolean CREATE_BLOCKS_DEFAULT = true;
-  public static final String RATE_FACTOR_KEY = "auditreplay.rate-factor";
-  public static final double RATE_FACTOR_DEFAULT = 1.0;
-  public static final String COMMAND_PARSER_KEY =
-      "auditreplay.command-parser.class";
-  public static final Class<AuditLogDirectParser> COMMAND_PARSER_DEFAULT =
-      AuditLogDirectParser.class;
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(AuditReplayMapper.class);
-  // This is the maximum amount that the mapper should read ahead from the input
-  // as compared to the replay time. Setting this to one minute avoids reading
-  // too
-  // many entries into memory simultaneously but ensures that the replay threads
-  // should not ever run out of entries to replay.
-  private static final long MAX_READAHEAD_MS = 60000;
-
-  public static final String INDIVIDUAL_COMMANDS_COUNTER_GROUP =
-      "INDIVIDUAL_COMMANDS";
-  public static final String INDIVIDUAL_COMMANDS_LATENCY_SUFFIX = "_LATENCY";
-  public static final String INDIVIDUAL_COMMANDS_INVALID_SUFFIX = "_INVALID";
-  public static final String INDIVIDUAL_COMMANDS_COUNT_SUFFIX = "_COUNT";
-
-  /** {@link org.apache.hadoop.mapreduce.Counter} definitions for replay. */
-  public enum REPLAYCOUNTERS {
-    // Total number of commands that were replayed
-    TOTALCOMMANDS,
-    // Total number of commands that returned an error during replay (incl
-    // unsupported)
-    TOTALINVALIDCOMMANDS,
-    // Total number of commands that are unsupported for replay
-    TOTALUNSUPPORTEDCOMMANDS,
-    // Total number of commands that were performed later than they should have
-    // been
-    LATECOMMANDS,
-    // Total delay time of all commands that were performed later than they
-    // should have been
-    LATECOMMANDSTOTALTIME,
-    // Total number of write operations
-    TOTALWRITECOMMANDS,
-    // Total latency for all write operations
-    TOTALWRITECOMMANDLATENCY,
-    // Total number of read operations
-    TOTALREADCOMMANDS,
-    // Total latency for all read operations
-    TOTALREADCOMMANDLATENCY
-  }
-
-  /** Definitions of the various commands that can be replayed. */
-  public enum ReplayCommand {
-    APPEND(WRITE),
-    CREATE(WRITE),
-    GETFILEINFO(READ),
-    CONTENTSUMMARY(READ),
-    MKDIRS(WRITE),
-    RENAME(WRITE),
-    LISTSTATUS(READ),
-    DELETE(WRITE),
-    OPEN(READ),
-    SETPERMISSION(WRITE),
-    SETOWNER(WRITE),
-    SETTIMES(WRITE),
-    SETREPLICATION(WRITE),
-    CONCAT(WRITE);
-
-    private final CommandType type;
-
-    ReplayCommand(CommandType type) {
-      this.type = type;
-    }
-
-    public CommandType getType() {
-      return type;
-    }
-  }
-
-  /** Define the type of command, either read or write. */
-  public enum CommandType {
-    READ, WRITE
-  }
-
-  private long startTimestampMs;
-  private int numThreads;
-  private double rateFactor;
-  private long highestTimestamp;
-  private List<AuditReplayThread> threads;
-  private DelayQueue<AuditReplayCommand> commandQueue;
-  private Function<Long, Long> relativeToAbsoluteTimestamp;
-  private AuditCommandParser commandParser;
-  private ScheduledThreadPoolExecutor progressExecutor;
-
-  @Override
-  public String getDescription() {
-    return "This mapper replays audit log files.";
-  }
-
-  @Override
-  public List<String> getConfigDescriptions() {
-    return Lists.newArrayList(
-        INPUT_PATH_KEY
-            + " (required): Path to directory containing input files.",
-        OUTPUT_PATH_KEY + " (required): Path to destination for output files.",
-        NUM_THREADS_KEY + " (default " + NUM_THREADS_DEFAULT
-            + "): Number of threads to use per mapper for replay.",
-        CREATE_BLOCKS_KEY + " (default " + CREATE_BLOCKS_DEFAULT
-            + "): Whether or not to create 1-byte blocks when "
-            + "performing `create` commands.",
-        RATE_FACTOR_KEY + " (default " + RATE_FACTOR_DEFAULT
-            + "): Multiplicative speed at which to replay the audit "
-            + "log; e.g. a value of 2.0 would make the replay occur at "
-            + "twice the original speed. This can be useful "
-            + "to induce heavier loads.");
-  }
-
-  @Override
-  public boolean verifyConfigurations(Configuration conf) {
-    return conf.get(INPUT_PATH_KEY) != null
-        && conf.get(OUTPUT_PATH_KEY) != null;
-  }
-
-  @Override
-  public void setup(final Mapper.Context context) throws IOException {
-    Configuration conf = context.getConfiguration();
-    // WorkloadDriver ensures that the starttimestamp is set
-    startTimestampMs = conf.getLong(WorkloadDriver.START_TIMESTAMP_MS, -1);
-    numThreads = conf.getInt(NUM_THREADS_KEY, NUM_THREADS_DEFAULT);
-    rateFactor = conf.getDouble(RATE_FACTOR_KEY, RATE_FACTOR_DEFAULT);
-    try {
-      commandParser = conf.getClass(COMMAND_PARSER_KEY, COMMAND_PARSER_DEFAULT,
-          AuditCommandParser.class).getConstructor().newInstance();
-    } catch (NoSuchMethodException | InstantiationException
-        | IllegalAccessException | InvocationTargetException e) {
-      throw new IOException(
-          "Exception encountered while instantiating the command parser", e);
-    }
-    commandParser.initialize(conf);
-    relativeToAbsoluteTimestamp =
-        (input) -> startTimestampMs + Math.round(input / rateFactor);
-
-    LOG.info("Starting " + numThreads + " threads");
-
-    progressExecutor = new ScheduledThreadPoolExecutor(1);
-    // half of the timeout or once per minute if none specified
-    long progressFrequencyMs = conf.getLong(MRJobConfig.TASK_TIMEOUT,
-        2 * 60 * 1000) / 2;
-    progressExecutor.scheduleAtFixedRate(context::progress,
-        progressFrequencyMs, progressFrequencyMs, TimeUnit.MILLISECONDS);
-
-    threads = new ArrayList<>();
-    ConcurrentMap<String, FileSystem> fsCache = new ConcurrentHashMap<>();
-    commandQueue = new DelayQueue<>();
-    for (int i = 0; i < numThreads; i++) {
-      AuditReplayThread thread = new AuditReplayThread(context, commandQueue,
-          fsCache);
-      threads.add(thread);
-      thread.start();
-    }
-  }
-
-  @Override
-  public void map(LongWritable lineNum, Text inputLine, Mapper.Context context)
-      throws IOException, InterruptedException {
-    AuditReplayCommand cmd = commandParser.parse(inputLine,
-        relativeToAbsoluteTimestamp);
-    long delay = cmd.getDelay(TimeUnit.MILLISECONDS);
-    // Prevent from loading too many elements into memory all at once
-    if (delay > MAX_READAHEAD_MS) {
-      Thread.sleep(delay - (MAX_READAHEAD_MS / 2));
-    }
-    commandQueue.put(cmd);
-    highestTimestamp = cmd.getAbsoluteTimestamp();
-  }
-
-  @Override
-  public void cleanup(Mapper.Context context)
-      throws InterruptedException, IOException {
-    for (AuditReplayThread t : threads) {
-      // Add in an indicator for each thread to shut down after the last real
-      // command
-      t.addToQueue(AuditReplayCommand.getPoisonPill(highestTimestamp + 1));
-    }
-    Optional<Exception> threadException = Optional.empty();
-    for (AuditReplayThread t : threads) {
-      t.join();
-      t.drainCounters(context);
-      t.drainCommandLatencies(context);
-      if (t.getException() != null) {
-        threadException = Optional.of(t.getException());
-      }
-    }
-    progressExecutor.shutdown();
-
-    if (threadException.isPresent()) {
-      throw new RuntimeException("Exception in AuditReplayThread",
-          threadException.get());
-    }
-    LOG.info("Time taken to replay the logs in ms: "
-        + (System.currentTimeMillis() - startTimestampMs));
-    long totalCommands = context.getCounter(REPLAYCOUNTERS.TOTALCOMMANDS)
-        .getValue();
-    if (totalCommands != 0) {
-      double percentageOfInvalidOps =
-          context.getCounter(REPLAYCOUNTERS.TOTALINVALIDCOMMANDS).getValue()
-              * 100.0 / totalCommands;
-      LOG.info("Percentage of invalid ops: " + percentageOfInvalidOps);
-    }
-  }
-
-  @Override
-  public void configureJob(Job job) {
-    job.setMapOutputKeyClass(UserCommandKey.class);
-    job.setMapOutputValueClass(CountTimeWritable.class);
-    job.setInputFormatClass(NoSplitTextInputFormat.class);
-
-    job.setNumReduceTasks(1);
-    job.setReducerClass(AuditReplayReducer.class);
-    job.setOutputKeyClass(UserCommandKey.class);
-    job.setOutputValueClass(CountTimeWritable.class);
-    job.setOutputFormatClass(TextOutputFormat.class);
-
-    TextOutputFormat.setOutputPath(job, new Path(
-        job.getConfiguration().get(OUTPUT_PATH_KEY)));
-    job.getConfiguration().set(TextOutputFormat.SEPARATOR, ",");
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayReducer.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayReducer.java
deleted file mode 100644
index cde1630c8ac..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayReducer.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import org.apache.hadoop.mapreduce.Reducer;
-
-import java.io.IOException;
-
-/**
- * AuditReplayReducer aggregates the returned latency values from
- * {@link AuditReplayMapper} and sums them up by {@link UserCommandKey}, which
- * combines the user's id that ran the command and the type of the command
- * (READ/WRITE).
- */
-public class AuditReplayReducer extends Reducer<UserCommandKey,
-    CountTimeWritable, UserCommandKey, CountTimeWritable> {
-
-  @Override
-  protected void reduce(UserCommandKey key, Iterable<CountTimeWritable> values,
-      Context context) throws IOException, InterruptedException {
-    long countSum = 0;
-    long timeSum = 0;
-    for (CountTimeWritable v : values) {
-      countSum += v.getCount();
-      timeSum += v.getTime();
-    }
-    context.write(key, new CountTimeWritable(countSum, timeSum));
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayThread.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayThread.java
deleted file mode 100644
index 14e8c9cb82f..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayThread.java
+++ /dev/null
@@ -1,328 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import org.apache.hadoop.thirdparty.com.google.common.base.Splitter;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.WorkloadDriver;
-import java.io.IOException;
-import java.net.URI;
-import java.security.PrivilegedAction;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.concurrent.ConcurrentMap;
-import java.util.concurrent.DelayQueue;
-import java.util.concurrent.TimeUnit;
-import java.util.Map;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.FSDataOutputStream;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.fs.permission.FsPermission;
-import org.apache.hadoop.hdfs.DistributedFileSystem;
-import org.apache.hadoop.hdfs.protocol.HdfsFileStatus;
-import org.apache.hadoop.mapreduce.Counter;
-import org.apache.hadoop.mapreduce.Mapper;
-import org.apache.hadoop.mapreduce.counters.GenericCounter;
-import org.apache.hadoop.security.UserGroupInformation;
-
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.REPLAYCOUNTERS;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.ReplayCommand;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import static org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.INDIVIDUAL_COMMANDS_COUNTER_GROUP;
-import static org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.INDIVIDUAL_COMMANDS_COUNT_SUFFIX;
-import static org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.INDIVIDUAL_COMMANDS_INVALID_SUFFIX;
-import static org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper.INDIVIDUAL_COMMANDS_LATENCY_SUFFIX;
-
-/**
- * This class replays each audit log entry at a specified timestamp in the
- * future. Each of these threads maintains a {@link DelayQueue} into which items
- * are inserted by the {@link AuditReplayMapper}. Once an item is ready, this
- * thread will fetch the command from the queue and attempt to replay it.
- */
-public class AuditReplayThread extends Thread {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(AuditReplayThread.class);
-
-  private DelayQueue<AuditReplayCommand> commandQueue;
-  private ConcurrentMap<String, FileSystem> fsCache;
-  private URI namenodeUri;
-  private UserGroupInformation loginUser;
-  private Configuration mapperConf;
-  // If any exception is encountered it will be stored here
-  private Exception exception;
-  private long startTimestampMs;
-  private boolean createBlocks;
-
-  // Counters are not thread-safe so we store a local mapping in our thread
-  // and merge them all together at the end.
-  private Map<REPLAYCOUNTERS, Counter> replayCountersMap = new HashMap<>();
-  private Map<String, Counter> individualCommandsMap = new HashMap<>();
-  private Map<UserCommandKey, CountTimeWritable> commandLatencyMap
-      = new HashMap<>();
-
-  AuditReplayThread(Mapper.Context mapperContext,
-      DelayQueue<AuditReplayCommand> queue,
-      ConcurrentMap<String, FileSystem> fsCache) throws IOException {
-    commandQueue = queue;
-    this.fsCache = fsCache;
-    loginUser = UserGroupInformation.getLoginUser();
-    mapperConf = mapperContext.getConfiguration();
-    namenodeUri = URI.create(mapperConf.get(WorkloadDriver.NN_URI));
-    startTimestampMs = mapperConf.getLong(WorkloadDriver.START_TIMESTAMP_MS,
-        -1);
-    createBlocks = mapperConf.getBoolean(AuditReplayMapper.CREATE_BLOCKS_KEY,
-        AuditReplayMapper.CREATE_BLOCKS_DEFAULT);
-    LOG.info("Start timestamp: " + startTimestampMs);
-    for (REPLAYCOUNTERS rc : REPLAYCOUNTERS.values()) {
-      replayCountersMap.put(rc, new GenericCounter());
-    }
-    for (ReplayCommand replayCommand : ReplayCommand.values()) {
-      individualCommandsMap.put(
-          replayCommand + INDIVIDUAL_COMMANDS_COUNT_SUFFIX,
-          new GenericCounter());
-      individualCommandsMap.put(
-          replayCommand + INDIVIDUAL_COMMANDS_LATENCY_SUFFIX,
-          new GenericCounter());
-      individualCommandsMap.put(
-          replayCommand + INDIVIDUAL_COMMANDS_INVALID_SUFFIX,
-          new GenericCounter());
-    }
-  }
-
-  /**
-   * Merge all of this thread's counter values into the counters contained
-   * within the passed context.
-   *
-   * @param context The context holding the counters to increment.
-   */
-  void drainCounters(Mapper.Context context) {
-    for (Map.Entry<REPLAYCOUNTERS, Counter> ent : replayCountersMap
-        .entrySet()) {
-      context.getCounter(ent.getKey()).increment(ent.getValue().getValue());
-    }
-    for (Map.Entry<String, Counter> ent : individualCommandsMap.entrySet()) {
-      context.getCounter(INDIVIDUAL_COMMANDS_COUNTER_GROUP, ent.getKey())
-          .increment(ent.getValue().getValue());
-    }
-  }
-
-  void drainCommandLatencies(Mapper.Context context)
-      throws InterruptedException, IOException {
-    for (Map.Entry<UserCommandKey, CountTimeWritable> ent
-        : commandLatencyMap.entrySet()) {
-      context.write(ent.getKey(), ent.getValue());
-    }
-  }
-
-  /**
-   * Add a command to this thread's processing queue.
-   *
-   * @param cmd Command to add.
-   */
-  void addToQueue(AuditReplayCommand cmd) {
-    commandQueue.put(cmd);
-  }
-
-  /**
-   * Get the Exception that caused this thread to stop running, if any, else
-   * null. Should not be called until this thread has already completed (i.e.,
-   * after {@link #join()} has been called).
-   *
-   * @return The exception which was thrown, if any.
-   */
-  Exception getException() {
-    return exception;
-  }
-
-  @Override
-  public void run() {
-    long currentEpoch = System.currentTimeMillis();
-    long delay = startTimestampMs - currentEpoch;
-    try {
-      if (delay > 0) {
-        LOG.info("Sleeping for " + delay + " ms");
-        Thread.sleep(delay);
-      } else {
-        LOG.warn("Starting late by " + (-1 * delay) + " ms");
-      }
-
-      AuditReplayCommand cmd = commandQueue.take();
-      while (!cmd.isPoison()) {
-        replayCountersMap.get(REPLAYCOUNTERS.TOTALCOMMANDS).increment(1);
-        delay = cmd.getDelay(TimeUnit.MILLISECONDS);
-        if (delay < -5) { // allow some tolerance here
-          replayCountersMap.get(REPLAYCOUNTERS.LATECOMMANDS).increment(1);
-          replayCountersMap.get(REPLAYCOUNTERS.LATECOMMANDSTOTALTIME)
-              .increment(-1 * delay);
-        }
-        if (!replayLog(cmd)) {
-          replayCountersMap.get(REPLAYCOUNTERS.TOTALINVALIDCOMMANDS)
-              .increment(1);
-        }
-        cmd = commandQueue.take();
-      }
-    } catch (InterruptedException e) {
-      LOG.error("Interrupted; exiting from thread.", e);
-    } catch (Exception e) {
-      exception = e;
-      LOG.error("ReplayThread encountered exception; exiting.", e);
-    }
-  }
-
-  /**
-   * Attempt to replay the provided command. Updates counters accordingly.
-   *
-   * @param command The command to replay
-   * @return True iff the command was successfully replayed (i.e., no exceptions
-   *         were thrown).
-   */
-  private boolean replayLog(final AuditReplayCommand command) {
-    final String src = command.getSrc();
-    final String dst = command.getDest();
-    FileSystem proxyFs = fsCache.get(command.getSimpleUgi());
-    if (proxyFs == null) {
-      UserGroupInformation ugi = UserGroupInformation
-          .createProxyUser(command.getSimpleUgi(), loginUser);
-      proxyFs = ugi.doAs((PrivilegedAction<FileSystem>) () -> {
-        try {
-          FileSystem fs = new DistributedFileSystem();
-          fs.initialize(namenodeUri, mapperConf);
-          return fs;
-        } catch (IOException ioe) {
-          throw new RuntimeException(ioe);
-        }
-      });
-      fsCache.put(command.getSimpleUgi(), proxyFs);
-    }
-    final FileSystem fs = proxyFs;
-    ReplayCommand replayCommand;
-    try {
-      replayCommand = ReplayCommand
-          .valueOf(command.getCommand().split(" ")[0].toUpperCase());
-    } catch (IllegalArgumentException iae) {
-      LOG.warn("Unsupported/invalid command: " + command);
-      replayCountersMap.get(REPLAYCOUNTERS.TOTALUNSUPPORTEDCOMMANDS)
-          .increment(1);
-      return false;
-    }
-    try {
-      long startTime = System.currentTimeMillis();
-      switch (replayCommand) {
-      case CREATE:
-        FSDataOutputStream fsDos = fs.create(new Path(src));
-        if (createBlocks) {
-          fsDos.writeByte(0);
-        }
-        fsDos.close();
-        break;
-      case GETFILEINFO:
-        fs.getFileStatus(new Path(src));
-        break;
-      case CONTENTSUMMARY:
-        fs.getContentSummary(new Path(src));
-        break;
-      case MKDIRS:
-        fs.mkdirs(new Path(src));
-        break;
-      case RENAME:
-        fs.rename(new Path(src), new Path(dst));
-        break;
-      case LISTSTATUS:
-        ((DistributedFileSystem) fs).getClient().listPaths(src,
-            HdfsFileStatus.EMPTY_NAME);
-        break;
-      case APPEND:
-        fs.append(new Path(src));
-        return true;
-      case DELETE:
-        fs.delete(new Path(src), true);
-        break;
-      case OPEN:
-        fs.open(new Path(src)).close();
-        break;
-      case SETPERMISSION:
-        fs.setPermission(new Path(src), FsPermission.getDefault());
-        break;
-      case SETOWNER:
-        fs.setOwner(new Path(src),
-            UserGroupInformation.getCurrentUser().getShortUserName(),
-            UserGroupInformation.getCurrentUser().getPrimaryGroupName());
-        break;
-      case SETTIMES:
-        fs.setTimes(new Path(src), System.currentTimeMillis(),
-            System.currentTimeMillis());
-        break;
-      case SETREPLICATION:
-        fs.setReplication(new Path(src), (short) 1);
-        break;
-      case CONCAT:
-        // dst is like [path1, path2] - strip brackets and split on comma
-        String bareDist = dst.length() < 2 ? ""
-            : dst.substring(1, dst.length() - 1).trim();
-        List<Path> dsts = new ArrayList<>();
-        for (String s : Splitter.on(",").omitEmptyStrings().trimResults()
-            .split(bareDist)) {
-          dsts.add(new Path(s));
-        }
-        fs.concat(new Path(src), dsts.toArray(new Path[] {}));
-        break;
-      default:
-        throw new RuntimeException("Unexpected command: " + replayCommand);
-      }
-      long latency = System.currentTimeMillis() - startTime;
-
-      UserCommandKey userCommandKey = new UserCommandKey(command.getSimpleUgi(),
-          replayCommand.toString(), replayCommand.getType().toString());
-      commandLatencyMap.putIfAbsent(userCommandKey, new CountTimeWritable());
-      CountTimeWritable latencyWritable = commandLatencyMap.get(userCommandKey);
-      latencyWritable.setCount(latencyWritable.getCount() + 1);
-      latencyWritable.setTime(latencyWritable.getTime() + latency);
-
-      switch (replayCommand.getType()) {
-      case WRITE:
-        replayCountersMap.get(REPLAYCOUNTERS.TOTALWRITECOMMANDLATENCY)
-            .increment(latency);
-        replayCountersMap.get(REPLAYCOUNTERS.TOTALWRITECOMMANDS).increment(1);
-        break;
-      case READ:
-        replayCountersMap.get(REPLAYCOUNTERS.TOTALREADCOMMANDLATENCY)
-            .increment(latency);
-        replayCountersMap.get(REPLAYCOUNTERS.TOTALREADCOMMANDS).increment(1);
-        break;
-      default:
-        throw new RuntimeException("Unexpected command type: "
-            + replayCommand.getType());
-      }
-      individualCommandsMap
-          .get(replayCommand + INDIVIDUAL_COMMANDS_LATENCY_SUFFIX)
-          .increment(latency);
-      individualCommandsMap
-          .get(replayCommand + INDIVIDUAL_COMMANDS_COUNT_SUFFIX).increment(1);
-      return true;
-    } catch (IOException e) {
-      LOG.debug("IOException: " + e.getLocalizedMessage());
-      individualCommandsMap
-          .get(replayCommand + INDIVIDUAL_COMMANDS_INVALID_SUFFIX).increment(1);
-      return false;
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/CountTimeWritable.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/CountTimeWritable.java
deleted file mode 100644
index 6b851c84b64..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/CountTimeWritable.java
+++ /dev/null
@@ -1,82 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import org.apache.hadoop.io.LongWritable;
-import org.apache.hadoop.io.Writable;
-
-/**
- * UserCommandKey is a {@link Writable} used as a composite value that
- * accumulates the count and cumulative latency of replayed commands. It is
- * used as the output value for AuditReplayMapper and AuditReplayReducer.
- */
-public class CountTimeWritable implements Writable {
-  private LongWritable count;
-  private LongWritable time;
-
-  public CountTimeWritable() {
-    count = new LongWritable();
-    time = new LongWritable();
-  }
-
-  public CountTimeWritable(LongWritable count, LongWritable time) {
-    this.count = count;
-    this.time = time;
-  }
-
-  public CountTimeWritable(long count, long time) {
-    this.count = new LongWritable(count);
-    this.time = new LongWritable(time);
-  }
-
-  public long getCount() {
-    return count.get();
-  }
-
-  public long getTime() {
-    return time.get();
-  }
-
-  public void setCount(long count) {
-    this.count.set(count);
-  }
-
-  public void setTime(long time) {
-    this.time.set(time);
-  }
-
-  @Override
-  public void write(DataOutput out) throws IOException {
-    count.write(out);
-    time.write(out);
-  }
-
-  @Override
-  public void readFields(DataInput in) throws IOException {
-    count.readFields(in);
-    time.readFields(in);
-  }
-
-  @Override
-  public String toString() {
-    return getCount() + "," + getTime();
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/NoSplitTextInputFormat.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/NoSplitTextInputFormat.java
deleted file mode 100644
index e941d9df29c..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/NoSplitTextInputFormat.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import java.io.IOException;
-import java.util.List;
-import org.apache.hadoop.fs.FileStatus;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.mapreduce.JobContext;
-import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
-import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
-
-/**
- * A simple {@link TextInputFormat} that disables splitting of files. This is
- * the {@link org.apache.hadoop.mapreduce.InputFormat} used by
- * {@link AuditReplayMapper}.
- */
-public class NoSplitTextInputFormat extends TextInputFormat {
-
-  @Override
-  public List<FileStatus> listStatus(JobContext context) throws IOException {
-    context.getConfiguration().set(FileInputFormat.INPUT_DIR,
-        context.getConfiguration().get(AuditReplayMapper.INPUT_PATH_KEY));
-    return super.listStatus(context);
-  }
-
-  @Override
-  public boolean isSplitable(JobContext context, Path file) {
-    return false;
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/UserCommandKey.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/UserCommandKey.java
deleted file mode 100644
index 5cfe09f3bf2..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/UserCommandKey.java
+++ /dev/null
@@ -1,111 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import org.apache.hadoop.io.Text;
-import org.apache.hadoop.io.WritableComparable;
-
-import javax.annotation.Nonnull;
-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import java.util.Objects;
-
-/**
- * UserCommandKey is a {@link org.apache.hadoop.io.Writable} used as a composite
- * key combining the user id, name, and type of a replayed command. It is used
- * as the output key for AuditReplayMapper and the keys for AuditReplayReducer.
- */
-public class UserCommandKey implements WritableComparable {
-  private Text user;
-  private Text command;
-  private Text type;
-
-  public UserCommandKey() {
-    user = new Text();
-    command = new Text();
-    type = new Text();
-  }
-
-  public UserCommandKey(Text user, Text command, Text type) {
-    this.user = user;
-    this.command = command;
-    this.type = type;
-  }
-
-  public UserCommandKey(String user, String command, String type) {
-    this.user = new Text(user);
-    this.command = new Text(command);
-    this.type = new Text(type);
-  }
-
-  public String getUser() {
-    return user.toString();
-  }
-
-  public String getCommand() {
-    return command.toString();
-  }
-
-  public String getType() {
-    return type.toString();
-  }
-
-  @Override
-  public void write(DataOutput out) throws IOException {
-    user.write(out);
-    command.write(out);
-    type.write(out);
-  }
-
-  @Override
-  public void readFields(DataInput in) throws IOException {
-    user.readFields(in);
-    command.readFields(in);
-    type.readFields(in);
-  }
-
-  @Override
-  public int compareTo(@Nonnull Object o) {
-    return toString().compareTo(o.toString());
-  }
-
-  @Override
-  public String toString() {
-    return getUser() + "," + getType() + "," + getCommand();
-  }
-
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    UserCommandKey that = (UserCommandKey) o;
-    return getUser().equals(that.getUser()) &&
-        getCommand().equals(that.getCommand()) &&
-        getType().equals(that.getType());
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(getUser(), getCommand(), getType());
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/package-info.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/package-info.java
deleted file mode 100644
index 745302a7126..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/package-info.java
+++ /dev/null
@@ -1,27 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/**
- * This contains the tooling necessary to use audit logs as a way to generate
- * a realistic workload against a Dynamometer-simulated NameNode.
- */
-@InterfaceAudience.Private
-@InterfaceStability.Unstable
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/package-info.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/package-info.java
deleted file mode 100644
index 5903a85861a..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/package-info.java
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/**
- * This contains the tooling necessary to generate a realistic workload,
- * for example collected from audit logs, against a Dynamometer-simulated
- * NameNode.
- */
-@InterfaceAudience.Private
-@InterfaceStability.Unstable
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/TestWorkloadGenerator.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/TestWorkloadGenerator.java
deleted file mode 100644
index f3edc24b704..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/TestWorkloadGenerator.java
+++ /dev/null
@@ -1,165 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator;
-
-import org.apache.commons.io.IOUtils;
-import org.apache.hadoop.fs.FSDataInputStream;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditCommandParser;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditLogDirectParser;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditLogHiveTableParser;
-import org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditReplayMapper;
-import java.io.IOException;
-import java.net.InetAddress;
-import java.nio.charset.StandardCharsets;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.fs.permission.FsAction;
-import org.apache.hadoop.fs.permission.FsPermission;
-import org.apache.hadoop.hdfs.MiniDFSCluster;
-import org.apache.hadoop.mapreduce.Counters;
-import org.apache.hadoop.mapreduce.Job;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.authorize.AuthorizationException;
-import org.apache.hadoop.security.authorize.ImpersonationProvider;
-import org.jline.utils.Log;
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.HADOOP_SECURITY_IMPERSONATION_PROVIDER_CLASS;
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-
-
-/** Tests for {@link WorkloadDriver} and related classes. */
-public class TestWorkloadGenerator {
-  private static final Logger LOG =
-      LoggerFactory.getLogger(TestWorkloadGenerator.class);
-
-  private Configuration conf;
-  private MiniDFSCluster miniCluster;
-  private FileSystem dfs;
-
-  @Before
-  public void setup() throws Exception {
-    conf = new Configuration();
-    conf.setClass(HADOOP_SECURITY_IMPERSONATION_PROVIDER_CLASS,
-        AllowUserImpersonationProvider.class, ImpersonationProvider.class);
-    miniCluster = new MiniDFSCluster.Builder(conf).build();
-    miniCluster.waitClusterUp();
-    dfs = miniCluster.getFileSystem();
-    dfs.mkdirs(new Path("/tmp"),
-        new FsPermission(FsAction.ALL, FsAction.ALL, FsAction.ALL));
-    dfs.setOwner(new Path("/tmp"), "hdfs", "hdfs");
-  }
-
-  @After
-  public void tearDown() throws Exception {
-    if (miniCluster != null) {
-      miniCluster.shutdown();
-      miniCluster = null;
-    }
-  }
-
-  @Test
-  public void testAuditWorkloadDirectParserWithOutput() throws Exception {
-    String workloadInputPath = TestWorkloadGenerator.class.getClassLoader()
-        .getResource("audit_trace_direct").toString();
-    String auditOutputPath = "/tmp/trace_output_direct";
-    conf.set(AuditReplayMapper.INPUT_PATH_KEY, workloadInputPath);
-    conf.set(AuditReplayMapper.OUTPUT_PATH_KEY, auditOutputPath);
-    conf.setLong(AuditLogDirectParser.AUDIT_START_TIMESTAMP_KEY, 60 * 1000);
-    testAuditWorkloadWithOutput(auditOutputPath);
-  }
-
-  @Test
-  public void testAuditWorkloadHiveParserWithOutput() throws Exception {
-    String workloadInputPath =
-        TestWorkloadGenerator.class.getClassLoader()
-            .getResource("audit_trace_hive").toString();
-    String auditOutputPath = "/tmp/trace_output_hive";
-    conf.set(AuditReplayMapper.INPUT_PATH_KEY, workloadInputPath);
-    conf.set(AuditReplayMapper.OUTPUT_PATH_KEY, auditOutputPath);
-    conf.setClass(AuditReplayMapper.COMMAND_PARSER_KEY,
-        AuditLogHiveTableParser.class, AuditCommandParser.class);
-    testAuditWorkloadWithOutput(auditOutputPath);
-  }
-
-  /**
-   * {@link ImpersonationProvider} that confirms the user doing the
-   * impersonating is the same as the user running the MiniCluster.
-   */
-  private static class AllowUserImpersonationProvider extends Configured
-      implements ImpersonationProvider {
-    public void init(String configurationPrefix) {
-      // Do nothing
-    }
-
-    public void authorize(UserGroupInformation user, InetAddress remoteAddress)
-        throws AuthorizationException {
-      try {
-        if (!user.getRealUser().getShortUserName()
-            .equals(UserGroupInformation.getCurrentUser().getShortUserName())) {
-          throw new AuthorizationException();
-        }
-      } catch (IOException ioe) {
-        throw new AuthorizationException(ioe);
-      }
-    }
-  }
-
-  private void testAuditWorkloadWithOutput(String auditOutputPath)
-      throws Exception {
-    long workloadStartTime = System.currentTimeMillis() + 10000;
-    Job workloadJob = WorkloadDriver.getJobForSubmission(conf,
-        dfs.getUri().toString(), workloadStartTime, AuditReplayMapper.class);
-    boolean success = workloadJob.waitForCompletion(true);
-    assertTrue("workload job should succeed", success);
-    Counters counters = workloadJob.getCounters();
-    assertEquals(6,
-        counters.findCounter(AuditReplayMapper.REPLAYCOUNTERS.TOTALCOMMANDS)
-            .getValue());
-    assertEquals(1,
-        counters
-            .findCounter(AuditReplayMapper.REPLAYCOUNTERS.TOTALINVALIDCOMMANDS)
-            .getValue());
-    assertTrue(dfs.getFileStatus(new Path("/tmp/test1")).isFile());
-    assertTrue(
-        dfs.getFileStatus(new Path("/tmp/testDirRenamed")).isDirectory());
-    assertFalse(dfs.exists(new Path("/denied")));
-
-    assertTrue(dfs.exists(new Path(auditOutputPath)));
-    try (FSDataInputStream auditOutputFile = dfs.open(new Path(auditOutputPath,
-        "part-r-00000"))) {
-      String auditOutput = IOUtils.toString(auditOutputFile,
-          StandardCharsets.UTF_8);
-      Log.info(auditOutput);
-      assertTrue(auditOutput.matches(
-          ".*(hdfs,WRITE,[A-Z]+,[13]+,[0-9]+\\n){3}.*"));
-      // Matches three lines of the format "hdfs,WRITE,name,count,time"
-      // Using [13] for the count group because each operation is run either
-      // 1 or 3 times but the output order isn't guaranteed
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/TestAuditLogDirectParser.java b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/TestAuditLogDirectParser.java
deleted file mode 100644
index a98b5c47164..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/TestAuditLogDirectParser.java
+++ /dev/null
@@ -1,152 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.tools.dynamometer.workloadgenerator.audit;
-
-import java.util.function.Function;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.Text;
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.assertEquals;
-
-/** Tests for {@link AuditLogDirectParser}. */
-public class TestAuditLogDirectParser {
-
-  private static final long START_TIMESTAMP = 10000;
-  private AuditLogDirectParser parser;
-
-  @Before
-  public void setup() throws Exception {
-    parser = new AuditLogDirectParser();
-    Configuration conf = new Configuration();
-    conf.setLong(AuditLogDirectParser.AUDIT_START_TIMESTAMP_KEY,
-        START_TIMESTAMP);
-    parser.initialize(conf);
-  }
-
-  private Text getAuditString(String timestamp, String ugi, String cmd,
-      String src, String dst) {
-    return new Text(
-        String.format("%s INFO FSNamesystem.audit: "
-                + "allowed=true\tugi=%s\tip=0.0.0.0\tcmd=%s\tsrc=%s\t"
-                + "dst=%s\tperm=null\tproto=rpc",
-            timestamp, ugi, cmd, src, dst));
-  }
-
-  @Test
-  public void testSimpleInput() throws Exception {
-    Text in = getAuditString("1970-01-01 00:00:11,000", "fakeUser",
-        "listStatus", "sourcePath", "null");
-    AuditReplayCommand expected = new AuditReplayCommand(1000, "fakeUser",
-        "listStatus", "sourcePath", "null", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testInputWithEquals() throws Exception {
-    Text in = getAuditString("1970-01-01 00:00:11,000", "fakeUser",
-            "listStatus", "day=1970", "null");
-    AuditReplayCommand expected = new AuditReplayCommand(1000, "fakeUser",
-            "listStatus", "day=1970", "null", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testInputWithRenameOptions() throws Exception {
-    Text in = getAuditString("1970-01-01 00:00:11,000", "fakeUser",
-        "rename (options=[TO_TRASH])", "sourcePath", "destPath");
-    AuditReplayCommand expected = new AuditReplayCommand(1000, "fakeUser",
-        "rename (options=[TO_TRASH])", "sourcePath", "destPath", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testInputWithTokenAuth() throws Exception {
-    Text in = getAuditString("1970-01-01 00:00:11,000", "fakeUser (auth:TOKEN)",
-        "create", "sourcePath", "null");
-    AuditReplayCommand expected = new AuditReplayCommand(1000, "fakeUser",
-        "create", "sourcePath", "null", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testInputWithProxyUser() throws Exception {
-    Text in = getAuditString("1970-01-01 00:00:11,000",
-        "proxyUser (auth:TOKEN) via fakeUser", "create", "sourcePath", "null");
-    AuditReplayCommand expected = new AuditReplayCommand(1000, "proxyUser",
-        "create", "sourcePath", "null", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testParseDefaultDateFormat() throws Exception {
-    Text in = getAuditString("1970-01-01 13:00:00,000",
-        "ignored", "ignored", "ignored", "ignored");
-    AuditReplayCommand expected = new AuditReplayCommand(
-        13 * 60 * 60 * 1000 - START_TIMESTAMP,
-        "ignored", "ignored", "ignored", "ignored", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testParseCustomDateFormat() throws Exception {
-    parser = new AuditLogDirectParser();
-    Configuration conf = new Configuration();
-    conf.setLong(AuditLogDirectParser.AUDIT_START_TIMESTAMP_KEY, 0);
-    conf.set(AuditLogDirectParser.AUDIT_LOG_DATE_FORMAT_KEY,
-        "yyyy-MM-dd hh:mm:ss,SSS a");
-    parser.initialize(conf);
-    Text in = getAuditString("1970-01-01 01:00:00,000 PM",
-        "ignored", "ignored", "ignored", "ignored");
-    AuditReplayCommand expected = new AuditReplayCommand(13 * 60 * 60 * 1000,
-        "ignored", "ignored", "ignored", "ignored", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testParseCustomTimeZone() throws Exception {
-    parser = new AuditLogDirectParser();
-    Configuration conf = new Configuration();
-    conf.setLong(AuditLogDirectParser.AUDIT_START_TIMESTAMP_KEY, 0);
-    conf.set(AuditLogDirectParser.AUDIT_LOG_DATE_TIME_ZONE_KEY, "Etc/GMT-1");
-    parser.initialize(conf);
-    Text in = getAuditString("1970-01-01 01:00:00,000",
-        "ignored", "ignored", "ignored", "ignored");
-    AuditReplayCommand expected = new AuditReplayCommand(0,
-        "ignored", "ignored", "ignored", "ignored", "0.0.0.0");
-    assertEquals(expected, parser.parse(in, Function.identity()));
-  }
-
-  @Test
-  public void testParseCustomAuditLineFormat() throws Exception {
-    Text auditLine = new Text("CUSTOM FORMAT (1970-01-01 00:00:00,000) "
-        + "allowed=true\tugi=fakeUser\tip=0.0.0.0\tcmd=fakeCommand\tsrc=src\t"
-        + "dst=null\tperm=null\tproto=rpc");
-    parser = new AuditLogDirectParser();
-    Configuration conf = new Configuration();
-    conf.setLong(AuditLogDirectParser.AUDIT_START_TIMESTAMP_KEY, 0);
-    conf.set(AuditLogDirectParser.AUDIT_LOG_PARSE_REGEX_KEY,
-        "CUSTOM FORMAT \\((?<timestamp>.+?)\\) (?<message>.+)");
-    parser.initialize(conf);
-    AuditReplayCommand expected = new AuditReplayCommand(0,
-        "fakeUser", "fakeCommand", "src", "null", "0.0.0.0");
-    assertEquals(expected, parser.parse(auditLine, Function.identity()));
-  }
-
-}
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_direct/audit0 b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_direct/audit0
deleted file mode 100644
index 9e7bc2ca346..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_direct/audit0
+++ /dev/null
@@ -1,6 +0,0 @@
-1970-01-01 00:00:01,010 INFO FSNamesystem.audit: allowed=true	ugi=hdfs	ip=/0.0.0.0	cmd=create	src=/tmp/test1	dst=null	perm=null	proto=rpc
-1970-01-01 00:00:01,020 INFO FSNamesystem.audit: allowed=true	ugi=hdfs	ip=/0.0.0.0	cmd=mkdirs	src=/tmp/testDir	dst=null	perm=null	proto=rpc
-1970-01-01 00:00:01,030 INFO FSNamesystem.audit: allowed=true	ugi=hdfs	ip=/0.0.0.0	cmd=rename	src=/tmp/testDir	dst=/tmp/testDirRenamed	perm=null	proto=rpc
-1970-01-01 00:00:01,040 INFO FSNamesystem.audit: allowed=true	ugi=hdfs@REALM.COM	ip=/0.0.0.0	cmd=mkdirs	src=/tmp/testDir2	dst=null	perm=null	proto=rpc
-1970-01-01 00:00:01,050 INFO FSNamesystem.audit: allowed=true	ugi=hdfs/127.0.0.1@REALM.COM	ip=/0.0.0.0	cmd=mkdirs	src=/tmp/testDir3	dst=null	perm=null	proto=rpc
-1970-01-01 00:00:01,060 INFO FSNamesystem.audit: allowed=true	ugi=otherUser	ip=/0.0.0.0	cmd=mkdirs	src=/denied	dst=null	perm=null	proto=rpc
diff --git a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_hive/audit0 b/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_hive/audit0
deleted file mode 100644
index 5f49bbe4778..00000000000
--- a/hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/test/resources/audit_trace_hive/audit0
+++ /dev/null
@@ -1,6 +0,0 @@
-+10hdfscreate/tmp/test1 0.0.0.0
-+20hdfsmkdirs/tmp/testDir 0.0.0.0
-+30hdfsrename/tmp/testDir/tmp/testDirRenamed0.0.0.0
-+40hdfs@REALM.COMmkdirs/tmp/testDir2 0.0.0.0
-+50hdfs/127.0.0.1@REALM.COMmkdirs/tmp/testDir3 0.0.0.0
-+60otherUsermkdirs/denied 0.0.0.0
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-dynamometer/pom.xml b/hadoop-tools/hadoop-dynamometer/pom.xml
deleted file mode 100644
index ddc65a6e179..00000000000
--- a/hadoop-tools/hadoop-dynamometer/pom.xml
+++ /dev/null
@@ -1,55 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
-                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <parent>
-    <groupId>org.apache.hadoop</groupId>
-    <artifactId>hadoop-project</artifactId>
-    <version>3.4.0</version>
-    <relativePath>../../hadoop-project</relativePath>
-  </parent>
-  <artifactId>hadoop-dynamometer</artifactId>
-  <version>3.4.0</version>
-  <description>Apache Hadoop Dynamometer</description>
-  <name>Apache Hadoop Dynamometer</name>
-  <packaging>pom</packaging>
-
-  <modules>
-    <module>hadoop-dynamometer-infra</module>
-    <module>hadoop-dynamometer-workload</module>
-    <module>hadoop-dynamometer-blockgen</module>
-    <module>hadoop-dynamometer-dist</module>
-  </modules>
-
-  <build>
-    <plugins>
-      <plugin>
-        <artifactId>maven-deploy-plugin</artifactId>
-        <configuration>
-          <skip>true</skip>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.rat</groupId>
-        <artifactId>apache-rat-plugin</artifactId>
-        <configuration>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-</project>
diff --git a/hadoop-tools/hadoop-dynamometer/src/site/markdown/Dynamometer.md b/hadoop-tools/hadoop-dynamometer/src/site/markdown/Dynamometer.md
deleted file mode 100644
index e6b3136a34a..00000000000
--- a/hadoop-tools/hadoop-dynamometer/src/site/markdown/Dynamometer.md
+++ /dev/null
@@ -1,302 +0,0 @@
-<!---
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-   http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-# Dynamometer Guide
-
-<!-- MACRO{toc|fromDepth=0|toDepth=3} -->
-
-## Overview
-
-Dynamometer is a tool to performance test Hadoop's HDFS NameNode. The intent is to provide a
-real-world environment by initializing the NameNode against a production file system image and replaying
-a production workload collected via e.g. the NameNode's audit logs. This allows for replaying a workload
-which is not only similar in characteristic to that experienced in production, but actually identical.
-
-Dynamometer will launch a YARN application which starts a single NameNode and a configurable number of
-DataNodes, simulating an entire HDFS cluster as a single application. There is an additional `workload`
-job run as a MapReduce job which accepts audit logs as input and uses the information contained within to
-submit matching requests to the NameNode, inducing load on the service.
-
-Dynamometer can execute this same workload against different Hadoop versions or with different
-configurations, allowing for the testing of configuration tweaks and code changes at scale without the
-necessity of deploying to a real large-scale cluster.
-
-Throughout this documentation, we will use "Dyno-HDFS", "Dyno-NN", and "Dyno-DN" to refer to the HDFS
-cluster, NameNode, and DataNodes (respectively) which are started _inside of_ a Dynamometer application.
-Terms like HDFS, YARN, and NameNode used without qualification refer to the existing infrastructure on
-top of which Dynamometer is run.
-
-For more details on how Dynamometer works, as opposed to how to use it, see the Architecture section
-at the end of this page.
-
-## Requirements
-
-Dynamometer is based around YARN applications, so an existing YARN cluster will be required for execution.
-It also requires an accompanying HDFS instance to store some temporary files for communication.
-
-## Building
-
-Dynamometer consists of three main components, each one in its own module:
-
-* Infrastructure (`dynamometer-infra`): This is the YARN application which starts a Dyno-HDFS cluster.
-* Workload (`dynamometer-workload`): This is the MapReduce job which replays audit logs.
-* Block Generator (`dynamometer-blockgen`): This is a MapReduce job used to generate input files for each Dyno-DN; its
-  execution is a prerequisite step to running the infrastructure application.
-
-The compiled version of all of these components will be included in a standard Hadoop distribution.
-You can find them in the packaged distribution within `share/hadoop/tools/dynamometer`.
-
-## Setup Steps
-
-Before launching a Dynamometer application, there are a number of setup steps that must be completed,
-instructing Dynamometer what configurations to use, what version to use, what fsimage to use when
-loading, etc. These steps can be performed a single time to put everything in place, and then many
-Dynamometer executions can be performed against them with minor tweaks to measure variations.
-
-Scripts discussed below can be found in the `share/hadoop/tools/dynamometer/dynamometer-{infra,workload,blockgen}/bin`
-directories of the distribution. The corresponding Java JAR files can be found in the `share/hadoop/tools/lib/` directory.
-References to bin files below assume that the current working directory is `share/hadoop/tools/dynamometer`.
-
-### Step 1: Preparing Requisite Files
-
-A number of steps are required in advance of starting your first Dyno-HDFS cluster:
-
-### Step 2: Prepare FsImage Files
-
-Collect an fsimage and related files from your NameNode. This will include the `fsimage_TXID` file
-which the NameNode creates as part of checkpointing, the `fsimage_TXID.md5` containing the md5 hash
-of the image, the `VERSION` file containing some metadata, and the `fsimage_TXID.xml` file which can
-be generated from the fsimage using the offline image viewer:
-```
-hdfs oiv -i fsimage_TXID -o fsimage_TXID.xml -p XML
-```
-It is recommended that you collect these files from your Secondary/Standby NameNode if you have one
-to avoid placing additional load on your Active NameNode.
-
-All of these files must be placed somewhere on HDFS where the various jobs will be able to access them.
-They should all be in the same folder, e.g. `hdfs:///dyno/fsimage`.
-
-All these steps can be automated with the `upload-fsimage.sh` script, e.g.:
-```
-./dynamometer-infra/bin/upload-fsimage.sh 0001 hdfs:///dyno/fsimage
-```
-Where 0001 is the transaction ID of the desired fsimage. See usage info of the script for more detail.
-
-### Step 3: Prepare a Hadoop Binary
-
-Collect the Hadoop distribution tarball to use to start the Dyno-NN and -DNs. For example, if
-testing against Hadoop 3.0.2, use
-[hadoop-3.0.2.tar.gz](http://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-3.0.2/hadoop-3.0.2.tar.gz).
-This distribution contains several components unnecessary for Dynamometer (e.g. YARN), so to reduce
-its size, you can optionally use the `create-slim-hadoop-tar.sh` script:
-```
-./dynamometer-infra/bin/create-slim-hadoop-tar.sh hadoop-VERSION.tar.gz
-```
-The Hadoop tar can be present on HDFS or locally where the client will be run from. Its path will be
-supplied to the client via the `-hadoop_binary_path` argument.
-
-Alternatively, if you use the `-hadoop_version` argument, you can simply specify which version you would
-like to run against (e.g. '3.0.2') and the client will attempt to download it automatically from an
-Apache mirror. See the usage information of the client for more details.
-
-### Step 4: Prepare Configurations
-
-Prepare a configuration directory. You will need to specify a configuration directory with the standard
-Hadoop configuration layout, e.g. it should contain `etc/hadoop/*-site.xml`. This determines with what
-configuration the Dyno-NN and -DNs will be launched. Configurations that must be modified for
-Dynamometer to work properly (e.g. `fs.defaultFS` or `dfs.namenode.name.dir`) will be overridden
-at execution time. This can be a directory if it is available locally, else an archive file on local
-or remote (HDFS) storage.
-
-### Step 5: Execute the Block Generation Job
-
-This will use the `fsimage_TXID.xml` file to generate the list of blocks that each Dyno-DN should
-advertise to the Dyno-NN. It runs as a MapReduce job.
-```
-./dynamometer-blockgen/bin/generate-block-lists.sh
-    -fsimage_input_path hdfs:///dyno/fsimage/fsimage_TXID.xml
-    -block_image_output_dir hdfs:///dyno/blocks
-    -num_reducers R
-    -num_datanodes D
-```
-In this example, the XML file uploaded above is used to generate block listings into `hdfs:///dyno/blocks`.
-`R` reducers are used for the job, and `D` block listings are generated - this will determine how many
-Dyno-DNs are started in the Dyno-HDFS cluster.
-
-### Step 6: Prepare Audit Traces (Optional)
-
-This step is only necessary if you intend to use the audit trace replay capabilities of Dynamometer; if you
-just intend to start a Dyno-HDFS cluster you can skip to the next section.
-
-The audit trace replay accepts one input file per mapper, and currently supports two input formats, configurable
-via the `auditreplay.command-parser.class` configuration. One mapper will automatically be created for every
-audit log file within the audit log directory specified at launch time.
-
-The default is a direct format,
-`org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditLogDirectParser`. This accepts files in the format produced
-by a standard configuration audit logger, e.g. lines like:
-```
-1970-01-01 00:00:42,000 INFO FSNamesystem.audit: allowed=true	ugi=hdfs	ip=/127.0.0.1	cmd=open	src=/tmp/foo	dst=null	perm=null	proto=rpc
-```
-When using this format you must also specify `auditreplay.log-start-time.ms`, which should be (in milliseconds since
-the Unix epoch) the start time of the audit traces. This is needed for all mappers to agree on a single start time. For
-example, if the above line was the first audit event, you would specify `auditreplay.log-start-time.ms=42000`. Within a
-file, the audit logs must be in order of ascending timestamp.
-
-The other supported format is `org.apache.hadoop.tools.dynamometer.workloadgenerator.audit.AuditLogHiveTableParser`. This accepts
-files in the format produced by a Hive query with output fields, in order:
-
-* `relativeTimestamp`: event time offset, in milliseconds, from the start of the trace
-* `ugi`: user information of the submitting user
-* `command`: name of the command, e.g. 'open'
-* `source`: source path
-* `dest`: destination path
-* `sourceIP`: source IP of the event
-
-Assuming your audit logs are available in Hive, this can be produced via a Hive query looking like:
-```sql
-INSERT OVERWRITE DIRECTORY '${outputPath}'
-SELECT (timestamp - ${startTimestamp} AS relativeTimestamp, ugi, command, source, dest, sourceIP
-FROM '${auditLogTableLocation}'
-WHERE timestamp >= ${startTimestamp} AND timestamp < ${endTimestamp}
-DISTRIBUTE BY src
-SORT BY relativeTimestamp ASC;
-```
-
-#### Partitioning the Audit Logs
-
-You may notice that in the Hive query shown above, there is a `DISTRIBUTE BY src` clause which indicates that the
-output files should be partitioned by the source IP of the caller. This is done to try to maintain closer ordering
-of requests which originated from a single client. Dynamometer does not guarantee strict ordering of operations even
-within a partition, but ordering will typically be maintained more closely within a partition than across partitions.
-
-Whether you use Hive or raw audit logs, it will be necessary to partition the audit logs based on the number of
-simultaneous clients you required to perform your workload replay. Using the source IP as a partition key is one
-approach with the potential advantages discussed above, but any partition scheme should work reasonably well.
-
-## Running Dynamometer
-
-After the setup steps above have been completed, you're ready to start up a Dyno-HDFS cluster and replay
-some workload against it!
-
-The client which launches the Dyno-HDFS YARN application can optionally launch the workload replay
-job once the Dyno-HDFS cluster has fully started. This makes each replay into a single execution of the client,
-enabling easy testing of various configurations. You can also launch the two separately to have more control.
-Similarly, it is possible to launch Dyno-DNs for an external NameNode which is not controlled by Dynamometer/YARN.
-This can be useful for testing NameNode configurations which are not yet supported (e.g. HA NameNodes). You can do
-this by passing the `-namenode_servicerpc_addr` argument to the infrastructure application with a value that points
-to an external NameNode's service RPC address.
-
-### Manual Workload Launch
-
-First launch the infrastructure application to begin the startup of the internal HDFS cluster, e.g.:
-```
-./dynamometer-infra/bin/start-dynamometer-cluster.sh
-    -hadoop_binary_path hadoop-3.0.2.tar.gz
-    -conf_path my-hadoop-conf
-    -fs_image_dir hdfs:///fsimage
-    -block_list_path hdfs:///dyno/blocks
-```
-This demonstrates the required arguments. You can run this with the `-help` flag to see further usage information.
-
-The client will track the Dyno-NN's startup progress and how many Dyno-DNs it considers live. It will notify
-via logging when the Dyno-NN has exited safemode and is ready for use.
-
-At this point, a workload job (map-only MapReduce job) can be launched, e.g.:
-```
-./dynamometer-workload/bin/start-workload.sh
-    -Dauditreplay.input-path=hdfs:///dyno/audit_logs/
-    -Dauditreplay.output-path=hdfs:///dyno/results/
-    -Dauditreplay.num-threads=50
-    -nn_uri hdfs://namenode_address:port/
-    -start_time_offset 5m
-    -mapper_class_name AuditReplayMapper
-```
-The type of workload generation is configurable; AuditReplayMapper replays an audit log trace as discussed previously.
-The AuditReplayMapper is configured via configurations; `auditreplay.input-path`, `auditreplay.output-path` and
-`auditreplay.num-threads` are required to specify the input path for audit log files, the output path for the results,
-and the number of threads per map task. A number of map tasks equal to the number of files in `input-path` will be
-launched; each task will read in one of these input files and use `num-threads` threads to replay the events contained
-within that file. A best effort is made to faithfully replay the audit log events at the same pace at which they
-originally occurred (optionally, this can be adjusted by specifying `auditreplay.rate-factor` which is a multiplicative
-factor towards the rate of replay, e.g. use 2.0 to replay the events at twice the original speed).
-
-The AuditReplayMapper will output the benchmark results to a file `part-r-00000` in the output directory in CSV format.
-Each line is in the format `user,type,operation,numops,cumulativelatency`, e.g. `hdfs,WRITE,MKDIRS,2,150`.
-
-### Integrated Workload Launch
-
-To have the infrastructure application client launch the workload automatically, parameters for the workload job
-are passed to the infrastructure script. Only the AuditReplayMapper is supported in this fashion at this time. To
-launch an integrated application with the same parameters as were used above, the following can be used:
-```
-./dynamometer-infra/bin/start-dynamometer-cluster.sh
-    -hadoop_binary hadoop-3.0.2.tar.gz
-    -conf_path my-hadoop-conf
-    -fs_image_dir hdfs:///fsimage
-    -block_list_path hdfs:///dyno/blocks
-    -workload_replay_enable
-    -workload_input_path hdfs:///dyno/audit_logs/
-    -workload_output_path hdfs:///dyno/results/
-    -workload_threads_per_mapper 50
-    -workload_start_delay 5m
-```
-When run in this way, the client will automatically handle tearing down the Dyno-HDFS cluster once the
-workload has completed. To see the full list of supported parameters, run this with the `-help` flag.
-
-## Architecture
-
-Dynamometer is implemented as an application on top of YARN. There are three main actors in a Dynamometer application:
-
-* Infrastructure is the simulated HDFS cluster.
-* Workload simulates HDFS clients to generate load on the simulated NameNode.
-* The driver coordinates the two other components.
-
-The logic encapsulated in the driver enables a user to perform a full test execution of Dynamometer with a single command,
-making it possible to do things like sweeping over different parameters to find optimal configurations.
-
-![Dynamometer Infrastructure Application Architecture](./images/dynamometer-architecture-infra.png)
-
-The infrastructure application is written as a native YARN application in which a single NameNode and numerous DataNodes
-are launched and wired together to create a fully simulated HDFS cluster. For Dynamometer to provide an extremely realistic scenario,
-it is necessary to have a cluster which contains, from the NameNode’s perspective, the same information as a production cluster.
-This is why the setup steps described above involve first collecting the FsImage file from a production NameNode and placing it onto
-the host HDFS cluster. To avoid having to copy an entire cluster’s worth of blocks, Dynamometer leverages the fact that the actual
-data stored in blocks is irrelevant to the NameNode, which is only aware of the block metadata. Dynamometer's blockgen job first
-uses the Offline Image Viewer to turn the FsImage into XML, then parses this to extract the metadata for each block, then partitions this
-information before placing it on HDFS for the simulated DataNodes to consume. `SimulatedFSDataset` is used to bypass the DataNode storage
-layer and store only the block metadata, loaded from the information extracted in the previous step. This scheme allows Dynamometer to
-pack many simulated DataNodes onto each physical node, as the size of the metadata is many orders of magnitude smaller than the data itself.
-
-To create a stress test that matches a production environment, Dynamometer needs a way to collect the information about the production workload.
-For this the HDFS audit log is used, which contains a faithful record of all client-facing operations against the NameNode. By replaying this
-audit log to recreate the client load, and running simulated DataNodes to recreate the cluster management load, Dynamometer is able to provide
-a realistic simulation of the conditions of a production NameNode.
-
-![Dynamometer Replay Architecture](./images/dynamometer-architecture-replay.png)
-
-A heavily-loaded NameNode can service tens of thousands of operations per second; to induce such a load, Dynamometer needs numerous clients to submit
-requests. In an effort to ensure that each request has the same effect and performance implications as its original submission, Dynamometer
-attempts to make related requests (for example, a directory creation followed by a listing of that directory) in such a way as to preserve their original
-ordering. It is for this reason that audit log files are suggested to be partitioned by source IP address, using the assumption that requests which
-originated from the same host have more tightly coupled causal relationships than those which originated from different hosts. In the interest of
-simplicity, the stress testing job is written as a map-only MapReduce job, in which each mapper consumes a partitioned audit log file and replays
-the commands contained within against the simulated NameNode. During execution statistics are collected about the replay, such as latency for
-different types of requests.
-
-## External Resources
-
-To see more information on Dynamometer, you can see the
-[blog post announcing its initial release](https://engineering.linkedin.com/blog/2018/02/dynamometer--scale-testing-hdfs-on-minimal-hardware-with-maximum)
-or [this presentation](https://www.slideshare.net/xkrogen/hadoop-meetup-jan-2019-dynamometer-and-a-case-study-in-namenode-gc).
diff --git a/hadoop-tools/hadoop-dynamometer/src/site/resources/css/site.css b/hadoop-tools/hadoop-dynamometer/src/site/resources/css/site.css
deleted file mode 100644
index f830baafa8c..00000000000
--- a/hadoop-tools/hadoop-dynamometer/src/site/resources/css/site.css
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
-* Licensed to the Apache Software Foundation (ASF) under one or more
-* contributor license agreements.  See the NOTICE file distributed with
-* this work for additional information regarding copyright ownership.
-* The ASF licenses this file to You under the Apache License, Version 2.0
-* (the "License"); you may not use this file except in compliance with
-* the License.  You may obtain a copy of the License at
-*
-*     http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
-#banner {
-  height: 93px;
-  background: none;
-}
-
-#bannerLeft img {
-  margin-left: 30px;
-  margin-top: 10px;
-}
-
-#bannerRight img {
-  margin: 17px;
-}
-
diff --git a/hadoop-tools/hadoop-dynamometer/src/site/resources/images/dynamometer-architecture-infra.png b/hadoop-tools/hadoop-dynamometer/src/site/resources/images/dynamometer-architecture-infra.png
deleted file mode 100644
index 2f921f612412ecc7ebf8cfa2932c9473f56782fe..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 123874
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
MNlURp-s=7T0cYcK*Z=?k

diff --git a/hadoop-tools/hadoop-dynamometer/src/site/resources/images/dynamometer-architecture-replay.png b/hadoop-tools/hadoop-dynamometer/src/site/resources/images/dynamometer-architecture-replay.png
deleted file mode 100644
index 897828d49e2f704e884398be6eef42dbcc5cecf8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 159507
zcmce;byOTrvp<YOfUvj)*Wec1-66QULvRSbxD(tpL4v!xyL)h5Y_TlvZ*rgSeXjiO
z-|wEYXQsQWOQvh5XR1E6k)M^M-y;(uLqS2kmz9xFg@S@Lf`WpMLPGe{b4CBO{^tN^
zC8{V21yvh|@@xYCr%h%iqpAo6<xK+x6%Yai_4ubN;0OxJofQh|#25;SFC7XB&ndf2
zMc~iCJ0}?(*FOiozhCG}^F+Bn+;wc!wcWH875K~??U_x?9ZfBmJ?)+TP(wipc=G)@
zwYP9HA@j8V;^4~XDM;}j6nuZq|8}!bko^aVo1Gwqw&G_paYq*mGEU}C%&Zhb$Yf+>
z0xss3e5w*s|4jeW5~Q$pb93TjVe#<rVD{i(c66~~VdLfHWnpD!VP|LhL&4<g<=|%G
z$>iWl`7b8_$w$J%)y&1l$<4;mf$T3|6H`ZbH$e)Dzk>e#`Inw<HkSV-$-(s>v;G*!
z@^^%VjhU6@-@N}!75LlBr|e>5@kjDs{z7a5|3Udb`u>q4!17o4e^cgPmi|ZYA5(>p
z1z7%l*@Tc4`e=2aphTc#B}COdp-=q~1Bj$kZr8G}su~z78^(AKzl^%{t?&fe*Nozy
zUO^w6^Pr)f^YFZKga>jM=TlC-lTEEKXRxwKX-w4Qb(rFP-qI4}oabNT;AfbWV<;V4
z`l{@)SgvK{UQ)ePu0>ucW11-1LuQQ5ii8h`3WES09Pm%mjSl9A0sRIN_x~RF7hPxo
zxzT~x|1<0FU>X#(co#GD$WP>dGyCtnN77mm{)eQ0279PQdg80)q3TNe{x5y-Ar@8t
zrQLsH==2Vqbsvlw@TKhk)F#X~!|wkyP#*>k^`Q-pEQ|jC(&n#ug#RbQ|6k4fu17Y5
z%%rQQ7rIu?7HahE8@oOG|6UNd573fGBB<$NVq)vNe#9PDM}5SYI613F`%ddswBx_7
z><GN=(#qqGD?77uK4M@z@#bvVl#hF*sg$hNxYPSklcI?B3krUvZXP&t_}`Au5`|s^
zn1`k2%(3sP+7sKaukhe4Hv5{BeNs<aZfBb~bYK~Ygpzc0xxEs3>i+Adb>XSkZnkJ?
zeZlJgVHJX;zPv0itJoM49wuvPnxEyVzPK!_qxdZ(EJQ9Y1nwQ8Gm;d9hD(WEzN|dd
zdr(SBPS>}CU!Lx|qM}@FSZ#0jhhBvGwucwf4JyWK8kzy6ecK#`__!L1%;G~7vW<;R
zEm}+AoO!>u>fY`G#)%e!*Dx|Nw$9k`tlF;grqP@|pMfULp}c&dv`d|NabX!n#oa?3
z?)a`?JE#hS67-w@T$MSZEk?MNI0q#xCiVnrzk}Q;@VhzWue%vUL6IKt84Ttkv_)Fl
z{bQUKKFn%ny{}c3?@bDxg{gPg^MTz~e4wCDS!%`TWQv{<P*f^tqT;#uLKYDJ&cdcw
zUeVrwg%1<T5wqut9zcD3#WUo4VZToH0dSi1VMsao!*HyfxP*3?m*Krrg0B^b{bBW}
zcIMbwGKf$&6ErQKI^u!HlI)+(rwF`X38#J!cba6c2Vy?*l1I3fdg!I2!$j%(Iv$h3
z?s1LpQN0j2;didpos59q5>ew6iTqwAq!MZ0esjhIQqSTinaRcg-e|PjuO3ew+szj{
zhGkg%G~#EyDbR}JE)^!-0$TBi#ls!B@_!R)A{tEt4N9`(X&WGB7<HYY9j7Fag8>Jl
z(k#!KQog@sF%ns@9o!Q{Bnf6Mxh;RuCM-nme>+osH{2+1Mjo-Bm+A+nxk3S$&SLSK
zpU3H4u-JfT&&d9C$FHN??AvH3)yRQ<X4_|gidVo5?kSQG5$4b?KJ#)JRiC**taqTz
z5cmn6Su^IIE8R3+HrXfm*UhS@F<8XHz7qR%iy`{yef(+|f=9odlm6{_Vy7T`Q7gd`
z1r^#{N@yetuP_TA+V0x>eS-%)hgCBFhrw={xWi4={c;1L1vO0-<~pD7)A1t{oigK5
zTL+sIQ<AMN*;oKk$X2S7`vQkY^eG9OrczqUSYpxxh2Yc3G+r0Ww7@OS!&K)T-G;2G
zW;P$Wst(=UdWf8yB!$RN<Y`%ViI!*7)>QjHMnCUwNn$2R5}tslVsqAW7#x`%M4GxU
z!(vE3jVP*rGU4?+Xh3}dB=dS`7NWHUc>1{<B>O_z-x3;<JwT)F=LrKx)(P3<n8a8G
zZYpr2VR@;bkWddpYAAm~5t_Ff?&%2gyR>%83Dt1fiPO3c(6MXg_hYfmhlSrtf39gc
zmT^V}LZEzLz}bTfU74MhbPc#UiBa>XKiHd)P?!4cvtVv7(;Nf8n75@=%T<F~RT82b
zaSo$p-G_f~2^fKwpW%>|Ws+anYB3ercjZ*p<CH^`4YRXkLMa?&HHsM5>vYQG<*>an
zSbakjhy^6@)HHK&YJL*)_-a!m2-9#%I^^-_=v3qO$ffw7B#)f>m>=$lL&B+}O>zjC
z#J#N;<^mkk$Lhq#vEO}Wmx-Q(9WF2qjr#dy<dW%v)$m1xVj*%^Nm_FJ_U$z^Bs_ey
z*~m{Pm6Y$J^4l482CI3*L;*Z13z(<@<SASGd_U#0kHYOQXDe##Bxd><P`Yk=L|fu>
z9S{h)#Zs0<*2gf?ZxzD~cpr&}6&W>$r8l+beUQ^Ei98iqSTvrM=c8a5N5J4k<|Th8
zKoPg$7EM1dk^gG}33IIiNXo*PTvQTWS4GOLgm68PT=@`gF&+q;7{lk7$EApwZ&ru_
z(mXhi7tmhF|E|SeVco2d{;_yA>~6Ud=QyW8Uvf+TB{Jqbi;`P8o9ef<JnYGX`LYtP
z=QYxZO9|@fva$mqx8b4|LfX`wi63e>=z@=E&HuXOOR)UDulDWF9$gRecbyi0ckS(v
z0GfC3haadt^eQE!LdWhS*%Fh#JUHhG&VPLRy8Ldv%i{VMzU(xTM-oD6BdsIm_Jyy7
zMZJ15x4gc7301MDxvHU=S^1YORmv0`Cd@Q+3bmhuvfA26B%gV@8a3tQGpU%E^oNup
zdSN*wFfz~d>}o<IiKf?7%uJ~Y!le(;vKg3danA^P*dt|sBxc}{3wnDS(jx*EMkCF>
z`3{YFjwmTLk`O=LEtTz+9-FY6s8-AkZaRE3@$)Mu64IunjpLTn&_LM_AOB9C@JouG
z7_UQ*?!oIDWV_(E1EdIKeR`UHY&KygJhk;m#70g+<zaK|lp*rAlGK^aTrdrG6{x!N
zn&Qu!a%}qN!Ntj*OvDb!V7biXJ>RznxyagDR-{mQawdsvet3`WRL$|RWdGZW^`|T=
zi^JR;3ZJF^Ob)q(*lypmcMpBvxaoQf4Z0MB?z-QYJby=5tkJN46eoFnoQHJ!kj96<
zg6Q56vntG~43B4VkBx7=R&}(Qwo({<ZP1f({H}#FGW)LOcLMejg|(#4dq#OrXPff0
zc2qa2$dj}bYC5N+XW<s~sfW?HqVIKLse$|PzI1&9Fe#wKqzpPg{qq!EDOlFeE-G4*
z;swcC8nQ~&n~>|yJ1`>&!2qgvc27r*aFr1(0zS?3rg!_gut)A#Rz@bh>rjlEL?U~?
z40=KdEY=2g_an-$RaR}C=Xxvb2VIoin@UmvCU)mcB4S>-glb{mme0AK=Q<eZhB_#w
z5!d~AuN2=qA^vYqSfd%<Imtctkl}8i6cwjIZ1;8MK#=dt{bJgF@kPfwh8;}wBSQ*5
z#Bo<;pk9~rQ;sSc<R(=3RWsqlN91%<TzCY0F;Ygnmf~wqtR@WeY&N15Ad>NAnFOZF
zDl{3JdvvW@v-g>pg7<}TeZPELzu@^LhaUArypWrbi^@o$Et{C_iS4ONFm7|Jqf7Vo
za$N4=nR|D?i9cxr7ML0xfs}An;&Gf$=&O&Ca(XIroP<Ru8L9}GvcvI|Y8qkk7#bU(
ztCd?XRr>}x2hU)nKFv|I2>TlDw}G*?`QNi6%%!#$Xf`>1`7BY@hAedGX(X{NuH!3K
zvVLV8M4^uD_OaS9)lWMZpi;@Y(L6HQO#R0Z5l<|7^*Gs0Yzt$uL?A_I<-%<_gOZAM
z+np{eIcwi*Y(N~Og*5E!5?v69I`f+-^;}f8+RL@CzbQL!WUdr_JKkaBuE{AWx<_|h
z7qhQqt$h^s<1+9LI$~2{p}BC;HM(%!d{8&J8vf^bw@ManfdP)Cl%|D9C^pcK9^u0G
z2X=tKje=s*RpTONSar_CUH3&NCBMg)l+EC<5#_g?wK}j<*Yob41!V9LNX-%cJ}su<
z)59n&!}iiLMfc-DGiXTb=lDe$kjg_TlaZH<e_G%L_F*0pw+~fe2~f<WuO|hn5A}=<
z6f(*^h7Q@AClm4cE0GKcFtv@&+Sh#VK-H{LS4pMPC_BsZPFvgm9RIWR1#u)x8X#{#
zAVY=;$}0fTQ7dW&x>0R|?I<f$ZoVnH44?8QCMHwu%^-MPY1qK+WI;NML8*~yAO_c}
zq%32csJJLwZn9OMlfojX3JomjSk0$NvY-a8TA`Gh#mPFf09WVF@hf@>YZ0t=-_c?F
z7+w&@)wQ3kC+%QXo_R;`m;!{ok5pPO26Z6obJQ*zH3~i1O(zhS2e1^nF`Vqf4%Sxc
z51r0JE7dyR2Ct;&>l8fEmdEk6YF|e8Z{HvzcGY9tZ;#Rs*Vh@C<6nE^xGSneH}!66
z*SWmPVt^oKg1P2u&FXnQ@h-mi8FWsS<RasmF18<$V#0~ggFnZo4eX;!Qiz$vTFy<!
zmX%pr%<f#=!|59618}rRbc4zgis7jua2p3Cq8pRbIOR=5>&*{B<R}@r8aa(IKN4c?
znNoigHv8Ify0Q`g;Ag61Xx2=q&LLCr<+3<5t^-eamgUc_%u@+e)>wv`tWnS^f1(Ey
z$P%f!xkXS>h054Ul}vQ=65=*mwm@;wkFQFjlo!4Q$h4S+Gcf4t`yvU@i&?y6@@X%b
zrntwrB+iR{&nxyz9!I2I+gw<nm&euY!RZv$S#UuJD|eAb(|auLksF4?S10JINdI;I
zhyZ*+R-sB->a>k79U8)oj6u>EuE=(ic1(S2!)+k-9_X`x)vkTzD4x|^$Xmji&6%kh
z*vFMLwAnDLOQU?<VOG#ieOZpFYY<ox{pzKYl$e!nPLe_BQP24wuPw`rFrK}kdj_?_
zj(JEhswFIGbjR#S!4Fqt&~7jMfl%1p8|`|ngh0OoqKD`A+_L9A1rU^YHeR4Q*TGpD
zztv=dkki|EaP;=cvpBo;rLouJ{GBW*T(GgX=j;1A^pKsNSxR=Bqt6eIXC4iK9g|sj
ze2YQ&_Uj#@I$I0!EwmLpK(WT~mLX<0#F$X`Z?Lh*63m59B=7WzBUGgHJD%N%gKVF#
zy8G+_I!b1Sc#PguMt1=rf_K;5W87>;3Q->{-mNy7Z_u|oZhnKbSNn_4iMk~h%@nzl
zBcUU36XDb0Ns=rLj5~<h&NJ_;n88l*_mgbRD$v&;j2IJlx9oc2cfE4WPht{q!Bi6z
z42|58-d9|QX?!~l%&6b5Ucl-uz2j*iX18DIMDf?N`1-ZUydQJqqQBY9f2WE`HOM-~
z<`iYY>wBA=kf8m~=kwo=atNzcYap6$*to{*l#x(@>?>6!a8C2iyYv@NPVrDVPI={K
zOuyPl5j+vTZ0IwUYb}gC)GJ0cpyFeabNkVgXma=pispaV>$_txe>+D&|CB(I@q^v|
zYfKD20cG^7;Sc>QcJC1Sphg?}z;!3P?1^qVQLS>uFJ?3nqfvvL^cTDfuFux6Nb=<h
zdBjEQ$Qc=~C6HUrkA2Aq%_6oyYk$gh)GTahQ<4)!igZ-1u@Ay2BjR<=293U#N<|^T
z&p3VgQjkHb55fV?YXQ&TW%co5QW;GEsW(f!0B=#j!%dy59xMf2=*X`~6_;Vb(J?-$
zL>&MMp#fE^@~$;r?fa?}6l0CkMOuB52eCSr5BjKIxGF1?BIgVCHxZL?5>}gvbcJ+3
zzrXu!*&-1p^Cr4Omf%cgbB})~2VarmHVH^sHZpBlM}JrqE-Y!PHqv9V)6^VanV%&4
zLe6gcrEneSK~a&p6LtS`7OKjdxkYv7$0d4uUX|9!aI#-D-BbO{EaW6ewN^TLkp55P
zM86ZML<P#wmz+$SMewEpwWlK=simK3txf0k?BaqhjW01XjBg^YZ=2YN!y?u0RgDkf
zjN8(3w64C`0vw42@zS0IdcOtN5xFLB>U3#u>eNA9;SY`Gv-l}Ggbs!=$Jh>G(+~D_
zAglAs{{9|=O2#SfeI5Vi4WW}D7zh`S?@7~SPD|5d45e1GIU7A+-9t2{!K}PW*OKf@
zMIffURHZ46>=!9U--p!KKy6&#&?bY*F*MsGw0L~lxPh=Cm#L#k7B5r!5B}*Fi%?n<
z&3GLQfXQ_7y8!)FHAn47D$G=|kbU83U&^Ozm8xje@e6V`-%;J7PrWML$z{1;;~Ut1
zBdzs9{2!k2K&e)5(y0~qGO3JDpUo#Ebnfo4$V>~cQ_G-U8(c(!)#1|m3Q(zFz}taI
zwC1ZX&0^f>0|{#A==%ZL!5~)N_xtb9k}16)jkMj=f-)Te-!l1&3*BDh$c=J_Cz4wb
zFuwB}QdMYWaWBaXB_K$O@f<S1RJmq)Vx+F0aYCBA)n!cOBCbb}_k2}Gg@1iy$)QWC
zeiNsUPzkBf)}?C~k+Ft9i4<sW;vP}a4wCv7t70BDEt5zz77Ke=C+vIOljl0k)dQoU
zI>$%~{2WLo!8G>x$vFy#Afjz%)%8fEpzsbgg>BDt`|&fwFxoO@&*y?HU$#7;)9l=k
zl^*Xw)^B_!QHSUc0J2$_6eRhT+evqJa2t&;T|wy<-{I@{;ZKIQ3=STGIplGpbcKwm
z2OBEqO6Fz7@zvt1wsEs?FYCtqtb!q}mm%2H!bHFd=ER}*UXfhn&~Tdy7KM6FmL})O
z0s-3?%#imAUuyCA$EP4F$E{plubXL{!~_BgajB5K0*mr5E1v-nO}acUD#_AbFH^T}
z{cF*bg}?>NI~295qOZi0UH|F21xVWl*im?^6)FWq!XtQU7>K{gbYnJ$(`-I&>{=^E
zeM|GJ!Jd@N)s=wLN5B*8%6j~%eUT;Ww88&$>S+ERMyR93x0Nx7^Q=kuS+h*~jbxM5
zS9v!S*$Wl9ci=AX=Bt{p!EjBlJTp$AHA#@zQG<gpqig!xLhQ%SP^#DlC-JGqxy!qI
z(hqe5=|773hL%0)4Ko+X$m*qH5{HG{%j=L;D7BnTSfl*N5;(#DY0yZiY#6SCLQm0e
z7^7pU@IJRA#2l7%X`+I$1Za0soIOw~`t|nF6T}>vmElV<csIxS6vrrxDdRLo>-b2L
z*5$<hu29g=ZXvR!vL?4|1MjhDMoO*nk{Wv;lW|&O?KJ}%FLOrwJ#oMwFQ;s8C|;*V
zRF6?bvA65k;AZp#FbI`|-mwGHRk*E9T*F*mmKa&X<?_N+qXrYVT9IlNL9>K}z>gRI
zC(sBrqmW<+fKDWDQ5!$FaUX;9ha)0hyRGegH{5!*6E4-fDz>(HT*p(xp7jDd;&|RR
zB3JS@8&|0lAYn0y%8veUnP-Y*w{k#XyfkrgMoIEHmrq<aVh*P+SFxP>mYU@_xK1xg
zA>fYwV%SM((YG(79dvnVV=rMGiJQSjD>a!n*Xeq19E{8*IzF9zT<daxO2R|t_H?&U
z4n<C-dg6r;jWN3Rbdk(pXVCjVBl)VjZM#z5jN=x}yp%1@X{t~-_jKW?$&f#K7+(ju
zlHHf{{q*~XVxO)$6eJY3)aC~!siR*}z7H7~)UVxccT(pqFJLgu=O<&L(E6M|;>x)=
zIabLA;}9VpE*WS%H1_-<i>lqRu#RWbSvi`~yIW4@mc*Azw(e=0C-Z8_&SK1<!Lb{u
z^@4+r9(^R}jvloAia?#jR|{N{BzElNH$*^->I-KBtCT;jR;I78{VOIKXomnTX)dCx
z$`()!>RC@AJaP#<3c$ygfki;*tVR3v5{xjehgAAHd}C+9u8-VIDFfF<6a=*md+>Q8
zP3-Xo@q%u-OJ{F*d^Ay2C)r<S&cvWhOvY392c|3^tF$fRn8WyZQedZ#Ji83;RwG|2
z6wW;+K`b8jA>%BCMzB4~KGFz0lMWvp3YObMFN!m9kQ9+5RZp>yC*B0QeW1mOkbPxP
z1@=B~WXI|;EnM&qO`_r$!uY&5k>mj*W>4iV*Xb9R>5#~}w`&_-m}W^jmXzN!YLknm
zgCo-mh^eg?Ti0|C)!c?DZ&19p@U0!NxLxjENV&hy^&qd@uc8iFLjA}sfdTky=&4;$
zOZ`IWu0`uOZ0LH;_E|Hc5WsjEef~I7f;Z#udhV_GgbYCo8W{sRnZ0)YW?Axec;03v
zEN#<R7|OI!gb9=AK0P23qa&>AW8e|zs8>tmQb5Q}U{N`od4>enyOt#5pMfnn!4eFo
zpPLs6PxX!2_rWlM9D`L%aQEwE(BsFX4wKw{YSq|OWfiCZiqoqVnP`>w6;#hWi;g02
zNYX8tb}7mF@Q}rdd}Pc<=->kLttwlKl*g+pYIaNCWQ9<T2)cK!G59L+OH`QcJa{H5
zv<Cj#q&Eb@Y?_lr`GyT5--t;IV!>C4w~M7-wlVQ79v)1&p-wmfi}Y{toLh3z_WK+e
zv*_FvWhtK7hvF5=Xc5~lvSV{axtAq?3(N&9ivBR^@zhhkmD(aS=6I8_%2`mWv6h-(
z4tlSqedN2F2HF?&deZufdg6N{>c(n+GkK#6Y~z#_22{9aom5~%wIf-I+RtG!eZg)A
z6D6jD)>-OA*Jk|Q1nopr%~aQ1Vn(aM$#h!%vJnCUu1Kt>q^fuYqzI}#TFJ4~)_Z!(
z|4O?Ah;a5-I_fa{&`vt;xfm%!8j&4>&3=}D$0oqX_dTpq9@nc80y(UFRKx8IO%qr@
zXN`Z`DKJX0p_CdCZE1U<q`UxC;t_bj8YqcOMS<q?9<mEfy0ACkhvSH-Nqy_o4Tt5g
zZ!Y|dfb~v+0?un^QBaqSaulCY8NNOH)iMU&gfWLGP(=<>iA8IT1k%k{@T&4u^$oJ<
z(+^*?=$uP9p%ScUnICDt8$G9F=z8WnzNqtccB)4?PpC6ZQ1?B+pic6?H(YW*7sD1q
z3jqFpt_I;rdr*Fq@_z<1^wTP&wu|Je14nkA4E>x2Z?il$nOcjL#_|=xAYuPI`G@Jw
zkJ1##T6r78v164SmSfm(Z})qx^L5ufN)NEBZwoJgk!>LCK02e0u>X@I<jPT)`9~ZO
z-t{ncgr*?@x6eKtFbV*^F&IbkI_@3xS0LUE)zgBuF8n^%C1P~M1jmz8vRa)L`ktk|
z#a+ozT?}&Xzj`f?Gw5-Rj&YKXpT%v!zdS`&tk6RiS>y;96Wt;ir9S#Tm<Llhm#N@A
z498bT!_8oKbD@)omWKMQG8xIl1FKr~+P8=9h8RF&V|~&XOoEwAGwcOe<88{u7gE~o
z)*7oVO`22LwyANihLqt~g!}SF%4&5o_@|Lw6OZL+aqYR~bN<H3*XLL?h=5O{GYLEF
zP~Ebsp1BG5(>cAqG}?z#`LT!o8b1%X25EQga8`TW8)+0`H2~rWgWoj{f9ma7%s&!p
z#160!lOJoiG=@6F<3#)%@s<u|J^!Uz&8WPZ(=+x(Fu7G(upy@JiYiZWtgZN_xJsew
z+v;r1@mK4<A@+s^Hjdv^7%|a+Bo==T4bAEbb*k&59h#NaMtzcd-{=WRiDBFp=CT3P
z(+^Z_9A(W2w{#pt0^d>_oRjjCQ{n?v+<YSV-w`D(Nx!iA|C2-8&J-8%XC;D;o?-!B
z+j({mn0}*MHLmznqs8*@z~LXpEt5RZj*FPf_a*)GWjb#x+)mT1k}jlZxK%|we9WNU
zvQ!M#$7;N7>sf{CZ2iajd7mf+0$J2%@!?c`h49D?+=v|EIy4}ghq;o&N?sYEw#T`n
z?;5O772a;Nl=l|m;Q-)%pm1&{7$~|ReIx56<DkJDK(j%TSyFy`mS)%<q>PjOC?h9O
zA-3Faz=lN?dLh!3QsvbhDp?LeXu&c~u%sbb=D8L%ABKOs7SsvgtWoN}xwN*aE&T4c
z5<%e!u2`A-;E<x5$~?ZM!}B^c|HepKp~pb0oSS^*6nz@#bk}c8(BXIDwllIvGQr01
zCjw)Bmq3{q;@Ys^`8G)lnvTZpfm-^w*L|bR4!cxIU9MHyI6)yAKO{b!GX1LLQj4%G
z+rkR@^_i&sLoa7K{uJ=aqZ^T;T{TKXQ_XnA^jfOw>Sm}pHx)j@)Dzphg~-V8N%%F6
z-Fsg~R*aOJJYuw3bh`{)q7VS%QZfKNAW8Kn7Yiexc1<W2a7U2)6*r-7wepVlFbSIX
zh)X6K`P_py@TS6AcBi8zaTiyzEKwi!!Ifu;n^tZpHabc1L%I2JpDmrh7R8}Ry3Fav
zxIl`iX#5R;YaHv{n9b$1k8qGVw0rqc=zXQw$lkzjv-e|jgEC=zw9=)mddcpWP!)za
zl`e3BtTJ6AA~Lt8`54z`me~|)(VOLB)(=uEwUtsd%HP!7>jx|1yjgX(CwQIfT=~0R
z*>>=EoN2X$4la_gen7%Qn#RT~((~X|hmpd=At#r=OECgvE-m8rlYhZ*19{9%@x2q7
z!lqb027uv4<_SV3X}i{~3{O;pIL90w)iDq9X6@?~Vu@@MVSNZix<r<~)7BPt!Pj`s
zQlv)RbRE&iqGDq9gEkRWlO<!WwlUFvvqF>Kme-<Xc=w6`_#f1wGKBv#!mLQi`rftS
zemYl%p2s8lZIz0MbhfxU#`6fHG$hNAXyl!dmja`>M=wE5z;7c?!vG9?k(qB(xpN|z
zx%bzdsvu+((&@BxhTjIET0hp&f_nXLCA9k2OeA-ObF>e!;qtbHiwCYU^_>F`hA-+X
zS1kC8$A<#21-HwZVQ_o3lYf9IlMGU)sx5|l?XP}-56k<%q;)DXN|$eS``((+g@UQY
zm!!8XgkWah<#|27D{TUiBI}>okRTDfX_zSy;N>o9V^Z335}?Rjk%DLjB!Z80$RFlK
zFS{;F^@`rPFN**vP8K5D1Z<4jQN0@6RSu6&m*T6ZC@djHK1kcK)IX31$qWTSUy$PA
zF0-2|6f$sOwVLE4TYzs_6r92eI(nbO>>Qnq-;gPeHB1ure<u~}{5*2j+s_~KJ#gtY
zWtQ?iF;9AaT^?lj(rrK{je9b{Ak(`!G0B$+1CueCPk0~?gr$C9PWA=o$lCT=>b7k9
z6%Z9xph^6c4K1T3pb(uswGqIT+pJ57=HwpFRJKiyCYOD;R>|7K403v1C@ggnUe_+x
z$1s@IZMJ>nmOXI4GBe+4Uz{nHH5_QuL)9?~<F%CraFyQ-$Xw#DQ}S|3EcvNMm&DD^
ztRaUagqTHdR)=J9;l>Sg@Oopg*5>$pT^zZ1ZB~#{-qy9cbPSiQMzBjM`l-jltXmmj
z^+i8|QBR+GjcajC5I|+(K!jWVEKVJvpVaZ3W-8gGL}ZspusmoyrJdiG4r)mb=o>1V
zd;V7_?5{&n;7}nckbCMleXf>4k3HVAHB2At@n8?u*$F0%z*9r%I{Do}LvbPi83-IX
zy3%F#*8^eXY)H1<>!pFbma6-z_IQ%o9m4lEy~|*pgVVUCS3nR}cMBK3Vx?`s)nx|_
z;|cfX>}H)CuyYagi}_oE;Hkh>(ZIHR1H<uGj&A00GX+AHZ{pd=RXcN&i_#Ot=Emh9
z2zMlQ5o-|nVM#5qz?500d94tQKTioN^lPmY9keCa3M$Mp1x&|bi-<D;qjuGkaxatv
zEaogdj>XdCbnv|8;Aqa>P$_TDFnZbZglx32!1Ev#Tz^D-*bpuO509#jrzUf03KJOJ
z0stu0JC8}r%~%TdxOI27HPnGWAU%_!8hG(Bz@<UF1dGVYA=lF2_H~2R;qHX0$~AP?
z=~3xLRfi=|W&%VpYH%AzUJVpoZW)(WMQZyvm~5x;)`mJ<4+hJ=60fd(1TXi+5k+d&
z_qmoJ-n8brrx)Xvn+9V0ELJ0L$4zm20D}ZBWndVUe$dwpkM1d^E5qYWwHH`WQ3$x$
zSJgV1F|rH>#Ul~;9~lb<SxN+En+Dm5qA;3IB5{%;d?^4)0P86l+~^8%zWgdd3Ym9I
zj>BCVao!g6v<{ibah#krt%=vUGR2<V^KG_3IVmhDQTaI;k;Z=>r{;oo$T@nen95m0
za<!@6mle}1DHn*<f0AYXZ_LCuD8y|lo+y#y;9sk8YiN4Izp0h6;Q4t?g$$+yx0@5-
z@4PVKF#qIPfEN;p-`(r-T=}ZN^AC%-pf&l%2%>5J#ZvI>;o8Xsm10^=)2)jf?b@=^
z>wz#+5_JQbz|V1)@>_#^cOQ4&C*Ee%EPbY=Rd$xGd&cp-OwZcvb`m0hR9_u*$spBV
z2oEjHd+oR~WLyTJ3{2MP2-m#y1+meHmSG<@p()qwLpcnD9IB6)xWrRFQT<*yGA?5^
z){gKnZZoE-iD5F~+D2o!Ex&$yRUj_K^n7T5ajs-49&m!74l9i(7?xy6L_!OBT5+ID
zH`vXZoQ%3APYys~KPv`_f-}BG7Y<gS+Bvc%)KHUQQsN0#RoaF5n3X&#>U=>2|DaX?
z1&2;NwMr0Qvn|Q{$!_DH2ES>?MlOlAS-VVDPgEc^R^j1s3;C6a3c|_iAM47l%j}k5
zftDyveI<E=ta}n=Fw+p4`>b0&pGXj+pb)A%y$_o#{<7PvuDMDzh}71b94534Gv;}l
zZ-6U>iYXR^7bnC$`rpAxBCLO~M-2EM2?-FO@nF8znIKA%F6%wDmiy(|Th38UJX*Zm
zgoan|^?v*i@x@2ba_ird(>_4kPwvpl+t;?P^BJhz?1ADgY8|*|$4lGEjnc6E)b4PC
zp%70MHsSIM_B83XK+M-2%*EhC$99LumX~x7g53EB-<0KH*vVqB)9R{)b?dF~W5<%t
z+mhGm<Kx(#a@8F#?L!;$6R$y<kkx<YM~%^2l98OIFbuZbcGqc0><&A^_OjmwE{|SS
zDVOVaqNjet4@1X+Qu+j9ypQ5eRpKn$qFO9g#u%i9(il(YTUA(`PUX94Ms}YW;si)}
zf9T<_+6)iU(Sk6rr2H2m`RWy4SBtK`4*uCPszeq?KK(yXrFVhIjOh9i=qFDYxqj5R
z)Iz?us7rWEX_gWMU*LNqpk;McoRokbcYcr?p9{79iO6);%q^_9E7z5Xnv-KB>sf{T
zy__DkU34a=m4|wld#mXY5k@J6KC3)L$z5qk9dVn&^DMwzsPAC;B!18kg1`7%L9uZ?
z=B6X}>2}`G>P9)bLGTJ9581Gg-+zoDQI$?SipNCH-Y>wC2JKzEmQUme6dCAozLZO;
z_dn&mgrZJOBtAq)@DiOJCFC;8qSAdU90eEAm`q{G5)s;>{l%f!WAwNV=bSz*iGqKa
zKh5k;m3wFp(HE0q37Bnp91ft-&Yx^e=}nQ=m+ohex+i<PS7a>>`q<&w=YT(Ro7=@D
z7{pq2Q*NZsduv&D3RvV^f@N}xNgIgT^`C^MUGu9C!5PdZTL|5xr*k(#H*=!}(}Q=x
z#ht`EL#sKPE4t-PYg6k0#^c$7N}}m%w6)a(;3Z3SK~qz=lz=zSnS05H1sng1HEOTx
zGa2qw<POq`r(AYF>hj9mN5O~eSZ9hh+VFY9OZWLk9<W(X<CJ@$-V^YKiQ^JD!+xy^
zUi-S1&~e+=$aL{iUeNSMi|o~5Glg7~7@sB{<dcerd0sd|(F)DOgE5A3%`p@`Zj(CK
z9NiKfMdV>V4OV^~0Cbr27UW0rrc?bEvJ6jCE`PMKVQUa;zoyp(W`_ttj&nbS&Eu%Q
zo|TshpMU^iEm~^FTT{jTf_;#+?q*`eR>J@e-UxKX`vZ<v=F&b0dqN|M1t@(bNcMPY
zrS>(oqg}){uP!3H3$mVJ(1xp_KC-(=I=)+I{_rQ9V@jN7?d3M+)@n9KmBDY4$QmP@
z#9iw)ew<G%-qnVrO?i7F5pc(mbQfL!ay4=TaTZjlP_=*aHup4CzfDV}ZGP!EEV&~w
zatZ`pGq1ch7iFa$bT%F?AD#}cUihr8zOIK7)gllox$_f?zlXjFUK(KT@0z~a>~<%Z
z=DL5`PB>cuYXg)GrwxZ+W_VkP-`{`XEH@y%aB#1xbjX?SSBtZ%winjV?r3WBI%$~^
zj1w^Oe&9RTH`{*M);A<weA#=(X>sMV$>?2Hl)o*G>vnDPeLD0cyK63Xd+KbOE{b)Z
z@oY}pFU(S_>WPCdC)F-+f8lGKKGxpm%gjbY+NRi9HF`2B^4<yElApS_ap`ElE~JzE
z`3LquPpzRU@{z)%DBr!*e27Tf<54&0mkL_s14$OU1~LL5K}LJrlekI#<5&&&&}t%;
zCoN^<p_MFgz<mVx%pp7Mt*tnTruhk}nEs|F%EHRBseH_@r|5!*G3GgL>z-RSD%zuI
z><1JZub@|^ITRwzVQN%zKZMieT6;xLl`&$fXk<A$YiT^XTx;x}ydM<q;jinE!>7nJ
zQo-aUXN>p8<`8axT7%*5PSH~x5pz8pzt0)bvixhNi~^AzLh5KNb@73fRadq4yHh(}
zMKlsN4%g@`rMqEj@-1WF?47Aut?H8#Bhpb6+R-=qn^9qP+M<Z<;laok>XW4pC}>xC
z%?^(q)T=|G@jA_ifoq1`O`NFZRBGH(nhT&#u&`H$XlN5aqPd{~DP*sCN&I(e|5nUY
zy2p21(qBig7aL1We5!eY!TIV9GL9S97h;UNzNglmim3)+R>Ctto*1Ap)u6~~<_4`C
zKBf^kf34h~Lu~&?@a9X8{(?L$1CgUA&!dTUL)2r*IGD)WXV<gSNz`VmP3H{6nV1?2
zg!<ZrS>Q)<y#lb8SNSVv7GQF=TISkxh6p%+?AWX$#TQIo&aVD?3FJXt$0wd2+tVXi
z^WJ&+-dNYvL8>k+!Y#FoDkWT4K#IU~9h|yx48)HC_5@wFbvOjR8U%bSAC6nOK=eR6
z^*nDDdD@xj)x{ZH&@!?)))xwrS75CxU6Rb3?<OEmy%U!XE(~~rKHJ~DCE3WX#xkTl
zCO8TYd_51x6-YZlpVSae%eJUh{4z~;Ee?Ud36>gMEdz>3EdA&=or!Hayk^-17|a8f
zzUwacA12aR4kTZc%Sa%e|G{sls1T>i1io{y*Yb)Ru=7*aGmpi=mU$z66X_E860#29
zZg03o9hH$yh$)n4`Jg+#@T(T$ceCPZK>YNYi|AG=04uL6DjSK7hdYYcx&~^t)6z*5
z+tpN|F=~6Id3d!FVtDbnKD}JQWE_YAF=)#W@@g@`JPuC7Cp6nvC0u#xXpuE|xl{L5
zFE>!E^G4vMPMD5(=)OIW1=uzDUh(fl`Fg<?kVaW4agQ1KYemi+E{*@<C-uLwqXq$p
zF-j4t?`4V%*EdNUv=4vYaMpQy<xtUte-!i`Eibc93GYrW8A($kAu$`d<2I^NcfSf%
zLhZnEFYxg&RV@*?QBL^7{&2P%a9W+jZB&*xfL%cYh{?tTsWd+{5Ah|kYyfVMUfyQ=
zY<XQuFeG3htTmTPgrv9QSjxrssEgAsWu(ApU;tjQ8h?iL4eX=$eTfXGHDnP$gk-O)
zMQNuAw*<(0lFO$ss_3U<+kgAOqEY5P%Xbo9XkJc=@3N)ES5s}c>CIaMZ28S~9o#J{
zjF2IZt3E#Kdo3RG2K;U{fu-y^8gg48zENGQyaT+qhkpz-pKFD0BbADY?Bf)JfP95(
zNV)P!m#R=JNQK@Osoq{buQFD5YnMg{<7s-#DQ^L&xRin1stGKIni0C~7iU^9;P9;T
z2v;g2T`plU##f&dBH_6ZtH=u=S)ul!e(pW<BQ)Qm+-Z3CcT&?Do>oJFP5$ch@C37h
zg_mvD8Nghfvtnh1UMNuJ<i7R#Xu0ABy%Rj&J+A-KL(N_iJPqs_u2E;?|Ghu|`eZ`7
z^x5}tkzTgXHFDaac)<H!zYU~x9Sr+0x9muqJ0C4vl87bEe}w2JA@3R?@Syx>xp@~y
z&5D)sNps8NwHf6uu4Bwd76ID&z-zb-0Ex@Q6<>ltm5~AE2hC-~1%Q#~y1(!x<(3_b
zdYOe($5StbQGP1RPHRZWAMk-%X_T)`MT4Pz(`N&J`T3W!yghq}ftm0%Q8`f1TV}`q
zh3L*RW?;T^CiVVxInt*CS%6gWCZkC&b=GSwx7TkFQWd<u%;$MH-`#29l~&C7R4d{(
zU-x3)sNfH=27zJ0WN$m6G_KnY_m%t?iQUXb^uh*haIop-4_9H0ki!=r3vhE616DX{
zuj}CJ>`ER29&jqY8fADYxdRz}X1YRz1VW|t_pLS3Oxq3_EX;Q7lH897jc7R+#R9zl
zo<Gf&r?%_GY(34{#whslhkd>UEetHpjfJN0`!!4FH&rjn%EngThhJ9~`0)<$$Sepc
zY3@GP^KwU#%}azv4%EJ<mqlanhY!>Z@O(VfC%70k@5{2M*5WX%s+y%v1z@qh<ry+2
z=FB;Nq7-WBFU@KvJ>}G4$7wn$pFyjLVzg=Ow=M4m8gD)M*nGyV#<+#Os&nw`gk&o%
z1yI)jKQHU|ynKJsUEXgjayUiYUTPwB6YA($V93U=BfWM$WSUlsy#Ur62<mF{jMtFb
zZvj$Cl)PZ(Cm*#}yGR*ZPZ80qei;#us<r*z^w<J?-Oz`4RwFnGqib4NINb#sq%P{B
zc>59snJ#q^hc-Pe7~IggU9I0u^e1v{eD7wNvq&pB*U-|dd=dp0H|P2cEx+W0RJet@
zOYkma?e0hFb2UqWJzghECc-666fCPJ`pulf90D-Qb#aHOOW*ViKRgoN3Zx0}GQ$1f
zH23;+o85e&V;?GDNEtE~+9?RArW9&#Is5pVQ03x-ho0a)xb89c7>V0Z@)VIP2-dYI
z7jw7m(2MAvyN{0~6ae!jxZ4fg5ce5rsoKA=&{T1JfC{^b`ehv~!=jhK;IMpR`WF0p
zy>GtAEOlb0dI1P9^^d!k*2Qs6yGdCFu6JF~ZG4TpS-avrTZ?OC+IUUt6g->uj)kLF
zOAud{#Qw%o9PE9Q`u6yYw;x+N588UYjjH(7EWM3MQM{eWgRu*n0-i0r@)<g-xk}H#
z)PjcT094|&EaIQfyT`+N8v#5Iye=x)SK4Zo>b%2c#Y{_dKk^Vn!w>I(NjA={p|_*6
zS%7UQ5A|Z|{T2!5HeDz4to4RyVMn*SVCr!J>OsXZ92Rsh{lZ^Q@WtT0)G7t)!Edp_
zem+9y^+HV=EJ9~~x!vPCuY;jwu(RLJb={V)Q!;l}N8u}ucUKYw#$;sQbr-&TjsboL
zt4O!iPGi=vHX0JGm3B5jYK=0Q3kn~hmyxP*j3OO87t_i~SxZc}9_1FIAK`=a$nM11
zs*ISAh$94Up`ZG+OoeNV><bi(bQZ}BHUMcQq@JYM9tXgq8q&-~3UJ`|kWa4t&7D3y
zvzYL<7iL5U+7t9$$_ZlLk&n`6+P103PSVR~kSh=R#yuk~+ht1720%k&atxLnedB0#
z7<eg({_u=sDLk_}c9`g~YZf(arMr5BBid|(S&czy_S{9f>D#Ej<f|WkXH#Ns5iYCr
z=A`XYU}6&^;R`p-5uDw>+;~tqp7Okw1_~X{fT5<<Vn;A2Y8ON2DQl*3sM;-~e~3#n
zN*;{}xgY5OYcx*mJuwjyO`<*^qs2;%;RFSc44mK*zU$3UyQ%YneTEa)1tkm{XMUAo
z9A?i3^uAojICa4JVsRp39K`<v82DQl!3D>&d;yqF8R>m_KPD$NPF)Z!Eg9a!#GyW<
z7?Em1Sx{(Y8B%w-8fA#n?)}}rt3m-SM~J#!DpvIjBH2?FCFPMMH4`-Q`FRq5;h3|>
z&EKstD$LiNvrh`xEYg$ZmXi8uv`f&v&ebO;lK}%7@5EBzGVfU_^Lordc!xh;>WI(H
z5Ii3Bx(Ed4bo<3NNq;i=;<IoCb{XSn%K%=IZFel^RAbl@DZB*HfpzE3bZzZCx}<_u
z0D%ojscVUta6*00vwl7&CK`4st|d03dmZ9!3bBNEbOpmw<J;u3z)I_dmnb=3XV}8L
z4oKqj_QTf5)!Vc9!|8i&IT#9jLwX7)$sHVXi!-V_)m{4$t$6;q2rv+-CD&e#Es+^v
z@>f%ll3bMT0z0l-Ttv{CR3320rGN7GoTEr`oda*@r%%1ke9JGo4xj#A+S8K~3}xU;
zaBU$h6iXuXi_A)iOWyobaI&_%kl;)3r{k5YKB4%p+}I5ui<hoW_ABYFv_R*`L{bbI
z+Sez7<KUZ`(}C~p#}3!6JaE4JtVY@TYO7>3Oz1NM(OrjYO$%hZYL%H+eWN`w+QXO4
z9ETF6HH)a>@^5YiL#5DRZoEHCWB;kJ2oT-wL$C2)*yqnsp?;_)l1CvLW+!X^x-fd+
ze#3rofIr&Pq4|^H#X!MSGOd}=_r=d^(B;!d1qj19sKEarklYaOD*=2bcK@@h$OsVm
zEBijfuLwe~4Fu>-ZeNj$H3NodbeNXH76RaYs<4-oZizxJE~VMfV8c7{s&Th0DSXL)
zGD|&VPB@g?iiP(imU3bX{eM6=8a=Vc^@LQ+LfEh-4BDw41P9BY?5W?r9tscI0uOf#
zX~;|1@zOQFE-Grx+6pq4vz4NVuEb9AqetVb?amY1ZV4w2?;l(zBQiq{KTv2I_^ZXl
z5R;Zu;Mjh0!!BZOn|9;;cb(7QU@a-!wNJWv)Ej=6|F-e;s^(*d0o>I}oX=a+;ThT!
zpXtt87FU$6d0m+pNvA{ZfT<$xS?n+3>kdtK<2ND}`sAoFdV<An|Cs_(LWp~%q0X{M
z`%SRt{t<qLmqBM{1HX?$_S)QFI0x31d!WV&ro$`YzsoPkW^CZ@9hNSf{mtd__?<gM
znXcG8tsCfz<2>4S<<-Ae{SZyP_=V<?E!Aps%|jsQSyQHiRWDx{Ryu?NEhYTCwkrvF
z0N_zz>eZ_YKlx*V8*3W15|rLP?U&ETXTWS=1jdrod8{Yx8y+QiWn7DIJX-t@>BJb9
zH(g5?udA83IvwA|{$^6v&SR5~IrcQvC8Xr98(&vIw#8_LwI7(n!O_tR`Vlt42=dbd
zRN9X%G$h)^vT5+pyVEsSt+dKf`=p5>n|>B|kyz|F13c+|SkF4<Y4FTy$Bj_|IWot7
zw2b&N!I56~`W(|-w8;}}|1Kib_d?nyE=e+2Bcx`dlfdmXVyf=cr;l-{=v!<TYWbR`
zY2yx2&O4A>h<T=leY^oPpAZNJ^b}%HN}@a0VTyi6Gkf8r*>F4=mV9N~2U9?Q8e}1b
z$&}$-XqJ25<xMBH*t=mOvkU^Ws9mK*Lpd@4Z?5hF`;&@;vsjT>^~c(RzB|lFp!+WZ
zM3X!p;B=PNmW>$FszZMs{Hd$~7RQlbQ5xNQQ*;hc@k#A(2O>PoU&!qrC3xQrYx+-D
z%l{~EM@yqf0f8vo8|kkhHHMuV#gkJYY2(kDxCaGfj9=})sVArDAjAKL`Gci^+||x*
z!=Qhzf~zrJTxuF=cT5=r-;XWM1mLw=Y_~y0{*3rr0D=O&sp%Fv3rk$=n=4@8k7YR4
zmc6>VVwP#G&$vkTT1LuOF2X(GXrOH1U+LEW^FvA-R3NKovqB~zt<kGgl=&^PRy4=*
zQp1>09!t_6#9W!wrm!fHu#p=>=E;df%gjfFhfXzBX5Cy2bOAVT+5+J|k*>_l!i*Q}
zee(lfc!JNARbY&ngm>fPnV_@fv3(gJrI1p?*c@OSblaXZS$1i#1^+W_JR*S8(^{A%
z0M_?OAKK`FS>h&mcuK}uC$x};dSvEx%E&q{myh-^dW@QjMpX)MyeyT5QaWE6<FL2V
zhspc34Jx`odL$yykBX1J&fx1JFfrw;)fZS+(nI1Xx0CqL&T=I1<*+V4xz}B<nW}~w
zi=Zl&g|U%u#u<Wab0df1moK)de&Nb8iUytLRzKxQpE*X!oNAFSbx#-hRY{&)%6uap
zjP$sdWEH+dbo_RKufStsw=xtsmju6FOx$?adOt8urxX|%CGNGN#ma6V1m0UqESpnt
zq4Mb2D7|<2b4wcuAapi}4xlmoQyu_WmA615-zpSR`kUUTl<HmXp$hKNhzOt|E&^%P
zIcw#9`ouMwPR=_g%&&IxfzSe+E3W!km3%MkMr}AVOV7MN_C-}yg*y1@CUFP$@uT|3
z;oJ_{K%wcq+m{?KX^Z(yN~G4TqLDNqX`N*JsOP7+>_m;VD=H37(XgB8R2g(izs=Xy
zm3F0+VR;sktEpi=JzZ7;K1K<pJcdLM;Z6GAvk8ewDODqQ(_nTgOQQ8F{861Zp^QFw
zj#4XUo6s+-e(2}2Ozh~x(x@lpkd?KG$BYI6Fdm{kE^yQ9?BSM(uPVaC+%vt8hLKU-
z^f$${oN|Itr?(6b5NsZKbscFCOB?5&>$QA%VDc*ZLxFHrD}kjFaCK7mHRCb8nek-}
zxXC=utbFLcS~sz3|5VtJulsm270)LA)L#FPG;H_v=GM=p?z{SdB2m>y+LYt+DAU9#
zJ{*ilKuDBX2tFg-ADGl=dYu}bJf4QUzF36sJuv0dLbGvc23$;OLM=bl<{wCOHv=x@
z3{9~^)g8%Q+C~(y_3>l6{h#{6bZbH#gQ!0%B^j!X@j7jxiZG5ROlWcQE)9`HF7+B!
zf2u|H9*XOagK$#J#IQKE19Fn<2SJ#4SVa+<bVy6OsAJKh6Ff7t<mF|RDV0xgBav4{
ziK*G&zi)3Z*%;diI|w^&(V9eji;71=N6xwS@@qd9P{C*c7$9!cbvnr1IV06y*sZLu
z#)17XS$;-Dutr9rrdeYOWPQo0E@{wTI^&~K?1|pVezLe*pnn&+@10#<>KKBmJ*B@N
z?c$!*QjN9M-uCVG>ekPIWjvclkIHU_)R`=-@x9_46oWF{B?{u#<zVZH9CoSquL2eg
zZsk%2d7CHRzZ6Wzf!`Tv{HEw_UK+Qp8Ir67{=`!Bo|Fz{cE8LtvFs<dvb=>531~z#
zakY%5B?%zU43{?BqFgSUFO)LHrep>qKno)sNv5~vc!<L+U7@CU7*!|3!R_8}pV`VP
zy;D1n4AkEOma!FA5x}hq%LmW8iFXAB<|oX8kmAjMo9L>pQ&m4NQW!c7rT}64K)vB=
z=sQS88L;?_Zms!0VS+`{$c#Ioc6Ut+m8aF?%lS%6>JHe{P4o<w$pqCf_Z37V%R0+`
zD*08&M|^W>cXM`<k0#ha{7_poZs={B81j2atgPHI0KP!Zbh|Gt8J*=YTD}O)!9+)J
zPCeIBJ4Xg7{bMv-_!1>ha!N)~bJ)gU*RKTYigQ<rDM+L0-5OFn;t~Oxk@u5GM_rp{
znVoG4kP6p^PS)0`>cVD>uDT+14k9NT6PI$bico|Fw##D7?jy_FrzM1AB2CTjOLRF-
zNJXVs`Y5fGlQ!_n`ki#U>~8wCmX)b4?3WL$07{DNHk$T#w3VDiI4LKdroKds)*yN#
zUwxu=w!IBoiTrOB{O^aYb5H}L5S6nN`sU<x8u!OZc>nXi04SAp$m_ie=~0h?(!8et
zU1W~$l$EZ89~@Ak#?`k528TX^iQ|5gVm-z1)mvfy`18}X*us);qQe=`yJKN9e}fQ>
z*T0v2=PZXdT?-hi{r-`kSBP0N5v$UbK6qM~eC%Wdtbk#%U+`s2ZJDqlMzdRQIg>^g
zyLdH_iJ3t^DMeMopuoH~Pdk_CG}8oN$9-%o1(gP<Vgc{<hR8Z&5);$22pBPQ97v2`
zp6`?QqYzCKfVx~cJw|X=n`DHB^)H5vxqIWQjVW#S;fbMd&<F2p@;eB2%*N4$nlfC;
zYIptMBDCrT20!fLxXpa)aR?3IOt;n;_{d9+8}d_UjP>XMsu|rp3YYDtDO!~%iLD)Y
zkt`c_w*}vhxwkc6Rj1WCjYz<Y#JrLu_y(Uqko7}q`fOs1D38I->vb<JI|Z#;Sl|E0
z)LTZ?(R59qSbzj~clU!k2X_e&{9wT$1P|`+?(XjH?(XjH1ozzYyx+ZR-L-%A{Fv$4
z-CcW6RgK!;{K)o1rxSjZZF)*f?ApB;%>=n^xbh}nn5A*2{opYL_Th4o2EJ4LXWMLX
zo0p(W`<-XrQW!dE(ae6*>=)jfViQXO5Vi9GQS$zASRwIcZuLirZ|9+EJ&i2XEjy8r
zmn3%OD)Sdo040WnjGgUa_>Y%GTHV9j_uZbZ)FS(Wu`@nix7QAGeVS>^5nfag?dUXV
zYTjEZ^3c_;r<w}^ctHcEUp>&&kS&o!8BEPnsRh!If8X}q8K{T~3Y;awE(APe(cmA4
zE9-|wM?`ondxn8Xk&|WB)Y15Ub!c&+@7_9f$PbM^jB5TfMY3Pvhi@bKO{Qb#RUm(<
zkeQ8zK(cwiYD(Nl|I+w1kvM7lQ~@(ZN190)PYLj#X0y9mFDI!|TiNFK{^oeX;OGu&
z;KK35r-<I-)tHONz?w>TCQ49nN8WcU9e9|dFEt<j;8u)>wC$YWcau%pUCSXbz&M*!
zR7xT!j!aTcX<t^(W1#(q=0J^JOdeBpNMKKOJ>crxjdGn##XUtxBSY#L=0e7=%f8CJ
zjzSo351MW`n!**-tjgw+96c@h?XdM9zTt=5PYAH_qQTr^bs-+odP14jzZyWnP;pVD
z1gn2R+z*H9V++@kq{P$b==ZS?bR(WTwERmn(>Wn*qKHtvQa;xXLX_vIi#H$5<A)Qa
z)VqX>8K1VC90Lr`J_Mng*pMHV)XI5IC3WAH$WbfVaRKw5%rHV{kqS)qRjAnIuWp<<
zN^()jxQOO5b3&j_g-0U6ND+^Sh#p}cY!j}lQ8=>o(lz;TIl>UA<Lio*4h=0EYQ$3n
z2I&ZLcS1n?1XfR2gZU+L=@(xDID0mmvy`S3G7^(mO(syI+Mna>IC0orh}^L7sF)2g
znuC7M^#xb$o?9iX5?6U6TQBr8IY^6@wtp!XQ~X5-_F3zFi|d6@NvW8q2||J@37nCL
z1Iy1cM9z@d7+A;}lNe#783H;b@ac81xgA3ZNp&7E)9>|zY{b@S@Pg<+DH4fW;i6~-
zr5Ex<L@glKgCQtA-HUvB2FS-O^BFg5<i-qA_v^zvqIBYb+VLs>K+2(WiAyD#_i*!4
z=guR4Vx|};V$)geeJFeJrN&pHJYUY<qds0Nk%@G%WrE`N@)H^32;B3&uxwZ%%fW20
z_kXAON{C^?tl2MQ71KrP1?_H>MHoWJ^oLT`hIzf@)zf7=i_OrM1Pk7XY~=S>#z=X5
znuq>jlAcoZ>c+tGCR&wL`0$jgCnD0OaI*O2*v&Q#kUG_<-E3SUtQAewxl+?*vKZ;Q
zeA-MY$x*aOPCWdHPT;bsVt2`JiH?<og9Bqcp*OcyqXYAY_bcN&`A24PpXmBH_?AW~
zDd*6Kam}u_n!AXTa4BJ+fCh7U!iM!jTns!;ahBoOB4A6igPGWXVmC}g7^O9y)qr|6
z4?*_}?7Nw86FR_!Xr{e5?bs1^33aNtH25K~$_DY#_TWJ4&}-OURT3$V&M0`a&S~8Q
zp@RM`Dl1XT);ixQ++P<t>+MN4`COz7U3g(n<ePK>kLGblUG&oLV6{s1p!?I(3Q;%W
zl%;5Fwz&R&nyE25)PBtt)+nMir7HhG>(w@pCU4Xj8fs>}ZR|ySB3ZL8w{lV6T5N=L
z7|k@cbnjAU4WGm)o@QFg6egw&WCiC}Qd{<6<X9P_ps}?|cVYR*{LGBI!;QcNf9t%!
zNOkHdg)x3R#W{n&GD<QD^C{d?=sg2m8$xDz6NKFIap?QGQe<Z={#K?u<UDOlE_RDz
zPvhq_kqI*S!6UDi?uneCXz+M20Rt^xgyu5brJlN@ee8Ip?dd}C&Q3#V0|n<)$?AVR
z67xdK88k!?XHZ}mkm+=~He)6o=U$Pg`f*)J^q~G!96$8rRvgA9RngOF(AK(2m?L`M
z-SIV!_H09Q*uc%8{QBX#J;@G$W0FT(F>Y{LeFa$rQE?K9e*~TG?|$Mk+py?XkF2n2
z7UJ%ri!w@{mc_F%p^s=+6ok&j#vdOz8m68-*_}M`#!HQ=#5@p@&cD>OW%WO#LRk@F
zFtvyoe(kir!pv2(Clf+Nb&y;poSWt?D^g2;u|kC>gxosn2uQt8>3el@{j}shZa?0p
zZ3b~`Y|7cy*2>~tM>8Z#^;<QoM|vYlYg|2fmk1dY4(a?pd<6k!z+m$~Vu)^3&+}-l
z{ku8Ekw@dmNA{q`j`6<b%3)6Ww>By$LPQ6jF<%CM{+SP3>1}yDn5Ww4W|Hp(L3ep6
zY@lAQZ^9fuX5eCCw*+~E8N^{p;lD8HE5IiRBj9Tx4%1ZPX3Br5H4w_=vCT~^>-gp{
zxiciiur9nH^HUfhI!j~VeThd<d~63w28T=AgeS(7IBC__2WLVI0e=+d+$7~y3@p3+
z8sYm8c{hSf>wkC}C5eL+6mNDQ+2mj4<(P?33q@b2T@5o%aGzKB8xzEUQ@u@BE_^md
zZzcTawa>a$ORMi9@cCz<`#xDru&AaHm}hnH&cXmmLM+VBW>C2MvKvy+!u6C>R!&?M
zPEUqlqWsifb2ghM_QcmF6DJ;vn+=^y!A$9?^F$PT`4(OFX^e`h{TwEYz1sc0%+0RQ
z%B0d%sHziAa_L-BhXhxcwvfm(XFuZVykI8$2jwuR<bHtUDEBbjZRYUqBavV>yK+pe
z2D2b`Nuc<E1Ag|;0NVsX{$OOU^4jAYYava(y}cp{Ms=p+1&z;+!&iT$ri<7+Tc%2p
z9^82FVIkf_a=Q1?cfb;zNYUbr0q9Xe#rP@IQUWW5zwK<~@Y)(!YW5421y!tTV<s*0
z3hW0Hp{0d(JCjeRqBTn{$X+R;jC$>VwdR<gEYcI{LwpnGF`M>d?K{OAt41*N3gZNw
zEaYq+)ghs@0xJk^-%xOlQa<_6KnJdLM}UYr%K^`6!64&+8tNb_)K$PRwbHX~Hun3k
zz{OwE-M^eUB-9|h?>$Qo+F+W6rKo?q0`EwUnPX8qnmzn4fPWO-3TZ}>R3&N8N0eLs
zofb6Kk7@CpJA5`xD2-!()ngl>J<gaVA11|3cP3GBv$UYhwqaS%IVwU5SiBCRqcEi7
z59GB@dZ@G(%-A<>l+u}!X0*8c`SVRih{yX>wSH*)Ps_WV5P>)Q$X5)W*uKnX(*i2m
zaJ<oRK#Ux0TaHPXr-YWaRMPz0V`U%Q5|<vFeAZ{(w}2Wp4U}eK7WcZ>kOBg-_t_vJ
z(hUL0x{<C?zr-oJML%;k0K&u0gSeoRxoIIv`G8DheAg0f_^ZW-8keN1=v<pEFhc}h
zo(&#E4&(Bn7gcZtEmRWY@{zvKiCVLj_`VYO&u;^0I;HV+W|bca4b^e<;*r<L&|XcZ
zhm4vkwu}nZpi<DI8^HqG)?k;j4UGn~kA_qYw{d!MHPk8@aWY)uB!3zbuoCg!@SNf2
zP6&4vyc;$$a>*JSOP@`Q>M-sLjDPd&cSkicMlZtK52DB6jO%#de{6-DBixRUn6dAJ
zz`l}p=kbD|jD@ysBUj=2$9gi5>i3gZ<JXs-6n4WFc_MC6q>f4fb<c({TNgz+P2!`9
zSy8cZG`sKGmV=2yS-^&?SV{o;K48L*0g{Ypr5&zDR=tf@bkEZ4YXxxFK;poo#lk3P
zq`|IVA{IMC!?=$MTS3_b&#(qry^IOo01b_}Y=dB5cS*9VV3pg^l`!mK%2WY2cMP*P
zt%=yGnzgX^GRpO2YV^d5o1$gp-D2OEV`(&v)e8nhWt3PLOL?(^*CN~}5syY7Lwcz$
zxzsC^SHXT9&MH+dYgiGIbI!BL9E$ai$ZwrQmzekIe5ZC^HaV+ikJGS<)MO^k`S?LK
zQI1Mi^(9>fML@cU%P6z8yZ7TS%mz$r5`JaqLTFXBJe{qR8sFM$rbEk0afcAwj@zgw
zy<!A|EfR*@l%3HI+LWPcRg`SnixKLH8_eT%Wuh91&K*H}7nc%}N7l{O+*9&##OgUR
z{Eh2iw5;wd@aRs(`NS|^EEs-=xCdc<Y{(P5ewW#x1OWy@Aun>2xby`)upJrci_nze
zzjYl`LnLewrbK?8Wv2S_YKK_D-S)o#bsmp&e*e}Cwj4U~vP8zDz_65ydSV*dez4UY
zmyuU<=sn?chOLTdg;OdqcLftrT1`A;Vo3pWn@sgIqY#?0xRW+Cx3h5z@O8a4&lo|6
zwCIk+4wEx5sEL5p8g?b2tvU^f?*||n<Qd+T>&(<DX|&_KO8;<@hw8wGNY|63W0u(O
zF#u%9udl|#WLQW5d^Z)8CYd{~pdK1SQjyh~yPS%EHyxz=f<k$;FB()k(df{+8Wgkx
zZA5US#S)X11Sy%+yqdzPqY6tg$&?8Q0`c#MM8NW!J<)+q14De)oaR0gxTBs!UwGCW
zsjndu{@hB*hMJh}&py9+VVWh-D>SgHR1QMK*MG0dN*)ONR57Zx3kTpX_&wWu;Sflr
zUd)fC91ou)bm-{?F*e=(k}32!ojR`pID4-`$jhv4>$l=D`zV*8{LITcsBN#-SjJ*C
z*q;01hy~Ia&poz^*c#b4cYwaf&zP5M^oCeUJx>P1HtMx-A98n;Y{#d!0<;e*jHL!k
zahn5ZL3C_pSYKXPaw*2uZNnLBOpsWm_$f6WOdGQABtiLMC-=_L`V76GTfq2DENcgc
zt4^vh>IoZ6#9{e(4yPXrCZy1F20BU5k?%=B1n-|p(wtCX>I$j`Jv&JKsq-+uhcG(m
zBo^eKGO~NZZ03PG9|NsQ&J&rG`>2D_CYHkA%yWOHJf9awI`t2CROEj!!CN8U>M;Kz
z-<Lv6*gB;<!wr>2A}5Iw-3h@I|CjG{i3r7PTa{3khj?v+Cb%GjFn&Ml|04%kUABDs
z2P$-1i(M9$?p@Hsb)i>0;$N3<8;sX}SD^l|B=R#sOlZ#_TQeOZj4UilJxas@zkw4H
zk~Rt0L*rf*b2P3d6%4#8K`sK#1>Xp4vOayNiV(zpebwcY-}P!J<2`d<1PErZ&%~_O
zDr-QoH|X4Bl<MzFr#?nt)Txdw*!Ju9h+vL5YtL|lGPIie7*F@NC0XrU>E{$`sAS%m
zP&CF>GntwSB+(d*pxWioSlVMn!rZC57JH`*A;|~c^CgRKP-z=cw$FyShz+xdejpZJ
zK~<5yKCCX3Z7zb}*%9Qc5sw<>eDyo9W!2n!Bc9qI67ilWFVaQIKLXfL0#~9s94`f*
z&ZIs=1BM?7dW#p%_wx~~{s&1~7!9(P<5nrllq44uVo=`O@1>T+xa=v%o&+ru(WK-#
zHqke>+F3hV@#ypj+vRa}Djq4lHl9KuYWT{qklavYE-r3aGgtkl!=$#ZXgg{adL7Bl
zDDsz^IFQ=#JTb?DeLFZwZ+NgZxB~I0H?@j!ImfuAB5Z69I#EtVWvCqfSLSX+Oic;u
zSm@Nq4UJUN6g~S%i-Q#LNwjAosS`@Ky*GD=J2}|4uxJIy9m%atiS~gozB6|-8+^Iw
zZ6AyI$dY7~A_ks+K1$&#r4c=+Ao)yUXluOCl@#(Cx(0j@aO#;B0(CMqtCupxePP6D
z+8$@=hZ<{7+N2_6py>8_D%e?AGz&*&t?Ow@2Fvm6*q|XP?mbw>lzW+S2%N&iIV2T8
zE7U)GahMM+7>ux_aiDboq;NPwOG{jp?9j<E8%5Mq^x;^C-)Yc=GeZz`zs?H};H3m;
zvetU>b8*)2)RN#L`k!0Zf|<RIV&m9vF^~!^CG|@p$Fn+nI-wm6$ZQ}_#Mc3SG_y7{
zw<rF)QXz;xlpzbv=m?Asf?So|&5U>Jq%(=|jITMMrOG<L4*7H}CTFiTZH_L6^MYSn
zaC|Rq%lEGJo%isLCjW46olf887f#@Oi;C1uKBGf9CAENnR8?4CMT#Dr(0PQd<-b$v
zJ%$0ndzyuwqmND<^-h1N{|zpUN|fk7zYT{yZ#egJJbBQb*^<?<6v&&ct*3Tm&JLDl
zcb?x;O)uNIyGBV_gI2x9E(l=!!hE`x%II|tqPv-r!t6a3%B&KHyV4lNf+WhLsgAS}
z=?^4R5Fn?`SfE2icG$>!M&F-(Sfp;xO?ulC?eDDrvi%b0=z?-bIcCm}E3)(#<`(vW
z)<ni<B>2|M;a&PKQEl*1Dwav1<z79}5y_Tr{8fR5m-1nqLMd}0xVBM8`JT7)Fw^o>
zQid3B>|;_bdaPWEou|mD?o5*In;lhoh#Zi3K6UN80HHV;_Iw>^kcfK?X-1hS$u={G
zkx2;yR=YWF=LjdPa>#c{n4x;{Pda?L7XobKw8t;M-+4(kiM62T1uYHO-x~_QRp(ks
zO4^2|JtJ4nY#72DwQ01Xmj>I2T?Qz^-(-oS?esr}ND`mNDT0F;1sL((EC0?PH!zml
zG4{v{oW~C8F0(ZMp4d%j5KxNDs(XA-5*Qzx0CPN)v@&Jzx%Evl9P5u4trymX4_3$D
z)=|Whs+N-pBVlWieh{0izWH@u+W*L`a!)$;pt|llDe=;`e<wQr=wpsnf=^7hiB3-b
z_k%eWuvZ1rX5#%o%j6hqr}`}T;uSSbrrm{8p-VCTco8QaknwNJAEnnC_imE3$jTB4
z1dN~mc5^>=rc?ln{mQz!%H}+=!ZlqNJ~*P;#f&YY`k99|;~y0Cs_uHqLS@fWErNe0
zdQj@EsEi`)`I*PS289T<i3y3!(e~4JRw3P8qD-Q>!?NXob@m}vgrO?QkqPN};;q0P
z)QGc&l9ur0%~i&8%d7K;ee<FmLXp~*r?;PcCR*`G>SqZW<G~5DLi3rKzL#>>!}dRF
zHuHpp&Rc3wFNPmq4@y$kavb3Yb5%uE(ts2RI&X)@=P^k)ixTkh%i+<K7lI^PQnf*j
zxiQQaun62zqys;((dzwzHXyOt4?d+@Sj2Z3{xk^w1kN)D`s<X#TEm?WrcqQv7Qw+L
zqf@s*Lys#jh7@wrFL8v0hm#Jsnn`p2bh2oDL)Qs9Wo~5bJyZp|r2%D2uT)hb;_*#y
zai)|B^N_K<!<g9H6=dczeh&lv>^8e9RIyd=o$-85=ZelC)IwM(0U!q1CU5j)d!=@u
zhq&8D<d-bo=}^}UbSH}6sd%MqP7^a+S|Qy2dI05roH|d^U$MomT1d2w(f!QsuTE!B
zzWZAnJUa*3qEwLloI#=Re1z6X3U3^Y$`q=`cD$+~K~=Nk$zyQam*nk8`T_hU1#CIm
z<u#Pra1n^{+7Vr9M<G^y<sTJIJQIU?BSZKA43?9)=+R7V?th@V01?&0gWoLATSf2t
zuLN3>>IB=8nshvYfR(Rry+UR)S@DMsPb88+gWOAqt6;+uILX%gLW1Mzzg{~a$!##r
zouq`|Ski5Lo{#PQUlzn$u0}LRYDD0&C)H#B(8h<Q$aT~eoOU=383dxq>s;iWWb-92
zWi5P9yw4#U4-NoY#4h8=rVhx=Ra;GKy5#h?&c+!!%bDCtW0CfnfY~m8TK|{e)?vPd
z={XS8H_x`fdF{FN-sJ&*Q#K~87~6LNNpGN5!wD|s|06AAO8TI5wzXl)yHqMudv`sX
zPDQE4_qCtpE?ZD3K>7=#g3}lonGpAHr19BJC_DWQR6eX5jVB4<S|osRI~cHK2S2mJ
zQFA2cZ*PU#YJ-{wWr_g%Az+GghOQZTvv>YP*qhe{A7KczSubYP_QVaf;akf2X-PBf
zbiuKdrrmiLV?Ui=r5Fm6|IHV_B?U05(S9%&3Ef8IN>czuIT1#=q9@iAsu@IP4x0~6
z9g3yB&8&K^jhNS9d2A>nO6yeRdX!M2!?cu<2B;_{dim+KX+tPXEa0Vx>@#E6Yvuj%
zJ=_b|Z!q5d$+2&8F3NBV`V=lsNRljr)vHBi`-|Fok?=vO;ypCQ&p3}pIp$qNzB(eZ
zi$(H9_@F)e@7D2|QQ4I@M8|t0@u;h_`agjc$TcL?NH%{c_1iW(hHh<H4l)IBz5`=!
zj1n6km#gJ+&Vn~z=pDQ7uzqgpTm<Xkjh=bk1PK29?NpvIu(#&Bg#yBf20L`xKZ(Wv
z8vf|{(u-$1C<A;HLwF^F@>PG2rCRDWi#iMD*+2;aohG;d7k0c-*zyLIvp&3de7tt%
z;A=xf&z`(`JOweu<3k(QvgNe(c%f!0)?$lcI|)%{#wJ24J8QUhW-=Hb$oyTt_`4{h
zaHyhHROq3x87W41)Ky4+Lr61un!-n|gE2jg8+i0nC`S>}Rq;i0Q-;U9B?_WaUs32)
z4D$FwpiEJ%3V*X!gylRvrOoS<C)4+rIvucD=hnK#n;B=uMgY^s4&`Q>D~$tt^Zq&!
zXo-@=S51zJe41V=+SF|2Zxzs|fC&3GsyUOSQ!Ii!ZV%`M+XXP4HNUQZqIBobh+yM1
zJv?~jG6sdvtU8qLZn?=BXO7mu5BTo@HriDCG{3poDKP!3Ci#gO&9aTV^oI9KJAfAR
z^5AERqRhEGqsm^s8oXC`ODn9KV%>(A1bk#KY5a;^tY!DDPiRz7iPPVtNw1x}l~0+P
zD>x4(v*Kr&h6b2=67(4q@#UwS?K8Nl*}~)g7nSIwSmS#!0TB1cUXVwF<Fgzk!3A7X
zqQ67;Ez}vDxUYD&y`9x@`Lf^Eo7YVtMZN;;7Ru+QW+=m(FG9Za0?MwrmDE6i!^h6K
zo|A6y$_)ifwj9xe*pK|iB4XA%CoG+DWbv|N7@(uAF3<~eH#kM`g@y`ksb*J`--c4?
z$HU~<&6j^)h_ZQj)w!yxRmqN*y;K;ChKFTEe=civGfT^;o`gyDOuV%1wcm_c`%r5*
zH8Q1~tI^X$&v(*_6MNIEvDK3=EC(SE;cEQek33o?gaT{ccBMp`miiLUS5|+HM-$?>
z5iMDqMOL4JzkQ%Ednvbk^1fT~3*;{5LMCBq<5f6Z-hJ;%M1>-T8McR>8(#Zu!J9)6
zPxBIIHYqcoJ1_XMex<C=P9yJfdigR`dFcP$&}UrYkLv)P9jQXHn39$|GgI(zg(o^t
z-(TgZuJ5M4(wg<KwQ0052?utn3;iu9iB}2uJT|)T`v|>W=2YK2&HVQBt(Q6cO&$15
z(f9e*tCJ=1%Hj>=**!jk0}g~ie+*H(0~>6zohWO(b~xwuT!7}S+S6cRP+P@6Yf5ag
zrw0)~s`gv2latQLa|Q1hTgxxWRypZZOtD~6LLU|BRC2<uej&MmvgS#K)q5;uG|8IM
z?+ji&G)@|=Ox~hlN-K4>vDtnk`^|Tk)AatqeSV6<{SLRO<!e1}g|5HLz!2ldxZC5b
z;A7}z6OKD?e#x41d-L~lz%j$_=&;08Mx4I)Rru{ef3)Vcr8a_JjECnGyq`HmA1Nv>
z)NnNCNUYdWn#8=Bl$>c1=gHScXcmCAJhQ*>4Vo=*#>$da!#w-fy7v!H^AJgn%9<J5
z)966A;C?I`1_}i<7R#Oc!!-TZ))rf{_-gl1?2;RR)o&9s6TZV^ACx~##i~NlFZjy=
zA{NXQ8><I$dN8oR-f<!Zy1se=d-AXf9LYX*%FoK{NIW>W1PGtRTy9>;$_O@4gwo2c
z0>?dp&kINgj7V0Of3x*E(g#u;ekf(L#OVer8gzr`Yk%vic*uVb!Eu_M9xa{UH+gjG
z%A)LQ;2K7P@}-z*Z8qMqS5Wj94u-!G8D>%V&!`G!ShMm!Z?T5g=kiT7e$1b2xG+@^
zFg%(-*CuJ~sxA7!6e~k5j~Zb+-LM5rv+<WPObh0Sq|6k#xtZ@5^Y{g6VeUcO<4(84
z<PE&Xo+>zX){Dz}%Qm`8dKHtbZ(q|9pP1R$y9LubJGRWc1ZV7$o!0)wEf)#gHosU`
zFUVlu<@*Tgq~BJt2^8I~u=9<IN$PItt5Z$u!|GOJAH7zFm)!E9G@Z2wo$_t{_7{D$
z7pNXw4=)pVguaAnMTQ}rW&%REZhh?NR_b6YIZ{qX|88s1(UYqC-cyy{P8hA4!bGP`
zG<uht&McX_p`qhBqb}91n=C-=oa|s?Ng-!un|aq*+nngyfS8%xotj_?d9u8+LQf$n
zfiQ}I1S2an));FPdT~=tzyFfYXp(U^=xr4A7(D)H!RvAn5kbKEeRPhbg%6WZIA}z=
zyjJ@kL|6(VxbPq|7||%+VN3N7^zkam1TNFkL~(uVED4GTiShcVsE!h;yMUF`r2rR@
zBJd}Wy`S$Gw^w14X9(8trqjj+gVNGY`n+-JL9R@O_I0>--H+;qmHZil-4H{(vLsOo
z9)}OkSAO^oXn}m?ayc*1lg?;maE0a?r+AF5z9U~Lqlqe}j+&D@L2sFht90G-tooOB
zW9N<&8ZTG&8GPr?kGs%nY^I=yfkD@biLNZ=&wC9M0q-B`LQ1JTIJV%E>x{&kVFKzk
zt$)L}m>Ct%<&gSVEfQ=)ui^Cc=ikufRAnMNjSeL&T830q)DTorR<+5dzI%SI2q^%D
zr#rNW7_1JN1?pUNS>#n{%~J9+&{I*DOYHrfBx9u-iQd2B2%B#^u{NlAnZjb^?Xo&a
zW8ZRf|F_im%2zcF=T0E)>3dLnzPS4SSclW@o$KV>l%eWXY}B<jpW4x747%E{;^N@6
z%e9St)qdZtWtLvU(g|NKP_*eRUocikz7z6p^}aJoH}E~AJbZO%ZDf6Lr-%t*`G#fd
z`|uJt-!4q!1@~gT9h#=FWQ7m;Az{G-!hH4-@cg!G7ObPr;(3(@JHqi<CM?{2AAEn#
z^fZx9c^o!o{8%tcU#9CIhX=9%{3W`3tL~=L+uIlWB1hmvZU?{Tu(BJs@42O)s`z8`
zw4%34V|;#Hk-;$(!Cde`UE}(rJ%9hzqo%p*z9q%2P1H08yx`WiTZIqLJwA<Jz{U#B
zPu9cMJ8%4KY(JW;OOre%HjmgV%j2I^CpA1@U*uF=YWKqoMsAksVI6!9<Ed1HoTBjI
zT(h~m!NkFiTL$_uiK)y!{xlI6zjQE(nmJ2Sn+A2KpRrx3;8jConO+%Q$RJK+$5O&z
zAct@l_@S0E71#lna#APeEcQ{j#J4u9@BI{B?a&qF{9}1A3*}FzcGi|&g_o|b-g#+r
zo6z+(5z+Fof9FHt@ZiEc78~^9u>R)f)E9dF<2#!1ZC>53b{qcRVhl%?cQ1$3+*M|4
zhn9Hd%i7l~+0~-6?6z>(m1z-9lH4B=f10b=13eEG-Q+WQWU~IPi(+K~(dE<urw&44
zY5ls9KIQphXc1>}%iFZaMUydEo}lyVFMr7a2j%7bb0bfo5Y<K>2H{al(Q?_VlVAON
zup%L<o%HSyHzx<>E<=xbcxGHLjwk*<7de<9i0ldwjQirzW}U~l9v**7^oIAH{6uqS
zO=H`Aep_x9iY;T|&bJ}76t1aOj@~q0w}zW+nN2vz57Vf~sMu|<L#t=?v8P5Xy{)%S
zPgZS$TPN0&)H<9<AFrBJkz)xl3m8WSnES@77v^(iP2i27)Y{eGPr(04vmLo%DxxKc
z8H66@&&$spemiupQxAebO4a!^BzI0ioIMH`GoucgKLjOjqq5_f+L6cZ|MruGpv+Az
zYH7_fzCHf5JJx+*`*t^1JQc!DGRn72r2+b?M-{7kB4#zRjO8o?%KYXITclz3CSMNr
zyJB7#9K?~`-A%HJuD&~J`5!U9g%Ez`GG-~K27sucOA?xwubTwL-D*!Rpg7Fj^~K|H
zXi$7y*MVl7A$&<1aY<XJe%}XiVl<Apbabp=SSRa!u?Psy&CxJ+4pwcow*LK^8|IPv
zHw<_%(JK6(;2bqUp7?*XSX2loCe0jXObk*e*H$=EMU&m|u7(B~`myxIjWFTyR^aWQ
zN26+Iuj_3{hMmz8i4(}k<B7ma3trhO>?^s1>btHeD_)|^<rlvC#_@*hb(0$&jNziL
z+Y&_N;*Y~82gUtU^mX-`Z2PPCu0QXI56)A`0{X+9#-)!Z9gnO+cc;d{DI*>@;@xfL
zyz%z2rv6FvdG(;=-)(McBwjEAG0o$(*H*rIZKq&4&)wVje38#Xf2rrzYDzFkFg=4d
zB_f4vo9X4Mn*aAZc+vnWWB5epMn()YG;&XeJW93^ht8J^D#-Iic7;!%`!Xc1nO%j{
zq2pPnR-AR~-WJ2qkdFewV9HNfQQEIxSq{)d(M9PY<Ahy=(YFx32B6AH)B56yvcdos
zxrT_IsC6dm7_~Z+pFH2T$GWGT=VbU~Xk3?tKK^x^{BdrYyqK7p%61Fu=rj!v_^J5m
z_<^idXC5`}Q2#r*<ry_)%6Y6y5J?5T-++orAua*avOxcesMo{!8+6di8D^WjvA2N_
z28(yb#y!k2N(*dIudu$Muv{D0^#+T(L%8u)Lv36V=JlQEb>#*j$pep7&Fels9g~H6
z`?%}}NR@pH9pBp@5*)r;JrGB<Tl09tXay0bc9w2O(^zv02in`04vFCy`5M+v<sSP>
zJgKbwvNdLlt&xRMXNTmBMSD<3ERP3cv30Vmz6hx(*w_rvgl=6|@QD4Rnx@gVBU6`1
zDjp?T)_!<L<2VzkJeP(&0R2nD;eZz+=%CYEep#d*h#m-M9RmDx<IN_|I+|`xWP{l5
z-8cz!lJGl7S`v#WMSe=k{Kbt8`o%>i^lVhd1{WQa@tgvt3l4>1!*m!}=>Nj252BK2
zY1fN|jWgqtJl}A9anQUmw2Q}#3|I1il8;OC+g*BL1tMXZy*l5rR5J;^l`-}eV!W&B
z@Ca~Q7aF!&t?5cACxu0y6N95Oj+f_0n(_kmL|cLf62aB|_)u*iOL<#YQtA2#D}=|8
zu+CeK*eqWyFw?N>JyZd@To>^qw4$Oy>(6xwM%W#k2@fT86Am-1MYA#Wj6u#h?#vQ`
z!)^G%cZ<LQNgk7f7{@^uG|S}TUmBu9E?Is93T~z)5rmfmFVNwT=WeA6vj6WJ>G%2B
zQM0hT&@h6NewNt4m~uRjFs}qmlCtwArwBrfi%5W>qo<3%<PBuAQYoYy9Hy0=)d-^D
z;`*_N;a^x*Cvj_!Z?eWAefBQg^qkgBQu|Zb2?|<pRS29q;$kT!oBckfUC3A*V-DVx
z17y0f;mqMlt_XSUa4Q8|xF=$W=6CgQ-;l-F76T-BHH$LXK#3*nXG~jVIaHt@`=PzQ
z*JNUS31Dx(*Gs#J%q`%O1^m3?(#cKK?N59gyUrJkqN(Mq;>Tsc%O$ZQkPk@*$ON`j
zIJ3<pF)~l#o5&i&0V2uu*B0AcZz8wnJG=83p4kYUI&N*fS86V8KhB{>1?^@@9`9aN
zcW=(0dEj1UEvXXYE4rWJ7I!w_2MJ~c6^|PzUDL_;-~1p!5*waX;+N0l&gScyl6pI}
zA*z~hIhOHuKBi;ZZ%Gy@u76wK77T3fuN`jgK5uwEB|iGB++W>2=kc&K8;1M%f%|ET
zQCgQL!&O<`oVSK?I^gA2#sx9Ei|8;?pe%N<9V~0$*QNdqIhppToPAYX0#43ew&sW5
z3%%c&p%KPT9&=jJDI%l$MqQa~X=$~_@qx-71}Rp6=1hxE4+OW`xRvFMvt6i*d5JiG
z|A#hnzsCz!CTt1|Zb_*HHrzGFz(q=ir8S9@Gx{BsKE|*?&o=JNgqoT{<;5g_M7yz{
z$#>ZfN~(cpeul!MxeZ3qbDhXYrsqF2cJEn*kmdjbaO~h9+E!8CEv~?+yiGJ1hk~iV
zXKQ?`VeAI`Qb>ZkRT4^x3#z~5<wL-7;gKy}K#N_$SNag1f}@MJ6FCCY*K_di2bu*R
zTBO~A5`ec-p^;Hn3F1?#sge3mfSwPCstQggC;OLc;y7o9vBSUfipkZwwq!pvnEbUj
z$9rY1SAKaL%=X-Tg?1xn;9sk_uO>o{4S?zY_ZA?4L6^h&T}_u^P>P`d?Wi-zq<|Jo
zIcL4I>aC@>C5-)Bm-V{t_R7fuJz>!EU)bRC*wu%mS2<=dSUC27=A)r_o%5(qOnod8
z{ID4P8yAMe8tkwBO~*D0+sD(95t?Xvqpn53K?ia?>eE&>2`Wbshxi?GzUPD*)-hPD
zzq{R}ekAx>#>v8h+czs^<9ip)-oW!cDy%dkml#O@4<@xmtpz3qP6gxFhwp!2D|&^a
zjf7dQ0;R?hej_bPx+EhKEze_&B4I5Ud5ao$rS8j{Y#FuU_Wa-0lQ|4QrJsu&Zbzny
z5r(A6_v&t+<taFLe<h`zc6Y1gKuwm7DpQE1eLbrLuY5=6kx%xqr~FlqRQFpx!Kpte
z5J(nyO&oSCY6y}|>7wCab^iigtE{XNo5I-po&Uc14k+%OJkvvfin{|dA`?LmcL-?d
zebUqvun)l7J@+x+iSIxkEIizCwrw?QQQiAl!5)#RwbLFh6h(u-yV6*%7+Jm3G_KH&
zuv);43joIr3M>awj~Phd3fg}+GVGRZ8a4nm*m5bfMb&DmR2dx&ax^|X>O|fm1xHuX
zGVWn+uv=M~>@4q)G@&$a0~p7mhH3Ahy*4*kmuf8N@B8fv^`^!Nr6Jm|%dKb<@dpd8
zx!(cUke1ql>;>u$3;QSyuXBKV3l{nV651qju}n#d$FP%~uTSk@>vWw^t|R<N+AhB0
zUxlKscG=RmX9BbT<ua-?ZcZ*~)f@6Va_`3bRwh8@zyw8o(n_K+?khue{;+rnuR6PG
zW+jFi!D&O2sM$OU-dRj}b#&s$2&#-sz4UQaQenMo`ZF{N_?*OdvBsYP6R!Q7NJ6B=
zDSw~}bIhg6Fy^FBVpc&TE-dsqvSB{~GU!4A?!&8^-#D&ob6*uHhp?O@BEiH=aKMWr
z#vqfj9N5Cjpfj7Pd&CBJ(!(v3SXpWpVn{V~s5h6(Cua@s+X-a?_Yq;=eIe)L-+d*Z
z`^^wJ{Dmtjt(BcUzDN3)bw{w{o?PSRgt}gp&#jT+)pXf!h*VWsCR)_@QMspJB%v8*
z%BZ4vs?i?EZNxOqO<!S4^v_OT^_^FreyDkS_kP6`_|qtqsc=l!MFX^PIh6<50Nm!f
z>ko}Q_?(5t;=8$5HU{?W0{q@#wc5+nd+meG4(HyyvEoNwzsUN!k$j<+0vhIAm%sqk
zdVEgxac8h2{A{TQ@qSMlWXwz$FLkfYCOo<zf^CV4@rY~!2LG129fj|Q@(&T}i_H9G
zH7Yl|`IUo@h>Q440$o`tlB7+31em;d1}0aDa5z{j-<YaohCudvWQJhu&->%<RH^e;
z5H0<<+entEd9~*6fE%|KCO~`+@P$}KJERWYI=T6i)mQwQBK?00sWSvJ?#mCkA8%S-
zSxW2X$P2~gmLXnJUwHZY7hi}feUWDX`o3GD&=np6`<zZis#@H#GIpt!4|g#9J>N~s
zi~uvPh%G}2TJ!wTeDQtYeI&<*HRm~&m{zn00IF)EGmTlgpCH>LHov^`mmi)w%-xA0
z-i<`MTl{!rMfK?Mp@uTr7d;%SrYymH?MOzxgNz9M`QNrmgJ|AcpWTB8_`loS9D=}$
zOTtbcBjbwG1~b$Pw=ON3A5-$0xn+RUhhBAF=^PxK<2ea1sXTl-7Tb<NWcAajpE){y
zwvxEmakk@iCIw&|!4B~r1o>DZrj|%f6<mPrIlMgu(El7N@m*$y<uSy&yS>aCfq9ey
ze+`GWW`Wd4kj?ExqleUYQ5F6VtU-oCdLD)248^Zn_#Ubk&(}#*S5jna{*5}`G(BPS
zsxb^sP+J`J8>L`6Lh#{JbY<lB27m&v57Jy%^gNmvGo0~{b`3%!YN}{Y5!qcTjE^S4
z$?%NQAGucTc^#~RGHU!sHVmq||2;Mt3~|7zoUe*I(=PRyHo}+K8u|+`1C6@_HTAiX
z3a%@|X6a&HT#?Rx1Lh#z<o|s00gwN89D%QaA4<ea#F{*#Pt&9wtI*Y@aBW4JTQQ%k
z&#EgJh>%}PD2;6qTd2o7GzUS?h4mZj)=H1_+D}*US^P3j94RpvB}TSbWc5uiCU*rF
zRpOGOc{gUD9mAee+mSEqrcGG#oQ))*>ir&#xl0}Q*s$*_-tOfi)Fl4Ce^`aplGcK#
zEf(6|bU_L0lLIKel%yqB<LAWYL#<U+i*shn3qB;b08&KQ|Dr7nQc)tKSX3nQmKY%0
z!&PY&qeimS%usqvtzuzUzTpx+Vo^Lyn@_|Hsj8z~(zOziy?G<4V*tnU!`0((@EaY^
z3ZtrN(5RC^R~!FiJ|#AEaK{Io+G!3w^@<dtxs%4DjCV75hxGUbgE8riyE9OhX*j?^
zJy8!d+UW~quVGkcoC1u8$mcv+X=ChXy3evM1x_d^824eW`kT&Vq+~YC_%8`g5D#~L
zxioy$1>!A#{#KIn=F7y{-rPU4AzCKZ4+g^@qG=3yqN07bu>5`jLBYdemp|U_#Q0s0
z`_08ISD#m|=lA!`!;Ss+O8qwOEkr?4=g4wz=f#4cx6|UFOXOsWhWg>!H};Nvz|gG4
zg{wI*Xx<4%YS=ltxSNSKYxe{Um5O)&t`q-$TDH5~U5i#C(g>cPUgz)MAljd^;PF^K
zeV9)t`Pj@1lJf3b0CWiADHYcy_ojCXRt1f=BvJS;_)L<u0pL^n>{v>;hf5g<lR1sl
z<6qs7p2SnO=HB*{PK@ETl2C!lQ!R)G&qud~q|}PlhQj(p^B8!qr3eq=vxpPEVZOpN
z@^JK93Y~7q&|>U!ZpbbuBFIC!?v0$4ae{qh7}OHNnMH%w?e2m<9HE!~hbV+=-4YHo
z)EY<5qOB4d5Htwd2v@28@&8hNAt~{7nftFOq0x<hvJOm7*U@$Mu!EzM?$gC#da^E+
zzk-F{?1yl+cn~V@Uc_kAsC!hsV<y7y2_3`>eRb0tn|Qt&2&_sCGWplk&A#zjx&2Z=
z0eWk{b$nU9Td>2e`ru@I;@H|dYv9X_D&A%7=mfa)Y&XtZ+&6o<-8rK)5AV0P&mYeJ
zbtJsBiM}Q_Rm$IQe{+=u6S<v>7Ehlm=WjNNm_Hik|6bTR;%5Kx{`ig3d~ETwe2w4r
zc@%FeP<V&AoHh0NJ2-d#^!C)o-9zb`PpJRG;-bchFUZRKb#?w$CwP6EQ~s$XB0p1*
z=mR|TUkY8GzWko<Ckhe-6*mJp8Tk=kSHW+1P08C`HvhvB<aPd@QiWx?aO00t_%e1{
zQl-=lENPpccYW@hfi=kaZ^nF=$e|kqGODFl)DpPIRijDN;LLEC!xB;*@&wLIQNDAe
zSR#E#jM<$t7WFP8AD4%%_?k{GP-V)hpGAw{418<;$ZTx(e!IQO3ff+Cm7BJ8*L2^0
zba`}s;<z%r+I=s&!>ktcP8>;^(s6Uf{ciwC3HZPCzXS-rSl~VuM-^vh^<CIr?smPp
z`)%rJKMCA72jyq4b+apFssmG(KCciMZT>cPds%8e+Pt|-?Pl$rad^0WTlRXjh&Fqg
zx8=L74?cJP_=OTAs82Ng=@`6A*A<nYtxov+Oxq!uNN=aRoLz!4YRCNVOiNFn5APk8
z=B1(RJQCtfhRl^Ob!mAZ%rD{+!9$*xd#SlaHIF+0?#VFj&WI}T{WKaz9w^yK*VgOP
zE6feZdB#@M{;=K4YYN~~T|gP%iljc*khwJLdRHj?qjPI=yx}=m#*#Q=_gp|>XW-1Y
zaW(AR-u<yjJWU|)o-x(oK3*({yEW%>_XIPp3K~agzu}qQjbc{<xUEN<?Dc9+ag)*J
zAKuqD%NgDNA87dxxBzf@@BqST6qxAL{K}g+57he-)}fp_-7!S2u6vFFV{xu`R2!hC
z4V=kc)@j&{>xaL8Kx3O5l&LMq275EVOsMAdhrhK=c$7~0lM_sB8nu53pji+3WtC%H
z@tr#zm^8)X@9XOW$+-X$T+@$t$k`iA(|~GpECO{I800)E&vScPeDp-kt9r(J=2w)d
zNA1NOw!wmMmx7~A3<ZJj9+mGqaNHsCTC^rCon<L3L`%Vg{H66v&(+n{$@N!ng(JP5
zw>=8YBLmg<talPJIC#v0!hf(5r1cDIIhGb=8F<9Q;dx8ftETCvb>_ut9KipQqrnJ5
ziW>ohH=CM~!<in)c`k8K??XmGTKVrE;2K7KAJ6!Nu$hC@?KCC4sh1x>tgsB~gKa5N
zfK{JV%vx(OFl#DQ)0w`}?-UagGoG#ZI~T%_Hy^)`wKFxfa-q`!k(MU$X<NICMqWQ1
zd%xf~Z}Z{%9oT1pP#hR6r|eh}0O#J-(9XZ=Bzr4Co)w`X<`C{tXA<3Ud*!Cp#Y7Te
z*eb1DDUCFB^Xxt0SnNfkp{<FM5CDkHWv%<=7{(~%)B)nLi7Nop=>^QAJ`Y60N-KMX
zr;T=mKMix!M0u`W@C9fKkJ&H$30pkpSLPVUxjU$Io^0YmW&rX}D=Vzz7eeNdQ)Z)$
z?OmlJb?j2(ai_=91^uPW84oCUt1q|D>|gLkXLi18b=t&t)c*ydBfIZcR-~M!e~LRq
z_mZp5`?XRr(yLdcc-9&Z7Vq`FQg^daB7^1{4UPu(&t~u>Gj&TLokJGYoBIq>y!n#&
zn&!W=1gE{KqdOC-Oh^&Hh9z>8nl+Vrn09gOb~W#WY&<nPA52$UquKTG$+e7xh@Z?-
z^HPn3bgto7R_ocSMkjDDj@@OG#2f=xS#EDFUC)agjAt+YqWgVSY&OzQoIbDu08m+P
z*2Ws+bU@U_h>D2>%(@jE5P%KXi2V*UKLjUB%dx|&r%xZ~^cIUBrzlqWywF8u(9Pr<
zok+e5_HX6(Lnm73@o`j>kw_nNn!R5m5Ap(&y+7MJTHgd?Lnu>j#5W_(NpN?J@vuV`
z-cgLThv?!mGXf_oB)i%4Hzi=gQ@{-&@_auk-a)gu*8N|r&L92bP8rFevvi2GS}G`w
zkv4+x2rSO<LThyz*c(rIBe}A8X;%rBnpNcrvdJI*b%j)9SQEJ7B^=44eN9p>j+lz~
zEBj!<n}1tX(YZYFmB|BVWpkY?cyTWiCr7Z*l#k`_@gy+F1fzu2gPRWHWd|ENS#kef
zws>zV<)&k9zF)w%t<7Ud@BddVfnjd|uP9|79zAkN6YcWW`?BkeZ>*owo&W|uoqykc
zK~fpFqVyUs3Lef1uEF|lhMb37%mK#_?MvJhsw>bbXrC#L`$Do%#?7T-q1FZ;=NWvJ
zNILzOH=cG1DOp>eDVmOi&pDI7mfs4_$To%73{<h$yxowXiP-ehzW;Mv_tLUGt|wpN
zA;`cbhx@5YX}(8jp+NF22mvN|&Q~J%zL47<@|u<yF6V69MfqCY>>AV5W3*TmqEq}z
zR>=Cn!T)q}n<?$pF*@A7p$I7{2o0kUMn2_2lLgJaNqT5R^JNQ~!8Tbbe8X$;=hrV+
zoAGW?Ht+wzHjjRYVu%NVn+*6P!-)sAL@X6vhqRH7R=@SsN(Jt`vGswxkB9jvb^Q;4
zLPKr7x7!`$X;ngo#oF$!0bcC4XKr^dqR#dHuY;;xe}F{#z)Rls{nd}l>xlk4_T88t
zRok??48X!vEtfSkQ>B^i?a~)ABqx>36#7ItmZq}PC>om<N?C!xRpq^}*!`C$3w9eH
zm$uJU`>XSo-j~JW`@|Y=>xOQ(^SgW#L{Z4iKqt_vt9x^B>#$)8GjRJ<;IRDtW*9QB
zu0;B$z6;h}2$taYf0E*`E|Abzc10i>gB;x>Id;7lsj<U%IQ^l5P5RU4Lu5P#wg*Rx
z$Oz>*Y|d8h(^)4`;-P$Q)*NcV_t3z#!3qgkw$%13Pdq2tjQ5*dXXA+-%vP6AO!*-5
z>L}bDVtVfS%lr!W5=n5Mqh~bGmsIhIaA3i4M+wE8^Pfvk;N!BAJLZ2A_Lr)%nCFkC
z#}ieQJN}2Y()w(>;D%1uBM%rnIAv|kt@S%)sBcQrK<}2EqLM}s^j#!_&M&G2L2loy
zSSpL3v)(TN_wCJK4Ej-(eOc%foxguu+J8R}ZoK`D-oM-gpKBicAf?ay{a%4Z#gBZO
zwf4BI+lxhxYgp*6pZ`5NiKNFtVWLV`vpAb7VO%z^tnm=}g}QLTb_kJD*vqNBQo{`@
zt+$<~TI1-5%pAnt$;=rRdMXi<+~+kDukF}(ytp(U&QTSb%SmzvJmcoxqk_HF$_^~5
z<@7;-D;~Ivb;N-VD;gwW_h=6v%~DVbi?uGGlj_Q5R9t>BF16_{FD|!f3LS!KhYFfN
zx_CTQD!gmk%&Dl!p+0v$9{aHQ9oK+aj43%JH`6fBG$e=iq!<50Lx?z0cSZzkny>k*
z!fV<_+0d7#Xc+kJa0shrHVJxyg}N`mBETT$-cBOjZe>><QtHDKY1v|wvRPO>Fa+4D
z7zkgRo*&C7pMGk}%nN_iE-F^BWoLN)NUa!t5N7?+$-%q>Kvk$j#!a(~Cw!|7&}*d;
z#1vYuQKhVw{aK);O+AscRKi0T<tU@}u89g=1_#K&1NadON`&RvHcNPvykD;q6m;O{
z(X?!B!61Q+jCUzA*?uOd#>I)gsk|vKZojks4><fEe8647%_&l{)`j+Zn41|+X0(!D
zUi3v?fA{@?eL$x`d1;g7>+4&l4a!y1isFy>uvuKrU&~dO;s@z5P1}t0Di|565JDC)
zc+!?Q5pFGJXc_DbC*%nt#z0ck6B4m7rS?;`{>;2!D2wCdM;=?9mwJjkBWpuV6~b1K
z8(1s%`}+TfGGJ^)4|~>Y`*E1~Pg>2|U!F)%b4tkCEqex7_RidAHgJP>yY2iQJ+Q~N
z{e45s6y@AfP=OC<2w}~Ec3DqFr%VXuEJL{=MwlHT>>gB?m0KAfHj(4uFVVZ!fTtrt
zdGqpTOSKX11&Ylt`HR<v0#liVECu_57Damm<Zz#tx|W=+N|@-cb<#t4h=`boC6O>c
zf^g9O-;R|50M!Mzq^dIcoB2l!TE1#}PbO{A2fU#(SCs26?`CW9RDAt$RvCOAKpQET
zogqY2Ec;`2*npg(?-01%E#?Blkio^g<5wDVLUSDZGACG9h(^?qBTJZCIY*dokomBu
zu(5gS<VD{CIj@CikQS=Yz^7y#&!Mi?4&nIc_4HR4bysgs&oD%_ow<*tC_4*r5qtkw
zpZ|;1|B7)`Qe4t`45;(4H1N8q<!S8xYsp)+Y94zZ@g3}oj`-BjE`iMdE<NE~#7zBr
z7#BV$fs_*)-&^n?f5tlJ|MLP^GubckqUBUTAD}7J3uC8IGX!-HK&;2C(@(abRKPiE
zzELU4=OV$r`}iI_YmUmwBm}IOf0?{cdVws34FKa{aFDPHpQ-)hLrA*6Nm6jSoqcPp
zv#}8~i+7LQUc7brVh#mvi!`-<z95w##F&jH3*z)!t=7(VZ%60Dzf~EIj$1i{VjGHG
z@e%LY5gBy_mf_o9wbE1f{%cBs+freWS31GLaB_~0<pD3VJcdeTc=V8A)mQ>DdlrqN
z`eo~>EnPkJ!>1`Pb;DfOAB50cRmCV)KXI#s#Jfh@qyVV+mZ#@W@V3wk|0^58Eu?8y
zVbh|*z_}P9mN2C+Co)I9#ZW2IdaMR1EY&5fkb=IxZEM)8o#lF~)-rM^iT5H=zt0t(
z#CehA|LfCK8Tqugf<Pm2eM|Jr^tB6~H!-xIzVpS3mDN}O3j53$|NKGrXZx8Ycp4Xj
z;`A84p4+GC{i*4k6nu~WH#VpNOIjoF$@ZOa=1aAxIWYJ5``+iZ<N8eiwE~OzMm@@G
zH7wAZ?<l!!P4|b+8%7g9V-!o2KlwfD^4Ep^JlkJ&ByMNvsnX7vr}SvVp(JlSZ>4r0
z7|@BFoPa-@^Yw;1`>>nZv#Gf)N=)?R<fIX4w(l>KgE@X6d7fCi-rc>m5EQ}M-T9Vy
zOy~k-9*DBCw8Kzff{d<0ImpSgA^gQs0yh~3-0?(&edUL3DJd`#INlB5`>GRl!APhl
z6p-k%y|_jjN`jK^uvrSVL7!z3IC_M7FwHrV-hZm0HY6%9pDEZWlGhLrR17HQjn(MX
zp{D!=NA{1cr)qBiE;;m7V@E5rT>G2(2tCZ19FN!}+cGOM^DSlWd8nr8YZQpEh7dvg
zxb61;0i!@%zw0Re$sC@6wkZdms$ICs!gnR`hueIt{)2BCLSSF@hvRr?LS9z8he$YJ
zTeoa_ht4upqgxzBnK*u|UgSN#4&gZ9_^NI}?+*!8h9&HMirR8y{>hlBeur<4%@X8L
z3%`Sn7!61lk202VoWd^%ebd+cbvf)$=E?EEjSAeFWLytpfYLeAQ@aZaWZZ-IOVj>+
zn5Z!0!T+Rn=;Ok^otY*3?)-@iOCO}H7<R?*iobB^H|C2APGu8zO!P=cT{B=+CJfJf
zw7I_~GJjP(P~hl^H4!iI_#FWL+9MhQrQBUD2j&EcjE2P_^t_M|)}Bs3tuOP}V8CFY
ze_}upnkaf6cU!@jjK!k29Slb<nH3sr!US-6e4--eUMfGTh(nSD-60ENF@IFxF2h?>
z(&en=G<hI*pL|qZB~i$)+5=<~gY_Up4sbCJb%+CH@@0MEEXCViNVxxg=t!(>!Sc-m
zdnF3#NmS~kF9z?b{vcXU!9=$c_0Q*Bi%2&=Dn`CHWQ43NIV=ws708$35+pG!O#V?;
zijB(FE-_$a2FqKTq#PDEgMjl^PO`>%#6S{!3)nZ&He=B?+kx}EW>@Q@zbs2kky<b=
zuU3@#+%G(4<noM0->d?>1(8vz-TzZkB)>m=NTQLyH;EF*P#*gx#!f8ak!knEQQ}3W
z>z3qnIXy91zK_0{(@-zr=nrJ}NTWrm`dW<HXu#fuzNz{u!cIdO9~e1JUd%rr4;?9z
zOX8Cx9R2C<=$q_OT^XaS3;VTZ>U?25k>sRtP1r1IK^u?;azJ(6A6J!V=4;Eoz0$P(
z3mHFTxD?c5i--)lYRQuZy{?Kv0*twOcv6yV_+W(;-*}T^z7#Xs!CcvlzDvjc?{7wp
zW24)SgPP4cFFr&v!ca_<w-EE&$2I6w{DlTd3?fx_W%PEtbb$?kD4{XSQiupk8}Jno
zOmy|Q+Du<!g>#Mi^<^PU-Ub5(1AfH-B{#}p!FqJ)2swXHmJAM$kbSk)@?KG)+*5E+
za&cbbk?~W+iN)~a)gQ<q5W<;w$8sUTnEp5)g6zb1t3+dA<l+aGLXO~@VJR-+p;&!c
zbEi_{17R^HIz|?x4U%Vy@*xJR08<nKX31KQS`eSR!CZr?G5O4QhRc%F40)xzR5pM>
zr6UPW)iA3ZR($T(b8VxfjH-r__%6r$w1gzd2C*u+`<0|23}Gap!jMlH^0+T6TfUT@
zA!ER79R?x&9tiHca&}81n7z|c#={LDhe722a@1Iv91|zO8`j8ED9a#(BMVjkP?Via
z9i<;+=%`9Y+=LJj@Pi#<DZ{e{39gKelc|x>^5D^82?jw|q+&3haT){3z}FEl!FPg5
zUj~A70xnK1LEEe@DVE33j;}+~^US2_a-_aaUS0dK3;|vnfOGbaV7!wsCjQwUBJg9M
zqVHk+rAxzm9p2eL=x{lY#36kZ`dc~}Z1&B(I<#nO0s3~RV&r*;5c>@!wMX#IaS#rs
z>(2Bn*^9V;sVtX7gq6ZS74SL6tXv_zQg0Svn1VQDzV-vgsHkW)_TD;NC{NVZNE}qH
zDCMF`Wf|iA4s|~}Ekni2M;`BBY<>;(Peb3E1Ey_zX)$7oJUn)i48{2U`)40X5aEDX
zBco3#9{VOYHdt5Ee;k7>JNu>@YY1oGWWLjJN77ZPgXEoxa(TP1ri~dy^geMUr2E>n
zps(@HsHfk2U2go(+cGCMR^Gnj#}X42h4F9AJ>4y%1MMZieJ%QYSv25=pQO?+jHe)s
z>6&`X@R%n<xe3^g<7j3dsi~`zpFaP0DM8=AVEhERZ2swfm6mmz`QoBfkJ83Cg5-gj
z(J~<+M94!lVMb|eY?19pn&jrqHL|y=6$=mQj#^b9oC_2yhzBMY?8xAki!@1ihT~U=
z_d%FxxYNj88%l)mzs)%jClx<VIP^aRK!i(2)Mg+p^ROlcE@ps<Z)m$IxMX-ZsWMN7
z*&Xv`I49W>#4p7US*fz7;e`_*r>DVqXZ;y|7(c3guuROe2;a=#?ikMW3}+bQB;dOg
z8T~jrOwP;*lOJuYk<CCLaR8JlXD<))DR=oZ?-UfK7~kB{i$fYp8HoqHs`4rT=8wUE
z!GOU)4`YC;Z%0Yog6aC^uu+mzQ!UTr=E#ir1i3zYq<ji#)L)AW<?+2c#Yut^k{Y^v
zN+Oiw#D<v*VRRMTq2W8cBS1(nw3rekIDT^;E(Z})u4Za5YIwJHk}WtS{3sE#oCR|T
zcJiwm8e}Xa95;`dAn$GdT&h9f3Yf7hM6{#;u5#czT;&785@jh+uvnfJsYRJdKxs$l
z$@m?D-ygC^%gsZv+l<Bg?|C^g8VuN%vxdt0qb0JczE+yS95pd5U_WyJQaYSL*n|b1
zlEG5=Q}WU_gM)C$gnxc(vs5a4F(+5~@Tw$hAfOjzkCID}#~o`v#KK!E31Lokb_bD-
z0|sKyuZ{q(lfj_>aLh#2|6amoKr)Eai_$Zt6z%!?-tF?IJ=>*%{Skd<FMc>MgVe;i
z%eney8T+QoKOXH^hOZ*VMR){=YK9&~TOM^$E!cBVeY07mBV7R%T;`)dTkul=rx<Cf
zLWAX|Q^w2d1$pupNT5pDH_;FBR9TMo%~ZrcjC{!C9oDe$EW?kR7P{0-K{duaNS~LF
zo+uY(K=le^^KW3drb6=i74+4Y%1WfxwFyDyiuHeX|87a(<+5N<<4`Bor_8Ny#-eX>
zoVJY(-8YfvFpRbRNShHGkFhpUc5mM-t=M3w14F0iM#SlDXU!2{4_U_maJ3aUUAO)-
zS)Dl)WjZ#Wbfsuy<k@blBN@B4`3c{W0tzu1GZf#o(;Y;AdwbeZ<(|eK#`N}ZhS|Tp
z!Eevs6AVv&8pd&9$ecJqKWsfxB0>8P;G6#$sU62O7%!ZsA9`)M$lh%->DD_%z<eoq
zt~sC`2tEaMoB84b$hz>nR|cduRKa+BYmE$!43^W<9kO_+Q$9=%m09mqN`6JNVl;5V
zSmGewArnF7N=bb%4@HCHC?V&D{*eR;T0S_XeB4RJRW=4DKC6gJ#OLly4c4bz#$`Ai
z(#8WOnHqZKlFOog2_9vPM+X=g;Cu>dTOpZ)AJih9<Z|$zQ!JSxE}(@v9R7lGq=B&{
zqr^HEk<)~WLSFmpQBd|}gbxNcm<yN{u5hM{hredPQjoT|5#cNgK_GoH(r`z!6h<h<
zr8?xyY^SXG3@7EP0TlSdf2axA%7eJ9XEM@~DP;C}b$CHu1<1RAun``Ea13eV3<eAa
zdI<wu%rW}ZS~IZEFS3@NT_onXqae=C!tOaY%x>PfMY#Je(XnzhexFoAfeHj;9u~D)
z5E>0ol{*hRk@LWu<%2Psn~<zjZ(hPq{D)vDelut==KXN_2$G54fd~afAwSI+EHxnL
z9y|iF6Zzc?CTbX%mmeJ5r@px^;y)ZVu%K4<4ZxfZDODtP|2IL+@u!FKWd<ZoS3(LA
zf;PJi@Gb&z_}7A5Sq0+rdZ<L6gI#(jh{{in9+CfHz9cxYfZqeAater5N-t8u+>k}m
zx$y}1A;eo46)WEaF}t&>QpSL>6EIs;ZM+Qie+l)!I0hH9+R_yP54EVzMiO2qPc7p9
z24xzDG8G}87lDhnsw?C=)MFCLy&39oi;`0%4DtR`d`KQEJt9}6q{(dHFdUFy2Gg61
zyl(|#5dmaSa%P;h$yo{J<?7f3i9#RzbIu<5=8jF^;-h70+(9{vopHA1LG;aPGBRLP
zmc}K@Li8Qtd|?vgPUwICLjT!^_PP~q6b{B@HTvO0P$5l3U;A#>U~Dp1%99n8Qw7O?
zqaTqT`gLKR+9<I4rqw$~qWzYl?@j`IC(>>N^K;kX0?-l;c|2nXXq+IKjy~`tn3j)<
zi{vk0TD}35+OzR%0f<#cisd0lsCc%L4FApO6I8jaLmlG)TM>z_hG!Yb1YL<fbUqlb
z?WoVV&1<<kuKMQX=vQyS?-DSkmO}=BSpZyA1p^m=c@*X07<f2ssEk7VJV>*jf!gdR
zVB)4>{9Okr@<zazj<5_!-oC&)$J%&oJbV+(Z7BNoHNeMANQ<8ZK2~C^aRbJZIlHn|
zk0A77`#(Lx>~XsG9_9#@uU>qHVoD;MU@GA{J6E#}gF!d)=?_OHNq{5RuxDwy1yZTS
zp<oIoAcaHP%DD@29}6zp;5g>N`&90|937=`4|o6e4%vH%Cm5dmGz5mRuAH~|q(fh}
z(9m8&E2{oWti@qoEziuBFyhkBuG`F)t_qm}zVEJVmfN>r%IC@i=<m;umW6|z^60p5
zxoCTxJU%Q;Ru(qO--??h3*mW)cYTIKra)!!)}8h8-&qbxj|!0=<u%B|qn%h(pqE_L
zBG>J~Fa>iFhrU`4M#Bj`#s?91N*s1x@cn-|4e~mqY#bQF0Qc50;j;Wt6LtWD<iCc5
z$q_I<5ALg%HD%3m*C|d}loBet!Q@;|xL{xaMj)t@B4GTd2tNnmJj3>EKFV6qDCuCN
z4gtoGhKH%MO7|RYlD|z1R}AN?hZ^PKeGPJMTBzJIG)$dyd*WcDJP-e9q$7h_fVAhP
zIpn{GI27agW^t3;yT1YIG$OYlzsV2_He-A2sqx{ckH||0>g5BJuLkw`8NwI4%Jb-f
zMtSWpCQY1|S`Zs77Xo*`Mj3BM_#)*0C@%l|E6Ro-pLNAi1mg?_3<kP^f%n#Imdff{
zNsNn@1v4ge15yAd)swxKB2p!b=T!E<!q!=M{l(znkT$f)=ODzM1EH7#B9m0h_rM@f
zy7M#`i#f4z@`Dj$)W%mi7RUq;#*1-gr3T?V3l#x)7ehs=dDB|?Ul6D_L!FVt;Dd)i
zsKRK)<zS-D08#e??BeTnmMVZGo__@i)Q#CA<N%l$>_^Fkh!+p0YDG<zOixO|o>h=y
za?-*h<r_FB_G5(KHEuHI-$o@lSOT@dls!A-4!~YMa;#j0a^!(Xp9O+B6@>Q=FpS)g
z<3<;zc`Se}vJlK0UtiA4!Mai-(;&4t035tj3E2oFSDFxF91;Xy&m1bFL1h1<>=SHE
zHp}}UwilvoyFlE23FSEld1gTcZZVj?t06tC1gtvXCItlc`3T>>?o*ithGGn0kYJt#
z#y5$?H}WU*S*uoMW_EHr#e{;;-3n%y>ZKO}ck7{=`WP7dm%+fMfw5rUyc_L&1X9R9
z<mUkA@k)YQgLbV!+a)8;d1P?V(a6kG8pJkQwPCfaLZ827_-OeI{rt(TV7?%!yc*1U
zI+%@LgMklnbxw9ow)<^EhN-sSk3K^6*o(OtfWV(3{d~ZT1nfazY8E;N$wrj#n_zAp
zg}QDLm?$U4#AQ%ROx?9jeuzznpMu%Hd(=2cMw_w0+aSXsSz<p?4*4n7TQHPg2J?kl
z%6$j-E5>WQ!zl+)w->P~!NH@?8-=ov=wshO8ApPdx)02f;5^dC@zZ27aI#1B&2%{f
zxHx6~Dw*hvkZ)s5*Q2k|;0+DQEJ44G0L+)FD`hs~ajcDonr9Nq_6nFX=Et*^cIHcs
z3E(XR=^dbN93k922fE;=%ceZK_=il%pk&Gkk2#g+vCnqjIQ`XPW4^Ki8%JugYd5;@
zfov<?UcRR~E@mUrZ``{_%B!jrLm7d&bM5Y3im|I?->br=KKhM1?_qHv$E6=wAE+<Z
z5nRZo#<b#;*{9inopj|G2ZFKF6OvMn#cny>c~Mp69B5xkVzLpC1BT;_4K-2+b-MA%
z4jCWQC|?^NDWj9X(0qU;i}M2#err;sOaSw7>()BC0F2UE!@}j86C=QFQj#Vz7tuy0
zgvx0jRY^ISs4-5td3v<MB`bjJWPWzI+_16&JB3X$Av#2^pBN=KjKdBJ$`g)(%y<(a
zi7SU>YBHE0ioNIImkzG$yj9f_in5fWEFaB_meU4>sR^2OTQn*{7D1ACJsC<cMVAbB
z%Cz(_`5qWS2QsGa_e@Cl&KuGo(^A7E7Ji&ECS^IL?4wFqQG(qgh~j<&=JS>*QL3zz
z%*`H#{8Q`YyfxKw-Ixd&Pn}G-rFf^{>+`|}FkeCP@oCXAFEdQ3c9MWNb3}yvXmzDL
zw5LHPXNStS0dv`?W=V>KJ~qN%1H(ztUj*u`)i4!c^T%MoV4%k^@Wt+fa^Ub$89O9R
zF<)HoINuL6$K8K#j@JFS=-p9pP-cKxn1$W=)%dLef%_1M#D7+R$O{HT0OqMqsnCHx
z0kKB+F{C)B@7N;$z<HEqV6gJbt7OQ!Rq{(n9DW29tZ|T#3Dou)uo#9gt->wN;Bawt
zbJ#OOJ|VIe(t<C(sF2@+pcP1}s%FfSd5{u)d);37XU<;v3W(*~c5jpCDcuSUlk33T
zlz>r7U;B}QxOvJPrIL0K#3mW9)ukmecl$<(0CTf`{8Sht2x&XVtjI*ve{5u=QqS7x
zQX@PFzj8oRs)N)$b91bJJ@8QqhVOyYbj5i63Tl}@-oI16m6j#{J8_!)5X380$>^5n
zACRx0?7ts8RK5*W!zEz4Zil+u0z6N_E^QX2ZIDL9pdENt%s2}JJiC_)X7p)DGryF7
zP%g_HB7d4NO@07L)nj=%@*7HM;cCzp?4Rsl^)7;VMPa@y-M3So0)ufanB_HKhURSB
zD351lt3GoT817Y&YBr!Pn`~{&??zYu)-AyyLLzt-q-9&spC7?fz~GclnkiR<q5A28
zy>i#iFXWl2vms?Gkgp+MTBoX-d%BXqP2Thw=q8*GpR-Vwg1P%4&NqG^<vI**;LBUq
z$va?nmX97UXQIFAJQdZ6{t$^VK=*W2IV>2`*hq`o^hiTkk*k~xr`(CI7JfDCcfiN5
zP**Zu_hG!;xqp}3iN5zU<Z~Ao#rMd(!EGr!D$Af+I0cfge@>bq3&8As59b`8-M34=
zJ$jtngXjN2T815R#ay}@98ne;or$uiBu_$jZ;*Y(2W4<Vy3Ea<WD&m@^W9~_RL$_G
zD|0h9_7|NKEp=eP;&Hqt5S%_cwr2AtnSaM^u-XRZQZsWAkrEGSCZ+2FwL2;1R{u%j
zIM4=X;T%v(z*gA%O4`LD>&~5nHE{&D1IwZJT-_|O(4lL=b3LRs^T7n22N6~t7^zEQ
zLu5J_kB{@Ql>o*l82yBWss?j&+b5N>?86GFX=sr#P|FLV*b5o#1b4FWP=oyV(@JqZ
zUn+mtT&*NbOTieC@!+rs#sn3G{NLJBC*$8Km(PkCWK4Xhj6q(%{k%%90Ng_`268r}
za!aCMY883^acsC^yfz_j*lT5S4Vbyox)!+x4C6OYX4=gUa+R;Js!5i-TOq&Of&-)|
z)?zSQEYtWE<+1`&t2B7tJQ$)%NbSypRO*`(Bc%>{g7XpXe6du;JsWC<XD5fq<WH*P
zGf3^|zV&gXOh%lijx@_3#yJ(^_0B<9EPAO_&iGF`&Kk7HtzcG3d~l3$I?aHj@cC^u
zG6?COfW(m7ygVCboWX#>K<{86GCWM;qrye2vslbQ@8sQUxqxC>yMMFS>?l#-?tL_N
z-)Ddj{5gooZ6M4}g(T<MDKq63s98}W#W)u61JytfVl;s93=C2TBvKo2{))Tde}hyE
zhp}Y6i?E|5Fyd4ZUshsO4lPNt7pj?y1mOM&R@%6w^#KeAY@0Y8s^T!c4W^8lw}P<b
z6v;DU+}XSsQigaCr!|;V-yAVk-h>1s5z-AB)tCsCLAu8w9TTWa)q+7QfCS7sb!JVp
zdb(|J5#QV>qtpI09^%Q-TZP~y3kEajW`THpYur>>25AUg2FehE`q15*cR;B!ZazxY
zHoynrtcfiw2dXZaAUqleWCvsgyXJ^vusJdWjL$Nh>$)0D>W5(XsUmkjq>X=dNmNze
zbY-F11@C`{N-Cw8@4ImRDJ3`PoBu@LWS>u^ga$ZoYfF_L>R<5isMZD|{z<^1s^UlE
zrpV4QlOzFsGYtOhw;|kV2Ml#S4DV-wh>k*Bs<yrXDe-F~$AI2(NCbXl++wg9@F`Rl
z-+^S9QnhW6$TGbyzbX#OcWn1QSkVotzaUU68>)D=KP<meWkcF2kWf?NHye!R3NWqb
zK*CBzxtZv*AG$U`KE;^b2fVzDaYx2eNgs$5*H}}GD8^S3O6KVvwIi@P85xr%53gS?
z-+1{~a{rqT$gZOO(hL~k7@HxG5Yj0XZ<M7gjyPeFy5g8_*4!vraAvejn#yhWuEXj|
z{+`n4{<W_VOfA$%XJDgdSWLW(#O7Br`bAj-W`ZWP1=~Y2Wdr%ie!;ntPe`K!*;(S2
z9x5R=2$ZYBR^%Y8MqFA}K=p4L7^w@un7mn7BMUMyfxxXN^9AOHk~6X)-&<cT&qI}v
zA3qw^B*W9f<Qy_nDDh)ZTYQXRV4A)*C{&UoLX;3~Obn5ZB>06v^79dxq02u<0|4%e
z(ZMncFrM5|D|dbY{ceOW&1{gXMuaQIjg7SgQnyMlZ#S(&n(}6O;b=2-mTTl^FeEaa
z%on6hEFTSFTm!i4ppN)<Nt0YRIvmVfi!54go!9ym%6Sf?VTrT~g1oOo8F>!tH(=DN
z0Cxer|Fyqf#-cn+QylU(VAVk95j>{sh4qahT8M-MZ3-lCtk2z$x-CWem!Yb-4XTW%
z4gt#rX10zZG`P2O>g9&DH4=;bDo`&@5>|)`4!A!opZWz{$xML^2D*lU77*Q38@9{_
zcMV3MrXsQ9go@JYJ?rKBum4&i<Az90E#)~UIwvNcd@k;ok?#i4dN+3Ff1W;A?!wOZ
zmvQ#ve?jmn2Ffid5AJh^pDHp9_)-0k#2e4IV5Y}@5?)*mQ?QHbX>F5E=r9B*RYejS
ze;zSPZiGqr97v(wg6dQ#m>EUjs^k_t1s8e8gD9s3#(1bj?Sx996M26DMlc7A7R?mX
zDRoAak&~B_4je0zTC?cC8$@~n;!nX@qURv-8wvHFLJ&SX!H}{{Itl6QwhsbFS}j#{
z;`~QFq<d83dL0s(6(I6?W{hqa^52QFg#$-)7A~zhUwI(!82rd+7<UW<#1>?ya*%x!
z%>MIeo97`BT>^9Je}t;(r5S_ex&wO<#+bU5tn{icLSoyh`n6^3g?+UF--;2iqFJe!
zl>G&p42>>EoWWLWDY8TLgXcz1kgFhl+f!XF%P~%_8=P%fVMG3kX>-A(YHcJKGo}wC
zvjrxES17y-iP;WF?dC8qIQ19(f@c+vb1GvL3T3To<hF*$*P#CQ=b|d55_=eo(;lAv
zLJk%rl+msJ#0Sr3(PVupR16Q|*@WL~*f62g>kN(wI2syJ3>WHf41?^O)|X=BP(~G~
z5u#FBe?l<^YZ~ihM%rlEP=%YvLc-+tn^wq<yq$99*m*L0_!No3xN<^D-3)15BhHNK
z{%-@*qpz-E$Ke_fP8UO+^8&L)3HpKLM0JKt_g4?74v4b*y%1~^>Vs0sM;9oKWR>QG
zzdgo$vEH=4SAg-D=)?t+kYwe6k-8Vm!wrxoT?XdlTc6j;rC`DeU~q!xl$2sV(%_8(
zEHD#D2iv7Qd&LeE$rTF>JQ<G{W=6=RV4SKk!BtXX25$$$@t<*-e>DMt5u#rN=>fP}
za%L1&!L_)U7ZpSmNBk%a`wZ~LfRWjOxMg6L=!Qa-k#Lx@5$Q-|q{6rb7dcLM^kX26
zj%d{bb>9k@At&lV_r0l6^56KefSk0sI~qye6LGlX#^Oh^MG!p#<&L2~CH}v29+nLR
za^SN%r6^ZC@^%$pj`ENg!ZQ&ccNi;1l=%gsLlvYRXY44tC$VZdK2b5_3<eAa0ty3U
zCd0vaeNnJmzW&;Ma`7o=%lk#Uuyd`)u2o!)Ud(LDDAFGxMK}tA?#{x4kQmg;Jy3JH
z3t?d(t}Mr0c)oE?v)*Z*+D-r}xs(-2B~dE?zIk@W35G^R2eFq8wHm@8EKH-A6I)@v
z9>gRF!nrs*Rt`zkun$+L@6Av-)Mkb)bJ(0Kkq8XaQ}vPZE2Jaicit8lBj6$qLX(90
z{TV}48K!_x7cg-GNdygUD2s)zc?-)MiV!R-p?bx8jg}71mLEV8v4)a6ocsFy;9>G9
z!gxm*ow^Jf^Pg2~cz`&rRz@GNnFb>c_wL$?$sUUX(o!;aB_telN+yCtuH_8rEqI(t
zgNa|j*#TxV1=2EF!8OiWS<rIo{NazG+Bpga4zA11QIghw;XL94z%Q*sGA8k;ajJ1=
zt+ViTEm2kzT9Pgc#rVr^1crHN1V#ZFZ7}e|pn}?f{zJ!QopE_Ci|z`j3~qwy^(m`Y
zqHl)Cm0-j)+r$)%8%9P7<L5O<ljvv`|9q;IqED-Sf&M=U=N0L)c;*j<s7L&vVBT3&
z-A5`24TSmMsB#Il-k)H6{uzC9J>jA+KLWoGpaMyg_;e)TIY2GO(yH5T^r<ru_EKT4
z+y%)YnLt$rFhQ5WFbSO+!z?%)acI5Ll)m*w8i&&D5=hG;@$N2{7zCy&w|t-6aOO8a
z*EP%5LwjWY=$W$ei;v`o@Baw{qh4;Bwp7j<Jxc~9Wk_OVEQSWp;{c~DuPYy`1U>VY
zRp@JH&3CR+px$I|l^;7MI&e!OR1aa;M@hQ^p}@U`FxHjQF3o(o`eJWo-`RXPC-~K|
zZ<47Ph39r$(Y|ab4yHmaZqLysDdq|VmBDRAmh|SUFfNgZvr1c`intAiFvwZ3{}2Wz
zq6&VvzVWFT4~n&3fT4@a!FYX!b5VcZRx6)i&iG(qthKA@iqE86jMaF=yPk-YA7@yG
zxt!{sWXka0$-?75r(%A$s07vp(h3&58J~>OVFGp06S|L=0`_30g+mlI7^q4~_rmU4
z*$Am!92h$uTcEYVjj#a8Lt-=&itJz&2<GSkya-_pYEEgDyH{1wh#@z@RJvNM24%ow
zFpQDVsYwk_2-(`|sR9D<Pbly?dMwV=p|CN${7pH9sQ@gkDU!j!$%_Fl=-g$_DLo`t
zz4B|hYUBdB`qWEg`LlO`n6&Qo(b(ZM7>oI*3X{}%kZ=tFQMYtZCdPTAWI|<$Q{Wps
zTZM^|43I-zR)q~H5RjBOS?Wy;4pI^(?t;^CW&o>&_*kj{s~AM!G^jD|oN=m>P7MVi
zt%y6oIMmn#qaGo01MYG94~!{PHo-(T)XKKZI1TEc;W7e@+BTer;(4%bxO9~B?QfyN
zbsHpNr^2wt2RM&%6_})*GZ)AXoKKqw6|474j>z}GL|zMK>?Rl>m<;vA1W3nD0W-88
zgf92TKx(V|oiYITL*)A;&bQqJ0=Ed~c8YKoDAMUf-m&6<g}s|0$)dFFT&M?q7lu5b
zOpm%@9>nh<NCnT&%9eYe@^}W|b6y{c=k;H#SL*|^aV<Act#?hCA;c5bi|xS6serKy
zMj7^ls6Pkia;Ry7+UjMC$xm9x`?h$G)*PHex&ZxiA^J!a&ho{9dC3B!`UX`A!E`v4
z`XARNZjM@gunpJNif*m9=sc9~P#VhX2*@DsN8dUvAyIZro2%61h5|0{>SCYI1=B?X
z6ExWIgZzWgl&M1>ij^;L4lx3ZOeV%lq3WA3SObQp2>tDHFldwD|7`vNc`@&RT#+?Y
zwoRWWd(g+mqi?Q*<n9VE>8rpv&4m$|Et6*|E21-@-b)#mmKO6KxGdD`1;o1yd0!4j
z?-253-;70n&c+xD#(AtiQ`Hyl8ZcwuJp>DlsJ~(WF}7Ynzr7sN!SBPc$2_RCMPoe1
zAngU)Hn;Un3tt>n7_$g>ARRX(cA_pU&(Cl+?HZf`{q2E$@&XvYXoTC(eW@;u_^n{P
z&Y8SWreu$k%=k2!GGv@wUV4%2EZ8HzU;l<Yw(2i9Gk>~#Y1C|)He!klNlL@;!R8D8
zwYD~*U92*wg1G%r=GfuKytG8lElR+D9#?MkDY{VhL2SIJPyW%rfUk`o3P==?rl&(+
z?=P;~%$Kez7gstQNs=Z=j<$n|Sqyc%d#6S!MrsAlEx}Ba;%Xk*TQBn<@p^bt1oU~a
zo5FKSoaex7&=IDFr@#4Bhy{Z-I>Di&KC?f@&@F0)aSf+pytwPBqN%?Y9M@~xLznl2
zcwlI@mp92wr~*DX*de!XfNCN*o<%%I2DiHu(j_EjdS-K6`CR@CWHogATSNiQsDZ({
z5dMR~XkN7!%OUkKBT#XuLehdGxm7+W)hfayQbh3;@;-tyazRN@Z-C#gH)0Y;9A(Ck
zoSznZF+cqH2fluBEWc|^`vo3>Xn1ircX#8>)=n9#LB~1TID>)yfB}v*e~q(1t}huc
zF6bq-6>|TI$FRvAD>t5b4b<IG>ZV#uUr-UWRe)1>F%g4ZrNyvJcpnJ3`8XHi0C8Ib
z;_G+&cFSG7{1`j%IbaT|KwxrGC;}0>7t)7=BvL`J9RO3b8{Y*Wj5#roXr*cFVupi&
zy!+r@c>t0xo{!oJ25B{nAIzgf3X{o`*xA1xs#sYxnGM)~f?<lNVZkyCh5~kh(0m)j
zrP7W-y=bO;abdp9NlM1~h(x&@MDEovZcqgR<`Nhym<!^(9t8D1Ff~W9n|k|>&2rDM
z(J~Hs<)duxgBXoKc_}HQWBqyAZU|t1158#S>Tx}Y)gfR!dH&@wGG2K(YH?T()8Qjf
zCY~od074pjZ_0lw(p(Kj>!IPN$Yc=HY=eC`zq1k&kBfn)0=$<JZ@>#JLmmZAiYYCF
zl;u7U%Tqwik4AoqI78W*kd92PYguJ3C#7Qx?FTN&BwYxp&4ZA>T#=S3Szv5wu;7Kf
zgR(4Vm+F6eA*nnJNhld~Ubb8WhNu`!JedeeQS*>?AFmGptXzEOKsD7eQ{O62<4j;W
zq?Low|F)pdeuBO^1dKZS;>YMS8_@1#re{GS_Cpx1xC8xZIQqe7h(~5D6lGz)YtXJQ
zf<d`@@K6|0Nt9t=ns`o)i~L#Wm$VpI2S#xNC0FPRr-A|d1ZTk}09GaXEE!4mEoCy_
z)&51Oe+K%*6?=Ec{pizQ24j~ECaM~6ehbFyHZXXxfb}7yu9GQ6gS7h~`X;S5GLQGr
z_paTtUVZ~3HB&LJNpEZbu5xfrYaBj`P`^Cl4S3=Nc>wk2^%0cb{t<?67K3?Q2&p6M
z6R*z9RVZoTi5)T+Q%JMglu3$=gEY8C_2FU3xUe14uK8o;$eyADvU1zU^0T%76j}Kv
zxpMrOvLO3(sS8R#+!%~;Zr5-~fek}B?aYeW<Z)%ne$m%+xhflQ6pa4lt2<m)Ci@HW
zp>}DhF$ZH_+?JaQRWsm=eW()s0{wu@*uZvdJ+vbFwM0PzjK1z~mxR7w0{r#>XfOT0
z6E)D)rHUa7m<=1}tIv#qYDkcbf^mx|EQ;@f@uC^|6!<kE&MT07?Sdq1LXtxcL(T7j
zTwHpIu<Z~9fzMEd(u6s28;TFyJE#UBbrNZSgYh;lh*9t3a5f5dJ0#CFlt{}{fW<W0
zX?XU*7ot58mjEB!RwqxvV&S)@MPu=GK(dazHo%PS0aNw_%E*GLvLG&#Xh&%d{pm@6
z-B2nos5pNAK!cnytWg=y*uErQ3QHO#2?ciItlF1h_3?8^{Yq%!5bo(Y(J*J)Ecb1$
zl}C2e$^5J^c>sQw!mNHHnA$9ym)j29U9hrB)sbn43p&@s`sl)6?h3KYy8K-L(P0w8
z4rSvQXE4wYF~FY7^If!jHBcRi7M>xX6}~4|{#`ykv{hcY<^jowNs>ZH!DzA2Q|)<j
zglO3XqI4-N7pjSbs&iDs!oW|)A_;@*ayBf*5kLYMu}4aZ<q;a&zye3}-LHb6eD(8B
z)Pfp?@U?(7PJM?UewZu=<F*`D5J~(}5~lKix>PV2kX#V0!(e)yu)u!FlQ{VQBurtG
zprus9n%J;Ij&S(Md0?oNY9AOGhS5a!O<=%o!sW7rq13zJmx}l2Kmb2i@-h5TAHs4`
zZbAG;S}aS-A(gV^c2~gxxhrqKVvH0a<RTKHQ1LUjZ&Gl=famLB4Ng&rfI|Ze@1y=x
zVY-|Q6;&Qp9r1n}q;j_v98~_4Iy?=g;OS4^v+9cPJs{p^@a`s-2kjOFBDfCaGS0#P
zS6B2xMUdVO#^!b~!wSc2d*GQyE7<2JZTw7i;z3}>e-26Q&s`e^(dYv&qitSZ{ekM6
zF=&(B=x?KO4FLOM3N{%YM<0279r`Z&o9dfZ-s~e#9+idL(C!=$m_I&ihJ+MM7a1GX
zpEw}!pXFd*`fh%Xe76wo%{BxPosK+~fngIcPm0*YxL`hs7!##v`*~DHBy83P%!>ks
zGKV1@C4O`T_$30~9q5;L(0B~{3i~oMM%)UdJ$>tX1>cD@=kGy&C@YP7FxKl}s9xvz
zqRJujVLt<mH&EB~RVyvL01ok-{W;=cGKfdtr1bStmL1Yq)z<+#0%hl1aH69;(Nd#p
zLOp19p017?33yVXHZg0oOd32!E-kxI_T=x87q@>T|MkkZBs+Dc#Fx#M=~dGZb1a$#
z^>R7RY0cOe+L@DwXS2k|M9YwjRK=j#nKK>V+tY<g73`1URfml!$=L}FE6f~r;BEzQ
zO*gm*8>*-ObHA+ncqN!Es26gMpwtJ9R}`4yLxhosmTm`@8|eQ3NhWjnFkB>!O#weT
z;=BZ^;*z^p>R`CU-;QfVw;U%mj$K}uT!=fqXttCFHOj$AeF_!34`E2--hJGG!)3?#
z4Z;uAkr#3r6!Y~yR0nD0uvO{R;S3ede;vWEL9b>Qak+q-0clVTr9Jq5Xge<8gt3iN
zAQfW2djrhfDNtc+qUs<<L<Kw#A$|oVZFDRj&lw@SmX~?qo309FtOg@jhWsgZ;=Nq)
zur_$-<OrD#^X|-U4UBet9R@M>@G@gC4TX?KMW}OK06;jHgNiC~2_Z#S_)q4NbKg<q
zU5vPllZ`B|`m{=ZJ2_Goftkw0`7!WyvLd%$KBulA=9fodm2ny_qaF#<_rZxFG9Jv{
z-Mbs)W-w<zni459!C*3rYQ*16%ZR{36+HMO&iKtquPct@)FQZ8A>>ilAW^X1W}Lx*
z!N4&L)YdnGUZFY-#t8-uh7G10Ys?&r)xY1=Jb*fpcz<E_EAsTZzsWOSeN0BC4v~5#
zNx?+Zj^m8WgZc50PH_gIHbN)})k+}ih{71I_W&`+c!v?j`;3yXW^iX7`{qhDD;>mL
z3BF0RaWg0j-@G=1rqfk?;vC`4$OAL1y6z(f-&C{WrL)x_vW_B36ksRNLK?za0fX(u
zUm?@tISAzl#ybsNKp|4)$NRe|-Q&3}2hx<{of54W5P>wjptLIxhmNoc5YO(oY_V>M
zAWEtB$M_-02l6RJ1hY<qKxnmsXadWLy5rgtl$CHw0WlJIPeQ&-N42k3s7vPKJs$On
z4}mlS?~o@b0|=Q=XCw}>&#mg7Mq(P@ttczVFXP-Wz;<CDiAQ_zq?BqKv_%8(PgC^l
z6NAyG*oN#QG+dGloaf=4IH%fRCfbI~3~|n}KN#OMz{T`r-a!td6>;vy)i=pHux%kL
zv)UbmBHKL{`O<_6*bHd`42#78-Hf<&Nnm1lPZnJz%E2`0=ywkIHQ}fGCi@J_m5Th-
zU1IE`NK3+wW6GT-Aj89Z;CMdM>YHI|+?66O&#0$EqRq?4^AOJd#GamuZ#s^rMBqd9
zO}sbZoy0!#A|5ne7<VYj!#>Y4(4_(AEIaA5Blr;??K`qyXc(8%o93LK8WqEc>l<QI
zBr73JW{jRHd55l&hhKkRw#B?BUw-*z`PbGda^u<O%G|NzBsL0L9>|kS*9-5gmh$R)
zIeqd-i}?clW4Y+uygvcPFHWx;=PX<(?@U^*RFA{eMax#dIw2Dm?wY~quG_y?vT^+e
zuh|G96O0;E;Jp%z8H=ZE4V(aA0D7=7(BIWYfFCUz>b42RIC}WH8^I^k%cSgK76Sd%
z0RXMr%olZeSspSrbKj$w8XlbG=-3nRO99h@5T*BfkQ@Yl^I?9S?gL7c;7X7t0u0!t
zn=oWIP^^!H_&I^wD>h<TUXLHXV-e@2!_D&2TjiJyK?sn+VxB55#D_ZH`(Ts?y^3iD
z!IW+VA^+dQQsD1jC{-}HBSI45rY&`H(<Un~o~NSz{hv@C{%{b1vlF-}`~V{npXFF3
z&svRga3HwK$H{5f3f2z#-zaN6{MSN~mH0APOr#4(nnNfX4NQCqCgsWGshO6HG-2aA
z3TZxsN&Zs^hldE5FRGP^x;zDj@ToUhSNP+<y6_86N*15Poo3I$1U>VKKt4Gd?}*ls
zLk`NZDws#r<dk1hF8_G@Gc4?_a?6!xgPFzc=zwiy%;-$TZ~dg7C)ZxMJ<R@YheLnu
zm>-?DxK^n3x4k&-VLA_8A41T1*<teCp4R^E9?$;mYdl}zcLtWd4BdU#`MN*taCMj`
zKYN({-5$3)@19_K^7EF5x43qHzH^KO%d4xm%7(4`<=QXJm2pGU+j<KnVVnaksj;^{
z<gE;W<4>XyQvueqP<d_Bd-CAB_sjoX`F}EL$XM+B)r*6~y$_B=7l|@rg78SJ*`3;*
zb$O8C;+YifI4x>okA9re$Z%-K__Z$B`uv6tBhj3XpI#ry=nyu`;T{)Wioj<12wmqu
zW`^<I(^Mh`8A!(W1Pk76j%6k>i<w!)C&8%UGg2YG2!{?f-Hv6BZ;g+(av?1piDq?=
zn)<TV(tWNlda1hOn?!skmH`*EljlJ^X-SZUW3-K}aqNAM43@f})`cGS%^X`~CbRcV
z8hB@)bMHH@<j1u;jbJDS4uPKf6E`1pAJOfp$CNvKmWvF!d!Nzy+Mk3)*d=%}zI)z>
zP%gr!(~Oh#Wo=GWd&q}4-4B1eJK*+BSnl<)$M4L$CXO4R^4JO*DhiBVW_*U6ov=h^
z*PkV6qYg-Q^bR@i&L4v7OOf9$y-d!UI!!X6_Lvfj^KGc16Psvs9Gh(uMhAsp)MD5t
zAiom^`YQ>W<z02U4r2!o5&nF2Djn*Z18HXv)K^<G23gF9YtlQu6?}!-592AO11n7l
zW?5F6M691(1U9$6bHPQ&LDic8$9Z<~qwBrLmZ5HNnp5ZU%x?~0qJvLL#mHhM<KwdI
zFu5edA&X%yeQj~0JPIp^>0m6l!^k)gXn~0dQfW9*kh!Dkq64c6cR%@yL8%=uJyZuN
z5DjGDzsi%sDeh1)-#EbJx87l49QrXmCoAq3kiUvXUPs}_Z|0XsCI_w_gPLi=2nXLR
zA02H(@E|nnL@$;(9ub+Ii!&YjMS?4TE~bpgdPO2H3fZW(Prfk(3=`pU!iF$S?Z(xj
zPRzFkzkGxx;sZf#JZ3lsJtsTn4{+GU!%i>Wbv+T(u0s;#^fLrpXF+L&EdOAG{O>y(
zWZR>g<j>D7Q*lChx6W}+r_#^k0&O4dh1<jI@3!P^(|<>P_He#?gXbyC9@qZv4%0nt
zM{#v}U*q`#zca9O{{DFCeBGaR*gDLUpFPa}ZjalYcTX@q`FYF3TU@*UvG*vaL+=09
z+j9T=+vKiuCdn0xXUW*1X=;O_4pOm_s#?j^B72O<cDtjuBK4&|%1kNMCwte)PhS0*
z{QOJz$lTF0u?d5_VmPTCLxoSJBnmh$`r8pMf1aFsnESVT8qWFduDvv#;=8A}e|wAX
z&0nYOC|t*LfA$2v-SZeI-(AIVd-ZRx?=YP`&(6fvdA66v4qL}>@98Oid+;?ZPw8}6
zd(W<>^9IvmU}(IoMcvoe8r&!?RpGK=!d#iV;B>j+>?QKi7n|kUS8z7$sVC%1Q)ft$
zGeHt?k+YT#@%}uX`y(t1p10gE=Yacq{@HRVD#R5;lN@r@wSWVJacb<UQ_P<$aYy;L
z<$+9tsPYv7W!6FI*m(g(*quVO0q!p^s5{kB%OR{F^TpMG4bcOxt$o-({0!eO%$F{c
zW<K<{eyaUa;0Cr9<R{ajpdTG9TXAmb-VI<)z~nT7fuKN)j*JMI3A>}8eYIsiL<IYr
zW^U~9ImpRS*&P{{5;s3Gc4UUM<Ev(}DDdI8dz*5%%3c<Jmf2wFU=4@gbh=*la@%2(
zdE&1vUnYXna9CHSwc~~ht$UrArah+?XOy=I%xhUqy*#&KwS4Q9H6r^;B`F=s7-wh7
zfx|e^d9V<diPm>GA+?v6_b}Fk&JA&vr}=9z5O5fvA%(pM3PmnRm26n*yX%=x<*wzp
zNcfVOvh1wsvS8LkS%6&?eQ>(Jt%Y1<!XVk&acHmn*S~%#H=cTvoImv}Eb=WU?2ZRq
z<Cp>&3>XZYyckf#5s72`3&Bwm8vcO7WOjNQev9SGGtQJ%JGRUFt5?fit3JjqIV_>J
zlt@NKoMdNaNdhED+G%3jBO?TIr5;CBYGJ2<)|&m{Jm%98V4XDyNHShZ^{}Hv11vlk
zb?=3Gcd31RM73X;FK>C0@ge81AC&)Z)>J8J)}Ko70hK{YZaT|A5FGoT?t}dHxAXTd
zjV@nD<@T0uN9i>Dj-G`)^END6{`J{zd1B2T*|a`i92rrPIygqku$vMSA1?R2vt90a
z0*ALLp7SS?$#Zei;+Zu9rWld;r};CFju2qN4F<Y`0q!)WhD&(76PE}>B{(A*2h>~S
z7k~d$e(~CR`Sr!qWXV~xWX#}{u0Ze8G~79+N@337B3ZWl0XZ{!w%joPa%cwN94!_&
zE<l<n>C=Lm%nb$%1`Gx|z<|2%4smE;gU3#ImBWJZ6Xevf<8e7W&Pi65$SZqy$zT5K
zMwvYGRQb+n^X0T@Gh}2sRLNbtW}NT%Q<oRp@}t0o$5wD0GccUq<<rl=C{@pvg7hNm
ztM~AGHn$#w-Yd+P!WF8(qfEcgrP3eHfl)0FKT3^=L&h<#=P|&;y09S)gCzB`tqN@c
z1}hzAA#31Whp=dNYR19tj=JoO@BVOv3*#n|93~l45|wJ@!4fERZiOt7I+-MHjWZYs
zNDQFwvVY>o^8)o46Esd5hjCNM4T|zQd4GGJ%$+tyP66}9`K-S<UUVK21_Md8Rr1}}
z9>Kx=Ncr(OH%W9@1dJXvs&j1pr7otN1_K5I1_K%cije}{K_-gtjW9@&4paZ(A>s1W
z>^U-a+)#P$?YHInf4?g7$4BJLr=KO?IOja5l4na2E-AJ%VtiK=3jU~#C_}DjG@EA^
zG0-c_7t5ymYC6t2(NR-Vs~YMs70`=+c-0nYsN+-*dolYy$tnwn=ML_wkgt7bnk+r<
zH2L%L59Quh)&mI*GB_m?mL(hHw$nz)mA{;=)DHD7Qg;i>Hiq#SISM_>7ys3)#P;(p
z36|;igg}&UZDe#e50l<tpl2`urVG2L?`_&EKYMk(43Ba^OSewSs+#1+izdqT=gyK@
z6GmVkg9|-M&`-E89=3O4Bj#vry}bRw-(^Qhj=Xy9{gM)$fHSZ4V7vlld$(s=)j%~E
zFc=uf7_cT{%|s~%43hj7s)ysO*U0oi^0RBdDmPucM7HnQEl+*?k<5oQOeRc`$Id-p
zW=)(V6Ne3N+kj$v&YAwCSCzpNwP@hTNe>u}7|5;L8+FqLY1or=Kk`?;y~cd$0w3~Y
z&y4~`c%KVF@<*8(4PfvNV=`6kIa(>?{ec)yyw6w})o3sNKnbHU51xXLfarW^YP|gX
z#tY?|b7spkE7r)b-rEYh{rNKS+Icc-%9tLhGVZ99)o&hw#%Zg}7#AzErsB>J;|vD+
z0S3xjFnDfzTlURMlCLf}MQ*z2RGD_lPzk3sAUM6l+7GItiWr1*pV$PJ7r*$otgL)p
zp1SNo8Jd&{i5IU1F^pG#X-88|g8_p9-!PyEXiBkM3=hrEr{j*S^yxEX?&K+Q_f^-(
ztE)bhZ@>MP)Ia&STr_36T(|ffIb-r<T)z_q>)YYbey9b#*?mHmWl+}hNQ4>}kQlIA
zH)M<Zv!!~S`SKTrc|@`rM~A9uu3bCQ3;3miv7og;-oN3=k@2Di94?Kq)QMmgk=6!%
zwHW9LW`FThC;@J$MMW2aNo35BH2LM%FOsXzo+XdX`AACY)G0mOr@>1O{nOnz*HKrx
zx~35~vp2%v2kt(pqa8^n&Wz%cRJNUQ1_J?z0juu@OKD}DEc@<sxn=2mnLQqoF7#(Q
zWojPd#NRt(J&FocDhPLAZLj)NR+j%o9y;$=G6ffxHiGf$SM}&oBpKia0|o;F2?M-3
zM_oVUVt9DRADJNj!l9ZoBsEoTfh6p@bI+5{w{Mg8H>{VX|MM%QwsY?#%V5!VIQFhH
zG57NpKZ_XGj9h2tO{QV|z4>`^xU39i3Xv(JM#1P&za_~BQa4d`;d$r1MTcNbvsL0E
zBP261NwM7ip@`9?`Xj~?QTtLbT{ppG{pq+28OF!dT{7D$T4V#PD85lb<^lI^fuN@(
zOe2f@1~z(?+4i|H!Sec|Samt_vUe-wb1+~$dZa8XB93<UwDjY*-Ot6tsOa?9-{d9u
zuD?};0Q#dhTgZd*qEWi>xVz|qZ(k-A6*Sn7<6tM4npfUk`s2z1OqNBYGJh>*=hHA>
zT|%o#)QcE6f7TdTGH-%JyDlJCi!M4c`?MPCuEDOyRxcLK=d4&ZmOC^gO!n8UlYbQc
zQf{AhhnzKTE;d0hZ|cd-XNV@E!GOVl!9f4OKs8jXD`4fhvC-OKW~s>p@u#M57oif3
zJDwI!nJV+~yXnG<<dbb%<?dJiC0k3L1F<<q8uI4I8D+RrEIt8KrZs8$YO<brYUb;o
z@BT;bxcfUIV`fR&-~TCLIBTZE7_T>+*m-_o002M$Nkl<Zp7LGGSC_LS9Ky&1F&71V
z?gH~d$9K}1yq~c@IF0{0+@&_=*Z1Obw<3A?k}Kpp%dV7GUQ6I7Vzu8fUu@t+{7TWT
z=YjEBGBR9BU_p;Y^sdAmSY&#Z@2`_38*3#5hsr<~sf#DcbWu%_rrIfQq2#3s;WbD|
zm~=}05aCvrp|MiS<^)aBlZlH##0WeOyZTTP-l>U1v-X5R1-fV#up_QG@Cs<h;_4k6
z?%;<3Vaf5B0O%jkB{zjL80cLLB*s`Ki8)U6CW0=38Y}%^z_hfsNQ5I?b{*X<PnY~!
z#zlNpCdHqDc@ie&UG>s+YWK;yaxvvZ(N7lDcIz{s1KCb&sFTc{jCJmBO|0gS-szuI
zAsatDQ+Ow1T5^KIlzqy!=5WhLO=}>uc@J1-a*ABBV4*BIb%ES@?^@Y#c)k2__rK+j
zS3fG>x^SsnyYLJdo;6sK!8mD00-jFOR@&eF8RrCLI(D|Y0J@{N?rFR8t)_1Pp#07W
zypVq8CE*<%*J&?L)|j+;eie+UH8x0SY`nTptr~_-fC!xV4^?;6^6IH%;I$O^C2bwB
z4i$>1sF2#?VhL%q3<dhLto@GpV&$!FeeC7V&#PrEBwiOLhRRpQM99U%!sRtYy71F#
z83_X)d(flUxhg?iC~gcK+FIx&4q1Uq+Gv824t}(Lug*lFXR>qBAc!&wf{!$W7a?51
zaH$)W5FR>JGQy4^J}-5yBRu?9Hy|S&8M1)xU?`t<dIz5ib#G1tI)C#t7zktx=mnMI
z#NCyaS1HrRp|F6M5NoNVxX0=1Z_B`jQ}!PzkSpK#wakoKAg4!Or08<6UY#5BBra%o
znQAiJ;nX<c+;<{+tT~bXp29u(b%ZRPhEF<so;u75@tmg)(@#%ubXZ4Edw$;DH4J+=
z{XFGs_tWw9Q^WD~$#iTh2ihqF3l-n(xbhWFe~ZUDvTtI2R&{3i+pD+6uYP)~FT?3H
zEcb7QdGe#byYnR;<1jDxxZ2+i)03YL*J18(bh!Pg<I>ODySMmufA@DgEQaZ_I6#h5
z%Z7ck4YBTtyZ;>qtFB8H%~kno0J1<$zxqZ$-JuiZN+l6b&iiECLcuU(g^fm0N65u9
z&X%bQj>_H3Uzgc1(h)U%jyyd7bU6)Y$Hr!59h*y$mh-OG@^Q~c8FT<)pYM_qxrg`E
zH!%%+j-Y3or3ydV&JTl8DGC|7;xMyF8h(YS$6wD_EE7}GWcrGKgZQnJ^RkEG9C4Gp
zTUa2`STmSkVI2<nggJ4YNpL{Z$E~=6MIZ%jTi?2Z94~45CG(~0!g-Z$OGUG6geYv|
zk!HE4xJgPD$I4mR;qv8u_44e&MtO2}q>M~<$Q!v0a?6--iF5|be|=aX-yRnsJIb2n
zhAp-7(#$Byjt-U?pHztx92f4=lL>Jl^7Nc2S#z*nZr)TUljDNrCley&+#yaFtPojM
z)F}5t!nOj8UkK8^H6u#$D{(IldiJ$o0^dDQFN;2@mJw*b{qXC~u7Xw5p8u;*suA1s
z*_j*+2Ko&Kye-tMz$^b*C50vBGCU($uD)R5aWqRHRFDKjSV*W8SC`2z-hNcVn-k=$
z)MXNadvCbkX{pX|N%qaP0+!U^GSeg2c7mnUo>-iGD~XBKAqKcf=!70e6_o19kg%Cu
zYiEaP`&k6lkGX!4m@O%BRn+%>-OsAq|BK6}VV^u&Zaul%-GhCTlB~`+7DdndoI@QE
zO%fK-ELlmZvS88(d2{?U$+_|C^6JMQ$xZLQBl5(fa^dV#<<|2rl*uDTNOEkPV%(Ug
z-n`TB+R6dAZ5sq_o;~}L3OpRHsg_&EOps+WX2}kmZMxy3_Z0(GjI2qkMqnHfTh%O|
z%SF0q!y20(<HW%~0lz|APcmWfP??sI3Ev=@n~)@LTzaKcz<=q}f01{~N@Z$Htei1)
zn5-&3EURj3aNH;OxIA=Tf$*$@rU+C*tU1%q1?rc~m;2a^qa+F<tBJTbYzvsF6}k0t
z)u;%W9UCIgLgYCT7x|u+=8$>#71T7#J9!O~SKlhrQXCRROB?HIATDi{>G=LxrbF)D
z1z8pF{gYu1nVJwP>%e@`Jw7*DW~Mr1-Qh+l2X}VnV5j^R>BqiPA<gJ`6Crt9lo2LX
zkbZ3jL$;+9dd29Zb?Aib%*GiE7z_+d4Dbv=eM6HnQWI!3<f2caqZ-CEo>=*J`MfMg
zo<8qx$z2~Wm8~$aq2%+vl$tXy7Ge;#X>rLCzwe;Pwq00bx%?hmpnZX4;`Am4&~79k
z!krQmpD2gOFx!Zy-YiK^=haFR#?B~7sc)9}f4tJu*%|o$zyPNXNWS8rrY1EofWggz
z0Cd!NSawYUrav%YJd=Vs&jD%jsEiD`{fcFB?fGAl9eel4i?Eis=m$8*1t#QoV8Tv?
z6~!qdM}b5=M!E8Qm^W!yPgk9#pwi`G%mEjU87p(aD2+`?k@t4*lxGj@m(+*|DMtBf
zc?K9R2of>fA~i0*5cpxFDV4=kJaZwvJ4!|cYePL$4x2gOAfqBMSMS4&e+|ORsJaJw
zd>-)fz_}O5FaG^6S+((ViHu87M}Y|MWODtI`EqX{)kV;e4wJ)yL~08RZ(M~}CmAaY
zm^zn5#Lo&EWX>uWlfXu8Jfu<du4iIIdpxH>PKUbU#aUr;_YN>yP*<Fm7A7@_^!42h
z^6lYait+l#u3EWjC3X;@$9UhVk#fh>D7ig3R31Ev`y<%*0Pdl6)$;S*fB|MO9>09u
za}j2o!GOWQz{5Zg<{9^MV1ZCeGG0oZ7z_W)YhIJ*);}kIyYX=uoitQ-Hyml()%B^Y
zfE5I_5pg(WPvJVuwJvoGGr#$SzCMjaiVGW#f^|xq(a;#B1Z)5`oU1Cq;ZXTK{Hg4V
z7@~;3KE=7o+;<G1Z{}8GZmC)?p*#oGM(+C#qNih$cS=b;k!0o^%kGyF9W5zfv}WUe
zusbflLf-m(tvs~iO}X{izsjQVljH`NtY18Jn#9M(LfB`);Tc?|8r#!_x51A=MRtM-
znhn*!QG+t13@U)};Sn+)OwqIZ_Xtlmw<69IoMCf-gIWs-8672d(;&5Ceb>WJsSM)I
zwA|(vS&VaWBhhY;9xVkfuoe<o*zns|T_tC}w*u#JU}=E_GV&QrX&~T5v7NCQlnPuF
z<FZ$#L5!2eo!FE5an<!w0)9t1b`mZy&@xm9{hs)L_Ra&a%If_8PskpG3`Pi9?7jC8
z5OA-mb=%gz)=_KQU+2%-X{*214sF$1JGI(s>!^F8h?BkdNC*Lvkc8}n1Oog&-*fK^
zm&iyUKqB|R&AspYp7)IBJm;L}d!FY!CmTS7$Bpisu8hHqfVnT=sN?B^-S*pRsgprv
zctX4ZH}u`mdaWz~sbSVQe283am}LRVUY!&pOlR=|cZ6i(Yf_6s`?jsT!G5x?-i8t{
zpE$)7LHT%Pb1$6cf9R9ymj~#7n$sg#{m%de_IL38KUz(t!m(R_b?LkIn|JQDhp+h)
zF6H}MY57k2U_1I?)5@!fcMrDuvC(n%k4wI9g++NRRySRMS1#T-sPE$qEuG%+mgiKx
z@6n-2`Kt{PmXeaYvM({o8u<Mw6R0C3<mOYJpU8Kd80#wK`H(w8fdU?>Oe)_OCSGo1
z)B3Xpdu&|REP9gvq2eFvUO-U~`q`Yg2fcWbE}C0D#aC!d{X^Yvoc2C|NH}L{4agd3
zyLQ*RJy*WeTF+mJlwN@4ToCW+r}$5w2*%ZJ$sO&cbI!Btrk`aC*RHXTmMyhw|MUl(
z22|LOue{FA9zK#ooCjO9_7kBg5&%>EPeu^9s-*8v?b^*U08_u4^O0RUWVlV}*~@JH
zCsriwR#cSz{=AE<6XhH5<YTT_;lzFP;>&E`u6i5u)IT`)EZQ0(qU>Lj&$J8r4X`*s
z)Q<sW;nZap>8no09FcwH^|q#HyIuI=Gxp5+7u%(ShB`XkHf5UKJZ*+O_Q7oX_M8tb
ztwVz4$z1p}37-k@<#qH<2=qm?-S9+KPzXC~VP-muct8rS9dd?2jW_Yt*?Y;w<PT9_
zV2{@A1JP!63bRfCD>3Qg>>HCdEykCm^+}0vhdAp}9uqeK*mmqvCjNn#pUQJ5W!d5H
zOS%;dJ_<lG#ve>EYxm*W+M|rV8#hRhVnGT7DR4X#aDo8#F&}PNXm`E%ef!x(_u0fg
zW85Li%@Lpj%fPT^BM^>4dujp=d~&qkE#1ex^t|t*<$tQ5d*$@Lz4A1^KH7cn`7wTL
zo<hLULE6f>sX@FHhSpPneYXUwCItjhfWMpyG!^KDV!|p=uRQir!sg5h(js*4m}b4Z
zbf<KOqpJ#jq-Ra4SU{vBrFEod0ZFv#pUtg<;wv<6xhABeSKt)^FY!#{6kM{W_>W}C
z!vzPzh@igW1)Uu>Y0zMs$ma&k66dd7YrlE*W&7Db|88eboMKUR$d{?<&Kxfi2NVi=
zUnw~4k-O8fe>}f^XZ68lK1sijv(fr;hShm}``hT`WLvO(J9k4YH8##t0Ac(43w=K=
z4o}$iC@3gnDQ1L^O`2*~4H{xwIIHZT6-#YWdWM~m)x)aMWO+Q$4UJ&6JRYLynwOVn
z{W_=E;Lcra`PMDAf_+~L^0zs#S0T;VX%s#a;A@v`glV@`Xth#1h1$97#VW@v@ZAb-
zqK)#pf~&0m!n^0%S{FzaZ{Uza;A?z(gmp#pRl>fmPjKKNHCMq--y07v!K82%jD>>@
zXSb-%s86iVF4jxeUnG}&@Q>FG0kP2Ox*OxsK<~4(3}-mqtd-OtErS#YQsC$m(4K;b
zun1d}yWYO~!rk_j$zQi~hMmcN3XNw+fB#4^>a<eJ>Sr*tQ3^0$wR8LQnqGeG@hGpW
zvC5s*mYUEB7CKnSY@Cv&#C;s%y`_A+MZ$+2V-uX_v~j$^Yn5pyps=W_(7METw5U)4
zx8@0CyV=;kOZ*uOZIc2pP6&J;{%NbB@xqq3zbhp%$u1s0!7k#nY*UWCGjE<fh1Mwn
z?NT{>J9otj8_=hZb;c~w3xPn+yLUX_qHB#n4!~-1R(D$p0Qz9rB0Dd+lLKG3;ecbo
z=3K15+FJwhb}OzI09@``eG=d`wPR<ybl_mC0%*;6@mX760Ehx?&b#JIHmX}1GPzHS
zwOfllTCm~SZx_$E^o|`J_<Ci<GW*q{Ihc-hw)QL%Rs?`nFUwQ?9RZl$1?W5x4A~~Z
zS0KPq<HTcE7?BWaKTZj=+wfp0^S>9??X*`)XmCsl#XkZ=jurg9TJnchSN8ZDJQJrK
zud-K69t_W8-<Qt2dO4@gmPvbt9pn7%tP~E4wws5<+Iv-dZT9vCI~xtz5b}M1{bEX6
z>9s=s5s6NH@Y6j8P&;-)?EdnIUPoF@+8;6aBS?WD1)4+w39OM!W?K<_uYd73c6P5R
zcI|{q*~S{m<hcjs|M8(Ow;~(tv`uP@wjN2spMY0sb-DfW?Z4X0?d$B<6R)>vgQrk6
z31*)blifRLyyl~Ey=B&4ZD?F)`}sMyT1Il}VKrbf+^Pe3J@)?7_Lp_D?VE$ox2q<6
zj(PaNX8)$p($hXPC2lZIkOC)z0-j?H^$YbD@#wJbJ=`Y*jnH=<`W0t=4Yf1x{HED}
z!S>MPsWy4kXd9f>{lLPsU$8`6@^v})qxq%p1du3VAJz{r{R^jGcfz^G?>={>jY#S0
z5}TZvh0M&NxL4MIEad4>W525f^GG@xtquUk*EX)V^*c&z412le<63?XU@LG`*xx5r
zX0&@TfG~x49Wf9WZ#}rq@xOD7)pF^bh(B?Zs}x`yA^_3C;rM3Z7A{OvlXDh;&?3?g
z9bcK!-s&$%uy2oyv#5x6_D_J<waa(fAogA99Ipt#SPVY}s5~{8)@`GS8_P!_R$m;{
zwSqlfE*_V2*as$5)sK9hE^4sHSJyg?*n4Mnu)3?0?5%S;*jI<d*ct306S|891V(DZ
z8H}r}g5l5<&^V&S6MfT{gCR(PAO%{80$KoyMDQ)Ds<hwFe1t&~GwQQ$Vv>w;z{_XK
z(()5Y3l%?@Oe>^-G!gG-FS42IXIr=3d+fXOpSQxw5`?#K#_)rAN!Kz@EZbRSk1l=#
z2MXo3Z0j<6an<`iGr~g*_<AQCQ^V!?>+LT~U$$QR!tH@Y&*A=h6UUSJ%obZAS%O7s
zV-%?0wcGyv`iJ(|3$yH_MXOxt8}skcsw8&zK1Yk&__@=F`T4&Ap<W>cEl{5+XW3Pl
z{4M*-6ZU8JiT&b}k8J4IZnfz@`hmSRZ>|+#(zn<Do|7vn!?6nP?r3Q$aB+`bF8^r2
z*EJ(XSzjD)$U|YLghac(dr#*eLr$c8yV)>71hkd&d=G+~C$jDJYtMJeiy_Z_HS#?@
zcvNs%`Tmf%M{~_p3SM0A+ZXZF|5bTPwI?qo)^_QP#1;;I_|n3up1|ZpkaDF@$v?zQ
zFaq<!-2fjPuGq?&z4m9$`r3q>_h>X(+eI$`*jw!7DyZ3Gd7Qze!;f{loP?fPQDcSj
z0LA|TrHPj8Z(DX-Qh2TNa`;QMTXEc5PuiV$??%q_TFH50=ca^P1BvV*?-u}Qvt^P<
zd0tpii&+Md0bpg^3Wh^dz>Onb4?c91;N2hv+7tymnbJ2|ow}lj>}zMCQ4RKs51+90
zmTj+G@k{H}J`wl7@+O5F=is<>>Kdo5<_y#H>y*X5jCk8tz0I!eeYqvZ#G}PxK5aCP
zOTd(X)*i4wCAFU|-tZptYMhNq?dw*}wNKg!p@Fm@jXk)C&q(ZQafz9>v1pAANgrk1
zI&}HeDth2+!QVj&G=~Bb`g67wSw+oGOOE$BP}6YOh=q@sq&LnVF;WvAhM{#*xM<pR
zJA3jJSB8#gl7@8eZlCAgn(S<Q4R47T-u(mo!gsWL&%e;70g`&+)?S*US~O<ODYx>{
zSzPjR*dHxdMwb*Tsj9M+XZ~q@(MGMqCH(J)kFu|i9%mP1_OO5E<{(q=!-@>Smj0a2
z8G)m5A`;KOtqQbTS~cJ2H}CBafRqruNasGv)Uc7};h-spLVHRiw-AUHE*HlgG1R7Z
zKMYf8PhIfFr)c)OE&suf9Vku2OjE&o))J*_bKpyrE}}I%qRsjxK<SqovG4Y{kb43_
zDS#iv5hhCJ_uU+{Y>I~yjc`B{SMDI>YZr0KHjEMz1z6&qp3MiqU9kWrg1O?jU+qs@
z2hXLG*8P|m-k(icK93s?XvK10Cau>m<~`Eu#C!5`7z{xQ1SxQOP(TyA_c?Vn_POf)
zxZ*Wi-!R+$`MKX%X2))B4@`6S_?)^r1aodp6mVb)foec%FMH<ddu=nOtm88WTMWky
z9L|Y`+y&s8!>$^0p=EW+#Eo@(8<N(?2c!-my=uXtfjm;#=k?5G|7*(%HrmLve%3iI
z!8zV&Nr9&|(Kc9?lTU$&@KDYh4|k@t&CMMQVsk&KwmJmM#H3IgHZsO7W*vg1o1ApK
zb7*lOy7q@9M#tC$9CVBsILN+s$>;2?MT_jevuD{4=6+&V0h;7ZP(p8WMNEOO3c%M5
zX_=N16Jt*-UCcpTg;pV8!TrCkUg^MBKb&S5CV{npsYo1gJaWdFwxl56el&R+M<-!b
z(Ez{#usu~)X8+6kLnzZzXP#|OE?;V28af=G37J+U*YbXVDI#f)zZc2{-Uvf6y}Yin
z!ioWYZ<m)@G(c}Baa&6eKpvctxxY9nSxb&ZZ4!Km^-7>b7qn8z03A6o6k&i;PUBRl
z3xeY9;CENzwMPS%OXmSLxu7V$aGD|W!!6ubT!FGE09Xe1VK2+(z8Ca-i_#*$4*Zs*
zzIOaB<y&P@0zI)^)O*TD@pU^Gf)of+;ImJGP|T*nnLM;V=Hv(8NE3>=*MjPgZC1tK
zImGfl8=T(90k4*vFiw8mf;qMZ3h0=DJ}EsgPwI&vwHL5-csKO|Q_^Hbu<vjx-ZjOY
za&dp8pm%nYW@=)JbxZ2%7BX}l<lQ4tE%>at6p(Cxtczqalbiicjcv`{V<X2$I`Gxp
z{2RyDLWL(Nir4j#`Jd#+FiiR6q~l97&a(3+Ot8#npRtEtc-EqEjuEPOjT1Y<wbI+A
z$^)K;_Q0%=@NV`7=VeeJsRJNz1psJuNwEz>Gj<jSAHM+@8=01FUqKtDu%UE^J1jXu
zd%_fU)!AP#k^ITI7uYq!Mz~KkZtBYcUI_w~{sWnHrdhOmhx{=ketT24-8^!PUD$u1
z`@FVtxxM}J^PK;cU>g`Wh}CL>XBsK`we(ojCc&52INSNL{RkZB#Vg>4K8?f10C43!
z7ABXOVdLOEFW{L>6dkzoZu%n!g0)7E8Yg#JUk5I3Fopy}kOFO<0#}?f!3m`v_&V8a
z9TF05>q{5etg8EMLi?{<--O{z7EELeM8Q7R=Gm)NR6v?87hrCIr6UDB*SSTz8+?;#
zQv?^i)0{kxlz;G9kOD1D0dag3`}^bKaq#BHAIF=A>qjIkA%7pBOU^k2tRz3~0=z8C
z-DL00pKp&ZS!io2EA8CD!)z8>D9=$`bMh~C;492tT(rQJtX*w$Nk`{!m5?v4FI@QX
zTd&(B4ot4Zo9&NQE@kg#tz~gtU0rQ=<!rDU6O(<8GSGZw0OTIdUT5o`DYtVovfRPZ
zbGL4>dd7({#51{@r!M!t_L5a-Ul{o$1H|6r%&)HiBF6*rc2lMmXwS5-s(=Na)+RUm
z_DDB}%1w{kCc#(Jt9RmJwl*d?aW!rEl!L-x%hNQN;;E%ThxP|Nc%ICX$g^Qoc$BT)
zy3xM+&fRuar|WHa=$XuOT9pcG@zuJMS+`(bt&0Lp0Z<2*7}4^`813NbTs1$BPbCq&
z5v0Hgqk!;>Oz8A|JVDww1&`mIkWXjXQBz~v0VlI?JO8!UUo`{pj2tuG?ifGO#ta>1
zJvkpM>Fc-irq6R?Q;VT^nh_#c;CM7QTdHWb;lywf6AK>P*GJwApD)~I&u`9gU?>gE
z_5JJDn633WCuz@qufK22b08`nM;&>9scw<cHgiX@&6JyYb#_^Pu($ZX#ESw@$<pke
zH7hX_!x<g#@8CKS(DrQp7JD{t6ITQPSv+}F`mRo!zd`VI+BCH)+RT~o1kh$T2U2gx
zk%<PM_;}Raxa!w9q<$L=K?<~03V4&L%I{66C%P^Uc!fn;UTMBv_3FJgAaasTOt{$U
zs+gKXnmR2vx0F7CT6w!w+a|s)^BTqXzK{Nz%76Gl!Ar;Yt<(-5*O%9k)APkSk$=7X
zy>BnC#@9!??>*PIYOk6ft?mcj5uXOSzCQ5ev++xw8KrSkJrCax4@Yw!MVm!WKVJt@
z&*M#{b~L^`5cl8|j`m()>=XI>(B<=T{B-?%9QkRUJk<ThY5T4@;|q2U98bO6J`3M6
z*%e;~@}|zyTC{P4End08{(x3$)!dJ8JwM1Ex$q*J!Z}(gT{>G5Kt`c<C!1@CFR&)+
zH#Z0jCF9^CmiO~XC(sxej|G;5MoS<|&$iNsx(c9iUwQ4|x-*(Gwa<2*Yt-3BUrPcw
z#qyp)9dQ&l8ZUuch@+sxn(<AC9|Ye!WyI-7{2204+-k0MPwDCUbO}cXUwEO|C#q;A
z6#})ELE&_1pcbv?ezOr8)bA#=Mbke*VqzV2+RDlXd-V4^OnWXbxiZ!!P3FXO|Fa{!
z9()v}K&z%e;ADC-3Mw-d=Tg3=+-`dLcQ%84GB*sn!8R<!{dWj^Wtt(7H?_Q~<1WrT
z`RCl1Y|e)H9E=&oYU=4UT{e|ctutOIJW;c|&IV=-vYXDh0#Cj%Zg19!;FXh20SW72
z2!`*jnPX4Pd%+Uhh1(v<Ey2(xC?Fox0q|k59qj8<zhFH(rMt1_WRI&YO{_o=sk(Rz
zALTf+C}t1UD+}h^x8Hul3{BBs4miGn^S!3ubPIhn)9oSlSXleOLeU<1dytN2)D?)*
z=TM=P`}%mHzz?9j>zx|!{g1s^jo)!`1JV$X^MdzIiJk|<(R1&a7q>NhH*UX{EYqRE
zm%qhB7|ejloX@e#+SOKrzp&es1RV@*lLEBiK6#ztY_rftUUp7qg|rWIH%lQbgakv7
z0znEig8~|TouJ7?T#ftqKfd>*6;>44-!8q!qUsZEWkb1J6>Ub6O^T{K<y54$uG}7;
z^CU}~Nxlu$ayJ~D6PiTBQyNKv4x8OABFYxb`Kw(q>@4fhxjo0Fu&DYOn$l-3d)Jl~
ztz~l#CmPku1y?Y%dJ0JD)?TM*_;JHac1fS{&bf<RnYTsorLj^UX{Q3qUyrHZa$Lx-
z+OW><{`e!yeeW$xIb*s#dFd54w0CdI;H)h<z6cDSrp()W^cm`^fz@oazXRK^r3-mz
z@a4}XJPK7}_e85K;XuWb0;^{eo(6BjBgtoK#BOP-wzl*%xS{C^*-_v-n<YNN;uGbw
zQQ_owXUS@ewWlI$SL5KHAO+eg1vIH^LeL2O{JdA~x#cg}<JUiAJ(ANbcXPGR97X;8
zgan`IpoPa-QoBg2iEnS%4m&fLQ!tF2kQ#m_6ZH$X?3%ZZJ9pW(hy)zLpZszEgwobu
zomdWjw(uBB;+(M>HuMKW8=!y$0uDe<t*W(6QC)C2A>rV}gmxSS6w2pB2-W*R7s8E~
zel1QXwiXxLs~nd66rKSWv7aifYd5=T?0Ea)*Z#-eTe`$P+>~R*73KDoi!X7N_QrT!
zc$zZZ3x<<RfjZppKk@#1?o73zxZgi>$WRBWy|z8x(i{?ed5L#P>R>+{m0|ZhRcPsv
z`L>1A>MfZ8O&W{O*w}r%glyICYjA5ods&ccTjhN!Iod|`%Wy^3qthYy1}}eQ`8rLi
zeL6JlX;VjU`VB+Ce09+~cK^G-u!pYsqm9Vu&mqbuag`Y1r2#>{e$XhhGbZl$YIWK)
zL|dz<1UL3z*rFx2=iLv`fU%XJt<|B4<#omscvjmT6K(YuU(m$2g3(SH1;m>;U|=J-
z?RokI->U2hVovQws;aHCvg$gp9#&i}5Tuz34fTOV$<6vyBeZ94$+P7fH`@QaJJU)(
znq@X_vORjn6#M;6H`}mYz1bt>bC>w``?KxOzx%maW?#GU-19ApeNZPe;2y&g0E@M>
zLu)!?>txcPab6zy-3^c2`lm<mvA@cG{mmboB=ALP#8i<m)z~3D&HlB}!f2e3wTo@v
zg!7PGgQ9EW25Ys~vh8DUhUKod$ih6%X=rC(9G_)9yXsVOHRb8imW}JF4yG~QQ|CKk
z1phRN0v_$$WYeTKf{|K+0x}tn<Z#=$*^BJ1=e}t_zx+2gx$hWvmRC5Y#3wz-gjrs*
z^f~HkwR)Sz8t?mfOY5cMeIIXnr|SK~mH%+}kD;8J1GHzGIo-|OO8PS!{FT$!9@Urc
zX4O}bn=>aKD*mDF9gg75iF>#-PUQXOmhW)!bzh+|ZMiSLR9m^=#q(db;Fr!}yz1=n
z3|D*2^G@5iG)K$MiA%hMOBWZ_175os12^Pvvv(IPuoo9Ev{|c{v&h}aem>)DyX^Km
ztPAeiljAtd*dO)~U&oTTbh;0)b}6Z+L>80F`W<zc=VDT>Lxlq!aCl{H``^dLQ{s(|
z35iyc-ov6en7gIJAvIshB*fW;nN1qr&nAvZvyV3xS^Va;R+*B)>BK|Or1)13P7~q1
zr3rsh(xYQp7%MClC1%S$wzNpj0?MzoTP_&qn}Y?YPlNW;Ce`}--TUWY4VaPPc<u2w
zg16FfQrhG*kVz19eYz2stjV^W^}DP+EAE5)WPLiqao*8lSX^|Z&1Ve$-G@K1J7(Nz
z=MI~OAc5ylkCBfvk7mEFeBFmXM=gUF!TWA@ZjD~>((%3<J#I6Xhb#Z#?jJ+N9D}rA
zddE<NQ}T*eW$(L5g=kh}Qan`rL)|-E=FN$FxHL}W{pObMaPbdw-;;|^f*c}n(Z471
zYd~m<{Ns}kd>CGi!faO<&W@t3c2B+KZ7sBU>(<)0-h9nUmn}9MKFWSKYOMX_n(J(A
z-+sh9AY!{kOJot55_<W{(TEnW_G$s^BnGvH$|DWjS(riQ*Hqd3iVAnI^Jfo$9ftRs
zKyRIaro*BkRf~rMoY5$0uW=G$BJJnbPq%4bd)$&UVy$w~d+htdgdwA^e>F`^L+q2#
zc^VZlczH+)z$M}otwiGj)T+wN=Dlq_>ML#imYsIz4dZO=z#jfLkDVzGnRP3>>4B>9
z%4&P-qa~PTH8^|kNLDc<$ad+NXoGrZS!6_*zjOJtVX8);M$Gdt<Wb9!*IoErXDhxg
zy#ZC%3U09V{d9jD$5Faonl8RSuJTqMUTGS?=i(AUal8Zq%d6)H($?EvO1^sOHI+@_
zuxaa|Km9<kC4jMVeJ<lsgZ1r^Zb=>Ft?~efcXjsOQ~Ckp!T~xSDAS?xSJrJUyuV<T
z<rbCMfQ&8<e2KgPRX>jE_-GZ%A<Cuu3hj4mAGAyQO}DEiT;f~+Yvs~S;Kz|e@YNs%
zf)of+;B=tC{&}wngR`5j7+<}8S31IK@Q6rTl$dL;tzT_V-M7wOnLXPqE#2-r?;<<*
z_ODqN&f)5!eXs!`FwemGFd)iF|JexuSj3rPU+&%4zBl6>dwIzsn?LJq>)bxxxtVWV
zpcLXKAXCb_tvn@`3X}wd4$!kRakQjeN1O)cKOuu6H0}a(Nj&Sw`?Ald;{AN?OH4Q^
zf&2~x&8Mv+92R`J;`teL>WIGf+po{CZ{PQ(_3ocwc^|)S^)(!c)?*M}g*bn}Gih*}
z!FW@34XmSg-S}IXG`^>6FZkpR@9IFBUYx+^UVdJBdMhxVcOCeS?s?bV`?}|a#%VQ<
z<30Djz4w~(eWbE^Wl}oc@4#;_{lI+PZz6>-LWJ>=TlvDxW(#LodUdJgRPC`LBfHrh
zS4?AdBg6^kjRkfu+0WYdZajKzEh=@I2@$lSrVemr77GAdwtll+arOjj9~<q6EiyL_
zjp-CPZXZeT4FoM-nt@IBsdT+ad@GN`rR{;8z;fu-!>4_4N~+`GCV~BFE5QI_=wL~0
zR+hQMi|;RXZg11Oa{dV5D=;lr=YaQ=j28~B@4;pA;<VLo@ls-3w8h9tk-}kU;CtBg
zzxx<d@dIWxd#mg}C6C+4v`%)%nP0T{h-lkQ9~Zq3np>KlbTDR+0znD{DR5d*AaJf~
zTyf2x-e9VDZocBXvaZf{l$P2%%a_@&-hIn97H8WTJ$l&L-G<wpzkkF=^z3C3XplU^
zZ&@j50{7;-Bjwq+3@7V4ToV-L$Vu!4O+lFwFHfjUBsz{FFzC7?l0{)nwH3-dQH%PV
z{nZ(-j79#5rxSH8W}jOHahwZlr3Kh>fw&z(ttGr$T3f?&?n0|@&Mn)`dnYUi2v$~F
z`*rKB9kNRZa!aJ<<`bD`Gb?jM@FmiC!q{z>PH`I*?|JlnOYISFp-bPlEnBnAuvfLj
zPG)flXj)oV<(f&0wjW)9i*tXhl5@oKb1flfrFG_<w)G{uEURx9`}cRQvTn)oryO{R
z|4(Kg(BKz^$z>fLl|~KdVZAfD+RBZ2wl+84HW!rGd-Imt#nZ-GUO};yRa80K=e|AC
z+_&t**XM4-)8{Vh)+O1Uy|HQQc1!FKXUPfiwuN^ps;Vs^KF)e)b#w1{jI_0|#CDWd
zS{>S=Z~$>;w-nyNLmZ)+jlVft3S7BTIwo6T@eUWaL;E=E+dU1J-t}zSEwG(C>#S?%
zWXtN-#Y-02G1!$>*w(^gT=q9uOmvj>q)yR(!C(1p%qwtOzSJ%qt%SHmJIX8$lQ?Os
z8W@POd0t&pYn_r3tXF30L22(Oud=-S?Y6sN4*=Ddc2s19m7zggo3q7Yp{2|=MVFnF
zGb6P#+C!gBbY6au%S-wg)wM^u&*RuG%9)*)k9q$-7r(5s$~JE+vh=Q<4yxP!g0!(8
zs+ap{e@zPojlH2PrZjNW$6Mvk*tY6TcGtN7vu+8=Rs&ynE3z$=T`-v-1%ea^QsA_r
zfW}x)#&sacFPKPcvtm<@t=X`_{)(r<S?|8VcALKTz<C$ixPCV?uVq+gd3y~A0$oa@
zEsV>aEsV|&(*`10P&5t^)FlF0VLRVH8adX^qt4aL<4<L8u*Wy7<($9>i{e=^wwRY>
z_ORPI7&-wtVSQPdRp6{*7jxmi)~>ciWu<mwpMG{7TDEA+Fh42Cx9_Z8VbRD`J9)q5
zgXT?~LXmzMUL+BC$zq?CaJaPPuklnwEuU>OQ#>O0Qd(jrF=q^>SwHyFd6v~B!M^<P
z+Z<)xV7=PqTP50++Sqv87ZYdugm@bv=Vq4YlttIc+!C9_Oz4dqKtE-LIi`#echNwG
z&=JC_$}I_{Z_e&eE6=I5FJC#t?z-W8>)s{NwWYTrb4=N^z)SRJnbA^~7D%kANs!kr
zz(i*}cnWM}rggEJH$JjW0Dui!3azS!l^KB7zuuf<QQ@I><0WTWcjD;YQ*VA^bqqQ;
zT|Ak6!F%oT*FUBoBwB1#gyrOy?C&F&P90@qhxT<Fdf)hPp)K36#kQAK@y<T$5F2GF
zN%3~YS>pjyNe*cJd*(cgM`O~lL#*W%mI8Jf+{VtKy)&$$y2e&*DzFI3qK(2|x^OZB
zeu}H@iuJkn)+fuXq@vnt*vpnc+F2>dcHz{~)+IT?DywVl`B@7XfQ&plIIUkTz*B%}
zaL;WxXlSsd8@E~nUe7{U$-4HO@iwq`rb~O{=6rkQ{Y93)qrxh8)?0G>7#on))vmo@
zimd^#KK;%D_$UDYx7TLQTj@*-zIFZimXe%k@6TUhA1zyNg{4)b%bE<Dpy^`<+T>A#
z8~}X@jhQo7%<Sqw@1pE&_KnNWbl}UI0GryJpY?d6M?0B$z&p<_dBK*~y<=bMe6O`{
zmtwp3%Cn)j&iYxWM6iBA3Ir(-q(IA3K;x^#56MCfbn&|uVZ9jO@W!GA_S{Dw+PeS@
zInB6p%s9L6&;PK#m>0&z#2nCYk%pjy_kLRdU7x1np)F7($xGI$M)vsNqD$?J%<i^Z
z0vq(2HfXR-U%bG+F#8>=W`6qqkP-HSX=gcLB@j1;I0CPg0I&_)3vF_j6#L~xpK~UO
z^~gBm0b*k^vTXA6|F$eNZ+X1aa!Z!9DXp>xS-1xdPDb_UX>s6^Xgq4lQY7W<^Q?QO
zPuB6;?b9?lId_f<zElhqQp_5Kuy)gh6K!PQOnc(Zx%R+|cy!rAgVbSySOUUS<Fv(~
za!1HqubtJ^vJOCf+h(BLD*L{6R$c~^Pf4@yetWE)J7EaS7wX#ZR5P6NZ{Hq=7ZLja
z6(^6*;!NcxZH_`Xs_+3l({1AxT--8%NJBLU0FtqI4H}*r+kjR_;A_*i?XX5W>(rqG
z+ND&d`RNoN<1|j?fSBR*h3z}a(L~hS(sj8ud_YeCQy8CcXQp@g)RAb-cH0`XY=r=t
zl^ZrY@TIdxI<TKoD>Ov_Gy$AaG)rzzRrVINR8cmfPX^B_t*olX)^JbYOB$~?K3?j;
zOkegFr2w|p=M~x}zXtE>^Cvskw{ZZ&eGHz3#P5~f#VP@p(w3~-T;Q}+BmHTYbGFKA
z(iZrtLKF7J$4ji7{B#sS8d|dz8*rJMz10TbP(m86;k~*sK~=idz2T(MAuh(^V`H3F
zYu3Wm0M{_PaN=NRmbhfyW}CHOwe?4n*PeJWXw2$E_BoAX0-)}Ku>;Wt9?<Byh6(<0
zLV<WS1Ri~9@!R&$?1${eUiVq*z8(y>_3*K##x^?E2HQ7CfglBf6gbHg*blapFLSQs
z5RI|Bm?PKc<=MJTIriHRX4{;Zud}ghxIJ*@bo=2|*VwQ=eJvqcTM`b0{TeRP_^gHm
z>Q;=o<sYU@bHHo))-5*ltyk?5y#GCV&INYOh|x9=clr;nTxz$D9Br|Hw6DGSsy)1M
zovpg!TI=7XtKIO%EB12UCVTzj%Pj(GfAPiV>`9(KI$?^HR97*D?X?>2d!8d(ik2NQ
zIV>tKvnwV~wYzV)(d~^6^~@jxGC9?<aFf87%BzC9=^mgmtaqCA>wcMi^>b&~`ztot
z`>Qrv8Q^OVCP-rPwiHy{5Cq}v)w^s>b-hi^>dY24)RrtPx22jmVGY4I26MRnSt)km
z$llHrEvdb4;844qN@nxMsSXLDcE`7q9g9Rp`3A2;^otY5LV+}h0idW{0%Wy-C+7_b
zpfC&P30sSHI1N!g-#Y<MLsHY7>7WK)@rAT#SIiiP8DE;c_|6<#x;_u!B>wlU;Y=Gh
z#D?_AbQ<r?nBs|>1U^d8q$zlsi%QH7&!0Hd#tiLm?|i)2K3=|oeM1rUdD2eAtnryQ
zKXTx!3gD!WzrDoD(QL(_-k&tQzt7Z>_demh4O@#$&P7xY1*JW8WIvlac9?y#comwe
z6==W0?UE@Y(fp;@^D{qjfUl-*m!m-uATqzW!V=(_%+xL}ZD)eGz0|gn?}&lDY~0X3
z_Mf-rIB+<6NFVF&2Tw9V)Jj<_ps{zB&ty|3ozl)pdl(1!Qjo?hf!~)+A7?2zJaIE1
z_XFF-MLeDV&{xA)t@~)hBD?#Y|FdsS{*fh@4Y8VPEe!e2hdG_e6RdlX0znD{DR6WO
z$fS^&mp{@<c~D7i;q!`%?A=9+?CnJh?Rfx%MMm3qr_HcGJoXfejw#kDz-dOHOsjdS
zB{f`<J#_|Od*<cV6e1-UA<JCar@vK0uiMdbSxJe#geGfHe1hF`*10wuGepZ?j|EVa
zZNpRI!>drn6m7TVn>X74z*lF<AvpD@MlMpgVZb2H3a+x-X1&Q(h@}JMw#W?16AoRh
zWBo&Um5$m+-^d~{m_<g??rOirZP?UY+Vg%Dz;ZwHH1)+M#A`D6Qd(5WRZe>wqy_8A
zin>1k@BDG%a6N5PK}D7m0hyG2>!Igt@ms6xSNGj$gU~`~uaBO!y`WW{1EqFe@3_%g
zgxgST;Sv&k;NU<hPv)-!d|Fw()3L40@uC4d3jKR@vpLJx+l~s%{xGwvsjWv{z1L~U
z^jw`-<kgu=$%#IjZ=D&URHZ@lx<O%anY}xAIU1>AtKPZGnHD-;1IYQ>L|rMwrJcxr
zF|k^5LY(u+7?1N0rP&@JBcPJ4gR#j#=7IuVVGIaz@DT3@Gy*YX&FK#fZVy&8`?Qp{
z0Ad2^DD95yzuJZ4k!S|`4&<kEE0W^b^h(;QQv-2J0ZQTYYo-78oMrak_ZC<*@w8X2
ztg_aXTbjE41DT(cdR~PSlL+>;>F~<Gzc|Z*ENQ{20d^IXS)f&`PnFPf{NUbh|D5O<
z41p97ZP^&i2I$rK8||yl<5GU&Eq3XM>Gt01Y-V;LpmPVl8vGrkK#&4K3Y_K?(3Ipe
zD3rYFlZ7-F)^aq`HV$%Lo}F!f`f#?*T(-!pQ&+oh+yuMzqKj?(fPogr+_*n5C%So>
zIV(_h^5%ENBiZ8)wL5WQG3PC-8Zq_2yn5WJHa`KcDyoy_c+J-asL~>DF@Wh~KvZ8$
zF4yg5J}=$jGRRC!0$f#FKBk)eG0FVdh%xrkwk<Zgdk<$uxTw6;0n2}K?paUbPQ%<#
zpSi^O)5jm$<6AacG5|^56OTVoUStpV@h7)mP9gEYHf(BMN~Wr^0>^b*k*%~du4O~B
zz?YY`gh(H~eA*P(a4o@!UIr)W+bi;N_P_k`ja8UW?q<Ks5*rBk@(#~CNkwV#Y&^z0
z)%&{+Rk6Un=C#40;+=?l+DD@xz_2Pi4=qtUr_qwb4290@UFyr8q?MT3EnT|_bG=$i
z@0{rF>-qj+0;U&0cYzA24~XUh7;>iZ62K)NZLrJ<CvaBY{1qEqnt`ikqJ!R(2SJ5E
zx_I}z95taRZGk4`Q@5*OfBrI6RJrs#j8z)fAGza8+gC<k+P)|I)81bh%0Zu&Qw>cx
z4Gg?v2lcXa_K`IJ&a@XT4nQbg(sT8HpXr4wHuRI3Wtan>`hC$EBOEx?B2683^xe_2
zx%|oA(MX%o2zuT&7dU+NZt1^!S!vWE%3Dhd?ds?6we$N;voB1z-1gPC!*#E3Gj~hp
z8B8xofglBf6ll{FU~-YgiFOXP<4n8oP@fh_$J=el&$oFimf4%jmfBOFe8@x>Y8l;n
z+wU*E!LGh=hI6eRSa(lulCXX#*{P-E6%P!I9XZPW^p96D*AI6d6IB-PSzx(N)NkKR
z?2|*7j4g=@%I`rGzw@yMV#4RFGU&;i@2Co`_sE+zp+Xuh<f$jut+rnSzW#UWbo)B8
zOb29uf8n}*31BxPI@Vs^l4~zN{SW)ez#(>azX3LZ{bL=_GCuyFe_05!g|t)kPCz)u
zTJnAf)-@4zn=G6~<Os@Y(9^41vs3jqayvA4w@g3V3dc{h6lwVsT8aTk>X^XSfifI(
z^^`=b2n{gTA7A>|QKENxd%NpD^X;-TM_Ats35-5)*(wU!%tD;Z4&2P5wIu&GIcssM
zJPsC@`Sx82SQP?}1Y*Vv>SoeD2~a3bFFXgX-jwe&L1k!drU0I_w@E<*vPawf{m_5U
z0U*F!X>pa+V1gUTKD%D<QG518X-}Ba4(u^XOW<RFdi&Gohd*&WQ#_4LS`g@%h;tjR
z_b_O!+qBi%ac}LWZSMF0l~EoI1$gwH_ffgI)Y$62d7@kHxi`TGxOK$LQQ%PEOdzWp
zd%om3v4lNoeK5yVh+?HmNKe31=9HqFv~<#}2~25!n>-(8v0tvJq=Nl@F?dw$;GBTC
z`l=xN^LI&pCjO{ej@}2gaMP+LiiqBk9Ee_ovz*&rxgXPxF81BCZnBuLNGnHM=$vmj
zh~2a_PjxIUac~F;6E+%H%8irZ{iRRjp6Xn>{|*-|5VUR`N6KZS>t7aWfm9Ejgmm6o
z=1^XT3aXzBzR^MBt<qP2EwP9$s(%glWJs(NfkdNnu6;`|+z5sfP63VPY8#z4B;LgT
zlM6D4S39tSy+wo9?$zYyGs0@o<PS>B>j#J9De<Q2A4&ap`|Gd%qB3@5Agg375^pB(
zk(lk%bMT`T1=s5|DH1fAL@;)S(V~09t8MF!0(*J>Hv9R1U$=#8mYH=;v!9L`YcGHQ
zC$?tIHe90bvVLh<4tQxE)54=~?Dmb}N2+FRtt>@+b7^$6D0XZ?`6*1qd4)cwDriwx
zRIJegFdD9<GJn)>EmEW9T2)eP6SBJ7gZ&2D*V*%BaqaC~K$JpGaS`S?_4Y+f6H9UQ
zcKdtpSR}H?6L>SU{4Hi35-ksn;}`G}S;qdcyV*~7_xtbImhb$?y7KItq>lC$TCn8E
zDEfr2EnULR{Ucfe1nVh(J?$wcA(oG}N&?R@1YgV0N6`E|eDf`C;_}+dlb4Pm*-yQ4
z%;4)&DYda160{{~&RvybkI!0bDTxR<YJY^}f6iQJKfmch*CE?jwSvVx1O)`5cj6UL
z0`A-u8|{N7>zwC5b)*5^Q*F|S0q!lYg9&_f!URwntZ1}B8L1ql;12>AO3SUZ`Ns=^
zm0Ioz9BD95VBeig@U%_q?YS$g1}}fnPBXL@VB}L@yE5@x`>kZIsGvPlx{d=7x)Gjx
z+K*NP08+YgE1#9t)rR#-x1~73n7w$d&78jqKoo|F;a;1Fr$w1h%5jEF4CM(?X)37P
zHE4Fj8C<>9J=wl1ZRH_zL3v>ugDd_y&`5NW=R)Nx^TnGkp5mNxBw(s24Vk<a&R)2N
z{8!r@SDkGm2K9E{9pxb8xp(KezEgv_Wv9eA`|4Hax_xM(n=6wB_s>|+0p7LHau;-Q
zK~3t7;zy~g_)-pFs&>`cZ{B&#@~TSgm22*?q?iu2YtL>6zK@bbt9mR0-mX-Bv(A5{
zZdAasSaB|3f|cM|rXw*FsIy4q??&#{vHnq>T0N~-o{a12+lK;RUVZ{bsl?gFI}$XT
z6C~VLsbBG~R!1A>qe(T5v~!75iy5gHA%ikiaIb=UJ6st<EEWN$($R=0JP+f!2Lia$
zq~O&@E7lU0b42f8I3xu;T4g}1ynwbzhxWDHlljvQCwKx(+J&|lNRkMsKJIJxb|x3z
zyAD~x12?-9M~245yyunsz|+J3l6E4nA2jAE@otLxCVW}rcqPQLsOxs_??ii4q`t{@
zJo%UVc~g#mj)$w%H`7V4ko*L6k0*$ZqK6g>Lnx=_?7cW~%HEM{^GjD+e%LDe{nN8?
zpq6MqyXX@8-L=<P7FvsLiJ0ay2d-QFk^_|W01E}Z-&BEG??3x=xs~nMW8HhPclxpf
zH@uNVn+v|>FAY0*Q>OG6VRkt*CB@A{p^QsAIFoDo+ppWN=6zyMXJpu|lcw01)HDlc
z@pT0B%)x#9-*F?)4JY?>06={Mlfrsrk1zM?!<k@p_7KlMEZboZUV`-o?Y4UCcsI_a
zB_&xlri*X!tP}D`)p2nbg%=-lo>(umZ&`Raj0z32?o-aRFP=I5xY|X{8V-F<R5&fc
zml#37s~&;%KkqD*gbM>jTOk5#hfXne&#O!9ni->QKxP*=Xg0NTo~T9&rh9x82uA~z
z(ItufQ~)FdL7C>YM?)k~)gO<Co`VVxd}%LL*NzFceB&0p33hN^{=5>zu-B?bD#s2o
zQF-raUsZ1oztve{njExe>+JDE?IS!V>P)R+nD0qDv=L8(ok`DiYRb^PYqE95&Ab4f
zg0xos@L;F|pF^4O6p{gQebYKyXZDwA0#y0sQeK*-jkw5He%iA(3Nyh0Ju}=pGW}D1
z<D(<oIbFIbP}VP_v&$=-_zH=XNolK&Ufs``IGlr%<It+%k{%!t4xmi!oNOtbaE_sO
zI8^y_XO5<BtKGgXY3{0PcRJ@8*PcJgK3THX3QEe{L>CnqhUPET<t>1hPMPF&Q<}if
zTIi4Cm2S{U`}P!?Iw5;)sxwhun)i~uzWObD@{7N-%;Z!6@h<oPt>^JhPA8Gr;^bZM
zq=dWCQ8Ct=$?IbPWG<7jBMRg0H`$D>@IXnCtC<r{x%Sp6JustwqK|jYPj}r|5KM&F
zWvsB?nUZGbc1g9L=d8DPtI@i)3v&~@()H5OyAnVpXl8361d|$P_QE|cG%iQref0tf
z>3{3d*J9|S*KAw^hzc=wZn$!)*GBO?S3*2{_pU;?$U)FwpaV(~W~aALupjp9Ycq=q
z?Emuf?8_aySQiABCyEQ*=5q<lf@>a40_&<e=sK``x|SBMl)hR@`f}9L&{XE*z0)a(
zRvr0hHJ%e!?HaTt`OxfrR_$43VsH(!@1}HfT7XA(6j?NM)MA17FOcS3I)3taO4kZr
z`}nSW*X>E85<oM9<9O8WZ)`8H``AMgPhOR@rqb1WYI8407~X_NK_Dm*9xL-6@ZGo^
z0guq4`tnj8&hC_A--0(+z<05vBTcLNrrd>VQ6!Q2pUph6ntHFOhc~%DEiT^v&~J$S
zYx73C2mbsjd!pjt-}{ORN%;ULstlsZfjbB4uDS$1S6wt7WUD^#W{iL?_l_Psos9C~
zADKxGi$d6!<wtd0jaAiF+1%Xa_U`JB?SqoF92gvDrQ7@2->&|pU3tj>EHGj$oVZ@l
zS)E?0-hAhX??pJux5`kM-(dN9?4?fhTH+`#wbIAZc#6MDch=f=_BAB{s(+-@fdBwN
z07*naRFb-OgU-H%z+%8xX8U-1X>*R<@#;(V!-<n^SZ0=6%$=XN*=~OKZCj&5mDwkk
zgR_kR0J9O86FRy=b1g8OiGz(FzV?#+>YcajR!sLs_2}iy=W}+H*pJ_TmqB=^?IB+s
z^VGaRe7(c}1o)}Es?zS9ewKaz^H-9L(jtHOHqtLc?QiSmWpct}pO)auqv~Qz&mR8!
zLW}C#-tqxn;q+5=Y|AdQf4?=)?!M*XCa;QkX$HSr4+XqVmjqzA`hv-aEtm!zFRq+U
z6yV`dCW%_<>X!+4033O7bO5qGfnn6(KBiA#7|<)jdh@OTj1DSR(0Ny0=!}c_FI;@4
zcj>+d;O<?Yz%XONaGNpVz#WxCny0B_huEZ11JT0mazOGx3<0D#yQWcnyK~s_ZCCk(
zUN7#XkpoR1FK9dyFq?oE#qq=XF}c+_&x;<&^y2jcX!PMgX@M@880w>P37A~~FqDQ)
z8a{zYF9;A`an3~V(tUe0Kj>x~y_hk6*s+xyx`jdW*O$z;`#*lj9=!Yk8=BV70WY6O
zb8N|;injzj+<G!Ar_cB7XHx(|$+UYRAaXuH>j#^&Z6$*5_j?ayb+Vm3HD|VMr+-K*
zBw<bq37R_hFa}FM9LI&sQM3VEtL73=rBTxmEsd3e%*48IuMB{b$?E5DHg+d5@oI98
zAzm`i8u+dB<iU&W(`cXe*m>+lxQ3$}o+v4_1qdKYRD!lNR^nxqM}k{{|J_*9=|p;A
zT+0lrFXlJhV*%PZ>#T;nC2a86X&tJm&*NFWZ7Lu$6Ct+@0e4|(vHf_%8UR~6SH_J9
z45*LoYgxT)Nc#@94MFDdic;%}fGRrHl8?;d>Pd7vzopfZ`)8*a<65*(|0&_Ov~ag3
zCfiuj`F`Oxi$vJp!gC*m_z?__0^*bH(B}TsOuICryJd0cY9+K=1>GOb-DpoBoZr`P
zuoVLo9w{raG-$gQ8jGhrjf;3wZ4k{f-4|Hi%5Q~kq>l@y{bqUsdJYirJc&Lo-dwE>
z`~d$rKW_?{C_U}7Q9DZzjYDX>FSD1eh9`bkzQelc8F8dNQaL={RKEHx7|@Mp0#`B_
zOru^CIiG6$*3Gs8A-X;3?NkvJpWpvx;b3Ct6iZ`qpadSAQ?lJI-n8Bcvi;!eo)NzJ
z>ds#MNh`|kt1Pz=(n;c7nG)|L9r0!@brAmvV5#m6T(=`1^;z|YGJaQ6*Gcq&ThhDR
z3-p1PsFM~e4zB_8EjDRUFO<a-l5|?GFu-aZW5>Gfxwfq+&t6zR$7Zj23)8lAyJO%0
zdO(H0G`nQLIaahWm442VFdd_Do`DlAh@*Y9>e~WtzWGKe9$V0x5fK2uXf5C#TN<t9
zts?k7jJADn<9d5=?J5W*V)<w#K9MFqgm#N&O#S<Yb@uo5YhY65b1huR`2?Uz@dpFC
z#`oxHpXBD)#Ap7+pv{=b{pY5gW0wQIMs)0Cx4!$P{bJ1uw;1K>Pd`(`b|8&X<>dwM
zH*IxLIMg-eqfy;hsr+K1@EA#b0)r>B1>S2-zuPzq9UCdt31#Z_;)g42+W5}aj)C!=
z?NuCJYBn%F!g@^0uveCDvM+2Yvfk;qo`)%d+OK1yb!&M`9ntmp{RQ%Mdhvp9P}Z2S
z*Iu2yz*gpLW91~&y0BMC?$uog7yu46Ml`;s`~+k?EtB_LgN`?}c=rO5c7mT`G`{DR
z(fd~V0!7l`DKs8vT<!RCa5^sPr|<d8<i+*Uk_PXPX_KxdN6*`$;sloK;CdebwudT{
z%iuHc$E%w}UXK=sua;tq3*eD<k(Rr2x&3*`|6(R{pH1mA21UFkC!a8X_%vGI6M=&r
zOwRYFb+^m9W!MUYwm-6hJ}t4M&0sbDzdMR;C1B?+_F-t6ESI){kc$B5BqdF#VnUrA
zN!S5>v^p!TggkIci;%xpahc=ceF>dA=(9WgrhPK8m1k0o*P?GR*LxARB}lkE4E*kf
z5LbclkdYi`S9b4Z&!8czs6e-XppnK~TP0io9$oX0mh#tXy#SWm7vaj&z;7JhaL)@W
zi}r67k@wRGw^yg8+q&vX`^A<`HXKlN7C`j1f^9Y*(^6MX35C?*7aP}FH&%~7s$~_K
zvTaeCq6^QYDO1Scejf45RTou_zUQmY9_x=3xCXE=HmQ?cnwDWVLT^?+@FEu3LSDpN
z5!(D8@uq;+blha$*1JE8V!Q3PXh_qb{bk)UZ8D(X3EJX2tCl#|+7duFh>z43YAdz7
zg5xdUPsdlJnMnIcJGE83Nsy*VoFV=z)-RGl+;F_PM`^)a`D$nJJz(79O{F97rL->Z
z-rFJzwt~F3*>-qSz-x<yUdPKsz-mVe8(Ihu-)#}!s*Lo75`JsJ!FMPMdGlQ0Xbb!_
zyZ=y|(y5Crh3EgVImadg+RubH&n6%36;^P6De%4PS6VD(GBktIFqA-x5|0*s-gI^6
zUaqc18x3o&kL<Bbc(|IfBtr8msLvcUY<n>^tC3JoG--<igI+ZbkdKatwryp2Cd^%B
zQwL76f{J3BpR?2!W-qZ<3K8O=+hu(w+uyH!z|xXZu>wi5hMl4I#)eWW4cUc7hTx#c
z?z3=m7cKNhbE6hzRn@j0#I519Ydr1YXdh4^jXY&kQv8?*ND}w&qWwc@+ps7cY%xY|
z+f{3Q0A#Ve-=6U%k;R2fcqkU_{&3v&EB&Qtxhx()OuS;+P5H=l5pH!R*nGh=+|@_C
ztsvqy{&?e}`lEg;VB+X&1^~M{7(wmhg`>~IUd&VTeOiJqky_?k_ug`m6JQIr@37Qs
z?`P($v+w`n61(!k$@Fg+O#>q#2)rB_j_Z&5g!)%?^&Xr1v0RVuv!1;ptY@z%*U$9q
zM21gy#7}3aGRc-)=cLJ$aQx7I4q$j-#4F#S%G&szm!F0L<<$7O(mM3LPnXL}OYeBW
zyLTY{gWq#k2j4nOeqM?PzW1k1qv^MI?ZxoQ?X{_QU*BHbLzU}LWeR+^E&o1Hw?;%i
zWTkv@LOHW*Bf#s$x?k8gr`>5644Z+hr~QP7=8Z!pb<%IDWe*+Px+4?gxDE+Uu=*d&
zo@QZA_an4SV`5@$wKPl!bLp(6))B9siS!CKUZ2&mv&qb5WI{44%AxiG+MBhQDSjIO
z7lUv-2hjF?1koz8eK4b^?L?FIzXe;k3bDI7ceVbp?d=O2SL@R8xPz?_aVSE;jc5S+
zcaXU&CRUio+`M&@%|KYYnY7yx=O^hs?55<-c0Zbr4|mtw4?3sXG}4q%vIs%(o8(iA
zfZYvkz|T@MtRI3z5yEJ9>L3BvWy)WPFGUET=L56^ycToF=g8#?5#A9q5JG#P^~<6D
zpF<FJ?W@A_qZ>j=N6NV|q|^!ey}AAgW$TU!SQ((|dFuTbT9|KOMm7#Xc~wQZodLZf
z(2%_cZGQ%>zKTPEsYx9zlHz>Odw^}Jsj};GH=td?^D1Qv1|L8X*gqG#N-OgiTA}Z(
zLy(6z2W;EId`~-ZKP!g4zVMf!4Y~n9dp^9d8lW-`9?{(JD(#Wa^PAE#T^lSU-uJlI
z3BJCkdoNqZg2VloEGqmIK4_1y`t2<_ZlOTqrpKF;Y3FN6vp0Puf_GQrmiyLio1I4C
zzi7RrVVVe^zA<#Py@B(B2jPLAqp_Pz+wUcvMf8d9(Du@<N&9pUyg3OI);f4KM&QTs
zrb<EG$#^4W{tBS$3_c4=OKi;Y1-^&*c{Yf?xf1Ys8N8|Bq#gj3crzLAtF~i1&T&F)
z1lQjKsHUSGE5@AhU-XS<;q!@TfWHnsR#ErCaUHA+*P_GCEIdr0KirAdE0prw(lx`*
zqmMsAUwD)EqoHRY0ILyzi|T0Wi#OXl8|T}93f9=v4Rg_O%`{8Ov@d6ku?Gfy)rMva
zu!NZQ$Yp3};Q4)kUhTKt8-nu;|36>lAXF<4ry48>1RcrMyGA&HFa^oM`lT|50`faE
zHb2jT(rswQX7uiBr8j?-ah;=5;J*sSuE*wlWPi-rXz7e^+4Q}@_uW9P1txV0Eke+K
z?wbXMb~w)n1H?t}I}$6JNXg>xqpuhOzCH^Hl_`oeN|Dodi+2c~{NXNI;LnL{pVJn6
zsa-sCDy`!CxXQ;1dL}P&E!~hx_jC_+JNMcP|EaQ_*d2V~mN-B7YKpet#8Xa!-=$}b
zbHGrC1#9S5=Q|!gIMKuZiA?`!_13s~xNw9=hkNC;x$hYZRqrdb7xVA85#6WT#ltQ_
zxYPV|eEfF8h^Pi-=5@lO@8_qolG&bC@t5IsY8qhS5zLl;3P|`jg5~_G3hTyifr0A~
z)OMm(`o-2<8-yVDWrQ;&pU<S*l?i=3nzC9=rsOA+sVQ7*Z^ExJTe=cpqDlIHx8ypl
z!P$VTDG114$X?^0oMm1}VhGdUU=P@rGJDu+G*C?Q_GNyDk?7wjPbPp(W`#-Qr~MBf
z692adu-^i_Y(p^A-k384XvqKe%^U5XeFoZ8@>++G+6~~9i6FX`-!dOlov=o7E3%Ui
zm=#_|s5La0gAqIm0h&3aDGiFEDY$R$UxL=5FGBB6&{*w42!9&Q#7G44MF_7K@N7H+
z`eXAyv@w8&s}X!_C}RoWPx()xe9Nhu_V08>fEJkSLfI+>9{4SjI7dX6<LUj!fl!3P
zIZQmaL7VHLWii6tPm2pM@2j*lXfHwV7I>tjw$|>#3~wBJUakN@)upCcF}x`uauNVo
zCZXD+*_r)EYJ>OCTE2l9={4~6{IXad_~QBb^nn!G<=cRi5Z+O6O#*L!iMTh?mMiEN
zag=KknjvW!z5$@>4q(wf#27SNsenP{_tS1!_QO5{9Dt9ek4*&_#^F-^ww$&004Bcw
z!}~IqEZ{Q)UXdxP%Mlik2T%i`TnujtSlz3>L+Hhxw=&AP(wW`5Tkem{e5LWbn*P%Z
z8r;5lgJq%Fcy{ne>p^{%z?+w#$sR#^&n}u{y`aOD)MXE!Lh{$av}Zu4z4X&xU^baW
z8tQA>S0t0fJ$_m^kar+kG;2B!v#b4j-qZ9QMiZR$#B}Uof4}<ISfQj?*M!c{Mb4#g
zo<;o{0063E82e%!5OclCN9TZKTlLSQ&9SYi@P2)hE0Um2F`qE_<gC|UwmW<Fv4P3S
zD6c{}%d^HF<qWT7h544kIOVkY@Ptfw-5{;@r$0$^rF~x^cqWSlY{dhz;&`@?wykCn
zp#c7I3nAW~Ow#aaeo2Qu;F??gc1N-G_U|J;UU{uCy-#HOQ1a6^cn#&o0@~9Bf8TY8
z*Nv2?FMUo#%|+70Bqo*^ndNyz_r6a=j?GI`w!>cV_`|yneg`RVycCd0oL10_s;ca<
zg@42KST~#6;qwUZk<3fJmD}UZ<3zl#zMyjZ#2o;loB0mTshl_=EMR;K;2{BUDy!^I
z4;f`YLcsiUUXJ~qeP7Z7)iS9Hd};QqWAX+n*i5ts7p-1ue`BxIjW{M)!b<<7m5c2=
z9aHSr1BY1;z!GOT*iPOJ<sD!4?6J}BMq!u6a3<wfF>!p1&->&r4M*k3@iq)$`J?Q$
z_Fq=tZ|v32Zbv)!78)eOIml&zz|9EKS@S+1{Sccse4L#Fu=^e$OTg<b91ol;*VWWv
z$&k^`9H-hpU-%}{eJ0J79AB)Ez<?l<4^7Z%S!cC5LPg`S6Cp#IHF+C-7y&}S>+5S*
z*h2umO95a19X8f}gtnuMdMo@DQ@Q`i%eJ3U)*k_GCnKnTD|?-tgLbcfQnK}3u?T^t
z#yTLF%hh-=_$Z*gC7t1k{{jZirtPoG=wUwr%-o*Y)Bc6V>6_c~5Df7E2%YtDyy<VR
zr}8%0P4LWvn3H~u_#Xq5XTY1kMhp85c<5rxtlmHaBwpO*_}Z7JuEpO9UQ196CqTXo
z$odC7{{cY8XuFajBkgm5wQsP9@MAP`{~a~aUfP~-Ux7bm61#iYXq$^BcKp(L4&)b4
zoNi~aZwv1a)S-uMMu_dZY=PD9thRr$r}7dlQuu?@6TpiRfFy;Nh$G(2VZ2dslHko!
zzp1aDyZB7W;!8&h>hO)O=?-{(8~&G;`2Vq2@evjZeodL5ho%Z2p#_|}dYRKiucEJw
zK&zdLM*3gy?6=uVclV|Z_Bi!s;&)oF#{0fxu356H#xBVkYZ(bC_DR8d8`^!Sjp{Yr
zLTC$tu3DB#yt6u;V5|x>Lrzmvy>}voYDbJF{wb}j!~<}ht5XVI05!(8l_1i~oqIRF
zf4PcrQT;{)7L!LuTRK2}3(wpwIX9Aai?KASvdUrsT<z3X7%OFQv;)vyjmF;4>>FdC
zb?#zmojS7+muS5b5-pwsp4+id76yP1hmS*9n2_>B^J%Aq1Uql!C?DCBSqlZFT?UX;
zbt1{H@t(5d&E~WQUk4FSoD>jRt_cGY4gPc#(0rtin7XwEUzvQ`hrj{afpLFf1Mj!C
z@(0UvYAE1X+0W018~?>aGQFr{lDhZF$L+;=8|*tnerj<I2}~jq_@tK+uxVYv9sbNJ
zdFjq7dv4Ji2yPrT;H>r!E~gJ3gjf#*r5OOJTL3y&0WPN?pgk~fxWyxw{TzW(u8iAZ
zA|x?Shk4c#|0PVJG$^bEILH*~W$hIJkO&MZ$Q8eW=(oTBK`6IM@17j^<C+0$hUb_#
zAH*c@VL(b80&IIUZ%%MS$n#N}dEWop<$$L42!)an<^dQH87vDeQXG?RPdU~g{5yX$
zMV7#T8*a2q$p`|fgMw<KAk!&1(AWMn1&LDHfui%1WQ^u#5q|lC>f*#L%9~6X6ut<(
zz5sBQ`Hn(I?uR=-VD>ld>4J~8$zca!ui}Uf{PxmLgQi-Q4u%61P;1DyW)Czcw*emh
zfob5k0Jmp$>1O}aqYutEqU=&YulPxZFbe)JdmGS=glLNd;t4CXh(LSHMC*7v*V^}_
zHqm?DJNo5I>%blNvilQaFI89DU(>Vf5j3sZbCV2j)`r0Ow5N>!)Rw;1H#?h!1N9j>
z$e25L6ugE57T&4Zx6{JVDn;<lVip<d(co#(As<0j?|V7BZ%u5}!3EM{DZ`oZYN@d^
zF||P8@sEqcAN4hTRJQ>ven_)@Js|8F79>K+M`p(T5who%`T*u~G!Qx)Y7IiPy!`GH
zkl>>{lr|d-+;x)6uW@ehd1$27RAk$E)4yU<M@+GcS!~$@0IX-9q!xR8eZ{L42_8f6
z9jkKie$8V@=D1(+jyn3s>#y0j9{)3oaH&@Q@SiwOG!An6<d5Ud<Rm4)h-BRuBQ<)d
zRrk{7GF99nArCF`zN%_#2jJ=g;F8bgT(n#}q-_;X>Vqlw^r1s-dXHW<3ODxg9XhZU
zrZY=pEP-^BV`H0KljGwKUpA_P(y7Jt{mS1zV6$+N^JiS`-+bXkPU9+1=`9h0;HxF5
z7)+zpQ@{gH`vtedlvs1kfobbNq@%reAZGB_=}3XYu+4r_1Wu?AJoBtQIR8ca;nZJS
zWN`{YO+ACXL>UeHtt&_y7sbAhg32BCtC@eZcQ(AwId*AQUL$es(?Mn<T2WV3{)~|N
zXN26F026-&d|iyt_H$Og8&6#lTH^&GnACLkkoHo^#kQ`sCqbIAK#=8opO;uM)!wnj
zAxe$G{r~jtgPCHcEk(QVC(OvM?Uuzp9Zh)xxUR)~6sOb2@X;o6xz?VE7C|Oo8_<Yt
zWCHHw2Y%5KvWcT0vqZO~>#o3!`X-IF2pb(J_i)T9CE#bWN}G$x*J=a~0XI*eb^^Yy
z2>uihbp4Zh0RXNB;He@m+FE5#BGlgDH)oW?kQF?T*F~45|F3V{;(~V~DdVT9;v$~5
ze?+ZBJ~_}<VGcm*3iu)o?bAntMmP<p;c&wVgMQv{5&6?W?GJ&yP5s(u;&@YSz{l4T
zzSwS_P-6fZcEg{IgKKyA;Prlk>^%CzLQG&E!VBh4(e?^NdHIVqTpQAsI%`PR(iE*l
zOA<@|8}jpPLrsm1_GjQUCjN5DByxYC2+r7*d*y&Kh3}w|`pve@HVkd=X3Du%CVs^8
zc+;2L{uKBjAPHabOHLQGA2XVYECzgjz@o`n07r!=e;@YM!QJxzQR%(<@LQLkCJnc^
z*^UJe%yngcog5X1CMXo&BEB|ri5$ltWt+q~m67yu?Il(4mCXHY`X9CLF}?WdEPTr?
zocTwBEtKS^GdaO`q#@d-aaiM*`UK;r0k*=*$}AGV6%WsZb2|?WX@Q<)^{^W`Sh`QI
zJ~pX;KkJv8#;F{UcyW$&=BbA&uE1*GcpDf;bZb%hOm$Ejljp1z%kc=c(P{?_3e2)a
zeh0x<i;yvxNNcCS@pMl0#qB#VE2*n@=SS$QF1bz*h9Ctz3dps-r`eM0{lEbG?4MYl
zc;{`q>xVzG`EUN$c5dr!&plOU$(=m0C-ALP``ZaZ6g&dpwGr3Om%i`|8xqyQ9=`0S
zcE?+P06-mlh_N6^JfCtVt>=3Vuu4pX{vW1>#$G440;=k$BOzdE<=*`y4be<8s?Pul
z?SYFSSL)p4nG;C(_LT=Q5+O1g4FFOZio$RkfFSAfI_T3h$a+fd>*Wi2Fnh)1v|{)t
z?>e)>n=liTYj1@HQdHV9b&@x?Cn@JW+IN5e@g+I$(8?_PZ3LL^MMI)6k$pCQL|8Xg
zW2F`IZSr;{#Kk-jcy}fO#$5;-SK-LxADGa{#k>vxeFp8ydw{5o2)hc-b0QU2aa@VW
zr%ZVgHnL~#TQYByP>bn~QHOSZ@TGDqc;dCA3)cdy@(3wT%dV@nPEoNz?Ux8ePz%Y;
zd?6tC*X&Cg%pSXQF@ZC{!&Wpknj3tr=;K9?ranr8qr4x!NPgb+X}UbVRX#E^>;-Q)
zvkuz4fBW`U!94}_a3$l~o$qsTj<E>-7(MTO$D4QKfl+&;6!eDLS6Wv?>+>4r6xf%L
zd&7oRe%^#H0A{_N_SLK>ri;>=iC2cArIKp|hy5sXg_sOp`U8sr7hrDrJxm6FgA)-g
zN{E-A#hh{`CWD*kvkK0{m3Mr7lXpo&4mqZGGW!sI{_c9ppg!p5&Ce@uf}@3>R(jW?
zqt8^C@j;6h@MbBRJe{E?4fm&mZ(&5F7U)u)k7w=<Oh1Bg`ML|Ix^YGOyA_TtZGR<Q
z3di@yr35W%jxU*$|F(FFa=VTrz7wBgLTMG17GGXr9l6fOSw;=~SR->nOb5Sv{>3(B
z;2=v+OS6G!xB?f{yb3swr3<C4FZc7n!j!vt692^0KPoXfZ>O=ig+ow+Y+-^1lWTnx
zs7El~hDXa?3<jy4IeeHyl$#p%V3+*v+-0_GeV+5Eq%q-+tIy>iV&9?1z9FKisU1C@
zCanhYRJz^-arC#2KZXW939&NE^1OT=f2yZX3a`wXXFDpZEtSK$FP=8e30nJk!#`2I
zzHp&^=||tOC;s%PjqWqVX695t>;17>4Y9<7&g2N;Z*lHQyWzPX+nH&@?XC;HiYGOu
zjNP?piVpUqr&?$gw;TX42%G&r?D@I?lfyj-l*vqBIveQUMfnb($h+HaCw2G$gG>*7
z=1rP&LlDf`;VeQx!WZP7PVdMJaSKA=1T<+SW2d?^89Vw{umyZJGto;+_4U+ro4LNy
zN&r;-F?}pJ;~e&)g>#s3Bxa2O9E63%tiXPe<R8S5#`iJ*x&V{NH}doBRzOnW_-U4n
zW~3kWcmtEO>)B&<HSb-=J{p~+6@$Q=iYee`KwB6Um&hzbuWmR9ScIA6qX_ojWiQZ2
z!^c`VW|Wa=zvTM85ODWLv}tmLaT&DvCfbJxGzhM4)bBQ)%>W#H6Xyxj0gf7Lx<b3F
zm(2H5f}*=$?3dL;f}<04UxF57Qs+=B!aLq(OcF=4Z>T-ew~RJhPE>SRw#h#}4TD*C
z0QEV5=~4u$dN%#X!V@w_eR^vy4cXwlVn*&pn1o-Y2~}`i6e9XgozgY5=USt*c-3h{
z0WRwS&C^M@c-#~X-qw+JuZ2g%n`?O<PW;Ph_wNGWx4;*};jh9o&bEE<tPa{P+AH2{
zXUmDZ4eio3@WL4Yo4>LD@2{-Be+9nCA2-!<=>vTLkRM@!`Z+-Q+whGJRo=!vu{uD!
z_D7;;MPueGXB~x2g}-J2_Wr?sw_5;THKQk4IcB+9$dD`Xt@M@oq@!>P&J(`5eX9fW
zQ38OJ=_$;G9nWGWIfJ}(z_|91O<l1VfaF^W2zT`Iaho*Ek?OPDTS{HzG~{j^gWS?J
z-R@x@+Y|IJEp#BRA0`M8^Uu%chl$jz+e#}AM_R`kR5Pue=p>L9QpWj;BCQVeX%j)^
zRGUc4s^8Mk1Go$=S2PYZQhAn5dsnh&*VvPI>CoYJ-J~;YY~Q|?%>J$D01%^jCNQXd
zJnetr{Zsk7QVp#|kw#^0i89eUf+0wO&n5-bxz(Y|t7`0}_ZC=Dd6j)`%19eKwC_O`
z_TmNJ^zP;6Z?_MZth2ai1gQ8J&J>Af0QZaq+#JjlaUgi_9k|o9U*3CL3rp;UcjsaI
z9b?yBG-ba>&Zebu<XB!Ffw8=M3s-Km4;HVnp?xxJItK<jVK^{i3;xzPrt$l;6pBhK
zY)f&uU;9A){FU=;`xobA+XX+q)9(Goop$x~>F(*lQ%~!lhE|%x04G|-etYGI_Pv*W
zWM3L}y?uGgHI^6?Z$)L>oj`Q}8u`kt)q0+A!0#Tn@&8Yl`<;o$Gr2@xkE4J`aF_i^
zF)<LxmSK*l&HNI~He;r@nEUGy1SPPpb3)*D%VD)&6MPO6-&|JZa}jLWZEfE|2z`+E
zy0PlMlGXccz|IuhS4%*A028RI`8Y4OFxYRT-Jm=@05EINNX-JAxpRw1_fdp{$(wWV
zCdjHL=?z8zy$z66O1Z8;I8R|O%Qo`-1hX(hn79=o_ZK)@kT=0xz|AL=sRMQMxtsTC
zEApY4R`<V$AfLmTMz^uwEFm)5ssVbBQ0^bg*#PBwFF((Ep|R`Dvz5@MRwjuOz>w-D
z;K<=AT#fg@Y*Br4KD2ok?Z<TJvzoY0t4I56M`N=IVLDHALkRv}!4|jwMxGO$07D#^
zh^Zf|ZBFN)ezu9WNrEPy$Dzgds><y;jug;dt6KQ)N%--r96=!dTU4~2qXf{&@LRN9
zNBeJuZ=`9}eYMw0fRmo*0IZhqZVq5b{P$;ojoiAYlCF4s1Ax5`{Gzag-|y20vS^>N
z0KQw+t+b!g&N>);E^RC@ql25(KUR|NKQNQM2CyGT+s46Xx5GagOU^~06;Rs(czI1)
zRi2%*VYR&iKMVz^?PP)R3HZ7<`(#SF2Lrf;j_uSxjWXW~kXuK+ZiF}E0AA(vpI>pV
z<u5tsO9vUh1Ro8fj7oO}eW{H8sKtu;e4mRmmp@Tv^*srr;!Q1h^dVi*X`M72#1)S(
zr+=(wUz>RIiOMpYvT37D#fgHnvmp}PPf_s3TyK1CPBG*a`_e1p9o~qE^`$^nPhmL8
znX9sDJ84L(SSaA=4r#gC1Hh^nYbxP|>>b6{fB0y-<MJzP+|Xe-OzCluhRbQTNJryR
zO9Jat*a*j*br5_VGwFgawiOC!1ucxpGa?L;@ere>Hwf%u010h0F%%SIx6Fad66nsG
zG{VxmcEaTFz~tc#e>xXVnkp|X2~O_ZFquakCP=F$K}kjO-rG@8WyR%MuO@gih41R1
zzZ%4pN8|Dy6sggLmxnZ5qKPIG?_Nn+g%y@oTF;$6`~Usup-~!5xm3OMexT<j3H7eL
z{`xj0owgK5UNU1M<<J3P2VM}5c)%;KxY$PCd$)b@?DOnfpTE+#B2DEy-f1oM)C#u1
zQaxu={d@ka_Q1?v*>}&r)2<wIq0_MJ=6(o3Md47asrB!AF*EIdYtA|sPr{^|tm!`;
z@xWKbo1f?KR@Gjvy8i+w`U}niB<#fkuHHs4d|PJ_A<zlPEJJ`Cj~6#h`bor@$Mdl(
z7V<jf(5j^J17w9FknUpgAMTGE%l(%Da4#z^Jm<_}6qgW2zIuKwZn`aZJ?T&z;&i5b
zcWuqJyEvc7S8jw??sX*JcK}@PELFMa`-~GV@LDLKO)iwB{Zi0MeiG$=6v6aSfi3ER
zDx35};0gAc@cdHt_&Bpk>hQHKIB}qFNQ<C7KRQEf#;V1>{JF0>N=Uv7t;Agj#>RPL
z+Jp2TgyH`z_`nIbx~@PVIt%Tc6OMQ%gfh6cP@#gsQ2-e2_QU<EV4MAFTb{3NTw8{q
zr3we6hS((09$v^mv-!)iV*91Ewa~u<^n4ZGdv(z#KAOX;(tM7V_d(h?1^#;mK=jNq
zw3OmarAwQuZ9{0=4)DmuG8v?;Jl=gvd@i08@TRFXAS4o3ymU8UNFR5Tzgh6k9V`wQ
z0MDf%V8y*S$|e4~2xlP<_^3}Ph<B)y_F<L!d+Szicj5Ye>U6(&$?+z+aZldd>M6(P
z*3vhre;l8yI4e$N>p=ZwBB*ov&QO2Sdnz-Z7@p0nZ?Jv~KX!CUpnl9CHdOtPG}LDi
z)$OLuq_u^z`}<lf&knEk;)N3wd?UcIC9bCG)#unXXUCT7A>M+oq-+dvYB()oQ84eL
zwiYj`{q@-&6led%p??I%_tMk1mzMTxv6sv6)Y}0qS632Tiy3L979Y?ke}4EV`^xkg
z)(^myik8a@n)kiX+B92UxlYA5y(k!h6gasQVBFQXeAKa^B};W+Jn{_$8*=l}^sKgw
zlw?d1lWoQN%~n!gX~_xg?d%D|_>SjZt}R%ZjbMbq31iUv3s>3H(F5Ja&{y7HU|9gM
z0lhM8_WTuAT3KVCpE1s&q9SbmiVao>XxoWv)u_k_8#B1K4eFigs-uBu<%Z3qyV2@+
zE}^|oR;qixK6jgavUDA8RXKZz3H7PhKd{b;@pjh45w>(qwtcc}olP0hAGt8p-kZM?
zEgWT?INWB<TaI?G*2WI%WrO>6w}RqQd;NpOlqKAzjv8d$x+F7x?z7GLMYe#lm0}*J
z0lH6SR~t5<r_CkZ^?8Myu@Y-}1;zH*i|^RzfxWC>k92!=_5v4wNbd|AGo-JT0S;e!
zZ@vRolPF8~v=n>uqs6wpq})ah>}fS@u>EMsS{u;4o1HUhq%%obuwuQf&fdz3VFS(@
z;%vgOewG34K1)IS2{gwzZ(5kS3VdmzDaRb_qTk$SL-Ahs`<rhwneoW1REq(vC8$S;
zKOzt)E9<K4!C6n(bIV`0-(GRQo!Ni9+h^6Vw}CpzyPq!{X&zT!>55PmOH_gGb_k}$
zWK!Z60@HaWptg-?I)t`!WSDJ5n!u?qrd}bOrxa~PTuV5UiC1^7<u+Z1$wolabObz|
zX;lv`CD_GtWW_q-3;1?N;FO6YBC~U6oq`9oF!J7o5Gb)!RL|o%kjK&xbffq!yRxl(
z%Nw2mp*$eEy(Z+l-Cu4U2%Cz=LgzK@LEu$dh|#u5?>7n(b`vODM+vDs521eSu7L)=
zd^0Gc4xQb^y%h4(*8k01BThS$M4cz4=UN!4$5>6}?MR;Th_{h?s_b$QlF7cV0-lLB
zs(S`NP>wkELZ2MIgW=N@5HLuF{)y04JTI?(h?9<viro|1i>E~ML`-ZuGlu5+X&&il
z9s^IP4Sem>6Q>oG{4ONE_7A26@TS^RqIxdR)czT?wfHuV-#V|VD-0ywtc6V^h>177
zb`#)7{{+8b(M5k!8eMrmj(d(b0fz-Vt9Iou%cM_5aJ?6v!_bj@LpbJOuLDi$t2}Z+
z+GznI@sf|n!>o*ZI%rq?mJV$q_`Q*P>Ex##pUt&``eqvRQ5^*CwL?*TSoga_2lZK{
zrO=1IgP%LsuXLSCS}{t8z9ybUci1L_s^A5xebR&5M~9}oD`2OgcBeJ0S!cCq>37A(
z*gm`iGD!QtF?{GivP$R`+WQW?=T*Yh1rGGCWojprLOvmAFy$UThCS~g+}GH&9gT4X
zn%BWYN7}U`N87pM#@V3Eto@cBK@Hc@Swnq37=jcyX%tZZudc#NS*`Xqc_W#=PtHiD
z30I+-fh%WQv6YnJu?e$6X{lsdSg@lKO;@;GcGh?RMVaLTD!L}eyNP-c`@V+u$+W}{
z*fno0wyK&sTMLLQAWkxSz(Nqvo}W3#R&FY=#5mkTO8~ECh5GF|7KL!$D>KzLY|iI;
zE?SZ>C!FW+sIXPJ1rF@x7nPDfn^gfQ(oU`6epzKLW`Im;71fqou){(Yuf+vwJzA<N
zOX-;C%C#xK#0q(DK=)Kvw_Oa*>i|<xXktbKt`r3Lo}D?5GI3TD!hZwlms7Ux=_$5m
zQ@%?xl7YK^SA%8eZ?kj&Tkp(nwuQZNc|~QG(Iv^HBXF@Hk13qG4uKX5`2fv4%q1(K
zX$5H(P_|(_lV<Jp*^6w>3IHs$&}6?IdgoH!n=YMZosv4Z@@vv>>!E#Yw41kf0=&wr
zYfOi9?_}co`kx=g1gFUI?)xonb7SE%-@dxmQeW2_Xcqyi9QKgh^X4CIZqWvN^7`M~
z;PiedUU19Ib6*?z`p(hHu2?$XO0BAo+C4CA3AmOftSaDI0&6xxoEHRg1US5)=Q;kg
zy>$OSd*1<AS8=6%)O)qMEK8PcjBVVo!I)+Pp>BXc5=bGCu%zr}v&)}k10iiUkj;{0
z6Ozr6Lh5c35)w*6?*sz@Yz)R=+~h9HDpv3H|GsnYym#NztJ0G!$#?9hd+*$tGiS~@
zcjlZaXX<R#lBvu)rsrrqjUy_x9B}s!G`RSVZGw5-fcr+o`QuGkR6;FSCbd6A?=#Ol
zqr&YEpDC!=GoFD;yE8!L@!;&li-s$WPZOy4zT=<^>%Py1YuY%I*1h^tfQAN7rV7Lx
zV`wl(3usQ4*(T6%+v%V=-#BHHg9m#M=`TAbzu`N1)q}KqZP1P)Oj6}FakOAr(KK54
z><^z{XuMnXF@}~69Phk$795^=##un7H{TH7FrC4X&(80Z&*t0nryJur_~8srIx(K@
zfqy<{`ss3i%(^PO-~<@WtE=b9rp=gv<nmAS!&%)pQ;RcFNYjCSwjH`gA7|w8<Lsvz
zVTjk+d=B~%mZ=CEM)XP6W;PmJ_(6Y2fR2%gJ&}3n&ypb-JF%*uhcjQ`BVm5{^fTnT
zwP(me;4-J6z{5V%X1Oz59+CvTagDE_q;X$N1O-x3;^n*x(_sLNNJ$AA283gweA6(X
zal*D_*}U19<(aKBK*PfwQVS!9&N)t5dV(4g+hH)JV+QNvm#^1!bl#DH87?Z)18|9Z
z@fj<mq%cp4;cVfIl_yGdc@bvBDuw&EHeeQru=dq9sPWYRgN}w(Hb$y0UAG#Q$Jwzk
ztQNp9<E&d3mi^TrZB|-}Tz}a*ok`=8N4Aw&m=WuMfm4Wd>sK$)C6HX&$5|8_cc#H3
zJ!wesmxLejeBy6!B25CyO_TH2F4uCn`M9dQST0+?8Z&8IVMMjcf;lDfo^wx?0?fD(
zHyV&>fZ>IWQQKtB1X{}$$v>XKl!^wKvu~_B=}}o$r1jsteZLyD>sBq6d2>qTu??GL
z*CFf&s5v0(@|PYH-V^6o2Q|JylTPrjhf6mRzWIl{<^P_3Twee0A4^3+p(^>LBm26k
z5Y*(r2auSMEZgdK$@_kPyJTRq{(~R+wp7k4$Dn7wI<+9L$D+_vnd2|kAr#y|??RC~
z(7Qk|OdSHHH}3*ngQX7^Z(xLbZ_@c+$C}R{&hhX(5wr>=JEW<zOr{ML0>KItXJ9yC
zo48QdVCjR!8(87qn{@uyvF7uKGoEMDjvWh~BPiZno{Ba$R4{MTU{F2$`J3fAxIlk>
z*ACfx;Gq2B@FD5IPp~Xju$MFiMj2-?39}!+0W5<ZL>XKjJ<PJ$u^WI8s5lzN=#&y+
zh$Z35^Vm2zdkDr?8<vIBz!U6u{rIw#vI;KZFJ5^v22SBT1GAY7PMVUg2DHAM=6_h1
zaNp@ztLPeEW2Ky%FDeS)o79k%ogkOJ*BotX#hG_e0UT#y8eI&W$vGQ_OfhDW>R@yo
z#4OJMrq*e&<YZ+C-O6vRIVkZsJZJ%y2XYyq?wLY;`jPkiHA{UQcr2=(qwD9ngm6EW
z@bR1^8b__29IJ-M)od&mKqJ?Q<$2G*;8_BrZxNO*(io({Lj!F4{yNRWnKIK!5MR#D
zC8JTj_^egBl#uXRvD}gGbi~Q7ls==$;HV~>!e%%c;c`I6pESQh7S5f`te#K>gDD-x
zWIyUngY1N=a(zeF`UaM1g7n#@od<x@Vo;Ys{v8a;T+of-h1a%epThdLqy9Aq>Xf!L
z7#py^Y$gQKojfXq@lE~=Vb4VqmS%2!;d#0Bd*77D?)r_am|Ly<F}ytX^|red92T68
zWmOyYZIYk9_&qtVbgkTS;SExlnJ0Y%aBq%I+x~2iJ<2WyE(Kf)xD*&81=vorujdwm
zsT9<3;qpGSk2C`0if{<=Rq!ClUl(SnzEFEe8k?G=3BQ;2?Ug(C*2w;Y2jCC`bMG{e
zIO~NavDz7{vV~UN?gFghs9f-ebq2cJ5ObMuj<W8gljMC17t8#L3YlG24)^dCKK%i8
zB*Ns9=b0KxpsUn@b`w#>sU?Xsm4j}*d?-K#-h_z|Y6Cl>tE1iEED?<$2YQyFWj8s4
zjs}v7b_!;aXq++dnRR*MrPt-JSQ^MiwG7J@IcqgCVx0j+qm6sSu2|P28<2)GKs&L7
z@0GWA%Lgw$ON}peR$(J<_6F%_5@56Z+$@~>j)Nk-f!JEhri^k=W5-M55iBXR&az=1
z<7S@?r<u)SIXpnrj9D4yA*KwLVBRTglxLoqh9vA87{dOvEH%7XPa0S>VuzG2ad6eY
zU%G%t7L2=W{1S8oj=5(>$j4Gq?y*Z4iIXQ^dsDvp(ErLWzIlgSc=9T%g2!CYy=cHJ
zM~4Zy1n1u9c~0&<a=ZNFDW8!Kt-TB$;L@cJhpy7_a)V0&mjW&YrZWZ1;1~!0xHp-D
zjNHr2l_p~e-hNf>j<JC7$)lbhaeRef-&UkS4K_P*24=!e#^9dthj2NJv9Dl1)(}=L
zv|+E-&Lc-;AB?iYEzKAJ?!=&PH&!$Z;7mEVmq8z#h&_U7*gu$?l?f*q`7#ei*Af_7
zS(zE|?UN?6GBdS*w~JG~M(@#|8U4Y$n`u|-J$3Z5d-RC(&?t>@aE-4R6VwG4o&r-u
z4;_stTULH?j^MD(d<+iLBGJ%bpwYJX&=J}E&R+F;cL|o>En8GAzkm37If`Y4G>kYx
z#3D{wP^FGB-r2ohol_ibgBxiq!#f+!F-RN28h}AW<0UDP+wl!r*77eJdL|gSNt|7y
z`&Wb}%yd}>n3XOEF7k~*M5h}kFP^UrCuhSl(y)P=xS>q`y1H?85l71Gz_=tBQfB7v
zC}3+nOal8#ymcfD&&CMMz|u(?VKnY8f)f)Oo^(ReLn92!A7?@^bxj8y=VPhmj{Qeq
zhz`h|AN{0!^nweuibesL3iYK&!_@d>X&LI0=h_~S4J|*B&!6&j`M|pKu=yVj9^mfW
zHN2(*r(7Id3b+&)F9q1&vTr&9Csc33>C@ogupSjNR^yAXViCAMoZ<5GFOc<ToT+_p
zx@~}&J|$Q=&iCx$)fhuX8J`Jbj6a6*LTrDqjWUhEAFt+MVytVZYEgF}Z1(%kvV9@U
zoF`Mq6fW`n*Dvadph|2TU@-4uQCrveiUk#27*m@9Xjy2CSRUxCW`-XT4Hio=w$SHD
z4h;{cHG!_R`RqJ+*vf0UpJ#()0%wf)$h}r{<nip^wx}bF40truWcai3&F%8S8$0E!
zl?yF=5Jwznq%hD?0|O12$2Pns)$k^`3?2;mp7;_Eg{7&mhZZwyDcJADJ!v(VNxSdK
zmvC)RkBPmQjpEY79E@U>7v{qYVvEo@$D{Dn$VRvcM&Xt4(8zPkI77$TD0+N+^!ZI{
zDA5Zf_mc5fi{+Svy}zzW(y&*KGhJr(i*)0@FH;9Yk!m>eNZGVamwRk}XAfrJdU0e@
zKMc7ZcxharHJD0<iA~a|FXR=Mvy_+4k~gqKH5s1FmRHPI`+O?ZPYti66gk}9BtLoX
ze`Q1ObMoH2Z_D!h)mSRa<E(Hllr4u*6T!{kQoyBvOMxjx0qkW$pT;(L=l;Xi-sRMI
zc=@$vy`pWK0Y-N1=%qgj?2V0+x$`hE%8t}@cu~~dWT8uTr(5<YKxk6JQG>u%3Rov+
z&~h9KgDKaU#^)aSoe&7y^y@z9j)Mno@wj9a_T}3_S?!>ui686LHNM75IXB<5p#YWR
zCd@9?HnqXMI~@sgzt*4}hF3l=w=+xqI4e^NZ-@DPY1U{G(rFy_Cvhgq1R7a~kd96<
zxQ^U}@{$7G_f!KfijTa!6;3%)Bp=HJ55W`RY`C<i;ZcwKhL#Tb-$!54MlB7_E9RCJ
z$P(KX{o;9Z<dv<vr4jhj6XHu-_sFf-7uFB2L;D)rBnL|ljfW~WwA`b$1P(*)|LbNf
z>+6%<DEoxj#X3`U0O|XXkKy7oSIT`jyqR7RpJ;$Vg!&M-BX9sRe@>b#!K~C)cs=A9
zV_WvT4zG)?^3nI4r`{d6;t)=H@vDKi#RcVsI+L}xp;c)}*zH|Casae79uZA%RFIbg
z=Nl{Kkr!W=ZSdUq`tC!zJd@5!mckq2g39SX`$b;RU^#*VC%^sZ15zGWD2w1F5+0Q`
zXvb*X9@D>+mDHqE+1+qJKJmyM(%9Z6pDy{j<PTJXpIjE3Y<1$t6ic^omjW&YTnfa7
z0%-CyG&aMdF#0ftN_g=tm_;Z43}H<XE1CV5D^4ExW4qKI7?PEzCadwK3b{|J=pLNL
zQY`w4al?Rd5gk>ctM7D6ZFDWtWZbm%tGsJ``4Pl@oOlYDMv*1Oa3En6;^t%F%+FQl
zuhF&6MYF8K|El5T?~|9W!zd4ChOpk5VL4`)X2Yer&NA5>bC<y=Du)+C&WNSKm|`d^
z%9l@Hc@Fll#;dz`#<3CQnO*OF*IL=R?~odFJdm0BnlTHOnVF9K$#MxCQk(=srv+zi
z^}?Xx9;iypZsp)T=|YDa*Iv3#moWCgP|ShLdd|EpTUZ6B4!MAlikT>DSpmysScCJo
z=;VSh3*oe*tf&C@9nyhy?wq}1m<_}5y35wf{@Qvq(&+lV1hZk~#g>~`8h_Wrm^=(m
zj@+k3&y8$wmYq0PZoo`eBMeaPYnqKZ5iZaBV*MB{Si4NlSiV4K(D>}+=~CcLShe*{
zaPQv>&xa{e1m`BDDBDUqeVcmnoHL(YSZ4V3|NW)hw|l$1dgGO{sA`U6W=w&@I6+|I
z$nPKt8?RsA|F&HF$FIo6b5EA*-t{@Dc_mXi;6fM&Q7JFnKQ0Aa3b+)QDHJgM(8jlR
zX@AVs`itjP=*kowG&2bztT1~jczPEcb*5h1Bg_^unbA=~CURdMGYU9YHpLnV*Z7Jx
zMO}DdDG+6w7ZzT)1T=cM$<_oaq_gN*knYs&z_?NvRs1=Fe;ksj7sMPGYR<q$l%rtz
zFrH3ZvB>$#V*oLd%loR~a@{{LFX=+~MHrdm&lyT#MDgbgrs3wYLoQ8p24ANfmJ&|y
zjmu87Hs(6hntL9Y%%3w5U%JhAhCFy|oP+&MCRA69u8(;~x(2F`c|TpR#;76RestfT
z<VO$OBb)E~KUrBlPpf3!AItg?hXgE}9l_F@XScm5H{SaNxpvica>KbFl$7Cgd3&(g
zTE~AZk#x&;Dd1ATrN9JGfJ+YdVJZHbyAJ5`!vgfpi(q^)j7O;+!QNOmxD*&K1zh86
zycBfvM@0di@72|5E#XT}!C6~agFP9+IH{n4qlOX`Q!1x;(r0g+g$)~S2By(;$jAoU
z7)VxL3l`%Tcro!BVgF$<Ok<2Cj=C|eDU->}I}1MX^1e6eY;;F;9GaRik=a?kRj!4z
z^PT^_7KT42uX)ca1LIAcMra)I^Wtcg<*kQF=gjASZ_-TX>u;ZYLjLvkugSB&xJL~y
zE^%c&`8$?@cqAnxN;ftrJn+h+a{J@|Az!%Qi}Jox{tn9z6Q!-)a;!1rv%)_Lj9EQ0
zox{oeP0nW=1%hr;4+VGtE_roa1=RPrtMfEuFnMHtF+$(;W87l!+{U*6A4keynf>W2
z7V1$krav2dam0D-x!s&D1xNwc_;Tf7QYgUomHKFV+mQV7r#MTie?-o?AYD#9Eff2I
z=;3c-(J;o8DJ77CY{i)r)-`at(ME>J6-ep!*TbEoZh_N#6?gOA!o!r}d)3r-AtpUj
z_?PSZ&Rd3o7VN!=H&=hyjQ20gz_ikO%W}eSrkPInrt^Mu(?<EoO`nl_zWWndzhVV+
z2y6e>v91dpYouVAVS8Vf{MQq|kw3k0kNoF*zbzM?bT*E18Nwc~!SNf1G`KJ;3U4o#
z@-)#O@UbT9bS|F_ESD;iU&^=XT$u=QXM^OoJUhaiZnDXw02Kos2+SYvby#xj2oQwn
z>!08BHqPy|X7?9XmSD-@90fd;`XJp?r1d7=6RZS{ovg=gPIu4Oam)IdS8?tqsy#3$
zy*(q+(*vbI!}uHBnMWzNMpKajoKa#Y`RcA+a>*_KD&M)~R=INhIT52uNw<bgy#{H-
znIlNZ&LS;2MGiJM$`4=vxjc$}Xg|N^2eP_yi5gur5H0UjUPmzzfb~m)8CE!o!StEP
zz5^ImhEtbN*0*17_i>UbK;;fgld<_!MrbU9^)r=Ss#sHr9l*If2M$g$q21!5rT}FV
zXH7|Svn8V#lpU-6MNs_FBk((WYGebv3TLN7?jh{wtXZn@X5cJpJSQN74%YEQoT(q<
z1kh}<K{^M@AzEV<&46gTGhYG8;zmvs1*meSrm?|6BWW+~i>*jc6y`46<DCLDY-o7x
zX{eVq-@H|BxbzD7hs&=J%qQrqSGW<?ekg==NzX<+_JOWrxcV<iTH^Q1zdiZiaB7k%
z_h0)hsV=IJK^(fttqK;7W5s}9FY@9nu+r=@$=hEmvTYZDa>RD5Fk?>%7otA}z&Fl*
z;cUIEoII&-IHL0EpK2yN4`EhUa8P*hz_8@q`_N3N(#)>|Ehfx-<>uzgfsQymW@Wru
zuC{Xk+u73(XIrO9QGRYjZS-Uj+Zcf_ZQUx{4(`{L3hz669gcBvogYmW55kp0kJ!&|
zdt1Fa&(5DE%c`nkDnqXE6^;Y$`<PRJdVp?2h&kk`1CWg?gHs{5qb6mbYck84I#i!H
zOw{ng2xW6ur+nzU-;u?|#qzD|Z;*5-4dz{_(s%7UEYEJ-DwmwKN<B}Sv@~bN8?25z
zUXtO8>#eSh@|UCEmv_%!BR9V5<5HBBC;c$ID2Hk~jmJiUP$eW_Bsr@<b{={G3KP79
zx=Uro%f89W-wx&<?G?$Zg4ed>nPq_4a-Eq253FzACA(8AIl4D_v~^1w9|Z<S<UrS6
zoB>lOsp(nJ51=GO**Ka>q(SWOIuVBpUvUmr*Yx#yj&X7J#p6SE{JD+s_2TB&<O{ca
z3~q(bk;_h7tHzgkH~vyw2xFmup?@D_=lt8hff@8Y^6gK2#x=giLQFT0OM%IzK%j<x
zB32i$p`hNue#%+qM3gnzG@L5s8RM!CBVnKa>5t`=`Z_uIojW8i181(;%Mb(MY8vr_
zb&c|eCtkvc!-(92>qV*E>4pFRKmbWZK~!s3%HjnTuv_RM6WohZ$#9m%GI$ih;82`w
z*!zt9rSo=~lW>(>zw&A+&C8Xpo<4h-p)*(X_mr)n;UOHSkS_PW=Zjdub_AXjb<Qs$
zU`9sGHKI%*5*aw=8Y1b8eidE)Egt6N6i6P7a?TPt+l=W<DAt2}9Y1pVd*z(!lQ9Eq
zJ}Ocu@(>+8t@&P4k|`w`7}2CP@F(*cEq+YT5QrxJ@xHL>ENWO1Q_^H!**wfPSPp>{
zSQLM>-?Nc8dC9yeaz>Vvau$z69CflkvMeD}W#i}=Ir%~<DlVBZ-(tuLPotNV;lk83
zY0S)#)OhxFu?_CbS8VC&LYv|gpdxLo73X^1SfFi`?IxV-wR8Vr9lhgW!r3@yjE5P&
z@Y*(<(Um0UtzDsKe#N3pb_S-SGv%|aXI_3&&-^-L)nYw=%(tV9Majnp4APWx!rh7g
z@%!J&FQ0x~w*K%gnLVo@q~S&C7{xX(CrcL3Et9P{WO@jPa^Lgh%W`3NE6zPDk;J$p
zl@rT^j*h0pjUElV2KwagmmZM+-tb-dK=qep_R#5)Fq|TT!vnxQwxj=)wFM<rk^lwC
z4bzhX!!V-z2XV0W^h7@>*8Cnyvu8;~zVC4vK{L27rW^&x!vPpx+E0hT&T5x&j7A74
zriWwWd?N&?h+px0>BpY5o-W{sZLYBhT2Hj!4fr12F!d<V1bL*wI1z27YkW;Te!CdO
zm;!95sR%bVx5|sJ?~tTKjEmy=+|!n;F=UEkIxA4cH1~}0dh_$9u~It!G6!=WZEcsw
zUwTuzF>PH|n5V|q_L_t8EH(fq!{gYA)w5-OWtnIFus=+rv=er?cXf@;dgyU}ZnhNW
z=P--BwQIk;ylpQW(Iw&BuHq17dF#b|-m?7b?=>Wt?sy3nKS>LbUp?`deEr8ikf(q6
zGdZcMN@*2|cPffhCJxfR?A$eym60wlZrLg6IJElNSGP;t;33JITOmD7voMR4s4^KB
zM>8*Yu&|-ix?#ACPnP=57Wwhh|0nnEe@wo%{s$6YzX*<O24O4?K^Cz@&_|Ag!;R)m
zAC@tK0MTS|(@rG{K!{>(luwoF4PZ8phNT;(DFq;#aTqW%?Hp^Ns;}MLuy5oq0W%SO
zFj^AgCr^b%u`;_NQ8LowrLZuD<+5&Wb2=pjR@pK^yosR%O-b6hNVyd7P+<3gI{7P%
zufm*k>FVv51#`+|L6z4CavD9B8Rf~Ux+WW6-!$I$ytCG+TjznLLBVE=O3zCSOBPg0
zTW7Z#L}kT+4@=gBet!a$M<a>x{5}23R@wN@e!1#hr+AF7<v4J;rM**TVaCOjWjZr|
zcm@`W^?he@SO`(qX8n(=U|0G{tjquVuiYfSzU{x{T)33i5Fs&`j5Ow9)#snSLP}=k
z$dlk%Z}$LZKYQSPW`~SmkHeAnN-0Y&#Y_OaKtsP4<tBI_EdJ7x(`0wk0r~8McgWt>
z!}6yO|3LDjN}f8<;#m?CzRw_2soGdD2{%+Q@}V=v0qP$vzYlEC1rqEN<^K>3JcFA*
z4D%cfEar(Nyl}8sUNrcHgBJ-bPnyZ*1GUW1Vn%X!!dU7WEKjg_Phq(6(8U=U<USm{
zXkhVEnAGoK68I2=Y+=7G<|FM$U;g7jL7eTJYj7BzlKXn3uBBFvv>lO?Dwat;me9fr
zP=Mk>w=V%QgpA@W+Lc$+aff$1VSr{ZBn<bZO94Xx*Z4A&aIcd_fyr*L*oY5cx!0}(
zN2E9}Q$5acKX1*!!)ko7;%w|WW7Pwrj5A0*y?tuHBqb(DNkKlGF<GBVS9h<*r>CXB
zkV?khmo|l+pPMDQ*>FHWSom={fz|n19RSmxvUGuVD4daEFr9b9(N^j1!A5w5To_Eb
zSs8lIKg6jU`*sGf&LIVEqKgaiRFNNm=e%YZSj49&H(lCc*d4(v7;(siSF^RtPt<xQ
z^ZXP9mNkS*H#D`P^TLQBi~-g&E!Fa_M4XQ{w_!AKKsbxWB^yncDP*2Pc#6sb%;PDT
zy<A)1viO28+$i6?@n*U9ymu)HjA9TeJxF_Y*p&OFFpOyszqt7w*?!=V3QKZkhwP|-
zOZGPHlvC%gmCV#E85-ftm9O%^BbwqdLzaXYuNSs$mQOtVZ8^VuncR8B%~%RpB763B
z%g6v7DZqPke6sHK>K_TQuV*A)hWq2yLt-)=FmRcUZ;_rV(m><+V4*@H3`ZJflqG*K
zCeB<rbH_bo!2;`^2nQnma7=mwhgXInC}r07W<C4=O~CTZgfL4m4NQK!gcm9#DQ>~A
zvvL}EtS9RmEKs@R_h`}wOUL-}^1&bW5b)wM#9)E4OTLD#sg;}fhvfriD#G!>;1UfV
z{AuU^Oqh}K!IU59YT!o3heS0T0>LqH23{=qU|{hYjt`08L!`5x;l5SY#e5Geo55dR
zobi$HAs&O4Ovg5d%Mkkp`!HbIDUBTsa<rofOR71;*)KImc1cd=YArL=_pb?J@Fy)T
zw#&F<fRYPhno__uzNRVTraRhHL?<Jd4ynDPOAgc>MMIq`bIXh5)wlP^;YJueFtXBN
zfY3O5?1k6m%{{fUV%}`2haqzKXgj<QCCRe+74mmyuTn#0C){h_^VF*{y8wm@jG<kJ
z8nmM+$jy|?)~(hhe$INC4q?aMT6y5P*Hi)jr>ieegQmByU;euBEqP<-0cmRMR0F9b
zKTEE@@C+%!49Qb}dqcMGgL8+576qAw<!h@?tde)HKSd3|AO7J9$x2Ovo7yCKeaAj|
z?3K6W6IZNPh5lC$ZIF`uZ28c|XGmGmEH%!aetC<$RZ}aiFx1jgld-Y6K;E@>xm1)C
z;_%&Jc@*{Ed8l5NR+qy?Z?Eh;(13DBWI;u-y#IpJv3xS!S+yB^Zw#;fa4EmymYd|C
zuDD7*_x`K2zElXuvRBZ^JLO>(j9V^49C;XW_*RX~D(RHIp<c;M$<moGDt4m`FBnF&
zlUs-O$fn)BvgOcL`OK2DWM26q>FB7Jms<~Dx#5Up&a;e$1D$b_-Bu0xz(_6rjS4Wl
zB&Aa_OAkvc9A~^<lLQA09Bm$z(q7`2CY42VB`F?z)B?bxlD@xjkF;SgTPUTD^`hcb
zoLeeIImH1DCN4Yb8|aa}wKXA)7Gg?za`|Uf(L9|EG~b)41##ulq=wcysc$`^Y0W$T
ztHCWdBM*D}=J>z%JX0CnQTq;X?A349^CG|v(^eEzN=~}v>e`uvxYFoq>uQyQP5UE)
zm70`>x>m!u=8*-X`5HSuP!<xTw;z0Hr~#dW8;`70q<p9c9~zDkALbNP;oPU3Q8H&_
zq^+w(4uB8gzHjn04Sc8sAGrK2P#_=nHSCf0p0<d-hZ1}bg+aateosBhhux!a_b*#z
z3OG?lQZYLo?0Y!Ua#$ML>LdCd@-p(Jd{%{jQTohph66=AYPab!K-N1{Ank(kLBEGY
z^iR#;!#@4?2ZjdpJL~T67T$XYcjB<@Iu!$;X_n&{?S(^?9GiDQ(G$W{)sxP>aVZdp
z0<Q5Dh$?Q}gi(NP7nW*EKPGy-{W)VpH`-%Hh^-}B$=wI*q!+U~m09`1WqGgfI3P!0
zVAVIa$lQt&?WB0_SPo{Wb{(vTvx+RKE}aD<q)#?)-zOEAtyr^sA+U^-3>ah`m~m?F
z>XG^7g=)-jcIwd=-;jTrQ)+GUb+*#19jcdty=GM2jn1@T)7$dg=Iv0-Qe<&eDO`eE
z=RoCQ_KF?uj{Wso&RNUmtJgZ>%Y!4A%&U<6ylk0Wm?Is)VF-p(K4!~`F#AS_9=&~7
z(w39}7+$J9`^uYYaMDPuDy@)K7^C~@n&dCfZj$RRUypU{X^M9S^1rk9FckeHnNyqx
zSpAxA$KFGjxjRAW6t08ymOB0J)VP8&-_YJJ%WwatT(s~+x%Fdz52FJ!6X0Dq#VlNn
zNjn-j3GkSenOG>DH7Sxc+#|)6N2Dk(->Xb`dUi4q=_OHy6MLm`aJO_e4a@vlWhzv?
zy{+<2Ck6mGdjfkZIR_Goyhp*e&fXHqPRj${RGb~cph)5w@RD<CrF$6PM?DR`00EI4
zea=nKQzODU)XYB}^Ttb4N244#x*szo=vMei2MENicd%CtrQ#fXcYX=^Ou1#5`;P9_
ztIAstc$VUvAm#ZLlAfGC3Le3eXYD=hvb%8?_FQsiFfcHd!x8qXS#wp{<hSl07{~mF
zTQP{y-C`-<fx#)sS&xG3BBkGmx^3}=$?u#7PEF(Ph+yTxFr@NoA1(*<eBlwlruGIo
z(0m{=KJZK|<%6$`kVIT&H3)@we-rosgE<@@Xb{q9jgt_3=x&Rg4+V3B8o|VcGqtrX
zhrnAH{4|2X@S!lfSdC!J^#Ml*-B?$^>w$v5Ck!80E{%YE7$g;iaM_Q4{xVEN%=d6G
zLO!IYp#2W?Jt!kAKJ0@*!Wpfgd_a}dV<2WKX)L9M;6odX!pOddUYT1kFR1ZFGJ5&Y
z4nCj}3d4t@V0?fyTYP}Q-?T>u7@Xf9zq`alw3jKF=<f=oEUz5<XEU@d#k{;lm!O3^
zA&vbW?017pftXOhHNIj(Mi)pp3YbPKJ3CQ6{W&UxA~|{1sG)Wy;Q);By@9>2wgHO7
zu#^`UNCB4H%`VE5cQC6&hZQuwEF~rmOBn`XoD|9x?>bE#S={&ZE0Td(q8;#FsKys6
z!oGzD&*kT=#<IoP^4Rm6<gGo2)SzjEfkcHWQ2)a?F6ZM?#+LRj%t9TKth8k81Im>v
z&R=WQ5Q(@%k>T1)&sO7#hS57U2c+(3n`FUI+kd1<s$t|^e$E>C!(%VNFzc2z%PQpb
z71mP2H+Sr{VBs%E*10rs%kG0(kNI%GaoM@2$(HRk^3aCO(%9M|HP{Qc{KRTC3|aqD
z%(}hjyfxC-KOnz-c!PF`on74ulXaM>{f{xOI{N$NUw`&f?9uC#AKm;VD9-6hoADZ6
zhABoShcRMIgTJpm8+#YZB`qE5IhNX(_xwgwnZj&S_wZ49sr4Z_85_N`<BO#W3OltN
z%35+_vV!I}Ho}vXk&lNhd+`mzF-;32ov9PZ+0lVYD*q)yxi#N#pj3?GECBbc1)G&&
z8rCgo7|YmzchF#?l8Abn@<%JUR&G_up!6G>1%pXigvX78Bg2*g84M8ONljB%y4w$i
zo57t|E10YO$P4PKGy&ZrfkoOXxWMdEz%)d{*VW<!<tKRH>=&0E+Rk85aIm^6A82%Y
z>KYg-%L|7a(~u9rW|b7OM@BF#5h3lu$%x81<u?pZS$-sr9%zV!tE=*Ugx_i?K3KG*
zXH&{C|Apj({oPo(0{@Mi4{W0X&+aK?n-8Q1<s=dr4#x)?{Tw7=yOxA2XSgz8aAl`u
zqYukOpP7w!DUgvNHT*1E1o*ZBSA9yw>RvV+tek0Y513NOxyVQczTqzDP+^+2F;U7j
zzQ#m0H`7=tkenPRRn^{8+^JxqKbep~g@6rx0}P@gFkCWW=+tA+(<@tc=qytfjGP_&
z>tr?dVsTFh8*v(FxmoF0o|vI~uL?0!bQFdX4H##j5mk!4U@6!OR$Wo5h7{j(@0D?~
z!Dr%N0`JVsN_%&YbYXU4U|>j=U|D01V@aREo5s&;Z||19ha07(qZ><RQnd}}?zM19
zO@>m$GVqUQJtf=w(oB)&dbF)W({XHjc1eNKyRxhZMqnaF-Fwx@B#!LZ`!M^Kmz|Df
zkGX1m(NkXsmLLwHzB4%(nsfKdo%jAx{`aXz<+cC0OR5SBm4{wKCbm>is>ToLh&EI@
zl;!*$Xs9PkT~CAjtobK6;CZ`Ty69#(=cGm88_&V9J{;yrN{W;E`T=?M6&PiBUbZ3y
z`x~)$4DuZC`-($Ndvm0H*C{f$I!R7imL>ymqZ}|Ts?6_*#*kB<os^)mys&IB_MR<t
zMhCoSovBDNkAI+I$#^;xIpc)0@tUc_hvXzGV*%g+@1da~ok1zd#cW}iz|yE}5|2QE
z-x`gZRdY`TEk>6YC=YoU3^&dw<z>#2^^496lyy`bjaIL5I~qrpb7J`tIid8#QF;9%
zeEHxDi~Q#DTZ<3tkTnuMKxxL_!C-YIA1Vsw;QYDpd?2nmo8^zR{Y*Y2KrvcXO+G||
z8}}tyxcT#zb>$2tXH(9Jh7We1F&afnh8LBeBnwLyjehMH<I4x%mlhv}u*5yx{vLea
z2Yw382iA2Cmcnx8C|n?Jp^Pu<dx)3SG2#PdBtNr2)-5_$+Z<~~pR@XwaYtTTd%*_u
zy~TN7*$r2xsr0^=efgWuOXuP<@QFnx$5RRanT|_W5Bk&gRvCd@#yYshSF9=O!V60Q
z>MU$#(C6tdY=$u=&@zyhjwraNDhGzd_I-!tP0To@!Ei~(o~?uR&C-S?c(ZUIEs?U6
zKXxfxI$|~I{A&ywMa6C-y-J21q3N)9#@@irSf@L3(?u|zu&q%{EWw1q;|%O@k77pZ
z?nhrxyib^2BxkHRK{msEd;=VUFgF7YKu>VodgAOGDk&O}hRQet9ceJX!Gm!IF9Vlp
zIWxmP!QjqxGdcYJ$tUFI@7yL&{rq=w^4w}w?8uJ^4VZ!Q$Qp`LLl6bhvBr+Nee!{a
zza{xFe6BD2ij*c->)ykJxMa__L;fUTP$M<5UxqM2$>)@WG&QdKY<>sCe>g#g`Y>88
z$rw>imwtFY3{_RHya$Aafru1OJp!lj#_AUqLfN3wl@5h7(hv$amPN&zqveqVeh1+U
zD;gz{2J(~tf(05=N$MRnSPI|xP<3U>nZpNAErg7)RZ7EB(@4W~<^yM{xWq2f5Kcy-
z`yN8`fo)f;_`vVP`8}BLhP)fFj}TycJmGC}q=X)8I=i8rKX1PL^UdE89=4o-!B7pM
z8sV{)=jMx^0^q~)`3qzV24Iu2tz&$m2NFDoYkUQ#jr(STD8LmK6RgfE<}_|N({vDf
zo477L2QylyES(P}ED`&)y5%h_#pC-LctI?n@rA%84|ECN(b*%l^-WUO)P~L=4)3$|
zy=9`{78Pi0ZpYrJWZ8mce#}Rsl3ow#y^x&)%kQ$i7@GPjPB47vkuV+08M%OD%g+6J
z_7~leA8u%tMcC7|ueM%2FJ{8a!unH|!V6-iY=n~#fb`Ig9vJydnDr>LAA8#9-O!X}
z-Hb>+^3n*TEBt+j8)U_zYT1QllpJN`j9HHDrBStZPiB;ZdsP`7aW)ZV)P)^8`Stjw
zjdIP6*UKOO=l|rq6)RQoo7_&GhAx)90hc(8s=re6hJ4~LUze4$PL_*uu91Y^Tx@Q~
z8D8Kcjc1Qd4JHi_TT8X#5;(HK-9=cEgKNkDzQ)B5gU9g3=L6H9;e_KKHyW~~+|sx=
zX-z&$g`$#Xlquea3%&}Zfo0_)90SjS6dK-W+z7|O<duQ=d9l~1Ab)&uW1>iNjt0oO
zc#S<%4+GDO+vuEuW30NGd`>uoZQ@Nifnhjft-AW>GjN?L!`}zygUJ^?OfPP}^|9o`
zz%^IjG$z(unTPPKR3@#dw@GEL=Dm3yef9Fezh35<B~sqP!y@$2GUs2Wf$JYX`Z+Kk
zn4iImk3~oCv-N)TU&9A41m8SXO(Ux-(-J@bFu859f9cjUnn?}p8~Gb+U>nbH;o8&X
z{L`@I0FTM`^3HL99V<F+J_iMioTaCw$y1-dNp-|jds(P+Fx`=5Ot-G_H72sTnWj1g
z*m(0J>V!jzUGU&XBWnTncCA}|lA_M#h1>_$1|zHH;1OAM(gKaAG1Ao1AwRz7G0nrs
zK^Sh!7gp(e?X&=k2jxES>_#=Z*jRS<^vjwh)q0?AYrAC>aakapa8#C;=-w+`x`)K{
ztXKq>^2-*?ktbf>s>=2+?tfb0w{`c)C$BtDjlEvXh;eD;gMZzmjyH@KKGQLANgzEn
za!KM|7**f?<zM8z?>bd1H@)b*@SpXhJNZ+W%#)`#z6}p@4f6fpJfyQ;{lH^xSz(An
zm;r)dEKrKyO#4HnfuqW=?A$3A{p-KT4{p6f-nagoV^U2j;9TOvtym9lc}Bkc=YNxr
zpLM-lz4HC?x2FfCYXpbK##ysBrh^!TD0oExkt%e|Z_);Z=}^W-l{YGaUxNwe-jv`i
z%cO|>YG7G83`BE{42~}h)p#_cH{N>}8ANZYvFEg4_~$pz=ISjex;vBK{~8?>FRe^I
z1J681a}Aa^SbR9xqw_^47hd?I^Noh>O&#f-KMeCcy0l0k22N+-27Ws_)<3=fbF|-U
z@cIOQGa9R@8bibD;lH#=NBgjpmM6+N=VfW%I36P`$&8>))k+`7c+o&E$jX{93WVR~
zIblV+fL#hqJO!Fs+SO?V4V9t-Yj%r942`VWaK1t37xer`M;XcR5J&@wF64Cv2_GNb
zxW5n1Co0Q|EoAMMmO5?`X2bY_(y&`~VkO+RTL<u#6z0oPxT~k(!^50gu;+@iT3o`H
zh{o0iA!nYvSS~qZx$Y5T!_Kl#fI|$P12zYHvQAkv7oN3-bSAE<v;c=fTV5FxfinY@
z<?~KkrhC)4M6eIbGLB$R8$%N6$2#iJDxTM^ULqH*U8+VP>(9}}<uLx<1DEG4k9Dwc
zg!=`9Ae3&>hj@GA6#R_%!#dOO+F4g8r``57`RA)XEH_;C9<7@(-Y2V~7X1_9a(+O5
zx#5p6yuK=5yyzzR)cR{AGdWfIZ8yu4g^yc~O97VxE(Kf)cqza>;jJyb^5V1b#<&|U
zn`0DoyevkrTrjbvfEjEz1KzQO?#_J0lA128h$w(IOoNWIjUH@^2u8R>W)z=}C2qQ&
z3N^iUSw@SQI=<-4ljVGzb48Cs+~-6W;51Cii}Mk`LYEBE@dnStvOYd*{EkZu>6qfu
z^{cVh28S3UFP9rKFddDaOU_;m4}=S45VK1KIB%;I2H6)rMz4z8_-%c5+(&jcX5x7G
zaz|$`jG#muW}L3GX-s$NIj73$E4g8tO9wH^hPxra<II)`RprI<$@gEN=YFxybW_jr
zzw~j-6}d6gl7Z*?Q<o`DG&VERQY8ycJ`DM}FYHQqT)cwIZfxU=?&d#s#ksm<)08<=
zj4;daio>Cu9dh0GzbmKAsgkc=`%y^)Z_GPG<B7g<#w!_z_O|qN$bUciYx&b#e~}-4
z;JdPR!D@J38<B2okf)J|g@hB0iVNSRfJ*_F0xkstP=I}9YHGY>W{pU4ink9AkTj|&
z(+5YD$xS>d6fnBbL=@&4UlT!97iLHbcqUdtri#r=dLDFoA9O->zT+&_AZD4k6pvTV
zlx1OG76Xk%{)jgfb1oaCkwqgc-|UyN)0vNz23{dt+B-usoF+H}RcSW7X>c{mpMM}M
z?_M+OZ9?+sMxQfRB?Wmt*^~X!dCI~PL@q-#f%PyrbC!!9_e@~CF%(VQOt>oVP`6&V
z)&J7Ze=0B6*U5oz-yyRyGSv7s#`$E_mAIt9m2%C|!}7Dg-6hY~)yUn~-6@O9Pmn?E
z;Tr-wW{SZ(8T53^a4FzYz@@-MQGo3=2Wq*8+zl=T#zO(u_!<xO+`Lg!ptomOcJAoY
z2CTRwNlMG;zS=Tuq6QX&3?AbHNYLOa#0*v@W`$^EB|t$}qs1{a#n~zzRBRM@qF`Vk
zxlhpMIYix@$+aAx+}48y!)qV~NTN}sAuTy4OlMkWyp!I>@N%Y|$@hj=tmA*){ad-~
z@rUH?AO8w2unQ*L@FEUL@hNh6aJSs@r|-l4bBR3ok#FOW-*U{Xa#;(Od*ZLk028~x
zrGQHTmjW&YTne}pnD!KKjjw6X!s$@~qwsfj4$05&Y?a>b5&7WtnYQs2-nfWGEva~$
z;JveqC(eSMf5u8V7c*d7s%PA@`x-4HGJj5)RFo7d7&^NkOu|y7-T=pyMvdlm0&u)H
z`S_ao&DGqSr2fw)e)JV7t^cE6`Nf1YxD0O0X7F-e4LE~ar0@tMRIuQIZXpsf4T!B^
zO!-cj{&7y+^qmd-uE!pcf4}p4^4w2;EsHBF)$?N<W-CqI4GIRHxjNxF%Qg2j+D%>)
z=YQqMDQDMsw%jZ2f0GUU-;=8rUM!zD`@>S4l_$Ley}Ha$abdw^ES4YY5BFBQzEIE(
zvGy;@=b8B!c+q<sCMDP(X1ID<aJ)Du;1GYp!85pp0O5TF0*Bkc9}T>)xJCM5*%*d}
z7b(L4FDxvU8B2Ikz@nhLe6X3WY;eB^FEzY(VP!Z9nF|NYTdI5KQebLRz%{<6Hh*Ru
zcGP_{v#^{EEASE%jGAh$v9B(>Ln>liy5(%R1C>Z)Dp)Xixx|k@X9xt#`99D+;hB8q
z%5={AK+l0-X*%1e2=+djcqeWO+s-^5-2C$f!YAT1c3lId4;1Gqi=903KD_Z2`NY3{
zQGWNIcgVVB%k_1Fy&sSdP8jCiTs^RY+(fcOFfkDa|3abPT=$G@Xun0y%lWK)>dY&p
z5Jw^OV#bU6yBO&CkOKjU2}nJFy=ZWD7(bGPrJ&e@h(Q87nd;scJ3v5!5Fs(aI))$~
z-(8Xurr0pC-_eK>_dbSlZLNp>T7`xv(RxL)58*K3P$3b9C}HAj4V4V<=-|e3jUOx_
z<(Kdx4Lowe8bS%2BOxvU`z*N}H#~0Kzh}<*3k;3z9{8Yy4hPRVkI(Cdel$eNO0Z?s
z{;6Zj2g~(2<s?{$nh!W1F_h6fF?<Myy>C2u8VWb^!R(9m%{lrhwtV1zWqc2iyI>*a
zd_cPtk8dKj-$O9$edBq=MyT(>H}%wi8o<(b)`@}6y{vX&>f?R9U^qy5LuJ{ob0t(P
zL*zYFEK7A^9oH0KTf<*?)noi*;^$%-v<|qP@9yoB0qmtw<<efa%}%u-KUep7@!q6&
zmfqFf3y+AFCqZX?pnEFJrG>LXDn&dCtgE|6_l>bL4itzxXHs&qGCdAG0;TKgACUT{
z7OhjD_s%%hjoujj4M=C2miA6*g@?vKba194t<teXv)FIHnKKQ&Fdk`YmVV%<XQ2hD
zEA#Lb_sM0Z2S30zYCaT!513^lzd75qdG~I4_m{pP|M|IF<m&b3NE7(LGvBDdhUEkH
z_tEi5uwe0_8D#~lq~%?40E*Jx&pjny`SYFfp#|TN>ZH>o1^WR9U|ku*i>7%;Z-?~u
zcS&C#4hhchkvKSn>4{5{y5<zfFy)k(Q283R_9w;#I&hY_&|n#cQ<etoXB^PF_Vx~k
zfGIfQAX`##kZ>S{leqQv<1D<M_F$y2<B1@a@8S^QoQzyg-2!E5>1@VQ%U;welmW(b
z&>(X-5IQrJZk|WenYaxM_DfTDYryy3vMt;w<2mVhFlf2_c{DuIj(q6u?TiRF9&ntU
z?z`91Tc%~OSbP|?zpp@LdUM2@54qrjMPqLn&bw&%kdc~!!?~>`*iIO{kDd=WZ!kSK
z3?JIThpuD9ha7wlsR3n#b?wIY(5c^pC0G9Ru%5l&LvBW%&HvFUIS>#_KJ?>zXz#-J
zpe<}L{LJ@Y^8o_{!3HEcy1|FO81VsZS4$_`rSX3cqbWIcV@!Ya>qj4vk3aFKtjNig
z=fC)6wBs2nW8wPVsavy|gIRZPuYCFUzmuaq-SX}wOXdA%uTy<2k^$C8sNfo3kx<D^
zGi@o*)Y>k4agJAAW3x2i{4SpB)!o;xUI?iqQ-SS;1C5Wq`z%>JZ_cQCQXykQc(}1e
ze(~pLF=`FvFo?cHSajG?UX&*{TydVHC2(0H6cP4oj=;E=x9pT>H@^c#4g1T2DC;b@
z3%Fi()(TmNgO&|029$YjN1cBA$P0QF81W0FLlOs;L$8OQeBZmIcvkKxcn0qFJ%{9v
zPrs^Xj0ML{qz4AoDU0XIRTrLVvU;utw|;nqd}PCB*?F)YXQL$tt}AdOiTcQgOV5@?
z)fJ;~Gw^D02=y=i{2Y|D@O+pJua)FO0?MV~wXdOGR(<sr`Q&9+%4gsEe%(*?Jb3WJ
zmR*vSo)Q>0;AQx5`PnPgJEg(JRMtGV;k>oqJo2J+!cceef#O0ZE{Pa1Zie#sqb+}f
zmz75O<dSbl#o!9myI+kX%-3k+PF}IhBdv$!t%Gl3L^N4aN-;7DI4u~ocyR}0(iD!H
zevF<jD6N#@WNQ}ByyBIzK%;jMY2L2gD$Siot(g}HaY`wUQa~CHOaeuE%z4QvbJs{&
zN+!;@8&F&bi-8ImY1s<nW@F9Ede1xo1K@GSAP>gPngwS_0tO{WEC0Z_Jq<OoziAJ=
zK3Yq8{nO|(;896iQht)0P__uT8HLSCt+>H>>+bK7*Y<A2F%A8|J&2qD7Ryb7l6m@q
zvq0mNQSb<r9qo}8@Zr##z|D9)waWAPYvVR&R;8@0TCH?)zBjlj9}a;JT}QR-K=e@N
zM#2Zwt);6)Htu=FS|&Z3v=#~uKAZ+V(6LUSaxFgW1|RlD$cLri!-=ElX6j0VBvL+*
zwrdxhi6cJv9s2T>mEiYK2R^(F+C|KVx!}Vnd1HGX4+DKbdD`05tlz`vbSxA<(3JH#
zrFsq8FB~5d?0Wzliw~F)3d4u|jC@%$pL_^n@FRas{Vq9hbbmy3J!$q*eE%W%(AO=S
z_Py#ga020He-ETBzX#=m#~>mHtUx{-ZmpGV%7^gZYUQjdSuuB2a6W*ZZynkqt&n5R
z2nXc@il@PHYV~Pq@RNVUB~T#0rc3C9w_SO2v%FD02X#l|?uKJd0m>j{iz_0&_t2k3
zc5jmvH{K!w;|ok;V-yn{UE?bzWORWXYYKS#SnI>->gkiGU)~}+_t(K?e7{cZLkHDw
zX9$V;ftl}!F6K>sb2as0GtN(q>6y-Q!C~I|UinR0?&_V*KVf@6R;D2=&S>#mFaAOq
zI1111OGe>lw*!hB;P5c$IPBx`Pe&{jH@r{4kLejkr?Y6s_(9awD%&nxb9nz)jT3RV
z;zq;r#$)o!f`_t0)s<x$IOb|fBo-b%08Tv81`AF;m?a%e?d>x68@I{1^G=Z4um3n4
zUBm+?%dI|_7DU1af1Co9Pud#(@;&)XU7!H7W^H|)@}oCj5@~Fdo8EW1%#{<QcE=Fb
zp;4~1cB4Q7n*P(;s~EA~jI%-<Wy>yOROWyY#0UAg--~5BU=papCA@G!(*jP2w2B+x
zc(Dxy)Jny_!O|06@VBF36E#*Z5Ilty0(U1gt4!}-=R0%n!7T!q1|I{_!0=oR`OVey
zBG?Teg(%nXAy{r_Jd3n`7Iw~e=HArRmKGBo@TyP%(Bj<aB!&;6@OS1iG~+c;@ZuKe
z?dZ6Wb+wC#1UC;h;DhJhuQ-bjcpof*U;3EV6=kv>*7x975FQO5f+Fw90tkeKXM>;T
zmE$HFK9C+E;qfH``y6XuuJs(~FUESTfjPXi_@)h9prm7pW8cETEM8*~IFKdjnHX71
z1-KXijRj&Z4CO{{UcR)>o{J-el4DL0*Z7J#NnL=)f&$*g&}zUk(vmRR-;bprU6Ku#
z@f^V}#v#kaSk{)Cm4PKB+~<N(N+f3^U54dp3~X4P!BUDvW|wd_>ny8zWD>hWaHeI8
zOjz`Yn4W6w3kx(l$1+Y^J|8nYB|2hlbrL?1^g#_A7zPD-)-tA1xY?D?%T1RLUbIF>
z1{J}8xLG*!OtV?J84BMYo@x9S%`1~n=dKTlo7NS$W#U{i1~2{fkuiFco|Y(=oViTS
z?OUj`BmwJclboG!S#dZ%<jcp&hhRKlsWu;yaA-EqGwbZ{mrwoVPFa-LFTef#XR*AA
zI9unjtz9u6GoGap)ipoY;)6d=&2v^}8V=+>RSkW{ailf@qwMjJhetPVl-quHmwe)q
zcgqbo-Xx{7vgDN);-#i<NYayR0w~3-KcrJ(b}>eJ*I<dE$hLQSVGLtgW?_QNt;Q_P
zAc$pWqe08_=&(92U?8kSEd5(paw2BQ`gPf1AC?`yy}ehctOSC|rE^@WXzFGF^Lrq?
z?DT9|RdtGq4tO;z;)pi)uLa~ia<Ys$1y$JdR-{W4gQ>49n>b~m?4Y=TuW4}IzpP?~
zrU{6cBa+KJ>FPfaJSHQ~ML8vMN)p=;%qj=`@GVx*&`wK9517WHo3)Q`Vd)}W8W{?n
zLDAyFP+&fwq#W=mJRdBcC1R!}J_H{qPnF<9QG|R5DI>rw6*OB`u@W>4Kca8=z_k7{
zr?gN$6oU_I!tlY85#<B&j1D#}_&r3yhpaSy4?*~Va=2tNB0hjFoNcAj9qfCs_%K(B
z@coC95%WES<3k#j4=<auB6xWYBC$NqdWGUcF}{cNWSmDC@_VrOkk0QR3?EL!EH-Dd
zLcudAW?{K;AU?1?A0CXC?2;C#Z9gbIearRu7M2}Qo(#Y!u9T+Uo)PJ6AI38JC^Cji
zihjZ~iWx4g`+ia>(8^91t40FL@c2-1jj!?1&&@prD8Lz-u1<FFR7k1xqT^3Vl<LyC
zvVBj7EUc)M#nojn6jEVuCBoSUy&0nGg0f-juW0;7q^-?f?&8;HQ{hTXNR_G*EDb;@
zCQq=cv#;rB=LT&$83>RXQ90?eBtHv=2GTlVI`0)e(&F0>iW_rNp_*MZJ5WiZP$c|5
zxcl!mOM4jM6R;dDF<a)AWdnZ;dxMj?dXfV-D(~%W_~R2yN~_~5$}2&~>XRVoLnuD5
zt_e0D2*8x$1ZLv&ia)LGgYtt1e=qkw^Q=7mjUP&GGDfmmy?d*2(hI<c0t=W8$iQ%x
zp>bjAkcQ=r3$bL<KRo{0M!E6cU&_rNyhgtC;cFyQM>$1yWOtww@03iAe)<K<TrQUD
z73LH`wuj`62BgK_uZ&sAki!h!2S%C_FaCi(Cx_a*{h)w<6mkSAd!_m1xWmR_j5&1T
zd-1?5@P*0rTrNn1Bv4>Slz}CQ*-%I$39Jj33x*1X*~ah+_{I2SC0@atS`arXkFyIZ
zBmN%f3?x|RO5F3XKWA2^H7MYNNPq`xMmtztx&JLe%D@LI&XI)4<O6Yvh7UvF1D!nt
z3Zy5Oa#qBY5BcB&zSRgqC>de)V0>_X`_5v*@gWo6LyrAD1cPDVh5H_q4>>fvB9xJc
z_)ry*#1Z$f-$N$&fHpHwJsHPfFb~HEF2yd(XWwOVSos6}4UU_I$#7hsWL4~!z1Sk~
z>jzrolCw^hIc1h-;z01CjpJbDc^74>0hXIbha+xqDKK^lxW?DmY3JsgA{2P~i4J+<
zp>CWyk4E2a!)Z7qB`4swLN*^rl-EXZU@i85&;f*5%EvS&a4Xm7nIQ9)%g3xGh2EIp
zcSIop9_>PPCyE1g+fa$@BB-0wSPT|e55jX)Cs<OAr<X}Xr$7m<C3u0}jE*B5uh+`a
z?}^h84BJR?V?6`dA|Akz@xfXS86TG@uXa5rf9<_X{(jl5^3tDX$&)>GK70<x2Satv
zG_k|I;UDuuo=r!?p9)7JESx@A&3D{?pWOWKH_7+^<9qT?m%T^#nGIrZ8=bP~rfU@7
zltWKNNjDk=*fZBZh}nQ77>r0b41)I$^kcBVJ3~N4m&+)_1&%J04+)Sv&2L~r2>oFi
zqb(RrRjN>rNJBVy;fyn%azL|CUl-{?ryG%mu(*K_5eqO14F`{Wh&Y6)>kwvRhK?6L
zgfZa#X&OsDSnZ{04g5=D|A2larhJH<j7;V4f$dQ=-$PKIVo7pb63#}98_>OU&2Sp^
zyGJ+3yU$uBC!J6^nqgyzp$wdQnzd@gWVhtPJh@kw0+Ca|HNGOJm76j~6kvlDi$;r`
z3gK+q+NaB=lau452g?E&Xsd9!R)0U$G<zf(i4hH#z}DflnlQpYgcr&<ix7+_8I7}8
zjh&GOi6M+LPoWXsB!E5+&+8H93Y?7eP7JWDE^zAbv61kBt2lBpQ>3Q<HTi4P?Q(wR
zm!))YsdUqgJL={Pq4>a*5HT3iBKesKvTygGG}QNpJe$tqMS`^V^vD-~`7^omzI)`)
zKf7BlJMA<rmNO%qsWicoR`cY0rJ_N2s&MGuF1}|RfARXx%0apIt(Pw(I~9SUK!2E;
zdlbw-5Pai;Dnh==B6^A?EEX6`cuL#w<c+AF#}jTbuPX&Nh9Q<Ray->_>U|H8i#V(_
z>C2S9+NF|Gyiej&8nKTpUhaGLRSaSc%kmTF#zb=1AD9qhaWr7v>v2K>*Z4Y47(G?0
z$+oMncSNV|z0MaH8(qh08D3T%ID^yWZ&ajDTuhHiQ>C^p9+OQ0jzFhk56`Oyw#hGd
z-zxvO;<K{0<Xn4s6n*<e9@Ox%m*_P%3}Lw{XXT8XnyUp*MGhIL&>d)MlE44K9rD!f
z9kS_1zmQc67HA^MESD0g6OJh5J#wtwlr9Ba3b+(F-Y9?pLpUyKIg%<Du30XHRdsUz
z(_3-GMY25j{ATR^O_BMPWxBk0JVv)`a2;=QHF5QIjjxHLtqVB-1-L}*gvH6il{Z;g
zW(L4lkqwZ|CyGij8_@crEtuIF#1gMWz#EdZv^Y6=b%yTw^2y*n92XRzaYI+hHAfH1
z_g?<4T(k5lx%RxvvBxS&xIZP5*&!#PC}&BSO+8%OFSQ4Fu8s4p_g)7AXiOo&Yc(~p
z`u1;NA6d5S{oW6ys<>D?e7^H``auABLArM?1zZZa6mTgJ1qIl?(iulea=e_pXpwYv
zjmWc`-p1a;1bOKB*W|j(vLp}ZG&%=vqX6$Fbtw>23b@8sOv&j23q}E>xaQ<0$_@XJ
zugQ!u8o_oIAFzZqfc5o{Zg^eln_IBrV4ftW7Q^VmtXdy8fvX<ulgE9S*%aW6S2Da#
z>~Cw5kN)uvS)Nuc*RTJeq$VUwPp>&QD7q<8cG4qQx-#fF(0DWrogMjOuWgcxzjBjY
zbN<D0$HzYj=K%1`1z}Wo!lSdgF(D}6!zo(9Gd-w19_{eJOef0Jt)E9CUD=#cOrlP~
zeY^~3tXhm?W_o1fwmmrWZ&;prWvg6y!Rd}cuw#$9>P2t@7PEE!$G%E43WEYDr%m9G
z(O+X(IoJ4#B{f}GVJSc%=ANRl2BYk5-LY5p)iq%`L4pi%eRo{3g2YxBb!sqH_-?-G
zM*+%25@tU;2YThl&-_}N`dj5!@BO?Kz$JM<T^M_o3PxKu&Q@85yhqt`fYAM0NWgc$
zdGc|&_KW{dZvVnp<kMHYS2C~`)-}8w#PYjUdeXS{#N!VCsXXyV_aWxqlZ5Z=2X8*l
z+weEcL;%6A{t!$$6Yu|Q;-kF!)WM^?)6ges`bU?hQm!?i-VEli{it#7pV(7CsczHW
z;()~yOCHGw$fx0n895xQY_b3&5T+{5xJd4u`FQUS&%BTD%IqxG@yD9IXB6nd->@yG
z+CU=S6iFH#>%ikw7<gHK>Qbp~Y?h{$4%v<~Ki}ECUlz}=)H;j>SMx~{ek`im$BpT=
zdqus4If1hPHyl$6@Ed4qZ4o(GBfb4mIKYVzYuEUSkWg;2V^0A#`fM<}dU|Ek+cj8X
zmVgEpUgeHf%g7K!nFq&euW{^gbupM63Q#6EvxM!|@|zd_BoFL(LhiZlf21m}RC-{H
z@$8t12%Kq4M7cae?0@e4qul(>ugE<=__<uU{v36rVma2Bn6f9LJ`)L(JTifIRE-iq
zyLfnYp%QB;wTy*p9Ly9Bz^h$9&R5|^c^a_%jqnGW<B!gIcl7m2M{l3fzZc#gd!WSh
z@`p~61~+HM2LXd#6o&{4&k6@H6c*qi0#akz4EyT9RkbVC<M2oS;}7uWL9goYgmu6#
z0rfCHda>j{0MGhMO-j;V8VqsXXQrg+FFQ2_Z5P`s*4=_fIF!`{xLu|D?Ih$+QpYTo
zvP&BBN1B*}!wpS&9g8CA%zwPzJ7v?*fHFybk|#=6@(KTjD0@aWRh}%FVp}jmH>}E^
zA?fVvvt$!j%4HAaQ)LtPeehm7057QYc<PZ&$R}O)69#46$fx24m>PIB_l)q!rQUe)
zB+lli^5m3F$Q0_u<5qairBgoBafoad<TDGhNqMCKV||xi`Q$fCFRsj=f-7mF_yRBD
z$~I5GSzIlwEYtzW_t}n~u!~JH&VZ%j_>Xf>T_(T!%X8qtplsiFSWcK*fqIOsZAMjM
z63q8{!P)EO$)(GbuBoX!XxaUiV?y9@05QBtgq;82V>d__`uOFQRSMC(8wYq#R@eCQ
zkixy0E)>{zs9tK1wyN^G{Df-R-kgJHEG>(f|G?=&iQ^kjbor_v(0ky08y}V*zxY4$
zvul1TCzj5iFvH94*R}JmYipA)|NJib#Z!;SbHBM?)-7AE451=oM#hg94k=wwZ(e<7
zt)Q)_fkpL;|M5%(tqlVx?LFPn-P<dD{e3cs4sIAmQ(JeB)OU4BLsz#nc6Uny($(U3
z7|VwQ#ultAo~vM!)o{a~%7_p6%8m^9&L2jYXO9x*x$(^qR7<ndQ~85p2<=dc($b^?
zhk^52n2sL~E-%T*z&USeIKM4fe<@Im)2SS%rAsc-QF*kKb5_+-e5st{KcAoo8~uEe
z6<=Q}OqnOrifkwKjls_+j?L(|3Vu;GNxx1Q_N^VA($(9eve^&W9D(7~jrjUbuWU9#
zChNL;r3NyLwau1%!m!eUtUm$juM7$t&sZWk-rx~Q&y6p{aI(oMBN%6t&D7L1nGe}4
zPEVCW$|q#A7_!N0A`CXlXEM%sN#no*(&pj-dm47E2Pv*}SGlz4?|BAB#4eV~tZyX=
z+lt{?U+b|1F+DX&XT8R1cu_VQ>N%K$y~WrITu?Z6_1V;W(VRKLpBttg1t`;>`MXPf
z5Ho!9i5%m@*rjKT1-jW>3XGKk6nrXf+x8sNbBz))I=p1w969(V_T>!4ep+~}c)Ix}
zhXS1FOvH@BQ`=sY+a9@9zIEm8vbuU1&a8q<d1_TL4yqS%_61@4p;}q;o&S{Ko-WyP
z=PzVgRh23ld>6|Gn((G_FiLF#zD<r4a@3u(SN#}e9>)1tgHT3mTU+H|OS2qpYsZ1n
z9n#a)DYc#5vID<8Ft%WUL3xE?)d$0h3KKTSV`_|AvGoJ&6#Ss?XcUfblMy_t=8UV3
zv+FbC>>r8de^21}uYvEZ8_z}gYsd0pQfQRLeCsW>Fa{Inc}9f)J)iN@#i`~VS2d9O
zdu0F$eFNyzz<0Em_{07b5D{10!&wY8TY=^%6)?sYWu{97e(6wv(=xMVR(7_`&d-zC
zxp~l+la&6+iI~+O{Q#4*ES#}nU5+QYH0+^#vL)bb4QFmh3(h_b!O-UnQzPVYe{-`m
zwzf%oN4xYvHX9(9H8B3S;OCJ|$|t{lBb%fzWe75wh-)ft={^bzF>HCX-dl2tmlgw<
z!pdjlk5}hC5jW4g*YtX0iJNt+e+g0p#Dt~#+?zPhl{fh5g;(<o+2FnYn1t;c<P+!Q
z4R&Bg88mqduisMHv}F>rb}FCfe^oYNoFzj(Pla4o;g<v1Ov!+A3&>_^Zmv}3=fg0=
ztPbc;KB$}m<`8BP*;X)2jBHvIBH!1YdJ<UWp_rB#?H|h0J-=<0`olxAczKe1=-PZG
z+jzhdrU?^60|VW?j)ejf$sgDF8Vg6<JmaH)X>X!v3)x1ok?Vq@w(oEw^pg=ep{ziP
z3i5EaS98cih{uPln|mr!fQ@1jJR80am-3%`;OlbZd7qbamYj(r2QczHp58EEWo<!)
zo{)%<-fahW$&yd~Ke_VsQ{}s#`kGYED$pf2<L%r77Cl8HNq;H}W*JfkmRKExi~U|G
zultW4l})vW<?Z@L*$KsV0J8=d9kC4xT=_94LOF#3n+3%v1Gh;TFdXn30?d9a+Z&(<
zQz&YKSl%>fKlkH#1kYF#21U+s<vrk7arTwZI;~-@;31zW8~Woth|7DuF&93Y06a}w
z#V9JKeAX-9**_|fjB{RjkELW9$C*0MJ>-+`5ElpIG!Dj5B7O;w+eE}A;hKbJUK0VI
z#SLI4s~fX~2QedfupW6yOX5refV99;$2b^XC*<YIlHx*HRaPqV3JWDQBU6fUawP}K
zu`YAt(l(oK05D^NQJAQ7CxI^gFlIRb(A^2cs;xyf*Vf6K^$oJSu}PXaV@3XurZjrV
z8`2f>nF7Nq2lA1eiY17t>3YEV0A!7_IpC1ZVLW#Ql1=i4)|kpGV0z?~_xSN02N;Z;
zlBfF2IQz#q{I`PV#(t*!nOolQ89$XnKB6uvmyEaTrteH$apkkhCgbcMp5yd>P~!b$
zld_sj8D%~MNHdo6^-6O~kG#-yR9;XTqCD1F>4+=jvmz@?PAn>vm8B(eQfaYd!WmI+
zR*n=Rp15(4K#$-+z5Q#c1&#9$+h!vdV>WV7Ejsk-=^4iNgohY}G2;@0vRx42DKL@z
zagDF=^mkLlngU~LUD?>hNgX!NvZ3bF?BZEy-{bKNH{xT08S9F<@Fs%-++&df!)x!+
zL-Nu4zbRKPy;QDVbE!ammqEOXb%Uw16oYY+R}e3Md~SpM+w)(RFI;}T-13oYpxCBC
ze>vVf8jk2J7tiV22ZL+t-aWFXwpM<5;IPP%MoXbfLDxd%3*RMnkVq<&*~H{T-A6OR
zZ#F4K22xU`7r!nnTN=T21XozMmSU=kDwR{fQ00~P_A}#D(KOQLP=xf>|C#9=aX#4s
z#GCg--ltt*eS9K3DK(+bEBnC{=X}OJ<W%?eK*{BPAI<>uQ3+P%l}a)1VVq%REDp;u
z<8e*JH5p6clCXy;4(Ta(LrB+)Utiy#?5OLJ9fuCfeSg~o_$Z^eKt4RDOcs=v$&$I%
zQe9M}#xnQ7&D1~zn*##m)6tF&d42C*IZ%609zA$ic44`?E)T@=GnGw>78slkc}h%8
zR@u~<TNqOPDQPl@Wk*MoQ)Sr5CI((SGU$;>0HIuZp2=tO*C|)_y(cQjvy&;B#FN4K
z#&M5wSeyp?#`A3Ad3C0<pB)zu5Y3A}z@4&58Pxrfxc1x6K7$C5$2bhSB;c9?`Aotu
z8MC?ZkT329<0=&zzTJ@5gBXxG2xIrjEpG`TacX^zTv$;mC(kaEd2^~{X+?$ZK?}HN
zjJU=i#G+rYnj<bzjR8U~h~t_9uJLtTvw!j{&pv4gqekpjOhXn87WLTc#aXXZC~}4Q
zxtjHOnsJDRRx>dzM@M;<S7T?Z-0<iBk`)D2@-OFIE9r>iX82fiuui&BQlXluV!UJU
zS-JPY@5m26^;P-D%ikkhYInRj)}YQ22W9g>W24;j^55h)@9Y$5>r{m;JuO-CGn1ts
zA9p8=t9~f2Lr`1?uot8sGY5kGO2R7?Tgxy5G@schg^m&cfDMGtl@a)X$MCKaK6sQP
z&rSF|k)-fZs+}49ady57a!(D;Y6Ou0_lm0Hiu%%+;E!^~fd!mTZy9D#bOp0v(%UU@
z`s+~xEgA8dRE7bjqpL%H`#O}}&G=<!$dwDK<wK{hmFkjGHINBvrUe>at=KF0=<A#1
zH?O@Rwau-VuE5M|T9TBf#LIAUnsj2Oibg+Wa~QJOL7Bu=Ws@=r<ICa)dBLA;bgRbg
z&u5#8l#57ZlSBtt`wwqo5DXrHK>6bwD2-p7)*DD-<`91@I%pD`CcNhWg32Xj6U#YC
z1H|F*O_fWPO~_~*1`Oi*FlYcnEd%nImPV&K{qp$E8hQL{bVA<%06+jqL_t(7v>%yi
za$0$bT(@?uteU?7TM8`aCQ2eLb87uzovrq1YT@N#GrcI_8eh|kU(*&_wpVP=+uH}_
zq5Io0Z7*{2DXFq_IhJ#vy`~NlNoeorMtUmXi5NV~w6aXqRyvXjxoIM%06RT;>*_>D
ze%oU|k;eWW`M>vmQS#EVqz`)(V!h9cqqm9iFe0Q?{?vB2>~H#u{OX_Ykn1j4r#KUz
z<H_*X`hxzi@7*KU-~A^jSQzC_PLQH>9GZ^!wv244&BZ<l>_t)o3(BqV2W1yp8fa#e
z7T)vGapk>vw%%HQ_1kuQ;Hm&S6HK*x;Oam(BJ8y8)-tY9>7Di0<!Oijtp&!dVA&Q6
z(|tvpr2s#A@J;m4FvDJ^q}FDc)!Bw6Vnfo1eUSHUd0Xy#^Bwu&2d<RU7cK(5X~jm1
z>?jPUL<D6s0fPdE;Trni?tegD#Ze@1Ehz=qqm_V}u67t$hjSpC*%+{+p{25kD`&Hu
za%p5xMbpS9XMyZ{XKg*Cvu|dqY_iVmqyq(0XI|Avg=}*68cSY1vI&}wU`DJD?RFmw
zFs%QS1T6o|X>XBq%!;*RrtIYdwes>izmflU(K&L}nP<bBA{@#DDsP6x=~7Eu=ICA1
z4O5E(${(P_FFe)*yRPvywRk<_u^GUy_{%T!VNh&DD(4#UV>9dN$wJbg2b=QwK_sDZ
z&cI#<2GjnB%;>(H))e3j6qlHCY1UmEelO4Ne^u`J@OPvvrwFdaC&KU=fv<xUESG7J
z|Jrb;G$rkpb?LXsX;o{Kj`Vmnp7ZLa8#Acfa#o=ovkKQg_y{(83`jwCrZlH#%8~pc
zEF&tg3@$2OG!Cdxa1@+Zq}Aa0#635@WH_Eb<VfpIdTPMcX%H|!of>fFhWCX-SdKj)
zN2%<#G)jDPgXCjBULOp!e|q3ydEy^Rr5H{+xP&{_N`)^|C+~^w(f{zm3oyL)NJT-e
z)MClt(Yyi~nFaZToT^bk`BY<z^n-jF*(92wco6E{<W=$5l@w9^K~s--^4>fEZ5p{;
zR-6q31MLDGp0r^vXd8^M_@nib3PY?6j%B|0@H4Wgyj)ISv;+eQbet5Vtr#OE*p8WS
ztmR$@vsk|v*U{9^y^fy(PWhwc#8MiK_B(zoT?j4(BA@`<nVekg0fC;7m}ErRT*Cw4
zYy_2XJx@oMhlJ1LrkLIoU?)Wh83x}UeC=`h)yuz@AAjf$Sy)o7hF2^*QBzhDl!a}F
zYvcnDeH&h0lI07PUxwjVY#+9WT};Pghlx5<X_BKYQi!EOjodp_ge7dHb1cP{$}9~o
zr$TE)?|7t_sry7-4Na*~njf5VXy7P1XUDk26SEM*kmu&z+hjJ}+jljz!nHs4>u{!G
zrUW(+pg}A47SS_gGaWd<8Ix4ZvkX$w2Lm^{G?4esVCd+KbMMDb0i`Qt6QDdZXW#+j
zX#~SKhTBdV#(+WZt}flbNT(mYn6=e|lF6qS^Jc2F+uF~dZo3X0lq1b87}$!JRVOS|
zPmtp$ybB=~6yQ0LyN(>uy^B0TVfL(9D$0>-tD&)Qjjz!3ao<h=1*o&}=idiLQdDPm
zpES00p^?H?=~#UQkreEvIVKcfC&lGNiRi4K+xC*&_V8Eb8&`Zw)>f~;(p9=9kDU;(
zEG}K-;lD5J+9aR8_f|LnlR#|0^Egx9x9~dIy*Wj?#W@m7jUsks9~0t^sZi7z|9koI
z($LzqO{DIiNG@i+IQzvVhn)GM69WFsEQ3i;vY8M=-WiZH`%0So)sRLOe@aU*h6V-|
zU3!?ro-b)>5^2S+y-hRHOP?jSlwE&dez2$ABTjmxw?H^~&?Q`l59q9)<jk^UGY7^P
z_J%6GD4V1iWmsjCv~|#f<T)<C?{P5QNk1hYi0JX?Xw%ws{#bgbve^P-xvd!kHgKZF
zbMG*lJ5dG_J$}BieGm4V4M{<6mMo|&2g@g}yik-h<=+3yGjh{ypA}iSN?Lz+uNq(G
zU8wx-yNRQKp?@!yZ!iAlZ6b~Ja>tcd$-i9v0W=qI=*9Ln2EjGHVn9R}#N<(6#feo?
zSy~`z@J=;Rjr8Qz#w{rr1-Q&GF+Nd_cD2eIhjvIdM)5!M=YN;azUyYWWZ5||-qBgJ
zZx03_ig-4*44hHr{+T~-enP(X(AVYf&-kQ#@|^ce=g|atYp~642}~?XjsnT4loaGr
zhtOR1Mn%6JP7T`dJG9qYUX%p`jQf#jh^YrdC{?=b$X0wwZlyVHc(v&txQcx5_lBfr
z+_W^_?8^ApiB(jQ3L;mmtIkyMYS-NuS=cut{9!gr4XzIG0_QX7Gt-d1b{-{JNO}{I
z=^M0atSjlux?`EFz(v0tIfM@!>JD6-t87v}x%Z1RFqBQs67t+C=2IZJF?2H5QDk8n
zzetv?!E<9GrpYxxorrm;Z%yB!zUn4l6I*pvxy1fMBcC`EQ93XP!1e-8IIMvJlxGR0
zm1h(|?dTX>IFs?%OIxI^t5?okI?pn`05>X5A+gTNMU^Qy@;PuyBnwwdc~Ob0&jcsa
zv3Ud0Ohr4|dlbvIIhYmW;2K{sCa4Q;Vklq?t&^85n3w__P^pY-pBl8&btHCgCxilO
z5Mh9602{SG_s}<Ws`O(ku9Ww~r998_8p4P*4FH={fpI{m&OXw}j(;NN<xE!sm0G0j
zhEsyOU%FrZ`>)@ZTQ9v;E?Bl+(xH$Y9qduhhNCqte~8D)GnFMSEzHG?0{7BTv8AF*
zFFN%2M#ZY}2;%S+B}1__jyKGe%Z;dX&@kgYug=j#RmPNY{G<Q9I+=c%Ud5Os_y11)
zpP6Q|gQ<g-YuCYZPpM=uSL;dT%W8ORQM2o+Miz`KI?|wlg>OQyd^SJq<-&>0D#spz
zF*|1=>GHp*4DZ3SmIl0z&B(36ddgiXcl6R%Rw>d@3tEA8oN*ZjeOhtP*%s22#u(SX
zQ!aTmvdCv6o0L;COU8;CzM89#eA@idi+#^LPI+|R^WCusDt1Qpa5cBY#YZ-rFHj#-
zFLPyj)`!NGkxg@@jB>vroNUlBkG@y<HcaN@H&6NGj3ga&)Pq+Zx-xO>1HB{<3?}Ke
zg=nF(+MHM(9Dw&xh)*nnI&{EySxfnJ!_=byR|;tV<op(5gQjbI#fFY9lu4q18b)jd
z@hvzvLyot2Gy6eBot_jE*eOhKM=)NTXLNq>I00uv?Q1=PYGRfXo3UF)(3xX&H3Oc@
zcrH>%_8>p^2XeHNKL)1}Mt&zk`D%vCdY&4`WlBGK>eq7bwuj^=AHGvgoxf6su}ozU
zy)6wiikus43Xt$Tl$Nsy3zuVG&0Hw8Ef~?puNzC<dZ2Jo=_1u=r16J+9IB|X57Q-y
zP`s#o@t($knSD^D*PbcUINn2%HVQD6LmgqqmG{KO^Nf4Xd)~7!6KoE~l93+po*S!<
zR4nxe4Nb406|Xc3beS9CJ@<^qdm2Wh6AdUD3p$g9D~&DQGmYmAFy^;mvyP^CfYLhC
zc)<B{Y8Yojv4sap$;uVky936^VT)ddEHm*+TC@GGK2c;&HD+ZYmt5M`iP=DP&ktjO
z^yH7TG5jf?Kn#^h$QAROd)=R84;GjiT&HZ(h%>TiuFPxhRYr}h+Wm@;Y?29Np7&xs
zjN`A736F3PHp<|SWqIV!$f#2$?KqV&+;dRH%w8F})GK8bKQ(MgPr|^D&n(9&o2Gu8
zVdRV>_Il~ecpe6DvLT<Gt*zZ><rzn{!(}B}G<ZyZA1=M~J*$(J7BAU3aK?mV3t|?C
z6n}1*aum?z_4*ye9yQnaiakwTh!aQwD$t|)t#OvehL}sv;-TR6K>^xvxK^5)ahNkk
z@JDRL-CG13Nl(w_jUIIuX*&OmW6kFeCl=3<;1VcJptxx9;adE7d1C)dP`=Y7b+|yD
z+Se*eUihmNq-R;1vlXO2FRXlVP}tL998?t*OKDDycKyTPB|BbYgmLZm8~fjqZ@uxD
ztVqq4#~Sy@-Pip{mXt4mE=;eQSe1lRzEoL>7X6u?o@6%)1J6k+gCSO4X(?k=W;ycB
z5pVA8Pz4vuzc?z+j!cz5qol#G(11K1R+<~i5dtq%W;qH;MOPJLD6#r%lw@2@Jg-!I
zX_PS^0h?#NXB5j|Jg+A3+1%S#MZw^~D}JoEMwxrmg>kBUGS04>Dxy$aH698n+Y<e8
zhS2ZcQ?9wu0_<{ZT!^c_#viRCu4-t3{`7K~0Ul7XO``FIXU^IX42=v1;;8wp#~J-s
z$%j8Qk_t<#nLir0G``@DUuCfyGRL19WQgOet>LdOGeUlagJ>VR@xgw<3;E)dP4dPm
zryN|+K?ceye|*MI`Dw0zp~f2Eu`qqda!g>Hxwo&1f<X{*Dwll5&)n<PDWAA^%A*>g
zw!8+EP13{!gMeM8qi73Xrb8N)P27_9Y#UTIF|(BhgNuVJDU5@hvW~=swBR>0s)B?!
zbprd1tFOt$r;DR*k}X=W3T|*IFcu29#@AS==H{6}6hK1?MZFdK0{*shhdjM?t31)r
zgpqtGja)Xt(Pn2S6K&1eI6L$EKZk-BO<KZ<HodcK|GeheTuoa4XA>Xn8f|*Q@#F#F
z;4(WY=>+K+LPrig=^Kyy6{E0FqS)*C)0KG{N2Qy}5IpiN$;*~gsw(B;6)R<4X(<ly
zjF)~WS=>+7g~Mqd-1)K`IlMz2gOc$3_kT^6&R!_pi04cg(Qrcq6rh5qiYwAm@#0xZ
zR3ym^V`LbGj|Ld%>sgLOBaNfzOsC5haiv1YXC0k4S6e}h!#5c$c;vyp;YFE<Ka>}9
z&-@;($;1Z(YR9vVCV1`<$7p@F@3jmjv~N7mCbQ$JAWc3bq!P*>X=s#n-cy$8D1wHT
z`KfV*XI18r#^llOf-pfZ(o=&LWT9l=I<T18x8x0Fk0*1JHk_@E%dzV0ku%B|(s0(%
z%-V9`z%1`H%V||6kyfur&pbMl32^<mk23=aK}f2!w;8~T$_D-zS@gdWjEM^ZQlov~
z+VJ_pDVMz0@(duBYwm+w2}<)Jp^;6!+VbX+P0UQIQAPQLQN;lOv!BkH-n0p(EikAu
z%`^yPMM0sfGEW0mO$!uVNtzaHnpsGic063$KasWOejn}#ipL1$<~=oX`%_QLJNvQb
z99|T8hFD=5mL8_NpT|V<AQIRu7-j5K#imDXs^Xk9Ns3Dc_e{?n7z*F^LveT;ZqeUv
zY?fbbdPDx<^i$=kwWmv721a1P`*-SU<k`0##FDIXjKpS2H<T@&8D?h20z-CV15&`L
zBvLu0vdh4D8V?$9PoqJw%*Yw2;OUY(7}fM(NoCh4ys9AE&rGB7RDco3a?Di~Ix577
zGxsVZL0TD>sR37W>%=Ldd%z}mPu&R!5vGB2&T<&zNM}f>yn-frkE>Z$X=Y0jpv<bl
zg{v-a!_`xU12M(hMxOOC1~8K_y~$%IapXL{ZVeq+Yk%1^MlShAgMrI4{R3r=0|Y96
zMh0#98+OX3k;g!?$#=G~rbb%`rg&r%h&b>4@e22>^`;y!A<MI6!pNnWk)ym)K0Wg1
zCz~p}h%;%p3{xGI*zy_7c+x8359`41QV;be8brv(YdrM>l*tZGbe&=~*?73+O@9jD
zi*kcYfytu)8?TPG5v=qWfgYu;GYaQbdx%Lxg!3B1Xgwd>v{AnJ=SMJNmn4N5a3_wA
zsSg`~>+%X^gv)rS7)>&6lSYJTRuEJdsfz?>cJvszj_+uZ)aFJ>!qT@4C=Ne*_66B=
z;Glf@vdd&%af#Hl9F{Nr-7RwJ>_w6e<0}mt?uVfmxyDx{L=KV0Un}uwEcnj#-tn#T
znd#Nwppju2#va4Lz%mAv&NR@-A}lJiHcWG6TjIQT?vv7ZXC8CUx-g&Pswm=*|J7%I
z8Q<HpRYsvDzUIfw=H9+?DQ!Gp4C6ZD$;(3UBYql89q?f4!n$f;+8}{txFIwJM$yQR
z@0y!@AT8}HjSCuP81&J2B{Tk*D|w^xNm!IAKAU@93CF$~ej>)ogSN^?woN+1VK)9T
zSNmQgv~b|yz(enWt6mXLym@a7OcT%i=H7F)($e|Rh%KL1ejA43&y2*+TzQWl4O+s{
zpf7P}p6zHp`$w5q)9C7{<}||DMRjUYz%{<6CSPV8R;JNP&q$Du+>ovPO?d?k8@Ah%
z+$y8Ph{Gt~W1C);FW>v16y;}04;%<I&MLMJ<>crmaZ<D<8Mhh7`D0WeY>FPn0l>YL
z1JVm810DN!OGR#mY&=*iH{SC{`QZnymaA8ukHKi`95HGXG`xmAO71bjd&U>*_dR*O
zeJXO;hmUVF6-mg3Aw*#Dm%zE0rSIuCiI-S1Dj2A@f(_3D)^lSL*jJ+zhK{Cfm4jao
zlJ`2ZATAHTe#Bw*Yk+{4qk;nfZjEowAzPu=XPvnlmC=gu(1wqJ;0MX)Mvs#MhSuf^
zaNt=oei@9i?V?^tCFKE+-u{B;TJh%z$ngK!I}ZT8j_Tf@?Y*zINvqy0S?;ne7rDq4
zY=dpUfFXG_CzwYIEdi2H0|`7JBtWQk62KS?23&COMV7lQ+3M0ttL?q_eZT+Qd%yj5
zwUTzFZ>5!dXZL<Hcka|P=gvK6&Y3e&#f-V}Q$^uPBp-n>(Fv53&DBdhYnQHAB@xal
zUN}3xQZ5hoa?0sD7xeA}+;mUG6b90&AZ_5gBK>khJPn{SY2VR4THuvbF?7=o0?FWZ
zpIgL;ebYkbEA}uAOWY3x($nK@<(XRD_MGUDQFC|jU>|-zDj?2M5t(F_aI#K$lTqb)
zX7fh-;ves}lKgCIf&l89w*<y(zPDQFJ~}i^jq|=qldUF9f21K0AeB^UW-+dqMc=*Y
z6)PQXvmJHy_U*gxwy(bZ?Us%y^nR(j;ST#Ez>$X0G^=0aM;B_QU6LBeLEDu>aY_w%
zH}9gDFz57MMx0Lx2lS=?NCfE|e%iQiq&%U6_b5mhDIgNilOfVJBau&6z2ry9%yWLc
z?5`x!9u&)bN2z|DLCh#Ws=8qgrW0dX<k~fCEy@?*>8MQM&2)o+hOrME=mS5UBchOT
z%mq)_A?(IdX`DLrD17koQ<;Kz63z#QIw-G>OY=_fNXho)v{2MMKzZa%qi!)<cn)V<
zq(#C_JnbQc=k%U<jS6D+_VwK74izi|zlGbiK_SN&e#$~}0@rkz>-)8Txn_?iSsgX6
zX<R~gq#=-nRJRdz<2c^ESi8wnud!}HSl$~B0!}l7UTa>T=-e)*NfYLuA9}{N?yj|h
zoJ@QFH5Z{7!PjDfPGuy)u+?%P?5FN~fMxb%>x7x>b0&!w@)bjUVw4Jn8aTni!(`JJ
z0@|yg1AmvDV%6)Pvr=06@W!on_Y2S2b!VUJBwo|yV>}&!82Rit;=sF$#Kow=V!U|!
z?6{m{o0Xhkq9v<Q8Qj>;*mXb-rp8+)gk{HG6_0sGxpifcZbvJ5ljAKbHNo2V$~U^<
zdd=0nbdEPzRhVKAs@~o~2sN)=B6!ynq*yC)&vo=!B6E?)fQ_ktbg_}UG6>_U&H?+s
z%ku1tmo2i}UaqkZKDY~2=R~WYf)9J7;xKT?5D0KX`+!f#NOE}639>xHcs8`Na08Oe
z0B7sn`!TjU<@TMAD*6s>Zzdn+%Jad^rUT%n%dIr*M_yByZWZ9))~*3?m9q(9k_r<O
zY(+t`)%Fb7YqUw<R99s1agAz1(3EH&Ga1$c4lYPdw1?ic+$!68?X253St^C}lUMKM
zvEsUV`>dm<j|DgH?VW7Df*}q-JK6kW)92;q+X-tfxA|FFXfRKlmKj@4cprNR=pAZI
z#X2W@#QT{4W9>rbE7lMV%R3+hwAJAN--CUY(Zl4~*41liDOmrSq|<~cI_JsPU$eG7
zHCCFHX4OSAJ&Bjw5X{3^&8m}ZTbO(bA)qnU$5v*K7q75}m)A0(rrM9zJ#S|%U1sHZ
zdDaip9Wr1eV;}-iA0NG^I)*`nK_Uwm36do8>|o#Dks3xq`UpAx10wd{*UYn1N;pb@
zI{Jz1?C!VCwe9xqC-+!8gl<++e1wt8gQ1Zspk@N>Cvs4!*Df(`E7B6|^Q&js3)LO=
ztt~B9O4-$}64VFB$tSg~W(>Q$dv30M<MPF}xu)IDh5#)jzE%ZhCfhHrKF-!xG~1j1
zwAJQhCD}I0lNwqH<w=2BjG^inORP%LRYLt$aD{0wcUch8X<UM1@JY`HM+^LUQ4%pp
zL_#+`AfT~n>>aSLoHNU=S&nKtZ-xXz9pGj|Yma^RxhnhZ&UTxTGQxo6`#2`N=wv7>
z{qam7T$Y|>-#dS{y|Sm>zO=E)=8|uxkGlbG2KjcAZw6)6!)$$KS%H1}ym|KGu4cRJ
zj;&TqyLR*s+M42Y`<E-1*u5L;?Z$^HEYD}?q&_R@oXXPTLltEOSj8h3&Zdk~P_Yf9
z%>YL;VZhQ^V2~4TDt!TE6et6(kqAkWk4C43+LIQ~v7Wwun^|1wy5M(f!rcK}F>%47
z@l_YDu}fE<=g5wXbnPh=2@<19V$#w#ULgVe(>Qp2{TKe3tqDWEk*?T|O~`z`@o?*?
z?y(3#sr@AIL71%5VYywHy8h|&FFNA8Mi!f-YN*Lhs)pgDH(8J#J?S;J+Fyei^!{0M
zt$f!u+g;OW>$h#Sxo50Goe1XZ=;=+&S}HOsAf?1`$q5dU5GS$^VE{s_gLh_tgMS;^
z+wCciW8fk1LNXL1Cn8S=UCVgI-0T!9fEc~`#VRXEOR}@dbL@&`#rE3F99#YSjYzY4
zEshm`k-#+&iOoF_ic$rGDa*k+X(|L{ZD+q_z<j;q<TCbWVWMSitySkFVW2JE5s|fH
z^5r6Zl5W44p+bnyLZoGdvvcg5Cl%S>udTLOlvT;&*+@Makba0$)Q7W>JPoLUZKFQN
zJ(6z*ZD=QLuwSf<a8>t!)yZNf61<+iLC2iwyg30{M0_dbRMV!WZu+8l>MMhQt|Az^
zBM$+0q!VLa#`qU8E)Q*Ov|TI&oCl7aIXBP#XLhd5zGsVldqX47S)c%ytC2!A^)R|(
zRKUApaIBMWR!3LA?E=TII+0^9G}aI9v7NKhEd!k9BrGSriq2O;KKH2u$7iX2aO~2B
z1@;fin(Z5}qVNa~Ng`a%v%(axk|K$+Vlvf&Ypq@2l-fYPGH|n&XT-R7z6iXlgL!Lf
zB?dgM#t5lY8>M<HC)rR5FJ~2fY3vrJ5)W<`QBR%Pew4Xn=B+oKcbaRpEFH@Qgtogm
zz>hR`o_?wmV_`#<UyxuYpNiF8z@Vw)U|lu@e(0tr1oZt|UOqe0IAQ!`@FkLQAAykh
z+6Q35=;;Xoy#NO@?~AZZ;AMKfy2|!6w^$nYJq1OcI@%~z!|B=YuvIaDK=6?)Dns&F
z0YQ>r&s0>{Su0MkEcSkBg)5emYYbXEB}I7e5Ub$MxCr}1AVjnhn}k$G3mg5wVRuur
zHMTTaZDWHyw4=iA*|d!%?=}`IiZKkDXg&TuxmYw%?QxEGQt$Ro7_9d_yxXb$!A;r2
zS1z>kAvk|<)=YcTpSRj#q(++{Y%eO$vg>DO+Ds$~FEsVo-@n#`THt^kKO^1#dTG8}
zxnG!@YX5TnOxx1ZYd7s~hamOxy=Qh7#5BiDG?H&alcoD}K(xVu_ncg6pWobs8kY71
zvhf<CRLrOxTUTupgzelJY4+ta^Q;8Ic5QvP{qyThj*v}-m`*2YRqv2}aB-epJty00
zQ5S20!3@w)<z#WQ9p>yxp8xgy97}<a{!>M}{cLLss%-IAuSB6cq7ZN+t{;%I69W9F
zFVxs?UT;Q{o?zcQyUad*&K$dORk?k;qRl#CqC1h4UNtwz-Z3lF9a-``c=35~Qw+`-
z;N}NTnBn-C;@mX*r%TJN1%~YV+ghC=m$#7b?S8)J$oB;px_Npjz!OP=#Sn>Td;iLr
z_Kj^Vh}HTXGbP@BK<RK<a05HRsk6#5?Z$<<EGQ({V>O-jFB_XJfi%hB7)sby2UE4G
zG}At|I2YzG-X5;yd_(dE%tQ%w?&3YWhBgT|<!;&8X203qij)uB^s005N6U{EZx7aK
z!Q_z#I;?W%pq;iV#W7z8TUL-SSn$&Q8{yj%^!sS>-6EOBW(vk9WWJ6TEI5YR>3<_!
zkAjJQs=KG}gjA=tSF;k{tCjI&>(2F552m{Au>9!)0j5wPA138Hvhysruh(whU2QjX
zby+SekYc`$RVVy+AA0(qfHk%hq`pZBDQII3K-3Lddv_Nqb=CIz?h5u)?zTVIK`geT
z%*VdSx6Ges|9a(Rb|R~QJ)C#+)*t@@b-Va|Sp7RR2x>lnHnbd8*wd4c2tid|@Nk8-
zBV9Oo76f2U3QSMG-FFoX+2TSc^pX*ai>dY`q-2-<Zj)WNAjjTyrnh2wHj;_6=H=NR
zHq_Zo+uQ5`@~s||?*z(y(_dgNVMYUb^4UFYwsK~+{p$2Gd)Hmto%BJ(k(;lOD!ho4
z>N6_}>~pAr6(H@9yNK)R<wbVxom(soqPPZh`t_RG_I4z2N+DUHm^XzTrcuszBzNCm
zRc0SNYc|{3=m_relg&<lX1Cq&_#T@Lk-M8l1?_SP!k;4o0ZB_VL<KO#a4WU~rsfk*
zRoPi{a&0BJcV$VY-Lb9N*1dC?9gn0|cr2CJOSn#(nPr#!ev4guT8Vw&)H1g)a3VN;
zJox$0hFbgn`X+nseJgBPS@x)Wr<P^eW%ulG)SvL9vwz4cn!D|Uq73`R>81AmJGQfR
z%#-6d>;XY{!T^5#)MESSxpSSGu7GvviDqv)uEox|dz(`$Y@nRa9A9Xkzi^)ABFPed
zT?kTU(6w#N+)?H(7`UIDUvBR?bruFbREpV}lgjMuwY%-3Pwa6E4mJK_g!lB={uO-F
z(&8*DJKk8Ui-`*vu9$#v$_mk9#8kP1Uj~?}7KP;=^AHd|2iM{3tUgga9qmv+16YO9
z2b6QX^wpWd7wmBMFRW_<5RkMdG1-RFGtDV{w6xlg400SpIG~*!Vzi=HRTEiwNP}WX
z<Gi9Sj#b#%SZ5Wj+wIkk=j=;Q-e#-5^sn}zn|@`#+RT2Yf&%;I`RCXzH~b%a=I=gf
zUwYfMcJYZPS$R>h6=b3u1(Pbmaw=Ub!&Hr`)l!%+tM9R<)^6IKXjfs7gASlRJYX-g
z|LXi(UbVQJUbfBk9ZntV3M66wxW3W;^YNXod5@Fk(%-#i|GBnOI#t%rYX3{bofnnw
z@<j!96%s62`3M$<?%CXEo9a95+7n9bj9D2r1hMM6tREP{lMB-9?~r(i@%q}sJ1p)O
zFWF<;nruaBmfgC#+-lnT?Ndk;-U;K?#@?VC?%Zsr{pwZQxTkdlY)HkfE6=nW&Yok<
zoqe|YHybRTa&|O!+4ZN*vP)>wF6z~Ow9ri-2snO2OtfACaG|P>ZwhW@KAZEgJueC8
zGg}*M<uAd_|9%-<=&{om7TS69vhA}k*4e+W+vC!&+m6Kbe_pY#tmPibX%&Vpf_(Ah
zt0mtViwf<cQmg|@g%Kyo^iNqx*wfN&*P^<ZF*CzDQ7?4Um+%DX+J!}F_7QMX);j;;
z{%sa_^UL-uIDa<G-hZD_X6-O%<=M&hcdO?(#_NYLQ^LEuUtwVq=NJMO1>TF)>;o%j
zA@J_DrT_bi75?`t*2TidyTED7OF_an<g9nPOmC1M%@0z`4CaY9NVmgoP5}h82p75#
z0*4I({rWi7^t;I`D<{EnbJ37zLYsQpSCznPiO_amPi~U=ScYrLhi&YqMMYw^QL!23
zY!zqV83QhX`rWi>-$6D)jFzV&AtMe_Aw;r8ADvY%P`$df)i&*^v??UO&sSC3gVl8q
zY9bo*>@9N_*q1L~Wd%qBGhwb~WMu=QI1GOd+5ilT&OcN6QofU661}XD9|zge$z_u{
zZMk*`%p%53R^_yR<*oNspmH@}bBj~$oh2Do$143|(#^_;i9*6vQQP72y<XpC4{vF<
zB=*G2OHZ(?@7W0<J81L9<SRuz(T3V0z3PLx`wk4-k1=HM|IR75bMD>g<|wxkin`&4
zA*4$(lI{2FYwaJOsA5BQf?a@Aq4|SZc9JA?`Kfj)dx8MH{l6!7*-u|Zfe_IBBE8DK
zTb}DNuP~SAB9%)a(SMQViCw6568_EeRrbY87TWTHRJ*UPi=#1ISHhoZ1_4Pj<vL)%
z<VxA2sPVh<4y33sI7^Dt>;vFt6Ab^7>{MF~!}2Jqf14XRovNUWb)XN6(Wf+<ft2?u
z47rGTQoi?-uhGx9iUo%UV8Z3JW|#sq|HEhY*w-&zXg8l(W;eZB=kUzQzsSEDNn8%^
z$<5DJ+Bcu6aaI*CyML!`eovNNxfE@W`*zr+sO$=V@88^DA9)ZJU#y9~<B?s~uylq~
zeboZT4a*8$x&QoVg>6D@QDWxbzglDOJ!7_g5|zg9u5YkX-mB`66LDh`{)7;i3<N^v
zYckLZ(;hSg0tTzCZNPr`y(a5rNBY&*W!gFCWgRBw%WJwP4ZtdzsG_Oo_zoIgVaBP1
z0E3U(oO2@X4-X#^n-1|Jxh6*uJR-WZ4=WuNwYa!`&j0DM+Lj(`+0tnbzrM{L-MZDb
z*04DrYg#L3<l33#Wp@7371px7z!C>CY{_vccINRp7}XGyHDvv$7J9p!^or<3@tjk;
zbL5z#F@xx-@!k9B?TJzac}SSLXx~PdED?d%V5H!)=gzj%VRU3-8*L!xWKB>iQz`Os
zsg7Dru(|BP+5*${R-{;ezk2U{GBGa~^fnixA76X6&i?k45<7c-zI|v>i}k_)QnV{S
zlYM4#k5xmI!qk;uh@-iw*IJNP<QHbzDx@HJBF1qwwWN`u4hZOc`l0c2gfeB7V|+pG
z^A|0!zrT2a!$nsIacQoOiJbxE3JHG>D+B_Z%R&86ZmZ1Bv#|Hpxmotr^XAy{qD-p+
zUvn_Hp%iJ7lyM11g+@+t2A*XTw;MIqE9Yg|H!hfK%f{r>nR9^??qnq=+LzYV*t^-2
zc<qW}dy2hbJ>Zs029Gu$)m*t&)Dt-q!A?S|_7d&bibVAcRB17_X$!I5>C!aGPUx_e
z(~e>;=Tr&ITPpXe`A1hQvH$QVN#U)gPVFO;?rcavdLTQL-#|kldagZ`^1{5agFrAg
zq7_Hp!q}7_zB{pjV_3>0AfT-^x}xaEN#rJJEZzcrU_$o>hJcR%vB0In07ZQSB-xVW
zMJj|tBH(Dd?t3_>bA4sCZQNRIkJnUMWkRie=eK*1@bugKrSt6C<Cod8OG-KFEZ0i&
z@=+a3$83AQ{RIO7eMq*%c8KBX?N|A{UQ_U)nJkDF(5QGCvmW)mv*%`8UT(TIcJ$hl
zFgSCOApF~93vEGOn*H&W8vF9gb#~*TJp0g@<<2OE>T<$ud}lyIR4EZzn1}!N<s<pN
zM81#s`FdgKq8-zdn`gfKWToByjvV_3n6P9FeQ4ft6Blrklj(bvEtB5LkN~qcNLibZ
zKm^7)hV;mH-M$1PxR>gd+@DeT+K$nXY>3)^;$(I1DGY=d5)mB~9lGfQ0fxje;5%UE
zK>(Xm<{6_{*8sDFwDL!9TI3k-+h3}(ue?%kpE{}7-i!LGlT0&~`tE5+9bpG<CK8bf
z!}OCY7Vjh9=)SvkBNhUFvaZs;{pKb1vC~SyJYN<~+uE>TD3>6-ry}j+lBg|(^T1r?
z;Fr$za!!3ASWKD<a5F+|qJk^4_;R<>k2)4}Qenu3!21sH`+-Vu6I^XnXF_*K5D1yB
zLjvEFW}eEi37M}c9lEga@gN|gQP;sRQ6e^Dazef84_yd>X-YeY2vXDH_z}J*C7>qB
zDz-G7+Pb@~rM1g8RPV7Dw{N#~J9pWZHde5)=D8v*%d-2+?3-7dWvf<{6O{zfl)_?n
zqEjD~8lsL{=!MXN#P<w8s2=L@7_TFY67*Mm&^8^cj4Limx9^`f+er-`V~>nM;9h-l
zq0NW!TDQB^uD<DYsLKQ^T;Und30`Y|4d3!4J>szCEkN_*7|4j^`vv(j6KsZ`&+$&w
zCz#7Q+7wCRpLVs|A5bm4_V{8K-zV-1qIMe=8Rg!!B;UUNY>hp>r_0tHUtq=g>8N<J
zN3E`h{binF+NtyN?B;C{t8{EmUaC8H$uWggR?!5(j_Vm_f6hZN%&4nbHf@$<f$`2p
z#WG~R9EhgDkM~Y)6VrvHs)0kd{}&6KD~dDiWzL0rn8l21uxu%HzCW=q>)M}fG;G6L
z`l&kBeZ--8?<8RvG7aC<XD{>UZOc40*75TNSn1)XW9l*Z@qH{VzIAD%U4SJ}xn3bH
zh`im$spBx_VJ|e;lU3dJ(UnDZQgMb;d1S@KcC#-{uDldU7}D71>U!;}B{>{tm*6c}
z@Fr}B;llQdTMYR0Uv_)n>r8MHNw2=$X}lj@BTaMVP3Ir+iG3_o$$8dYgIVJ6w>nrz
zyZy08?9VT~2-BTzUwzMCVF)bEoA(cYlfoLuK%j@?Rc?OxAv7-f?4;SV?LziF>$@B)
zhAd>h#sECLo!$`80g0^~vMg(bp$j2!Y(T)@ujSEBp5zHe$}Kb?NvUgTvz={~&`hoN
z^vkvOAy&NY^<8GD5MH=&j=kp;jA6_ywxQl!+w}@o8wcWSd1<N@=BA+DJIDuP$T3`^
zn8cjuj6ClHqWft?J<&LL5GzF`>VYd4uq88*eq>ud>QB#OsN#Cg+_Fs0DuO}jg3w%n
zb-BC$&l1bWWcL|!AT)8w;-a{;2dtN_UA7?K9=>j|J;_S_i!g58LB97XUpo16NAeL;
zcDcY$g8};LvsHE`>1Jl7IKhD|-TmX{7Q5{DHmulX+Y9eH&URs(V-;2uRsZb}-iBd<
zhp~Kj?FprJBNDkqs28SC*4c|NGcKpqCm5@nHa6P3P#ya#EZ{9*zglBsr<J01Hh`4k
z2COEoryQxP1$*DT%;E20hk)>cF-yn)r&TlU6Q`Eg0>)`xPO8;mEal6O@;*YC_4$&`
zRUFoR_YKEc5zP3h+5@QUdi%hE*I?Wwn>uM;zCHMXWwxoh-F{Fd^*^)m@@XE>Ybu-+
zyP(Awtqw>^`njj}*u7X<%;Q~g?=(2|9rlrZ@Z?Tgv!KA9dV4&^YI^LfB_7`W`~}`2
z@agC5FZ=>VJI=re$1`tVVs#j_k#P^H>1y#q61}%QUu!jsXW0ACD7VEk*t>>`;>?n4
zRFa47tlKwRhWblV_2p=AV!VEL?^D*zKHnvCN^SMZ<6}xpPYMR&1R2L&yLQ>lzxaXK
zyruS~cfQ*z!hbfY^1{S1gFwJw^@A@T{>cx~C*EM+`s5cw<|}3p4huS}AP}rJy!FB}
z?9Hp$d%>3|I3@n5>PXnw5CZ<%rkmt}hD^VwVu>&TeWos?CBs7lR@K~$HNTy<1GDcB
zR@GWn7yE{=Qg}*12`0`@u$5O{WqH|I?8`{AY*tHCA-Z<&?zU|h(NMVqgNg2v`F!`T
z_<P*+U7v1FP0}tHE!;O@qJ1HZ${H9MS#f(6;{?y_Y_?Cl07HYyQ#l0Zud6!k;uov!
zx)V$6@)OIf0pj=e*Xry-_GU@tPfX3NFj{Zopyqd=?sfjsBFoRuurL04gIz(~by$fT
zn{P<@plN$0TEum-k4(d~2uZ-pwcU2x%Qf~fEXc`nq0-F)t~cJh&A!Rro(o~{WUjsw
zBOTv=qQXAOew+pD`T8kmA{9Ki-9CGExm~)f$f+UTzpc?$K*)Bed<gN)^!NHZHru~n
zFvrfu_(nfOyQH0WV+i3j)WbCIIbztgD*QPT5D;F9P;Q2y?_*3>VlYLLi%pH)_RE*6
z?fWm(+Ow#P&Sh`aoqO8twpVNItsFUUDU5e*d#~LFGcJpo{Zds0pB}+@#h)-Q|CZxs
z*oEL`G5CJtv#;A9k+5C?p6s2E2EZ`MN?|K)sOM69iol;|DeDj5<_AunWp$|KDjgNs
zTkqIn|9kOVx40l2Y5{M*^2iSRH;iP=;2o-GQRYMUY_lJ(nP;cF1&CaG8cA{;?d$X<
zwj7#gAHH*weF+>thj*(NNg7q!t*H9S=}i%6juxkRaTj}ETRVHKI8R4fd+n!76Lx}S
zJTMNn3{N=YJ`$#26v<}JV^b?9TvK-FrVj)(8U>6?WBCI2eU5d@LdjRGAsUu9r4Y!;
z_9o3Ktt2cwgg}fS;4wQMi4rUzh#8Vg<-D;$>$TRwcH6YO#hQDX?7mIg?aobG%v!M4
zS2Dw{pIc_{gW0Ouontw}MRxKDId<yG3>#p7mcG@pMA(N~ga|}gBJ@i3BwGpxb-D_t
z>5o$|RAcGHsz0ErC2*-j@&!P`=`d6xdUWQML;&x5beFyFIacxIM2xaW#gccr{cCaT
z!&0`teq@)u|G63)r0f*84`!HrmE;rgNTe94sC<S>)qm`4wg343I#+BQMCvOL+j$Vx
zpCHdCkOVjYBl&6}du3~%tw92yd@del5#2A#rLEg&a~AvZzRA9_Z@%7O#YoL+VYFOZ
zwNH%vn3b~`_)lUm;j~*(gOpJYJyU-uM@(cg&pib(*QD_02tc4t$OJC@_2awU<+x$t
zp`18lIFb^^YNz6ODc^qo4$FR~%G$skSq*f!{NPTdmemc1*Vo>=)6$;YW8K07shXm~
zcQsZBv)7KFFRn1fKF9tsU3xF#Y0p;GjsHQ)`5W>%CLR1Kpv=uMPG|g<cS$%UV=`j)
zSy+gpojM#jgLmn{st#N7%k@^sezOL(Rfma-dDF$eR9<hd?6BKewBXP^_ud8NBv4Ni
zX^u9R!oJN^43;FISuk0r;qB?>xC+j}=#yAI2F`sSPz7hzC<dj4MZ_8cjZ!mbe8jlN
z+J($ltRWhfH>D7WehH2S!g5N15f(lzAs`&}=4uRBU>w7vv`3oS(cQ;^##MIb3tQ~2
z`rTID(QI8WH9~+T+r>*4U`*m-TToJLsc9Lk&|<E9AkpsrQ>*p#4M4}q^!uROhY>84
zy46^2jzU^!1SruVbwmUp4mprJOQ@A_hyVT4qYQ|@HeWg=X0`x(?IJ4qR63_L>7;2#
zZBMS3d#PKp&C6Q%kxw;7e`14hGx6!<^%TRr(NtS<Ai5K{WJ=sQ#-JD?y1~yVWA}v+
zunjb-wi&bHph6+fb%w1-E!C$s=OgjdDPk>R-gHq;9;UzBc@{EW4zknh$Hz@A17<RI
zjI7o8W3ETJ;9aA?rz#oz$Ynh1{O9Tjx1>Rm=HsR!4wNq{yUQQoxn`FP>S!lI<;pdZ
zIF~s6HEYqq$EhN4PtSyV$kAOpS;Mgg?O!Bs9?x|zyj4-!Yp4UI73bbH;#7&!35SnH
zr!^f(Eu-m(iS|SD>`AAk*}^45R#F<0&J%@Om~MOsgcvkFT*BCC3W1Q}nx+Hu25nZr
zWJPyhIO-8X5bO{>t?ixG+SYDQY}jdctlMmVetJ7pK4jC399x~0ZwnHZ+w~t@WJ}76
z5b7jwMpvR|(U4WQ;o(6HH*`Y)^}7Z1pq`OBDC!6hLXj$CT)BuopN4c@71Pxcsm$xW
zh({5IZtn|;^;k@d2+@EjRT?o!Vz}g#=0N$BMlQM>F9rdIAFnh)x>f=zJ-UwC;Gv&R
zjF_4rCQXE&?v+PZkhIB<i!LX&#I0YGJXL%wyD98nFm3_(#J~g#0zsT`ObkvimSX+I
zctzushCw*3G%8bhCX$b2qsq~}@Lg>Xj;UN-aw=bCYrmN0BE?5DfYE6Z!A&Iy-ZSM3
z%28i*AM{7@vBk}($_P$pr**W;-i(2gDCf=dQ4wJ<gunzL5HepA1XP$Tb`a2n6;4{Q
zgJ)RMR6)SAZWc|k1}mmg_wxuFktVuETxDaMZLX-cnmx64|AyUm^V*$ePopk$QJH=E
z+$DDJmrk*{a|-R*r{itI6G@hy8E=bA(k%@gvjNn9hEQ{mEj<xBItwU{4F)39rj2n7
zy6bo@y~I-A8AS3EFky%IVyn-(CgMb}M!SIV3gT4G*fitCjm<aqJ}7Uz`0>gM(g(is
ziSY_tR4|BgeIDD^$issTM30FmN5;k*x3L&|uoX<deBKFKv`ep~`m7EkEp`B&=C~<n
zj>UnoI5+lQd4x~<!m07%l_zj|F3sEhIXxcRuKlH-(6azHmDu4Xs>138V>Eg;olt3q
zEzu#O&|zz5Skd%{K*)Se|1mn|TBuF&Qge=;e~-CNh8;SpAs~W7WIzIpPlVwDVS^Rm
zMD3%%wfFRKIB_3)w(9KRm$uq7FKx3wZR9{>@Owphx?OVoY`f*-m)ki%nTvspOiM~m
zau)HFcTaA+t?OyG6b|AU7)(Z;Fu}bOPO8Q8=}3e)0*UuGD?Qmdn(1d9`>wLF=9Y-{
zQ8idP^19?gO2vc2VfzJZg}8DeXoGz%GOyi;!IFj=%!8*ODq)YHm+Bb%9mbj^J;PFD
zTrbNPRTb!YmavbGK4Znt;iY55JR<)X>-;qDP84oxUJ!1|YJ~`ajy5+|Nisgc96Jya
z2Ge{j!{)^T0wMDi3n+$VOc(+pEVHxO^vd@zN$L)hbO9l(Y$_{sAp~L#0qqG$f;i~z
zAFv+G5+@|EK|3xHqYrV`!A9$f#s=H9quw^}uC<@9+h$MSx7is;n0e8B`_yUk?8d9l
zvZCS{wsa2rwjcz@x<Ra-=`dbdKl7M5Pp&mK-L$&rT^ok5O-)U+H!ojocfIhcl^1Z%
z&nxS!DL3DS3yRnPgGx?1J7KWE=(&L4it@!B@IT6h@9`*bjC(VdAazrpKmP^rb0*k`
zQ?!_mF3uL~Y_~WVuRIv#OmKQ9hFnfRZh>WHWWkFZLoAqZ3OJmyWQpDV>K5=c#nLyg
zx5nK&t-lBcEQ=!rgqxhF<OqMk)8V0yi~)QDKNy5)I0tc|KN<pKVWy`MoD6W(TdZ>N
zVz}B+C>DOUG+Jgut>v<hbvyH|735fHNg4JhFdh_?F}k+!E`-1_0fCVDIwpp3`gbCj
zM{{x$?4zG9a4Y;Nsoun_McRqFa6+Caq{4Iu0|7Dj$?Uo6fk626V~<%jR_abEU2f0T
zZ??YpYP<W#b+(>!x3KqYCoIXcH?3T3-}vb{wq$m(C8wrZerD>ZYNHnmL>22j2yj@~
zKOWsOs(@*7qqfRyeL5!bKYHn<mPAMX`0{Ix$SNIfu%V`UYfVhDevE_+r>EO6#Qksv
z%vc5luOtuZxKl5J8I=@5&UIcyaMa~J8U3rur==WlbTbe7ZhuJNA&dt*!9e$NlHiDW
z(xv?UnC5_(jqAi*0t{C?M-wD=cUlhdiEId}!m?u%63aEq7TL!yzsz#d(~!0vI|Q!Y
zsUa3K-gN3|92d}M-+K5-3{CV|Hu|13cC=X=xYq-24#9kRxS0iRa%rJJ8>Ym#Mx=#;
zaTHDxjNB_Y)&*lSHvU++p9pRWb`DR~VPK~`4ljkDC@jj7UzdlMaas%@oY2)}nZ4bX
zLB2|k(C7d^(@F~M-`{+hEh;NBov{?mlg9!W_tgj2N2JjilKO>i+Cd<TIicN2X=C5C
zkok%|Ov4iQ1Azqguw>`#Ee+UDmQjy(apqB1cds)_Fn@OG8)AYU1%U8o${-*{NyaW(
zIy>#h4?bwWUiX3}XJuMn*8@m(Akw-E?Vm54Xa9EkY+E{amdz{i4)z_@Aj%lz(nmG8
zMm={oJ^{V=gJ~V3{)ho9$;q+5zxrxhvwXQdwefYkW#cyVFCnhdAhslNX>GP#7_6jt
z-g5}sKA5jwh~9p#p;U-pNgrU;utI^)743@v4v1YrBM1k+i*q-VgjH0YsNf_E8A%=)
z!bo7`*+fDjR-MClyr_TgJbvVBqnP&7No{bDOA-U!<HuoyB_8G~v8T&Yy1Dv*J7Y5d
zvD*q0A{><I@jBFE4QBY76-(`Gq(WydJ<c*<ppQk#f>dHt!KZhxKF>~^H{aI2w!!{$
z;}&bHV!vf7cqYk8dz)p&*J9;ghnORM)<O$7sYQc9F=oQeBvfdlaWWc5Be+Arh5ZQN
z?Ofn{ca!)H@=qemzLNT=<UJmBv#%Uu;(h#6tlmfGf;it-b0fGZoD`1w_}SY7Zg#=^
zcUdx5Doj>9csT%mcEO1C03)GxGw0$pgXk+cDE{&#i|nlB$6IM`9*Y8$6L~-U>SN>y
z8o_liMMe*AESlKegRRVG@3qboFMwzDao}JY7UqdL1T-4$lF-)f0lmTR7`u@9iZMXL
z;tmXf=s9Mh6PP9@5r6kT^|C#`rP5{<LI8f?Y8Q9l8p9Mv8UpiVOBuHlig0><Vzi$t
zo`Ze+?1wO3w?6eO1Y0Uc<Mi0)&%4U{>I>L1lVaCjQf7;mj-ED0eKf&QXNB)b1AGeW
zm&7CqSY5DUg`Ki!kzIFAlkKXjvxm0ru=SODY-@WvX44^{`nn;=V91j2A$n)Ph^6{3
zd>@Qi539X>l9u5Q;ty-}S9`}q>^fif3hPqXzZX*{=TOSSt4Kujt(U-0=cO2P6GZMa
z+99jT92aS$A|t^_U^H>=YT{Y&SkeG7RALB3xCX>)5Z1?@a2!_x;lzPH&MND-6z)@$
z7uU<2SO*o`t23IA9ymfd30SeOa9(DH9XGSg)-0H3^NUNYki$arV8Z$+=U9?>IY31H
z=v|aL<%x6V*m1MU?Xs1pTYXcbJ+Wh_t*h8&uQxSYdtX0C5WuX;47;STNgbAlpRRY8
zvif1lgqyv>O|C)0Lk>3s91Q$uy!3HXtK<>9i$+Gm(YLP6e#EHwQ8!-C#)<MC_`d;8
z?JF|!JQ5fOH_04)m?c$pOuq1wD`5P^{DVIpzOn#-R5jk=X1^sza1(r`8gf|+xY@z`
z-ys|yrW2g6CEP4RC3I17k)1z(uANvu%kofL)`E@}1p0;Z{v0u?J2AS^S%`hSD}&<x
z4#LH%X+a-PKlN1m@h|SORPZaAMG?8+*+Dcf%n}O-_=6nJyZpBoU23&m=UVCPIbO-J
zLI6tRZ3tZmfx`=dL&4vy^i(U&&$9e1Rw$1WCq=YuzCC=lBIbP6bge1sKunnmhCDr@
zE?3`1S|AhNti?GxL7%4#;<bY(IJ=18q@D8bXrcEiFe{0Vi~sGPbV*a0L8icwe8E(F
z{Nju4U1zSc*Y@nOwvGlX%PzI{mTc=w?m_A*=ww1Dz^wTU<s0o|8T7XsMm3EO)B^Ts
z%!R-|^SEWeWx%RiT5W4xtu;XCcD1$Gj@CANthL?hTQSa!*?siFAb7!k?S~Wb3sWXF
zMvgw>oj_v9y{iKvSYf9U#`8F>!s8DUKS;epFl9q9V#7!&hPWSgVck<MX?5=y64JYS
z=c~MtGQBYO&MBUNo{JC_z6RWqBTR`9(H0nOARHH{|M`BL)T|)>;~?_f#eKZO&L42$
z1WB&^GPIA*tBYd=T-hv6@JwNToh7<H>Xs3L9x<|Fv~+G0M66|Ha9C4@U7DL^3v#k8
z1H&izFj)(VifmS19^g&1B$%;8U@<_Q-AKnqEOfdKPx?n-5O^l)+`<GICXt2ydkbw7
ztz&FD;Z6_C0HbcR3kt2gu+Wa5zrb!_9Ga18Zvi)}8yl^wwbiOw*?ys=-L|xLShH}m
zlbKlWusl3j002M$Nkl<ZwU}5L)dBwmvoxYqo`avmLvT}o(8awA3+L#maM9tW@Y2W0
z06(?gEWpcQmE$hrgqyA`mFb6r@?8fNuYmi(7anrSIp4om*x{n$!9(Gfe?@Q;Tnuni
zzK5R!mY^_rA}N(Cld{I*r^d$NCq66{3jkVQ8RAUvVQY7|Nv!$=^KaSdwkjvfmgQz!
zF1VSMn`?6lXW0B1GdSot+2Ln0bHEVw_Ar;IXAX||Q{kl5aLt-CSbP|=oJ@~?2%tI9
z`no!G&LSwn)RLA?KM&Fc{XF~l6{ah6(+2_pPGqq7`X3*>!8I%xFTMY<av}2-D@car
z92N*jou;2jUK9R!PVa_Rwe*SvFU)x94p*EQuO0~X9@+C{!p?)})Hx{xomx<RpJsAC
z?p#NT0Ta{JqIQV*<50~E2#!vIVwyT>cc=81h!;!=P1q^DCYWx@z4g*L77wBQp|w@k
z(mUuZ{)ri#Zcfs#BqrUtT=OAflj!%ZU7hyW>z(vHI5c^B;MS3bojyc*3wyQS2$#rx
zA}U*g+rp9(N2m&=n%RGJ14M5ZDmMM7B=vIbVc%Q@#BT+R*$z||cXV`Ge<!DDxfORZ
zIp##<9gcV2Lp=FhddYP;#*F8L0|HsNEXkwZFOf#VL6@A6!qIN*ee|<^g{gg%)4lM*
z`TPhTy2LDL^}n0A{-FKNS0b*UAEb%&CpxUgN%akBRXK$0eAHj(WM|tP2-#Uk3DVM1
z5e}wW8hDzUkzx7i8St^*0zx4DaX!Q}G9Kp+g>X<=$}dAPl2Eud`{nM-Qy#rfa+<Fv
zIv*!O+3st8-&b8@<Ac8TAxV*QI05lp0s~M6gX$Q3Frp2dY+|2WXLq;tftLfQ&DJ5g
z-N^#NE^u=vxVfRD!@9vwLt^H}PEtl0Uk}Dp6}YeqczEe>lR@;5kGV9?u-9WOJvp=$
zR2+UP34e0luM3U}doc(81*=9m@7}{rhjKi1E$6`i7%SWqWA9vmlYy^x%enTC6V}28
zIG77=F3uEgX4xDT0OsW8SWZT|#V4mY<2>2mZvp#0Q-HmgHZ5=sQHT5EzE=wgxL~~8
z%@q9zcbCkYHLCQ9;-oUE-M_n~#hN%Zeg2|Ed&{-Cqh8}t1&24s1O&8jHB~NTzNQMY
zVYx>H0{WI{qL=G~@Nl2D=&zc4a(I3u)oO&P`S9Xgd)o;mb}uH#|Lv7}D^5$a+WsLs
zYet%V<(%1e?`w7TtqqN+V<fnPFj>>K6!NOsT3L){Qq(iWt7pM#Y!7L4FM?BXa{91(
zpEd7Zzsf5cCrT3J(XOQ?sKuKum~DBPDfZ1LciY<L9-Eb%V3oA}Yo`_4%9+{rw)?iD
zuEWYGA7c@hm{4%Ugu*IoY+ahN)D|(HjU+l}=?sf!T+*Jav6dc~FP`<2PtRraQoN~T
zN_a=yNo`4lqYgNRWb{6;_<~#LMnk~C#3$6;*a0`~?SMjeW2xuaY$(r5gZyMgUqr9c
zN%g0n_fv%YAS><O3j2_?Az5sIQEO&Hej5aF2gI?MwjK!MehA|s7`;B!nA*5nk#4l$
zH&RAD<#pnBYV{r8El*2Qq_&8lR9KTk^rd(?#RV=p91x&-7KBF;)$~sB`anxsBHxAa
zB{k9VI4k=Fx(Mfi|2e2$Wg}HdMx8Al=~a@5)Ra_9hl$GM$_7rk5UhnTR5^kf<>`ut
z*cDTfL|Mr&Wom|FuIQieRq9%rCx~_~LR8YeAkKeuP@b5mK493x{+%q^CAdaGZQL>w
zXm2}Xr*@}Fbx&ilAE!2JNLsqO*<zXMm=pE!P+R~9R|;hfxH0!;E5)Tkke4GRjL(N5
za}p=!CHg7cl#1FAxT#A3kw9+0I3h`J15B83vz1GI>-2H658NE&x%P&1khcxB+h)Se
zl(7fg?8fgF(<VIBC0OWkVOpZF8sruo2)M9*6c_mJ#znc24hA;BP5HW_aa3X9q%QjE
zo-rOS3@)W}m2jU6ZsvlQ!p$_U1Qt;ekWL9V#o$W{kj*9B%ono{gC)tT;4Ag41Rp<T
ztVjl4y!q2p0o8mUsq08{gOHj#681YbrQQfW@m@@_Y7Ik8^?+6F9<)4t+(Q>a;1D1X
zGGAkW=TCD7{IHD47Tz8%2t<E}#?+~aRYbzpni@y2EI<`XA5KTy1s||6d8YC<o7ue)
zuHy8PEW2<{t}V$+vwz#wX1!gkpwgbQjAUCgH`f~KF}VvfmXpqhkN(y1LGBQJKpGvg
zo6pCriFiJpZbdzX&saG(yTq~Zp9lAnMjEZm)%bBm=y0|3ERd!Z>Ptg;4dQsnB%-5`
zvJ=SDgn#jZe4ClW9;cpud&fOHYzEv_B@(YyWwf1VsfjxwHU`~dd>Lg`LgY%-L|?EH
z>KEasHp)p=5yQ?99Z1atcmBJPcE!^tNBi)MlXz@q+_0;|MbiFq+EM8xS20J_1w?`K
z!|&{*#v%ecKbNE!x*U24AAqNr_+-XBE<tLjl2^&aSx#2AmAjCO81v%|gp5jbL)dmB
ziRcy6;RxjcRO?{qAacdfc|^0vn8*sAR^3I|I^v5q1is!0&+P;8T$Mfo=pEwna3b(M
zm9u!}9Wh8^l(fR`h*1bp9a$iCC;6!mwA$N|4%3xLTK8g%>7j0e7Wn{kDb!wf0mt6K
zULGlx*Dn34O@1p~`dI#Gth!(>ZhGWlyLDHUefNTM?bO9f++pCsSVz~Vb|%4GZrr`o
z{_*~Y?F3ZM{`TUFtbnoA*o>D)`6U(k)7q!)t1oY`Z>&7oF2-_Utox)PjD{On;rcNG
zb5Fu2DXvsDjUy%k$mV1+*X0-Nr%j&ZQ7Vt!EE32MaI+uW)LuIolh9EUVnl_bT6A!i
zKfcj8Itn+{>_{VZgNy2m@X|#^sVq9203SW(UHIwYsPNONq(<SU76a12OEJmb;$;B&
zv6V(OgEq^#cL`tP*RRD9#nYak1hwOENVZ&K4)C)t+&e%v_gMW&X4Np26--{~(1j2<
zBnX5k6b-&$wosfV5Px!sPBLCtQ&4o)@zRWq+gF}_#gEOe`|;9_7dKwsAa1<$(Q)I2
zqvL{dqWyh6kHq^Q3iZIv)6tm;D_!6saP=p2@2Qs}nDm1<-6!&4d3I-oedCeG?Q>_X
zv<pr+!HRNnEd^pn&%K<UG$W{Es{EiI`Y6fG%ucc2pIK(t{$+>T^Afb*ZT<x&128)k
z-Eb%{VdrKfST@YaU7Z8ggv2SGm2{M{tQ?8dZqn@{-3d8KHWM|*zqGT$+KudszOT+s
zvJCS5MSHAZ&_qP!0mOQ#cM!ii2Lh1$`#RX014FbFwK_TJ!OLB-yvVNJ*l2fD!Vr?q
zTPX&@4*qO2p(~XzVV03-Z$?tr2sgF1O{zV^mQP#6@JUTk*BRN#top~<-Fi-0eEYo@
zg|G&`vKRFY+N(BfCcL$yAIU(xVP9xkIW;$Q2M>XO;Bjz_y!-xJt9R0WKZFw#aVjqz
z>L(LIQQ=7We%ZmjkS(e@zi59n4`onCHPgSr^FqPBH`fGxldnI`1qw@2HDMR@E9imx
ztQYDqIJGqnBK=XUTK?>zCoO@a6#nMk2kb5uwn|Zh6tg=5Z@t#u0$3~782{_h$8Gbr
z9kv<9qZG-~`_4aqRNA2V$|K_c`JFrLtABZrg`Y(Ghr92$*`;N6LV3Bje{1i746+}R
zAK+vJntnYRMYW56oG+D{U`;8^!>NgB7LSxj2&l3H7zMspR5X4@S`a*%U~OZP`RM1x
zj@)?t@bB@2i{8K2N8PKxj)7t^W5UjdSI~O(Z*(6gT+&gI(7}jro(IpPqRC++rzr$N
z<|`N&%^nbpS{;&;D1D+Xn0O|dUg`FgXJ7H-l|5eC@#4nI8^n#5K00o^aCBTyPPD(T
z=ZZ&L!=8G)(@AL-E>5xe3#4Q>+Krb#n9xNC1S@$`Ymtl7>ZB%pt)$1JI)QqGwYA&7
zKJbYB>od>W7tT7}&RDX<7MIO*1{E}OlJu~-psps)GP&%yBD><X2D_89XCkYC`hYQ^
zr(+KJ$Ef+8vv`IrEA%!5zf#v}|M1WbySth_2c-Mf>e;qzMuu&uYPYLa6j?eS`bR5T
z?58hO+xt%}whQLxyASBy8|&?=`*&JCMb{ziy1XdOKEHa7orMHW7`~yt)4u&^h231i
znN<)wVp{uXgZ4&z{;XMc`>h+PZ{*`0w6%#eUtL*j?>)H`9sgA8;r{XMP4?x-cG;7y
zeH`Q(hxNL6yX~UccFB?%*w=uuYU;M4%p_}oVU)U}KKf#?esTURyK)7V*ywi?jNolA
zR@vV?U1dcuY;_}5D@W*#VF*NCMZE_TbWUP{)F9f8k21uL{~$VRY{KKTf3F^qMsdM>
z7MqHvzLdgD&cveSgBVRYZ~i=_B*|``*{f#y=P^@>>`mjGw{~RjsJ4}|PYoFipI8QC
z95_ibnImQeb;J5*W{1)uR4_T3fHB?+hI>^ybrD|O{7#|~4l8LlOH`xW-e`E3aC01Z
zt6_U}=_tj`Q9wS*ZXAQ}kHyh8Cmdy<KB(qud;%Bi@d=qPAnWEP)V^#<j@|zFdfU^`
z%0^HuQte~X3I-$eCjkL)So_CYS_kbr_jFk&48dQWnrx>mPXpEy*^KS2s6M;7(rVj#
zEDMIAqvKC7%W?MDrY_EA8n(=iINNhas=ZQE=gws+ggNWPH15~`e6LyII{WH*=h!wK
zkeiZZ9WV`t%LN~~n_jB1PpvAqFRYqncW&F@_GqaM?m5kQ9qHEfD`!~;QmS7(yT|6{
zrr3px3hkTc&9=LLxdEMr1S?KYvK2)cwg~3zp>0jJs36_WgP}ToRt_t~gZ9Tw4R+q_
zT)Pq`@5b#d_QTg2vFwy&-+j{}TSD49Uax0QMW4O*)S33r7ca0!Zdq?TVT#gVlD5}(
zU;v@lE?rz`|FojOzVdVp!Zfe-XxvyG<Mf%6X4n_cpJ(kbOFw&Vk1eAu7cVSe!+)}!
z_J@tu(KTSVU$Ma6x~zyz>pgbMmPR{g4wkNx)2xPPSt<`H-OnzbWACG{TN=CU*Uwkc
z-a@<K%yQe+#(2G0XT?a?Y7gTW9WGo5>xm%*G(Sgw94Y$nz13s-;k_nfBFElNDACwV
zNAzCbK&c9zHh;eT=>6}uE%gm{>G8`gmwjK_7d7@9sUAvtl7?jR{pX!;vkD5_{<YQ1
zmJ`o6cARgj%IJq#S%4M1U%%%%Tf1YYtzNVcONII4)^S7uGJ(nk1JC5sfw0j_Ie{V%
zKFQICatGhn3FMqgVtNAAk4hr!5blRVGzu)!>SpZx7R$zk%ootqUKw<$Y{lGc`}HeT
z_Un7MdZv)0KJ2js`Wvz=%`jRDWJ6F~DI3lS{?Ga$`=9%Xl<@07-zkzfOAn>2jwT`T
zLQU?^Pwe)HuQJeBLNGMt{<59&(o-xcCD|I>%6Od3nvv@^OaJ3<|H$tD3=D{+!F-Kg
zHCORd<${|2cSnn@EY7giNT+UGQE0Dqda6h6g8)-f4pVf^tsCsVYQ%%61zJg(?JUZ)
zxq0*%l|?w#2$(*7&sO`vv$b~pak=)BYnNLeiv{QW?sa=@dz<}u%`Cg&+_^R%X3Ki&
z?IWk;JI3pKPgd9`f4|*Xx7dVHjjvs_z}{AxVc*`=;>t~>4VOK+$NFLT{(9w1`^ttU
z@7(|}GT<R`;fGI~>A>{KyEog<d2Sg=_SiLx?OYhZ56sTCpVxLd=B>J;&({2LlWpIF
z#4a<@_Pp-|hAkex3uwSpUW3G|qPg1^|L7%jB75xP<<-{piIsNkl6?C*{nDN>Sm;Q9
zU8UjAF$V$n+8=11W$ti7SO^uR*Hj`&tS*Iv59C;1DM=FLqHdysQ3)m%95q*s+<4va
z@9{iUE*0sibm>W;cBpV18C+_$#Rc&9<@~<x>+zJwQ~xTC5;%P+s@;UgW4wYkXdLuB
z54FU%uR6<(llC>K@B4BBfebS&pEJ*vl+R&L9Om)a9~F%0zVc0Fyld@#+8n8y#z&LT
z>WdZyb%?VNQ1?MU0^iFUjh{*t<;L7bJ=uS76o^M|#=}h&6i8m2Pa=n(#0S+!Gb{V8
z*zf0l(@cYhqv3z#8l;gCj2p1{+KGy;jJ?b(EO2{8k6f$5nxi40cR`j=<)@++En`Tr
zbRqKvG&8d^?fSnt-G24Z>&B)NvqerhDwc2#%L*XCtb-9b&w?LEf!Lzp!32GXdXvEl
zK5po}c{7-1GF@W83KV8f1(%Fa<nvLe)Y&b){dU2L%dES*%hn<pOJZ~JBz9d;=pi_@
z4L6%ce)h>qdkW_3V`t2?>z}A}@$Q2_ceE|*K2-N^I&YSpF+0Z+k?xger<&9i=VKvp
zdpn0((jU1WAl0(0M0=Y3UX48i*45c-uhqclq$hB8jb~gsPy4xm!*Zlka+hJ;WA#Tk
zQ-m@yQ1z3`&GB%ZWJo4Szq`Z!@N%`i<D^pir&EeJbeKlrbYQ0TqRq=owHInS?B}FA
zJulhTv7hV3ZH<okT2_!|*TP(-QO--%ZMJ<^yRDj$YEL8S>LEUn_H4(08w_Y740J9G
z^waNHWEm+)D5*#Jl2YNssi&X%q#o(j?wSz(9HkI&=nsMgzPjNUC-Bhu5Zcj1kxLi!
zHF6UPIMuZ-EX(N%j2bw@2F~!t-bM{PgBvn#KpAR>Grr+5M7sB!o{g=Pcg?+S-aDuF
z#(P)g`-HXP*iWis6rv3p$l!)Ew1EUj7T|O_V;j!kMv7xDMk@5nSM@<vep9^Wd2Nj*
zkb`!4&7%!L)2GN60W#!Ex-_>&kJorr>bcGq!*iBQ)xe3gGB{*c1}Y9z$9VM~OkBW#
zxV(PfgqHzsDn4jS1Vt1Xxrqc^lyFkGIbsk-hG6<(NCVuIK^T}(XL!R4M{v^NC<|1y
zV>IJK9j=<7E(cJxOf69Zy*3Kqe%P}v8W`M=MM7{CJe9hB5^5*`e#*c`if?cu9d*)V
zo~stWWG^&w6BVy!s$H~|R1QbnyXChBPcDF+cX#A|W$2`$s?Hhz$zlPvWJaEvE^r-o
zr^N_upZMRu++}}v(~ntbooOvU_z7AnnGUAY1!jjGFw>yI0Qb9Kir@ad@7N=p1^AP5
z&$ka<d6j!_gRM!2+SE5R^A#X?R$7Yv?2~V||NL;zw3#RlbzrAkeob;oSm3Lx?YHlL
zrwOZi!*=C08Fv1fZ0qhCf^gY?i<LhS;{1_kUa^|SR%eR%(sNI7ACw>eu)(S;2Q7aF
zR{Ji>vpZjS$-ah_tv;5^_rR2#v2c#P_0*GX%?T&kFYmeA)^6Wrd8sK*va<hLWBW7<
zwZS`HZ?W56sj+updj9jriBt3^fA$*|Z~*bcS1z_C?CGj#>9#*$n*O?_g_em*U$Z{S
zQEncL%nnrlkdL{^T2dt_IxQc&ILEa3AC)BbVacUY&LF0)WeQjZHeP^1s%nQ(6C;Zg
zjIm5&pL(|1&RbMqA4B@Jp{~O{LxyJEE*-1d<kc70F|YW;)G3!un<PDxOW@<8FS3k;
z1m!EJI5EXam4vEeMoyZOh~=aY+j{DHp$fH7x}kidd#uc%I~pM1@F;5ZBn6OlwSbtF
zN>)Eojb6;eizs#02~lkm0osjKJ(-$s<dVs8ne*<z<h;zyd*-}*A?h*bjf$<z%r`^e
zSA&ne<OivpM4T_A?}I@KyNj?IHtG^I6&FA?I!v5HWe=YtVcq%!Zp0VPYXXb-g!MkU
z3ls6|c`75Ek1uoHnGm~4Fkv$1oy<IxhB@y{R#mgu@07znrvl7)%hY@Z@gw_Nd2h+@
zh-C6h2IvlA24;aZ$)FeVgKt}O+@XX$P<XJIXxTx!$q=_AdAzy~rOo5z9gCZ)PnIY}
zP&sCWdr9DWz_EUqs6lW_)^deIIy0;Zy!4Jj==P365N_)1x*qTnbLxX)yuiy=@Uj`d
z0laM1d>P=T@KkeoG+qYyDMTcxLr6E@kHJT;@gv=e2CTrP`%xEhWAQS;QTM%IwUWM<
zI^4w6JoqJ3^C`Zm`6P~rkg0i@nb+|GI{F}weR(rD+e=|*-IM&DWlxSka0?6^5kNB>
zLrcGeo9^g|kyghXH=~N)Z&1?M-`)STwRZN{s^#<T$_vlXTg1CGNnCR<-fvYCeyH=`
zuxMjhEaptI6%(!_OgKph=snXI^A0|;VZB+!HtRb6#7P!%;N)*;<|`UJsSu^9$(hkn
zVR#B4ke4%rV5656xM4H^Gg%Ezvs46F6LnWyaK>IqGgC5=nhaP5#D8vPwxw`(j@7r?
zNhd9_>rXqyPFb|reKfSv=dI~^@77)gO>u;*z{8!`=V5MEW4`^WC50n3qGtH<Wd)A$
zy8YD}yXJRWWH!*&d?JfJrMiQeM-qGIf9YODYSIo?AYFtX7lf-MEyVqdePmyI0BIXm
z65VpNGNKX)^%0>-u}ET-O+EIT7pv`K=U||N{bPMFS0ylTjaVb>M7?n?Ci9D7(q2SL
zC(%@1zF0G}jm^Eb8wr-$l#oUpl=ZSKBf=!gkcZ|p8RWQ+_NeMz7~(kLKTtcA`9(RB
z!kO`5PqZ2rad>|m!9bO2O+W;CE%4iSc$;(7)TR}0LC7&zjI%R*BVQjdp0u-q*wE2p
z?O5CCB|HGJTI(NVThZEXn>omKH<#&<WgTR@7q~$jA(eA}KxK={lh3~nuT3G$`i?s{
z4jVi?7D3|?HAK6lej(1AG|@#aZ;gMX6ybExG||n%A!Hgz=OEVUN^hTc*zzvobveRY
zzH@4o?;Nax8+;{^sdE^y5)N2isza7B**+J;6{Q?#n*>puoSMeM49ps<<+(6zjv;eZ
z$fUm4R!LY?l*S^ewy27Z?Vy_%>Ed{}DVXTUf?8C+TEV^Uo-P{%H(LnrY-wTtYrAd7
zaMNoXvdm^yRJe5#;aKMY?MDjIIE`iG^6J(Um&^!YONehD7Yk*v#!YX;y(Z{4Kr^*U
zm+;d`r<iCZh3jQMbT1F8NvO+96r_&A78i`VR}wLAFklH;8Fp$`md(o%esWBN4gd!)
zbx?f<IGM{gz5r$|k$2IXUp>`EHO@)@C`u)do^OemBB$?=79TY{2k!)c*f>`bjbX<`
z=%yhAa=_o#{6cp|X{?*a>>fHnz`X>)Y!!ke<`58QwF0iQcm{QNE%#dSmK$_dCJ(Mk
zP1;(S9P-Q5N_sXb1^@EC>+I~MOF1|=lhsSDviG}{IycT#bvTDQsM9TK!jNoh=&@U2
zZaxlkBj?(}PcD)%IVU|TO0}P!UW%#ZT&wTwbLV>Pc4<|br;?|%`k1?g)SwdXJpxcq
zaWFeiu-EKHj9Yy6{CTX#4%y4Q+w64qXO-ut*$-Z*wXGP^2tJG|>?Dj`eB!xUTZ8oL
z_~K0KV$3o`=#uVE3}{?;e6ihf;avOVBNcW@dA7atlrj#z9kge#!1x4ekPWo=)Y*CV
z?bS2wn;87~uQhXQ4h-8C_INF%k1y49*(RiJr(h)Hmg^ST_nxV;Suk7|E-A3bXzQ(*
zxz7Mj*ie~z7xfX=K9fWkbbXm6l@VScp8(p2qajn@)mYacLQcet)aiuVJ#ZU?ynjs)
ztD9<Tt*WuXI$D~o1_Jgu2-!XDsKvHJ#C9WXl{A(GFGs|ITf#5cb&F%%hY1ghSQE}U
zA3~3M+$z2wKZGRByBHtB!%(!{tipHW594b^UuC#FijxFDWw^M&7eo{<-~IS$2<xSE
zFQ%R;?E8AzoNATtb06m<7tCe&aeAhE?N?%c)0G4s$&V*4xZ;9xl$Ls28RS*G%Fuo=
z>1X$Kwp&emo7E`2Bq+RRl5Vq7h}tm+-a^=}g77Va@Xh2%jnaZbTT)zXGuUq>i@m9+
zk!g=spQJdHDJJBN-~y&g(ilk(r3$D6kR?IgQeS5k_4U@;+-yy#6m4kjuvgoB21_dH
zg1vB4nglQzV(P^_#WUFs6BaIcxaHw#fR|bfaCi&c$KqxmalOJxabEJHaZ`+p?lm?(
z&U?7Zy&Ero%$(<kqj8ev(rB;U4*y2N9&Um!zVy!B3om_~3~)2f$IS%ct;1)Pp?q9E
zetNh)f}exET^xemW$Sp?*YOQ^xXHYUSeI2c_Q$}OoyV4r`79b_W#?D{XQVAEF0$Di
zJCJ~yV+xYrH2N;}R2f{E?h6F;kok?*k3|)MGiJ_*am>mK3yK*8S~bw%=g7ApW<^`b
zeEG2S=CxpAiyeT&l14*7-x96C#%Tw=`>@D6)RidJ;pymWMem%&i=AG(UYK5V@4fm)
z*Wp(^x^XeS<8#VOizc5wt~f_f@sV1<zN}9?UyCKf0$Txd<6K&T{b@(5owuymE?-`3
z!(1H@S?w@OY3ze?%nt-uieu2?tW(4oZU^7S6eL$kA{gZGlc`TH_K-RWF?$<EFV1{?
zr+oxw??2zX*d^1?rq&+2eM7x%#oA#y`^!X3L!nu}@&U*1uC276zhx<h!X|q4K`?)7
z?H=}hrP&2oIDCmqu8Vel=h2<^L?bK1Wc}{byX}h?%(qWbpRNwd?BbGid8^tDI6e;J
zcGKkx?VYG!>XOq=wH6q+TY*D1{d5O3yC+ll<AY5D)r1OB8)`*uZ7sIGw%#r{eud4;
z$m5YGITRD-VC0&kjCA%5=tS7+ot3%qP8hBV4mGcBtcP)~u*WKPTV*r*5y2n#(GtTT
zMhlgu0tm}AnCy7%>4Vtpf%xi!2<yY|=IRvDri-}91!Luf@m<*WBXFney@nwwA}Sck
z;sX18Fgn?|cM+s<Pu-m#HS%O6v{xcUh>C;Ib(EYw?xN`2eGtbzaq%2ln*`I4grDNB
zeoNLu6GikOxoBwWwY%yX$SXMWVgY9n_r<w6c24;$j-HrnWmpj`fho&IjZBMB!T7m$
z9fLpWpO`MldE4F8XpPN{_S~-B_Tcskj@YR8q^k};83TWg%m#Luh)okQZUk#$J>X!k
z@RMr*oNU7%7G6f<XMm5255n?QrgQi~a1@-!M2@+Q<Q<h~qBo=QE^_AwJTDSEQmBja
z<HZb&!cB0JMHTlx3s3zk4qQqACzJ6VZi0^~%7^QNachLJeYC0B9@S!jU?SY)N?>vH
z+?i!|(So_QsHD_pAXz9vdZzt;Qd892GF47J9H;jas!of?*SsSKbySXpN%z0$Q`gi9
zwJA(=^g@7{B6J}Hjy(uyHBBy9=?zvw4`)vs#mu0d_ZRkV^<o}>J?eZCRY58_V(IG-
z?y!qzX4-?h*yn_ymtXE|v(!5`+i6%J<TGV!t2(R&rseE{RI8QhAdJ*+*Hzl{S?mGR
z(Fj_Z#n{G=AKC`9MO`9tSy_FWGr@lJ@OHar539MTVwMyC>9y7NEahD?E7SV<hzy_#
z_}ks>_85{XwduboLq;)FM>Pym0{MQy8DO)qYFI#c14c8_@t?;O{271PWZyn6kA-(6
z9^`qDdTzr2M;Q#H6m!1uV!c&kP4RrBVj@1Cpq@V3Hy@(A12x1#3~W4sRm4TVecisd
zI2ZL4%HgBCp`qKpPdQRMR2vS9qh3k8+SzOLz55@qJ6?Phn8F5Tq*-BhE^0GK7+@5%
zA0!^#{1g#iax^a>6sG%%t=Hh#{OUc@hJEehc$|ZGpLy*yyLt0=)O?#!LlV;jaYa=b
zS^!A)_AH5b?M=<F7SxcMxQ4l~c;gYQB33ES5w9-n5j7r#1dtsXjN?bT6FiGV5OA5i
zh)6IJ7)dxz)X2kqghmlt!Ho(E!u!ZKHaZ~IQ;-n2to#JN(kje5Fa$9xLl@d3*CoQ%
zExog#gyEogt`v85S`visFbvoL&%0Qyt!-+u-(wd3_fM{qRULcRl6kgj>2Y>C3sb2u
zCQ3JzMDEz`9?pA7uV1gKvZpqzw_k7GX7v@-ZXR@MoWL~$;yxM4p^Q&RLe-m^Ze8GH
zyTeV46G?5|;bIhSQl`@v)VMgj;V1CbInDLazIQVU6}<#5(MWKwTff{$J)@Hz@J{)h
z3krxt1P>1EOG=yo3<L+q2vLSB#xF~8FjvFikiN6BO4$>^O};0n7RMtIO9VGFyE`oz
zRZdCMr0LSl)yo3cBO5o{BQLFY^T0)m=GeJQ7TehzM^J>sR#MvOh@0y6g3uV-f$=9y
zF(C+q%-4j#6efx#1T?qn@~84x79A;TI!xZJd`EL&Y<`8B-LH0{)y@8@BxZ2M>+s=Q
zVUljeG`uVnW^%7R0YBT>YCqeG<UrqY^6KOFd!@-paAkdO3kQ(0c`Tl?hIpI;f%c_W
z96N_W4PIyB?qM(1Jx@V!q$arYyLMC7Y@Xd(+2PeECJm-e`_D39;6yBc=0(bYDJ!5Y
zjj9_5dF+*~g-hy_5e&66l{!EDY@JIl0#OWGIpyzG7*|HUH^WHYyp^`<i=_(WB>f_t
zTAK?ar?d1v@l35(j))i9RY2ZGm-sOKh!KS_(81gvIQuL|)c$$n7Ar=T>vMP9ZT7ov
zTU1nP3sYxVVtbiY*3Yz=eTAG`24NC~!Fx0Jqb03}sW($vjry1fqa?M$pFD8C{pJN2
zRmQvkLoTTpPHBN)?M~0IA+EOcOmLQid3CWrDWX;-e9+4;*g1lgahLBdBoR`p8|z3K
z4ePOwCwA`&8J%>TsL=@~dUr4dsn05(AOF4Ct2PxYcp+i5I3M5qs$^_K`^uzB*o%)f
z686k7$6y*cuB+YRyE-kED+j6g&~U%q^5S}~4fdwxi|u2VU1lY@xyKv>CeRE3kK3Pm
z(!TcKW2m>X6qJ_CKBQE)r=}w<!v?|4PH?l6y&RSfZW8AthJo5&;0qr$HV!WpBrJ)~
zcur#!Ge=oLae;r(WgkKTuK!fb+_+DterqvG3n{89fCG7Te2=7GeF5CMSO^3^g`08U
zWfBZnF5jMH=HCal?X(A8-)6<nK5yT8^W}EJ-1&~7n-1Ubv3(D~qWGY@W7CB9Ap|A@
zfspx{2$aG!F@u06ua351EF2Cq!RiAiC;t#W6t0Zv_oE(((GsH}rlNxW>hrDmcH#?A
zt;-|6fe%%S4~inBLK(gR3NbsP%hE}+i-5{1f_ahQ_#JwHld9fK4pCN_m5Sp(1E#Gg
zSLd7!yL$9Y`HLtglS`jd#Wj<*#s8Yj#?qqVRfe9abhWjdvNcHr^>y%|588PS>6K0w
zpH;_r1^KEdvl!`>+NpBbMd8Yp%xI5azWSTahj(taCrMIXNzL5e7W~8J{4c1$Fn30g
zefFAbE${w&q06%EqNPi$xw*-n*;;8oUB8_st+hM8m1xBaXW3^?DYr$lORS`<$c~#+
zVp%egKh{yGQ&Xf4PxW<df}`hN<0y-8GEnft`|q>co_@h*73E<|WyqQ!Xa{GMvZ8?H
z9KvweAO=VxrohLqQNAygj`Ti4#efAugg2Ut^nV{67YxS|!9gDR@w}nDZzhJfh<!&S
zA4c-fh2){Dqt)W;YOElkjWwQlyZhzWP!k@oue|MT98{kYk>2j3=A$OsNo0{u-Sg}^
z``YjCvI5R_Oia$OR#XCa7nWcZsK8^i9J2+i9FT<70+zZdpKHj|n22=T;iHd~0n8&0
z-vEIF_1VEuUyd<O`P{`kz&Fh>!eRMEZqJ++3i^<U)rlEvth1cv2E(`~dqkV<uWq@`
zZhPN*ZE<NShMtb>Id5Zn<ZcfHj`8w@aUlf8gMjF&(1j2<Y!FC64ez2ip;ylWcWJ3)
zE1IMIkJ|)W5l9&(n{R@}$1Iuqrc;_24XF<XE(l32v2n~of1MucgBI<gZtGxP#yT-H
z(N2acc8pV>@*=Mq*NHg`To95UNV9@x@-g6M6=T~-e2`CRYNN{2eY6YG!GGJ%amtBK
zJLTb^F;t{I2bmnsedA@9yS*{_td1wlDYu#V3oWPRWVS){+rm{HHkev#PpsQ+pT6rA
z!_o-i%>?_a<7e9GD;C)574xhdrbK4M#gGMRuj+>wF=4vb<;mf^@*h!0qh-KB=j7dn
z1f>k(wo?0y79PioJR9kO2wLtHr<dEAuEZPf-5xLQh<5HMsC<7g3*Mn<22GM#sdp9>
z+0d-{)>v0%ja$~++=3i?<kd~qercQKrk6P8>nP~`ft%>RSZg<I;LMA3&Us|dQAxSk
zyrsVS97PB(1*1TM<zB%t@8SO7eBf5RF;napW=yb}W213XYR0H^TW*03m(8|T_Sm*=
zdd22b&h|YGR#{bP$Ca1c@HACFjQJq52s!RN8S{$50w)UrH?54BA|_kLzS4)x*S;VV
z#>W%_!Tg++onTj9J=(T>@NA+LPIsnjqWuWdO)m%tue28?2?<X!YKUE|&?XOK$OYn7
zhmW>)B-!~Vl-V*2aeVX|v+p%`*!Id=YpQRwr#9`e|NH0X%x?Sx3`vGvc-{iL{*-yP
zcy=)~MxM<tn?V_#{-tOSIgc@u8INc~9^SL*`YQ>Z)Kl9;@Qa|Tt@4_h$vZ6-Los1W
z6EFm0eWi9Evnl$bd96A2e*?HWc>1t(>YReF?zzNlbfUuCiP~}<YRKHnBBUJhh-1)U
z&_#qS3qP_-Xc*eCl${Xz7|qFG|Eb%{MZ8;Z5mVp-BYpsp$$pT6e4!5n1lK4)0B(ni
z0d5K}6{j>E;H6Y$n^+QLQKuittj0vvIj72L&eb(tXb88Ej8QOW%w(!M9hQ605GVz2
ztJp_B6(|`pUk5!bVa9`nK=92|{)r;BCMivr4?gvxRk6803xfz(U3ey{P*XQiA8h}^
zd`B+?gkz!$gm3PgDF1$lm2~}ihFnnBLb6zzm+3CHVcTWrn|<o~E)Eaxu~&9f+k-D{
zvme~^g1w;qd+8~5*4!*Re@U4wT|CEDE}3mh=M*}Xy#$z*B-F-IP?-`c4`9ho@-Yvq
zrzvjhT?~d8l_6_@c#@PQ6Xr{*haz@4Z_imN6w#&2F=YZQ44VV6{Aeo8FVGbnDLts=
zjp>gIA7G<NQ!tgUkq{FslgNQtWD&JU6Rcf~7fQkGv2kf(yp%)m9|!Ws1dN@)-NB8X
zYM;^O*F2_+BS)~s?@3&;a$(Al3`#Xtrr%|SPmobQm)G~l!r#IBm;h4@Ix!9s2|f;{
z^0^#Lg_~S5$RS_2*w*afW{0;&(Zw?caS3R`0Q0HDO&uZP9f`sFau6;WC1QaN@iOEh
zm000t=%y6}gojna(S};5svYabh0Is1AsUu<KnNVlq*YnhWUp+mva);#JvU8jk`G-7
zfvJN)fMMRgE$>b^EC$W{7!NyXSt069Qh6#X%D2nTSne9Mi^IM*Y~N$Gdur{e%~kd<
zH$7tZG)G9El4GY9&#`&KGoh37t)hwZZ&LD6RZOEy&uX2lDSA!>iTCGM=*J&9&mEhf
zjrNY{XXl{|J~Xnsuc_W6XvG|8pNE(*?M2dFFr}ASZfCOF4~ye;)K);u$&U)}vx_d1
zpLd^$9Q`-?X)v0jV-M*rnj+g@L6NE>fpJpv%su7@5V{*7o8nXts#s2KF7UB(=m=Ud
z8X^?fOXD$P;Eotw5yNtUiF6Ucu6!^0nEe(0C4zs0z(aj*Y2t$DSG+Ds!2*LY+Hizr
z&IoQs@RM{7&7$xz80)~_9{?wkM)?orgSfx?UE>|%Oz=IK0AjedlFlWK^3@K(S@VF@
zI)e+#hYl|#;S!E&zo+Ikhns$V8V_0hbo=f6xc&C);2vsWP3qFQoIjS$`FL`Ztu0nV
zrL*VcuDa-AJMZkX-9leFhgQo?7pa_U%p340fPV_wF86%y3vTaWIY)KK1<zsumXP_1
z1r)<F4jTkgI4deUEydE<n-jVa0!I!4QeDwxtQL6EvS`LAn51XV$T3}J%j{i9%l@&c
z75cc#UfWe|H{ZR<ZhL(#gmIVs^p+gEq`1INEX9aNNr^2kE3?uZBuEg?@mPUOic3P3
zN+%G-xxHgD%`d5MP|sn7gBT{x_p(`Kn9*E_N?R3-7fhE3EHPtJcN38%2B95`mm*+A
zh-#HrM6ay(IiIi?GF`e4!p?_DlT<=3Lh%UTF2Y4e!Y+;|M<{!bM%_f>BY_}M41B*$
zK^r0^`Vm3AtJ<%BR5*wWd|=1fNe*@*WL;SIez=#gi|1Zp5xEW#RWX$b&Z^T%bbzZE
zU(Qjol38ZeyV+#9#Y-P)=P?)%aW7_b#Y!w5!En{rdeRobO8BXRfEAV$roNguU?z3U
z01qSh>EmXSkDH1Qa5RwQ?uDCzCj;QdJ@AS0hu4F4)J-H933y5N_p79?{QV`;GbM^@
zLnL`rW(6Zv6L4WaB48e)eZeh)lfuO)+*DY&=`O`{sXzxKDhkSxdSL?NBP*zq`V`Of
z#$)|+;B8dfBJGV$AUP?~-hS!X-c;nP-%e)!RP#4)?4irUmXR56^B1IeuiHU1Iml9$
zmuI>{H~k=x%p7v*$)`jbrnh1;_!7yuk3h(L?E^4j^z?*)Ccr`I^am69^lWC>sy7$}
z+{ZLRh>dhUS~{k~w#!+0HLk^T%Pg&Hq0MIBSW<3>WzBA~=GGc}f<ua*e*P7h76`+<
zY<u^T`F4EC9Bb;!gr-TcdGUEHJfvd1e~|Y;7w7Hx?}9!Kx~AT#x6~v8Mk<DqaFx%8
z8Ngnp)ZMVK=Oi#%_2&FEM~rDzTo(s=8<zN7L)C5-<y4g*$g~<9s4Xch0yiQl3nXUv
zE<SjMFGj=VRbeUv-<9ir{QDp*==jegzT)JRW~>uL6_2lAwC`>euLr)bux{PGR`~sR
z$B;s}iYe6<99k;^RRpbLRtXD6Vg@7`5EG#*2&>$nZ>|o%9>Gk^tB6_lDmwG&k~qq!
zfyPG9^{l?eYtJ}%s*;W^$Cx>ZE6it6nFnJn1n80k#^EOTD*PM*{$k36zkOVSts7H(
z;Z=ZJk+9;#tOYnJT!b-mxT-Lha8%FbE1$zP;a$`f9Vg%i<Kld!Q>0uZ;N9-^D|}I8
zl<#g`M@IUy7oIA;k7EumfrIcb2s=hgxXBerT7&csFUcRlQNpg7e!E@OisN3ek(#G)
zQR>Mu@h{xe_ykO^)RzO8@72H9M2K+CNaH;?NGJ38f4r^Ds&)<9$)_hf=IbDfiewAs
zZbihBu#Z#_1`Y`V&RQ{esj-Rm_%JhsE`-40g+TNi>%KFGxB9TQ5CVq{0^X#p>U<O6
z5J>unC&Gv&fc%LNak+{4cIioTEjuU4uIuQsn&xKc!*<(IS8MleudrXgbQc61L}7fP
zUGZ|M)%MP`Jfs=3i;As`^O{84B}h7!Fa%S^!Lf1dPJ<}YheIFtSbsDkz|)H?VoknY
zWJg$`&J$NYLd=Swbt~l%xooO;jF-+|>V+{=yofisNLhZ^QIn3E6X^EsMC8e-en%Yp
zjF`gFjGV$sGu{<c5UD2!P<T+jBW!g)-X#K7@jf9N5Tx?i!{?s4HoBIM{}Wx0+T+^k
zXHwfGEs#_|k{79HiI8=~tW@R#$&63niZO8QRQ;5pHi)2h<1~Kt$7HM+-e9~1qrzeq
zK1w{8h{=lJCU~d?0f(R9CHpoV6DEet!B1n$rSbwi*b8UIfuQor37vukf(Tyj3qO@U
z3RjhXR9*YRO_D{%+%?+ANwqx+FO|mOCw&R<)YUOkO>i6WgMK(*2siaaz8@9?rLdSz
zw*VmAgvru;pnEZ2g1;696n5=YyZp8Zu4-e@&q&3w4@8(9+UvS8i7J#{{It3xo;nt8
z%I4-+G%hTIDOWf?SxlK2;9`VA6RRvt6+%D|m?B&bfg3_#T0_9i;{nk^OGOCi8iF|P
zWo5a$XVB6hWEP`#7$09|%jYk&OHNy9?QMPb`#Y<wvUiVlbXVDbaTsYuD?}o06;iZi
zv**|<BxIRGd7PDoYT^)w9z!9dp(Zs9b0i7bXcxneN%YGsVoC&^%*-p^5n>QvK^nEg
zT_OfWcyTWkB}eSyOSR6a)IkhurCn)7nCXfTjD8&fLFouM;?yNqH%vwhyEhtclenWv
zbkNHn&%uC(MTl=d91!IqU=?<f07+Ctu=+%6Al1^oB*$Qi5!2=8aaB=?U?O-(QXv<>
zJ-|7^#cz^(eysmQ`mcTqKK`YC2P%eQbmRoP0M8s8xfc#fLKab_6OMwLfuu6PPvKp_
zKsY@0#~~OGmG5xVM@-*S^bv6p91uKcf!gEXKp?;`-7D;vejhJ|Z(^{V>LtunfS-EL
z1CB&64{%z(8v`Hig27(6>DPal01*pjM`#qf5CVq^fspw+R0xLoCj|jniR<K~UJ;!s
zDRC^``X9eZl@cZnA#f}~V8r~fRBFYD@rFPXVLF?A3d3m$R+>?4g-OMB-14(*;fgrh
zjEVa;_OtA)tFyZ*D(&Y_taB^*#WQDF>0qg4ZYj4Gn_&g01(xRIIvU7H!ze#K&a+l1
z!ycj|BCEl%0O?qQH~P?8Jrhyqtjnn~?zKXWhTLdJyjmuLRuUVhqWAyVdk+B1j^bRn
zCf&(7$DPelX%$w|DxrV`0?D=z!GHtlVc^-=U>oxcwlSEW-w{7BHp#yY*cdE~!ID4%
zNvnjiR&kSdC+y^$)1B~tU!Bu;&fK|aX70?~neE=abI$40UEN(>-KVOnx|%{5?u`Iv
z80CO47c8WK(KC#&xhgZvl3eDP0w6<xo5Hh3@ek|Dm!2yhseRHmq8)rs22~kVJQ${v
z&%sQqVQMvvVP=^QpJ4ussT!{e*sUAOG$BwoL>NKBFtbd<`e=Rih7UFbW5CcS@uvb2
z=!QXQ6L?enYXpP~XmDu0xhNnV=}u`AG-<8@VGQpAbV)iiw8^Xc%(6+3N}H&Q5!6h-
z256P<SONWm3$G|&yVzX$p7$Ys0r~{3EucZto}oir7rgVt8`?DVN!m7bVX-E-)zf!c
zN4(&8^#)TvZ`?+`543lqHo(?<y)j^gul4SMbEJIE$DDhI2501(|JaZH`g3x_%~^8U
z<vIHO;oNV7#el^CZOh3@IcAD99pt_)YR6`9KLzi0*=ad)L0ujA#H}&`#_!g#F~})X
z@>*lBeEnyqWFoay{^Zf)B98!2Zl=7YyhQ4&t8s8?o$M?xhgQr7@q=cHSiJ@_m;#1M
zHE<{=?oK?|nBZWTGcs{OOblI@1Pp?ZcaGXSfd)w7C}IH3g{c?!o-h|NumtXwp=G-F
zrqDn=7FH10z(3YxVNkY{b<${0T}(Y#$B@5dtub+&gCrFY;07T0_25TnPBmCJ{K$+4
zN+w{IrUhuJi~cBH7RB0#STGO@cLADkdO6S)fX7}iy{~t$L7Sr;n!>@`KsUKJ20mfx
zj{=u_Prxj~`^-A?S+9XV&a?a1p-pBD6sB)trcLH!z06M?TsW}Uwt77KQHK^Rl4=FD
zI{0Ji$;FffMK5?*P*(>p3#07QLJV+DFpFQwmI+#joCJ8%JzuB?sXQK9Q*V>3@a4sZ
zy<c?<aAm)(6=!XX&&l{W84U)`@DV0)P2>5qgruHa_SRxxLt()1Zce3Lkpz(x!l)ff
zf(aCD((|#GB0W7@=Eig6rm|uvU6SPEH_u5*-hebVcStk5z5UfI5XSC%SWT%8?5UTl
ztLkNDq!_*ivZZ3C2zwdwA%s!T3v%K?rfZD?hjljQ0W-Y8)=C!U2F?<lm^aw&h(R+t
zxrvu@XrG{D7x-Wd6HH0-uTv34C)5!4q!)S348;_{u+X3nJAxJmt(vEPtZP7f;mmN^
zfITujC$Eiwfz3#koQxE$pVMG(UBcZjF4o4Z9R^@rCu!&`_A-SX(k2<GUeM-PG}=VE
zfG`5utOBDw20#P&;Zb2S$$aqAfD;Qt5y5hariDA6z*a)1E>L{qjcaf^560ZF(t%R&
z!1|)zv=C+>4AOeTFd$(6XnIyE;JJYnG{Jjs;_P)<7@*KahCbd*{jw@!Glj%}?)h@x
za0q!uLdf(>iL}DkQm|#yt{4L(-t-KIgvlg2!Ca$*XPz`LRVgc7CE`f3!D3(oVt}KC
z9|iN#o`&`+2~53T&3tBYg`-4lcHgyin_N`8Lng6WedqA7jKQ^b@8F>PqM=dlK7CS}
z`#J$ALv}n-C@*zXNL6`-)K^x?j<PbLn_a?B<2WOa2BD110uP&Ji1+Yen+S7+3?V;p
zdd0C}T!BZqbuhhbM}43$j~bMbM7s7-Fp{asFx^ZRXNO#HRs+nrrlQ<wlsm{rTr-h(
zTx$ihP(%&0PN-T2>Jd@^3kJ``Y#2f*uHBQf^1iwp`N);Ea_^~L`J-pMq%b{M`b{;Q
zr1ozDVt|a&IQoB_9ZJCk{|8AApwCPQ(j^!tJ!GblE?Rf;jJ&o{2;iWv9MC2g2o{Hh
zkz9zFL|G~j;T5g*$3cgN)<;+;6rPH>AY;G9piK<YGH{_`3T>%PPmzCr$9Cx$@ylC|
zoYi>3@-9Fyy$vhJfDybNeenf(si{dad};Fb>#m0<TZ-2<BmxGeVAB22E3dfceBl_F
z`mOp6G~eBo*3k-IE5)GAzhn&Pf-q+Eg`bz$zzmO0NL%0V%7w4kinFOUI|dy7V?(!+
z9|Px~(+oC=ri#>#O@iU)f<;+QjwI*hOMOM9T)1neylZ$`e*EJeX`k$r*|aX{8}E^?
zJo+S-;)itQ`?~F0<nXp_a$#+a<YebaCJq2CMgA;qtOuh<rY~NBu#zzuOrxIPcwL>G
zSDGz8tiF#-%}7)KxV+ppET4a+mz<^ekOs%>XrLwl&Z<@WK&F&J6WdOnxDsjKzPnJ)
z3{S~__fJYLUJNhFm!#T)!MP+g2ORd#%CFSq$S1C;mzP?H<h@6lvCl3=dLZ1+X8Yvf
zTei!|_91!SgJ-2CJ5^dx5Sik9z{V~a708BAhFc6`oIs6N5!%xY=D8}@Cl}P@%kh4Q
zZ_~3_h(b=_lj~7DHlF=B3J9aYKnyT@U2_cNp>KvTjy`osg}h;Bv800rX_(rCK5Xn6
zm5;sL11pYcDfOjDH-#Vs_9tnRbV1srhKqr;o&%ct;MRO;9GsNz^-h2`lBI7^K8H4$
zFCXK3aB^DSy|Yk0a;Qe0ZtRzjJlZPTA@rS|oRK${XUWH}t(S)z`s7ca?vPwxveG(*
zD%L#(G{r>((q?dAni9094dv&7MlYx@lEMMj_^hNN{S5N6EqOY!=2VLeqm>OArf|O7
z&z^VzTORyU3sdZi_wR@+Grbg~7~$)QqtDClf9m}r`>&N>x$-I%zRbI&z_V%NhXI5C
zNt~m2^A|oR(tJk#@&mtZg|GOb*h1P!7%;01H(hao9KL9eq+tWFiCcC%+z;Ne^V^IY
z9|Iedk%)$P70AG}={^E5PkuV6;13}cOjasZ>T`Wrk}<bU_Mg9B4jfFEcX#&55Y9pB
z9T<>bG&RfTo_Jd1dp{B>E|kl+RLV_TY9$Lo7zUq=(FsPJ0#^X1z#MYZ|5bJQva2vt
zo@*bL(j1>0uEhb>=U2#0+Y9CTpEO81#w`5JNgWu*5eP-SRE1I6g0NK%Ey5(2!~qCx
zJ9E<IGq>-R?;mZK|Gu|DX0pKs10S`>HyV_$0{OTHZWzMRuKWzSv?50?EX$FH&koAJ
zoF2qc0Dy_#)wOw&L+v7jG&0sjfR};#w1F`<b=U$1{4DBYv;{RNuLVNZi7CW@QKpuX
z^`Al<`B_$<d%%Vf-_0}(s82PtBCUXfB$V<Xx&Qz`07*naRK$!8>xhAD^z#t<=aPzS
zxuQB(8n7Th8hg{;67eOK%B}lK<zx4rmb<&hqzHXSVW}Ja+XHR1p^I9?x1tTR=wp9=
zy8Ov)d*o+F+vIz9y(Vd88M=T#TImUqZyH1}2tv8I6nmsWn+Hm=<Vf?7e7^<fm7$1A
zXsk$^Jwp)aLBm`SC<81WY0*R4<aZ7N-WCXDO&lw3C`LV#Nx$&2%7uVY2!#`9*92AP
z2pr+%fHQ!$cOjl3740YoZPE;QqXjw~dhS?*433V=Rp$Yp6u!_1j<Hw+=T+So3%tZ5
z<Z?0V{OhHptYYQ-Ogt)NVFWP19xjCiNjIEUWzacIoP*VT#TlU%-0EVWuDX1g1z;#)
zrcL4?!UW2dOZ7svOlUUS2F3tYuk=91&n`XhfgUz{Fbfsr!^m)Ob&n>5Fea37oOv`i
zlPWbhGc2_P`@r!2(tQWyLl87Z$Dw&@ZINRzjk*8$NqM4gNKznt`MqBDR){>-M+54_
z`n5q@b@2~QDC7DTtm^;2H*S;H?JSY6^i9ZbJ#<#KL6ABF(<p&(_O=qARKs-drO_F=
zA6kS`e$l`n?kh}JZB`Z-#r)C?*@oy-W7Be$`JjDr@}(f(wC1Z|KG1>LR|XLBvCC`Z
zUmAxc7mOy3j#kqwKbTu38@%u1fzg2fuBt3($dcu0z<R8ELbAc+j)J7B@N0oaBrne=
z?<vWU6F4$p2J}X1Q<4LyLcn<qX<!>E?*nsBZQhsrCZ!eitVFxo1IR%p8`cE_+6DN-
zF+-iuXCG>mZ$c<Pgg*W3;aa&7+OSVvyG8E4>$qUsq%@Gm@_q8oGM|(|7=HoJ5A;mH
ztS?#4f?n=~@I;MM2In5o_b!;!J_4F=q$y&Ee0<*yx}Zrc%>YT$zkR40!WYH}g6;w3
zJ69m0@Yg_r3T6LVb+!~?;ou1Nay^gnQHZ#Hz$(VCmjV?8uJ_jFK+82JPfR$%zmY3S
zkVXYF?Em_$O73_R`N!T#=^UMs0tkFYo2Ql7Ab&D_oV$E*R<v|xn(d#O#C(a(dj44K
zpJTv@I&{F^-JW32kTK-7Nmd^NG$p1JB=&v0gB8BwjZq74RWZO1Ajbna81H7t*b2o4
zX&y{U0gOO+sAdMY*RRIVimgUA)f!`fTrWHXCPAnmBO^IkjzE4+(g2OzIF29zAW%Ez
zhfvBmn)hX-LV&@_Y(-(A+;rXr%H$n8+a$mG&3~0#ybtflLcuNT4;jB{jLm%Z2R?fL
z`Pu*ujXopaean7%<L+V+m{py@O8nnnStYOEUnbj%vvj3@2rKtrf2u`329v-)xw29|
za=2d0zin@++;*T`{_E8)dFM|X<V%OE<R;|XTIA+~7VDp$JS%_jOvi%ywnB?=UPZ2a
z{=!oEqsQANwGg-h?WoX%Kh#p)P?05nb~VmegSL(s?1g6Qr>}I%J0EG0?P$kor1`}D
zV)?+~I@t=18d=-3LzAlI&>06B$k&kOy<79-_pYgzeK5CV_<fk8{mqdE`TJ7?QUyV-
z%}!5>m-YTbv6-@WI{O2H&XW*kZu;pNIa!n`SAqtvse-n&Wmx|8#yUB)qgZx8gG;)g
zmh4+koR!~xxK%!Pb+z_2g`KPSl*-WlayfFWOCI^bDf!MV^>WGfq6PW><rmHJ(PumL
zdzXg6!F^x-FhRU(OM!gyK(YMA6CGG<;5g<#1pH|LP2X9QEuXlyUM{T6)jD)fOw0G6
z1^&pB?Ybz?2CdwUWtsB%>$l1!)s8#;rr}8`$VkN*g3zFW#@j*9AJ|nWzYF@^Q;hE>
z!f*GE%ilcQC|^G_2sts?*&nHIHpU;yr{?harPi3^zh+CC<m4txX;~auXVMdYHY6Md
zR<m22uWrIM*;dG6AT$Py+JC8n7e7oC+=`39z;WdsjAqhMA30A)5DQ(Ljonljz*I^>
z11pW`!voTdFYzwe{`(+c%z@EA*Mp8NFc`e@qcaVhOk+jX4`Fo@2O!hUbu9!jzEnnU
zl@LbQgQ&wGN;$8<Cjh2ES-(GkmZ7JAOtQ0lauuEh8iFgf7D{zqy8P2G&MGsQ41w$;
zSJcYI<(cwu+o(Kt27AO1ng%B1+t0Sj<0pHlx{^cnh1hrH=6j@3lF`QBxw1~KEx<;1
z2ym|QK)&~Km-LVO<u@;_fi@xyc<_9NF^_aYWAN8EY?Z@cx*s^zBcFQk3=YZm%dZ}+
zlCK=9l+%M#@+(!@@`pEWSHbH$FLcNkA8VFu2wZHRQX81$OQ7lavzvFS;Pq7qkADfq
zmixl~;QDP+lanTGD3^Q2Y*>E`kOH(T_y@nsu<s9&70%qFUKHBmBAAeY#xBIZsRC%2
zzVvvr{N1BXk^_^!w_jQfEmx*I(J~~DHuNKZk~Cqz*w-Lj-FE`C2~E;@5U7Ily#w@D
zTnM<J6)3QD0puTF>XcCkbnm|mw3(d-B|g38IdvidS7oNk=U%@<4npwypJUzfXAd<9
z$H#{+ua!?7C~?eWL5F{N(>4{n9&H+sKY5@*M#lW=utUcH(w7%!$p3TmcG(TV>&s}%
z--CYl;{N|!SFakgY#@YnI#&X$qUDaa707!&SR^;y;s~sY_j3gSww-asKpe&QxYo-8
z+r$`HuL+Az2+psmg^5pw41k%GzHX74Z4khgZi29hyJzz@jocHLn;>`<j*m+F_>|mM
zUnfOyMlnrce7y)WK{2j;mB9&cNA&65F<g1Ss(}SS$Qgn&3`#0}5QMftTeTa^=A-Dt
zJAZOo8o~GqObKBFB|FM<<hI=<av}D_eB-$;slbrF9h!v);hf+@_clVqnJO7@P;lct
zr)3c4e}R11+r@m_z*HWA&}Q1z0}a(bKiek1chwg8*5y_5?k78RokkaZ;H=~emzK)~
z(2PCZJRmngYeA;>uGUd`_U-%SR%qMgv39w2r^AGQ?U`2jz|Wen=L`F~2FB&Hx9(Q$
z7dL#}v8za`VLtiC_n(%}-P^2f9e|dC%=7IqN&7OiUzyO<)3vw_34{R<3SGrB4AN{A
zVK?@2F<knC<1z{DrO=EIw0XF`K%K1oK1}!i^2tsqfEM)nZH00SPF+6sqXul+%7i1E
zWI6vok7I5EZ3gB0&C*Qyt20BoFyMp9VOP(X{NTlQdG{qX^4FllpJV?QhpCG7@J93Y
z?FF(E+PJ%qcgyWRdQBG<Ug;W>e}C(KdC$R0`EzJ_-%?kAv63s#whhVE|8-Kw!)H$P
zO8<K<f*gne1{(hwoZl3tr^-j~IVoSfuSNHhWkK3{JIZ}GOclQct#l~_J>z6V8^6i_
zWT>ZRof$WIOKtO38v|DOT5Swl_#rW1c)E};S0R#&H8<Rr<>$+tyS8H^{>zd*G$5nh
z?bw`Aj}H{=^w+vltI$phG6Dvu^@0{B`Rr+ICdUU9LioNdTXi$-7=$mpwIK=yT;nE3
z0}v%`JYFk13n7dyx&1Je>f}BZXsa7x67{94s^rZOoVahLD1&YW;FS#;1TM#yK=Z&r
z&vcTNBHNMwG&EauC@`Nd75SV`AkD438odIf{}=?Wx1V1wcU({@pTgd+Y2-IkL>)C{
z2;X~++H;YMv9IgdrXlGW7?a%mEUAMNg$iiq7#=x^G_04a^+F3AK_6Ay1+z(p|8=lJ
z-gADL3V)ey-3#3Omeo@fCEOpS90*|CgT>IzeO92=Nob9}1=GW8p`E3b1qBrD@hSvO
zkp@a(uE&sud&y0e19*O!c~j=(+sJoKP`+a3Lph`a%6mnik6(MNO>Tk7;%{D3CC|e<
zA;$(uof6u9>?vb7iG=~y=VEA!zu!3~pXeBoi^^fz3W4eZYUvP8!>Np5PugCjNdf?x
z{3^YnP1UY2`M)o%lHa+clAz$7GYyLYNwOdGj>M9wi51j2@rO8IF!O-(WdB+WEFA;R
zEU@%^HiyN)vM|883szs)xQg#Wz|zZ|(PDte$<NvM6?+~7mbTvXlK9I959&v%kbA!x
zu<8dP3_Ec3LuJz1>n6g0`C`&;r1>?;MSu59`JoxvAqTc>fp;%I7?*R5i%9V9Ek;+B
zfywKGxs|~DsUR;?#$eX>KQQORhBP^H>vs9@6?HO)e*6B5o$~N&Fx^7%(`E|)jg_F9
zP$3POUvj4l^K~rD$24w8B4Z3K#Fw9J)$_i-eQAYbD(Jp9vk&Akg-d}-%f&NkiC*GN
z$ef?(OjO`%;0!`2Y=;JgP7oTPHF@xKubiPfdekHI8D#+w_GXPSpj}JOiSr6HR;9(x
zUcG1g&{Gh!p12K1IUKCUaStN@_I$fMNdd=AP8xAZRIh;-5U_r6`%ZbMC*M<UKBZwz
z==`C#Qfx4ke}`ta5T>~Azo^17qjyQpOm{v$qdX?()sG6Pb{}<T^%=PLjDcjV*-d6V
zn_D_eY=efm8?<>Ao*sXOGwNO?ZKBR2%y<q3ekS;{!D3*g7;u*TRtm-Dw-|_m0W)Fc
z<)z9;K3=F3dw#yNI=vKgF9*&tXFp_~f#zcuOb<VN_2u&A2OgEW!W?Nn{=6jZJ1BEG
zaBEGkL;UJ!5z8zm3NGyHHNt@59w>B?aG>!@!!I=j)81^7{OVO#VG)?#ui${g5a=3J
z%@z|L1LWs=sR^Lq1<vz7ZrCFE&`ceLKq4LE^1*!t*z;8+uXK*cfq#5K_uYK?m+M9L
z&NGaLxlE&00<exjQ}(_c`Etd!$oWjI$T$o3^!&vuJ@QL%DSjAcS`1UJR5yVAF$_1?
z<jUVY(Jn`!1(1?VDa3xVQ3#1o!(-tX>yMB_?N$>E2k}f+mmgjAa)t+bc4YXEm%8M$
zKRv5jI-Pvj0PHo(CWFgNHY5ZF*cAiV*M$?8<tP?ye)pm>xe}VHwvkEs!P#NCxi(i0
z;T*Rkr~Bl(|L+w&Uf^%<*df<quc1mn_)8LE_oh=Sf|t&h({WZ8&i%R^`5r>P*Lm_?
zqxq274J=;;et7)+o#(sM)8aKaj)9b>v<aBaaGb%APoZ$OTb>&9%T?HaxEBsxdf=&$
zCbyj!4-6T3(12m?JHZ3Vq0LHz$)S=PXmtdRJs7_7Oq+b^{uaE4c9}2v*~Wba1W$85
z8PnOYbPQ12C^%R-8;9E4ka!r#2JbMc9<t+KH!FO_AEy>#1Pu7F9Ji(3F~?ytm2;LL
z;|vUs!2AcMV;B@g`Oc=-2*oXU#bQ+Zg}iqjzDizcYsbf~K`K#+_7|Uq4bXnrhG4%&
zDkeghD5`4CFz^c?*@uM200k-j%wE1ptVl!XN^fbDLI_(OaF_nq@3=$uRM)^|Fboi_
z;FTENi7w;WMBM-K2YZVo5AN6BfPGU3tMb(O#iyQVRmp{#CFTEMe)ax6d9oLd1%3n0
zHW*UL%;5i|dsflaU`+qu{9<_odtP|h^n!d<$Ok6`fqb}8##3YXhZUNWFQVLk`lVdR
zV##29kplb2{sK-wZap|Dw_sn{S8f=WN1FzriK~@-)cFWJ9zuG={4ykOfoH{!AFhK{
zGtLG>{@=d3PS<sm^@Vxl17Nn_cX5^cF&uNy+^`7;O7F#)O@&~JKk-<Lbf6t+Xs;vc
z1uAB5)*1sK1s+dAhUqW_?h2UX-MFnlUXLRX@JhZ44XI!+VIG7phCFD%-gBT(F0IRx
z-$4J8u1GpmL$zX0AM?~#=E;XHE0ul-;Erw#0u%E6Ch{FZzF&t)A+zYQD7b1s1oP_r
z22IreeX3Qyh&_a~WK{T|sh^%1kdGdkh8C?#I!31CILr<IH@tG@fxf<Sv_tbg2*)2h
z#Qc_hW%9Ss*uB_3A|JW31|AG?))%F_oD})HmwM#NJ!SF*>_04p*=&2)sO*JPkWx5;
z`PB!TamF14K2(K*-$n_XJNQeKIe%gT8pM|#mC=1yprhH_HY5@Tc+?6lqvo(JA>P3X
zU-8DMg%=eAI>&IH!B+(HU`&CghMX|}`{z%}i)Y%Tswhu>_t)O+93mSN1Sb(;&}l#c
z4vYQ6+isVs|N4PEe!59&^5HuB<!5BDv=S%l;g^MvsJf-c5Q(vlOQ?oTx|$du7ea?B
zJW61=Uy|FJr3?->`oVm642;NUe)&yu?Rn>`5FaxEu4a8LY#m~p5@yjyrCDk6g<Ezi
zRyx6`{sP|EKJ)lld8Bh(s=)aDL&vDR4RP0i5&Y`g&Qs>^wZ1Xg1&17}O@OxOYY=|k
zjWkyy%@^LZTV92W?EU}oioDZ}3(l88Ed(mS3xlrzgN`nQ_Uk(kwC;fOf?tNqddhbE
z(*o1Lzdh0*zkA(Q`5??6KM3B5fu8Jcf22i93ex0HkN3;IsxG+`0@xSdyj$O&K|Tsn
zWB_Tl^}~)a`TPT?)&2M<0n3D=V080PnGSHbRNlquSRn)6UYCJ^S@aoA`F`ulI?X)*
zf%<s&sC?(SHu;N}d!;%zO}^hYA}@9f%SBi)_{Q4~sBm%y4l?#&AC~U%LZANtX<k4Y
zI&As!FYT4n-6OK&Td%4nm-)UKlusRC@S}<HAzR5L@A2COLG2%p_sJc5d*w#Bwx41=
zh~>%tN%^y%pOH_)W9G-NsSmXD9(erxi)Y#;DFf%*A<bVs)+~RB_aB8*8HNsMbBEC;
zI`tr&A2trk|9!Yo-h%~-Ph)YwgvVPTDq^2y8iX{G@kR<`lT$J>F{RcH>soIYaXYr}
zkl*>EzmmL+3`ybE2ZoJ?RHxRP=dZy(t{3gxCC`_Yi4VR4;vKB;6>p4Mcu_H+w7twp
zJHwZTRmF74OoxkId~9gGvD82TjNa`k3k&4W@4QpK@xagJ-<~?Ehf>zU0mlG-6B$`D
z3v&R~o|wV7)PijK^}ztNmPyc#rc8`U9yS*yLj%?^f)&PsJo)=~zDW-6+b>B-!xh_Q
zlHvNaYm=5r<0g*DIoM<U&3&h(7Kh4G!!!g_zQ^HK{%IVpOk1rItiJbALW0@X|AM!}
zJL+;FEI~klnblXZ2j-7(?$(hWtW;w4o@svPr>Esj&>)bR8G^S&Ea}S!Og;!u?eJ*$
zHE%u$S`Wf=+~<CLTz(1xkNbH}(?$%}&ph5DN6+*Ng(r9%kUB8Ye+S{}0SJV5;7lc)
zy($wh<@y^q<{)D{K?WAKi*LQZQ9cT$x4a-zhG3fZ1qfRogtLwYnt4H8Q40a<&yRM?
z!>uE7J-i#vpk9+Olcaz-j6Gm_o*H1=uzncm<6;hI@1LJ)lcVTMYG-MA_%h7*?uN4q
zn(<YECVJRUpn=!_=%jq8K3}FFoV0+({smq+KV1ph?Bbp<(&mi3<9|-cJD??-25ojB
z4Nqsj<-bqJ2as<vDBr`(SDY?)9qW;1XtD0;=J}ME(@2}3!;d}CC~w2!!2LMj8){Oi
z0S$fe)n0iH+TQEn-aZMYgoB{BFE%+R^U-5r8k`UP8O{$o(M};S2g1m#{1`M?51Pz%
z7a}T9#>Ze%`vA1Mm%-yAofP?DiueV11;qzc`cU`y>jPG=pHpEz_WCQ%$2j#%X`y2^
zv()*Y1~Ht1_~C#7&9Z|oz99F_S6nGKU2%m1^tk|+TBl`K!e$JK0fYZ6EYRQo@jt|L
zJ}2pLoWnqit9S(~e8mfs7S5VrAO#;13SHA+Y^MCv*uO(VqNN8Fz`&pv!_D|dZ+){|
zzGH{{=QGdB!za!-OU+Yc2|3H!upu!3#(>*!y78fv+#LDvHJ8gx2QQIrSjFNVFDrN@
zPOoy5@yC(;b?lo7aCH0%f>ETPGXi0z2jiY07jefSn0)Rf=PWNWLTO0z`4e!Q1LiRq
z%wrDHJP)S$`4=5W988k~W^!RZFri>pO+My%26>)&1>OmfHWN(jFp8u$?I_}pzKVF1
z!^35p!GKpo^Y9`}#$J2@Ot1UJu0%ebQ8t3Q(lJ6Y^8ei_8kM<*Wyt>zWZ3a86Ky(+
z_jQ1C1Ony}2yzAv+mX%kwZ-<&dSZa4b@ZC~BMA0CYKP##PGWzf56eI^sadJgMga|h
zG}H-N`4b4#8jz2|&S#E;HX+2T_f6zIHtd&A9|dg^4$_q1T?_JkI!wNN(9MHzHuGQ)
zXbrSM^V%U4NkQpF<a_aD&?W>#(rOFhYd}+vz$wNf6x>(_0tG~zFcxr;UybzNZ5xyC
zwy;eIsOQsc27Xy6qXXA1XxrU@aW~Q#IHr7ON0{c^5PworQ{>S3jt1IPn0!F2fr8iF
zKOB_dp;@V{NtM^#n5&k8O8~K`sI)jT^NWDnh!tUg0y6o-)e2VlS}n|4xT}JJY`6#K
zprGmC@aVW?Wu)r_xSYa_28^rcuY(!d`CGS1OJ|2X(by=@wzNv$(2z_|O*!ympQD|s
z@FTX=Jj@v?U#K{zl-2#aUggHxs!;U<)0+%|JOis%^(7^8_11dXi@jY{xaZ2^l)J}k
zIb9QLwQRcOVSuaX#b5|CTyBQX<LJ*e^z*c5A%p@^7MRR@FosEZPbP2#zY=J!da0Gb
zJsDFTXv{RsiczeZi9kN2p>RHec$1HgEqq{V%V65r12|w?bqG_dMfci8h#y0F{dgw*
zv?5I&7}i{@igH1So)?+Vm<SR+MZXHvA=!ODjB7T`i&*X`-ZM~;qZ{%p*tFqRt&Rqe
z&b)V0*}v<F0f@`!=VaYC#d@&oCeTL|sVCWKZXgXAy2ERwThe9~Xp<T=h)$ZBLRvoP
zhO6qNS8B}`=5uJ1`TCJ>5brbHJfv}&u961LSRifE`327&V|)wJ@VErh6f4WcrY^kq
z3QVndrZzd<NdkIv_Ou~6VBrr!6W|m<5X(d&+$wFdoC){6lj_{~%f5Q~r3q<ioRNz!
z_o?s|kCq!$vfpe-EDW&EO<0PcZt_IBTHz}acI>-V!GNJ>m&aOC83no7x^aFA8`1j)
zho!u@KtEth0^&(*2Gj(EEbap<+O|XX)YZ$oXJ-HxpRD<@=gDPn6CDHW*CYsAY4B{w
zRpKdVyZAHxo#^#X^!f#cg$`yu#fNq1B`7mNL_h+WObSBY5d2Kxg$$)PM9W7;n2f6l
z=58D}WL8ZucNFr5OuV_8M7UCb>@e`$_Y}N>0|mN%lYjB+;N(kub^*p6?h>o97Rlp7
zh9PT8L5IR~v=EB!xQO5l6w;_2^@eEqNP}KDCU-DRoA?3TP>7EdRGS<*i6e*^I8o9@
zDl6=})qokcu;srXY4M=;oV+>lK~ov8u!<xbuPUCia8{FFu)^0lOIGXG@Z|_yrnZ%3
zMQV3DfpeNVyZdGDw%S;DHIqH;mD)7!0~7o>;L_Bbad{?<VGFS@))oU`7-n&F0JdRh
zpRVRay0#5l=hDC}D8Iyk%yBY9Mg%d2iCW13U+1Q6s^Sg9%)`ZL-h_T}`Ym3fa^hht
z*}Dk9c9XNEy;uMjmeoy&Ui0<`z0#tu)T<+CG?9CVnvhxSwVN{wDhYv1TZxT`0V{lM
z#9rILbsoq0C?}6k;#)W;<rQgCS(T>W#pwK+GbNW56~NTchrR5x*nHe06vEQ6!G0E+
zs+9&WbM93)uN1D$zm6D4@Q?XAVrE%IEAtM<BR?x$MtZuS4r;{l3?<kL1?M!_kLfVF
zF0&hbP%o<vHd8nZxB@VzN(vr4&yL!AX!WHJdyqO>F?ZrzCpcd~?4}H={lwm$6gb+E
zrc)y2)z}M#HuLxp;=%}G`Z-BtHh;5qk4u|u78e4{UTv6x%K(gXn_d&24@aRRnb$OO
zvtc1rdpM_BN(_aW%^hcjug%@R3DY_*bdeVu9hs4De0cy~z~|(h@6B<AFUO61q{<pT
zE)#;+uDVKj_E>{7b@oX|cQ4K;%m^%OMuK7ASqxYVEDr-*n3#o=o2;xXdDq3~%eNnX
zQmRV}Wct`q>BX@O)1~Fu6a#m>S=gYQne8xF9Q5QYoIkke!~8W+6-*44`v_no<c-0d
zd1)p@b0q>5hx`LP<7fpL!*6&{QhGY2cw`XH7*eF6cSzoN@POp!<wME8@&zkXopryG
zw9xcx&pS`<ed(0Uz#DE=<4NgnZIba4&}KoALz|>ey7V^q40kmR3gFa4*y|z;7#w<E
zC|v@127lh`BzC@yVkg|_uq0toprF4;vhn`(I2H-2OJqxRt<0=~i8vQjy$h_~>aOR#
zqGmlSV9Q<?3|Qf7UC@5+7Ros}7iVhuuuz_g4a80`*T{G=ljrWO)$+{o20ioSc?e+x
zL)+AAS>)XIt;K-Fz)CPM3(Y|~7}xjTaHBHv-{A2KSh+5MCM*-o{V>djCa`aEHZx1+
zAdt;v<E%XXcwU|{eG9C5bIgNdCgY|**37*RuB1*6vCR>|SvSOUDCU(FH-Z(fuGyf=
z%|e3%!HHTNbDe~yXLLxC$k2`rOY+#5_$J0B4`#RO&U}m>7E|P{mtQ0wxba5G!7&;%
zvra^2bUA&-c2JnS;ere0v$+28&yT<>9ehP*&Pa7zlZ-$J8v`BAl0G4TIkX9P<5^fJ
zpxK+^*VV`<-b2u3w0>Gn#S=YGxHhxi#1ntSoeKZ%7&RJ3(kAbz-6CC@9~K5uaRy@^
zG_pQ8vT2?0OFvxQpI2WapM1m3vbDTCuKRP@gjtLgdP+{TFbUkyiiaT+n!n959up1E
z%c&2@M*K>{AaT%ns?zy#Acf9jg|E<fv9YU&0p%Gm-;lVM6!fDA*UVLAvc0NQPM+<Q
zm(QGq+o@8xb<P94B|}_N@iwu=z`2Y8!{FwDf&I`M-YAFn?vtla9G9;gJ0%01Fda(A
z=Y)(FyoBbabg6)*dnqBXO=M)t6oj%F3T8M%PtsswL=6N@<7g5VxEcn@9m{&bA9G~~
zc<*EG5Y6PI_T0vtJvgDuX9k3!;P(-q$+VgTxX~uN5qfd&IZ@64pU?v6kM|I!#6KlT
z5Uf(bz^37s0cJLB+7B6a4*MHtWeEB7I1UKKV_<BhxKQ4E`2o3X_Z~U8Z9Dd}CT}Xi
z%V3gMqVmm`9+G`qw#d`Rj>%moPRYqLEub;rl$t(hTr!e-;aM;lR<by@1iy*&ETzq9
z&?XlS#78qlLz}#UKKV>K4FnL8mky1P;*ATWjpfEAO7{{=j<9K5@^RiTcnF(i!3+00
zt3(=#HVKk@o?KdVXcKg4XcL;PWY8rAEYfB=54=ZuGO`1pPtqojDC;I|!VLDdeY@qV
z-Mi$nU3;V`8}kHcIUYiYvvnXzUcm7&FQ00b>n=SY6{UsCKAvU)j#l_UVUTA={p-E=
z$OrDbNA~0u$dmu)(~^hwn?>do7Gbk569XKAB=PZy3Hju|eOr1!$G06gU*3A{bxOPZ
zro|&*MzO(SV7)P5$USmBNb;PR(qPkn>4BXxFfuMTAHG0-`d=y1(uad}^`xN4Fzj24
z0gHj<V?YHktY&jt{AD;B@4WhYdDCTwq^qx29&Kop=bF#TslI+0o}7|lYFpryl;<Hy
z+NczO+2Gk#Dd1ZD(1cBZnVsS<Elp-{or6F&XP8_S&OA&n8DIXmSA>F^_XFs?=Vy}>
zMIeND4!pz7g0$WjA?`U%EeLKzAU<%jkTGW-!<_3qgetD6s!&DY%KRu~nR{Fz$R^`C
z1y>4JKKwFxKL<~&s5tjG^?{ik_fts25A&kn5c(8owf5rx`3q`m<eF{uQdwLgr7*k8
z!Mh3M-%J{>1>NC3_<^S#W#zKHyh2`g;X&yi?2~7kTjVj&XJdD_w2n{81Q~zeLW6G{
zM+x*vG3XOi2oIG>N}H1&+META&KVly70(Vm@(Oz7vo0WzHq8P8phu%kRv<uwfg7#X
ze7y4*@vn#UoOGUuz-{1WAw4offIg9iv_#reVah{~O0O^t1b&ITBwSPQOT~RUuKf9s
zhjYUu;B`UZ;(^gR2LQLaI0Nm@uAFSyRb3_5fi`zkR7hcdp_Cww$AH93@M4ovFz@sZ
z49P=Jzaj&}V{*2uUp{chjZ$2&%=5W|x`$<~H26nge)-Z1a=f|@eE?k9u>Kg}SircY
zCjE=|{8;3*SLNc5eiAm#*E!>4!I)ltb*=EVeB9ZbE5$(ITM+xKW>&;@)>lIVRw^0k
zKDlqM2j32SENrkCuozf%3>bf8<1icIDqtPXP^-c30JJJ|Skdi=cHvZ4mvr>@$=J|<
zv=0u+Q7}Qr21j5b3}#~tdp^jY;+!MZNRTlD93Dvo@j+oGgMm$gpq9idKX$k$Q_Fjv
zr!@;kcLu*%2xGjTgX!2Dv>9`}N8Fsk#IrFe<2y3N3d_Cno<GContMj++=M^oiYR4{
z_+jRcS}9z4&X_U(OCr-s!IXj(KHSN;CgI8-?~}opCWC=ZA%lv1x-w6O3rs5Sd9;OI
z@jQcjvSL#J@5eho;>HM{!YmouENEx)vSoW-t{g1PmFoO_$;LjevZ5l{3BiMhgC?Wx
zKH!+B=E34)Zhx6Mlug=<f$ih55)9?}c~VhOAlqx|<SmB|$v7NwoQ42)wx?G{2K)6a
z$5;D@<QF)$WSq2#1wHLgA88YqBi&Ib!-cfTGa;2WaW(Ym(3C@~N}EVO3vJmfgkjR=
ztkNcFk~HdE2~%m*rBA&l9lCU`FiDU6F$7;pclhuAQCbA?DE*P1c%P)SMf&0obf`27
z`Xo*AdD^8>(xyw7N~1{U(53@VJ^KM3<7j$3OZr6NJjZStar{jvZMyV{{dR&QVKNJI
z<T?mC+Y9pHo;_a*3kq?_eW}zG7C|sdagPC^78bM#Edw<{@t{quJ1{d20sAM9JO|iQ
zYI1mJ|27r8h&6*w-p3lyOwE_9^HQw2BB$eVC~EqO1rtDzoY=lyQw*>-3P7s^HCth*
z0ZWZI2P=HV8KD+j6byi(Ip1*do1yK&G6VBd@Z!gZW(>=jOqW@-&1NxRF#rr0^9$}<
zU?5{k%~W}QfmA}%LgthV#R$xh`bI}(bbMT<a6b(OxNCS=ng#~tESTOV?9F+3ctoa<
zMm_U^hg%@%kn7Q@f>(FWP$m`d%@tXAICBP~aP+b&+bDEs4e&>=cy@vjAI)>{m1QtT
z=-}1>FTs%NU#D8UXVp2a@la?U&OFW(e4%Z?4H;wp7|f)_>!KfOPi+d!kPd*6-IALt
zwGbq>fRU|$z?FtgvpzT)%7O`KA=2bwKNB6vb1tMw6R#}O@AeIuTGL-n;hX!fVd5!t
zGVnPSw3!F9!i(#-%B5SkD}7QENZK669=Qq7<}7Hle{>AAIRM%ml4j86DbQx`$f)=s
zAZXuFs4@M?D}#CFJ^RwoCGYXyhifLT=ut<2!!?*bnU#r=Y}vuB4e~p*NkA%#@#_9&
zP*)1|q)j~#T<h*8RN5pIr``+clF_Uke$@75Wy&@P`Sqa9x_tZ!@<5~ck_lQ&0exoS
znxCB|1#r@nihQI=3P!re30HFr2mq?!#p_A~%SfdL7_GhM$TQN=-lO=eEiaP82lpv>
zBypOt#KI`M(oxt54t(>+bFG(v`LiM6Fff3H3TlCkKp)QvTH!06*tD>sVt}6(ngd{2
z4l7<xa-Gkk<_wpBAA`_=pP!X|%0k1nu@(as1M?U#jIJ_%;B2@OE-;N_U|c#@TWY|R
zB^MTg>EX%?6*#l_!5IWTZnON6`9MBu(|Vve>jMKkgndmT;}bFprkD2jelW(f*zYtA
zhIts=&mfMO7{Ij;6G;nTOyJ6&?(N}9JYkxvGB~W4=Vyc<#+l%~XGP8QVkRkGy^J;Q
zxthcuv}=JY7=6{8fJv>!eIXda0%)P~@ymlyl}3#eOe@o{;++8@DjR!Waxya@96*=?
zvs#j!BiURHM|so;P>V%vfe&!>3_@*&yMG34p9F5$3au{wn0e3ijcMMwcJ;QO3>0xh
zPkIczXZMvufT+yN1FDHQm>YpErbwHhr5R|29NGlEA|C~{UeM+s77~W>GqgDghbJ?j
zP15HmX%jR`+8ltUvK{?1j=WRUSmIuP0op_@lr~APtQ4LD!kzn!i-x7rrqU|u67BNR
zD1{UER|1+UA#H+A^P%m_2W_Uiw3&+4etHrnZSqIjq##uSfr|H}NosCLpDDQKb^sqV
zeJqykAl@iwalCSQhS3axK0!hg=e$|TUzRrq%f>Y68yuB;AALz)ICWOCGgEbu_SS1I
z!I3mP)`knU%PW;AyyeZg*fuyT`2~2e!D3(q7_h?E3Xo^BE*%4$_sEy<I<3oYONS9l
z4o>Sd4`HCGgju;*?!+5QnKq5ZfW?5zWVs9u*&One6tL#Vc#`AA!VAYISHsh|f{vdV
zmw6C6%3(UUkUesra8Y<*plCuzt;GZwT$-4vAg5O_%qWLUAJ6`y86=rNUUd#21B)L`
z{CL%1u6S_RbGHrNTDa}u#N`N(tPJn*a~V)`B_m2fiJBI+kHQkK8DI=E!2o80!KJeY
zPqA9EQyB+EiYMm}(mD0ybrx+L$KIL+H8k}w0PHm)1`MsaR0Y~`1R}*UaLo7A;yM}>
z=VRrhO_E}0b$2a-PFipy0b~OG!$kxyZBlUKLIZ!KPtv5JOMaj5;Pf-fR~j@LD7Wt&
z=q|km%6AJzT{ZBEpSI7vs@bkfpA?o<Pzt6^2uu{XGC-GE5V%OM4lYbV3(IxhIdSHm
zv^j_IHUXhkGqZd*yN(e9YE`bBPm&@0CQCtWkG$G(MpF8)k1rkL4sE*Qrpu+YC|~hw
z`hGdp;G*%tOW=^j6NqvfEC!Z?0V{kh2WvLZvN1q==?vHgjg4Vb?gUq>oJF~10}PRo
z%um-~r?mE+m2KraB?q3?Qt^RdFoKw2Xc!l5LiVO*`e-4Z@S?(EWfpv(BiAk}yd}Y6
zS&_d!OTk^#y78;-eDfnW(tR5hUX-@-we#c0J#tXygGpGwD2bh77bXgBmVpO3#R1A2
zeE^dK0A9R0c^ATCE^jdDnbx#P;Q^-p^T3RXx8?MMVaBwYPF-0SV;;vkL=5h0Q@0E-
zh?x}HvRnZOna#TZ927Ip0=lt5+|r^vfy~a0!CO$Yc^NXAktUz_%C>U;;T{+8;`1R)
z*Ex09M$D5G>W`f<n%BT)hepAkre9H8=W81iEDi+HS*&4g>o(s%-ufw4UHUL|sqany
zglUgr-}8=wTOPEQ`Op>-9Q)C<k5_ZAZwzctL9z9wQ}cOPc=pu6dFw(_`oPP;d#7(q
zy?G@qvA=kw<BM=X^MrWm(5gG$+%_$!TZlZ23ea$v_ulBR@aB@RCvsGLHLpr)K_3=f
zlVIXJE9J%ca{KEplS+6vWI18;dkcwjPaK)RzO}((V7VBu!q;*!XY(x!1CWcbS0Py@
zCugJ|9t!=?ex;{lw*n@$cuZ!TU?-*~<V5>185rxA?%^&e$t{)gymFXM<YIL%1FO(J
z6~=T08y_ArLy<xX1h*7u(LD2R$mE=h$z0J?C46vK`{&uI@JaDzW;U|DG3&)u_Goou
zA^dR8L}_a(Hj4A(6%8KSswO#VUKaW*#J(WB*aG{3cne>0YBEf<;?xgh7E-~ylU)cG
zNRvM7w5Ns6>@4<sIFeAv<ZP=#3J-2RAK(QCWLM@O31#r!!5dA^c#l<aKQ{1Vqek*v
z8cfgN6%eZyhMC|>dU(7MUh;x|pmp3-ss|=^qWI`(5UcGhKiYVRXFpJoNQu%9UR;^+
zKy8{%8eF|`11X2}!Nr$(d^q&9fU5979FxJ0J{}ycT!85c)4z;1+BOC5*2$ZEz8}1?
zZo);E82SP8QoP0k$AM}gBa8=c6-_^Q<GlCDNsjh!0p7g{JojXb2`^Gu-+9TcTbOPO
zJsuokhHWAa4E;E!c!Wn_coT#mj_DN4bEHp`2MNQ5sQrMk!12Jj->E+TI(PF|X93jd
z2RPzj;bB5ra+<yms`jGPgy4K1=ErAnB9^nX@55pm;e3VK<3AkP<aA>^q^No5g}dtH
z`pYkX-;Ye-k@H&kHU-x!(sP`^L@L6*J4Y~Jg|Bm@qZ6f>JXpE9HdS(RlcattCvvA|
z@tGQ(Np^f{3==Rs9C0GX**F~o?b6oY3X`8qnEYhHE<9ZY7G=Qkq1#@$%VB6keC;@C
zxAmTt&cP0RC@@?!O^DheiXWTeoD!)m*@8{?_=p8Qa;A;&!ZkA`Ct6RzR0^Kr$XPG?
ziZQ~0&kyF-vh9+anHL%!>ef5b1J7Me4#T+!)_kv1D9ldJmTeU~=Ocse_>nr@aYBa1
zhg^8`by<+qZEH<Yt(4}ME3+Q_apUvo#E6{fd~FdP7Qn&-+ezH+sMw`~G3yZ=2(P8L
zSv8tYKQKjz`nh$Zz+F>Z7aDJ<5&Pi``hj%f2;spcI?&lgV`DRtnO`LXy*Mmb%Uqnc
zrK4Mp9y_Dn<wDip$-(_3Gg5#J>Q^4z8=!r@qYOa@G`!Lz?o7`K8J-vdUO>ZGpvc$)
zSI%f|KPvR>Yw+}^f|3KTy0A{FO3FjljBOi1KQy@gK#XypiyyAa0x*&0*;9at@>5|N
z=k$ZKKf<Z^{NK?1F#kSq7jr*Mq90zvI7L6G3xWWIMK`3AZRI<l$<9?gD$Ri|OyHtH
z?{JT_^fc@E4v7#qF~>trMh*^i-C?pXx-!k_j#JtXD$p$^ODB)p)>_b8NnTml@h~zm
zjD9#B(|Ab3qQ!O{58?ZP<Gy>S%bk}NRewR<N^{Gkx}?^@8*1PUoTnzIC*?TC!!+j0
zX#K#v#2fJ!a-Ks!^bB{SA22WJoarrX;l0xjxq!EQ;S0|b(=@anM?VZlp6Adknwr)W
zZ$UqlhVO@Q^g~yC`hnF9-w&So$)%A}&_{K#=?6?Mo~|H0PvT6h6K$_Lb@#sX;KO^%
z@sJ&<ABNysAM<9!eo(w|JVft@ljsN1akTNkeyBx16i4WXVSHyAyUw7M9wc}h=iYPN
zr=|F0N99h?`oi%r2dx(u#nJ?axsO)LP;!r4vhzH-?FQ#N7f-<}MAdAR#lW&LV1=(`
zqt0er3I+_1l$n_<Z+Uw@CQMAZoHxz9YpzQHx+pC?DuH{=%gUE4c3lOt!&Wfs9S|l4
zl}VsRY<vo?gk7$TE8i5v_~GXV0IV<GEw0Gm_<)@0KCN1_aEvuSoMh-J@YR*pg9``&
z3ZVH>Y8z;U2e^^&A27EHEUOv<jtU3Jx3FpyG?Qg)a#ZWac7&@N^O5N<$tjI2d;tU9
zV45hXs&*xW5QJ8tT&Jyt*+o(o=s>=40za16hOGi-Q*R@RUyM_emakav^wbOpnmfdY
z2<8tJ2FK73J?ICd4cAsvH?AI22oBc|#7FBui{g)aA;J`?(cG_|nqCUc&_a8E){*sK
znSF4h{<CL~OFmqHbK`fYKvZ!b$gbK-6~2@;L!1wq-^U&v1snq8e`rsO+u**h8};V`
z1(=H*zJ#|e(AAl4mPvAO`k^2Td!&*ooXnbP{*R^sV;$TN%<uESYyeFDqh@%Ujt6MM
z@Gn#tSVBKgD^Ocfk9GvpFCe21+7JEc2P~L`UW{<ku_~+&1#04Zaqx@>&`2!fp)9vN
zqVUBsx`sQYW3U~L1b~ky<Dm!(FQwt?78nl=Xf~McZ~;xD@STB0qDX=vvui)ZI4@C{
ztC1}L9=RVlKSu8dneT^1^PJNUqnO{$^qh&QAIby$5SreI_pTxI!%#;I{ooh&LsC*%
z2n?fcz&!=c#@+_pMeYX*eOc%S3OL~cX^|EdvCd1RBMK!HT1o%Gftsuqn9EQ29oOq2
zhamG2Rk(7F)A10hAJD$o`(YZ^A(h(JP~%>|kJ=9%(uux^HXgX>S&Rj+l8EC0{m_Gc
z2)PL9Vg_wwKV<u`aL9fLVKtyL1B9@dzB(D|sg?ZwC7PLwN$T9o1(k>wMGqF(fP_S>
z-Z@{VQuIqV&D%qa)s-U03STS5pv}Kz3?!4AUFDDtCUPfMj=35=G&Ts&RD&`AA&SDv
z1XdUMk>jLJreyvr7`k3GWuP#^4-U3Thpf2~FqDxGnZk|4DCX)NVHtCf1<CcJ%6i}v
z=rZ=smv%uaJRl9y((H(JV>?29G?|Nan@O61^R?*1oplPpBeUsLWx+MjR+JqnkSSn0
zHH1d3*3I-om?VKBh+D!7^n=TQ1QOuJ)Qt`eA_bO36B@3lhU^DsHt=!P6;_Q1hU(Nh
z1-5*7ndw+P_JOft#>Ij7phvI_Y;I>@T}OuIaLfzLZ*g`h`;T!HzA|%QDu~VEb2Bh4
zOU4_js}R^K9zn!l+DaOT6trB>hcaoNgdl$n4otd&#&`fu2sv~Mob)txUC<9s^n$;p
zZn{Dq5t=g|NWWqG0rk<&K&67)FkdLr;C-y)VLE9V;~^v`HxCkb95ZZdwDHAE;a#~q
zeMg*--om%R=~FWv7E~m}18F?gdCBRA5J220G8b&)bPCM3fR}J{i6)P=A7a28`$4rb
zk!S>U<6=te{Sa<Exc%VHOCkG#gpXwGtNDI#@`b~mejm`*Smq_pVJsqiAdSGp7-P{f
zDP5eJb#wYBQoWpaIv!%`2h2ASz7K{TVjmBvW!QPisT&31G-%o*&0nS;QaLY$Z7yEm
z`!?rK#|7rPt_f?%{tb`#sBd(>bnC$J5|1#6#W?9~6~Pe*_{hWqq=gYD46rx42l}Ae
zK8>v`;rBr<w>X^jXnTCQ$g}wp0|Q_BTbNcf&q!HCid=U?PGAlrX>(%do+xU$Xi}qI
zrZ|h@nS;w=IwCVf+ymq6Nr*P%Vx<iq*GP8ktP@SFaEU2I`#4c^z;;FWG6l*ZbIAQ}
zkpj)|_~DNZkEVhS!yFDC;rP`vTeuYS@rl?E?4va7`ReNQ%Ttf}rN2ky{r@{(&buHB
zbOdJG!{hnkmU;>kbhM8$yPf@znUOA?9e#Q6XE@(#68pCZ%S#hrf^ib6GU_xtY-ygx
zK1rC}ZBLW)QU27F^NyKPz?fuaq)J=slsx>vn9|mv!#IOydpgpQ&KLFr>peC$D-S<3
zsvbwTdSKEaPBa0*j)!@=oxfX;@!(g@VJu^n!i#Y_G+*cWyUjB%agQYS=tdB%mpm_F
z&ZH0!E^z+kJZ$@6A%@nXA2>&+U@OD$(2P8A->?ky&B>eZ$d>DG%3Cx?FRb1AK5@KJ
zI6QW?85TNypxG3;a`zsXt#k3qhD5*s4`l!5&weJOxE|b6FE?Iv5Z_j(-{Mif=u6@8
zD8<6C7+41kaB?H-X#@Zj#OOUC=u_$l8{sQR0SN1w;S+e?usjaXaDjD7Pve28v4v=L
z<4Pn~N@EGp>P8s8G^`%RSi5NOh;Qz*i#0@R>st2%yD`m2?Hz=7IJHQEFcdCOqs8A+
zLU~1+y!~B;QM2%1&(D3TTZO6=INTsklOa$UO$*H&BaoafK$w0YWzylstRD_HCb6gh
z;SBmj7bZU}T$c#nPF6PF{g8q25Nn7=BkMXI&<Xq(E-Ym{5K8oZ;H(teOcHIZZmN07
z_CtUK&!zF;2*2USUjQk~xbb72Y;Kx_HA1o!7jw_LXXR}f@HpNW_SV+vZy6wLmQ}_;
zCJqY!@EdPkP>Sid1(C~qu)^0e5ofb)91M5|j3XFDVv!cNi+ProV=)YG44JBUeIlYU
zRo-%AxsP{SqcO{|)XAiYcip1(1IwG8rI-U@M7?U6nuNY;pW=`ET@9ItX}s(*iU=E6
zJ~dI)s!1~HfV6WE0Ets-a3NJ`UI&C1>SB<l9|)7<L7xHBu?(7r$?~Fwc=v;;TeNax
zd2h!<ELaMiCfaxiohx*#(+?ElqtjDp2n%Bqn&vR3_%B`|{{0Zoy2ZDx@f`c{!oL>|
z=V#96{rxlY?Qagj`e0VBygF0fa9chsYP>0zcTc)D!ON$ZID1`R46J7VSmA4Z`}UkJ
z-81h*WLVE>B&}lOjga8&hgB?Y1A=xK$5`1%O&29`@N3ftp^@XHUhq-I#&XkN-mAF}
z4aXbntpV@(@efgsH;cVrfC2WIvP|=Q(}MT*!C=5kYbMTKEe19Y1~{*BypN5}sNgjX
z6Y%^(Ze_q6;J#Z)YZlDyD*<Hlt_lWLvwy7cwJKd^fyRP?$c$$!5SEt4lo!mXMvZ4N
zL5!Bk<E=q3T)y+B^S(Fn-Z(ETZ{FZEvE&Vgwdfh`(c_`;VIe#Nb5S}QkvJGYpK-qy
z_o2<sV!OK0d?B83^z0Qxrg5pep^aGSFkE_8#=P@ZEEujgUGO`TKRDjNGw=EAO=IG{
zaVF1FuFP+?_jvdGEd_>6YcXIkurV-T=8X>Q`<=$|9Aw5TsvI+a&IRWE#%PVLWg=m~
z3SWuT8|PSExQaA5I3qsntI5ragAP9e{+#oZ$ePj%lf%R^IVVuMq-7v8YbH}CUZYhn
z;N8DHp9g?6IB>~~nfxZ27Gsp$IB5r%H6(Z9o%Dft&E))<uP^uLP&!%|zW|;mUo5w*
zKUeOuvK=i7oigaz%ceQ80I_M-6a(xU(%?9J&3ASA;T_T0pT$a$`gnfczyLg2A`KmA
z#VgFyp+mohzPT;T88(h-q>1;YXPlR|b=-h~acJ2gHvXmQqsh;D&yO$0&ySn=_=R=x
zwsl(DPK;0(oquEEz3}GW#&*Z@Ddh5KfLS!24p10pgT;Wwz~;mN=cO6US*K4->DbT9
zPmw&ASMknSo3r({RjY{sD}1dcb}j5h7$CF4Noxq+iSGX4ki2wsO0KvjUEcgl1<J^*
z#)QT)DQIM6r6}JwJ~1n!!>ovN#!_w$xHR0;100<jFl1yTNe<k7^NA~7!$a7og$Mq~
zfaMp!WiYoixPeX&Ccuo1jXF#*+rjfi3-Vy10O5&;+71mmFvt`Zm6*EBp)O|cjRTAf
zY<>aUNTVE<M*-CcM|t_lk`CsN9`H<^OdVpmvR>49al`PgJ?Yw@j*e+L+vr#45-iV#
z1j7LOgu;3OXrj9l=aV&$D7^;Pk`6f1LAO(IUmvfa^oGR|LL3>HmB|SQb{5VE<C%S=
zmtoMa5e9Q{czQ;L<4&8x$tdzLkfyV;k|Y~rjrSl!g~^4F@o@+;_))kdJkoa#(veoj
zQJ#UpcrMZ~jj0RMctZ)s6$L)R9l&^FA$;a|N`rvvh3Cx|?Vjau%#~NBN=<E=!f!k?
zC4D^*c-?Ut4TgPhF<>#U@i4%BUT2%8!3T&`)xhCKiNiJr&ppd&8ND#;goey|-q~`1
z*gUI-0qq|^=Vyisckv8X_=+bsEv%R^K!K#;v>&|DoV2&jC^MzP4(6gb(|CZPtKa5$
zEF|N0^4O#bRb}O=La%cSt!Jmywwpt&vN~0Y;MItMtK27!Pl5^LL<zwxGfB2=<)N$d
zb)_K2woo8yh9ENm0WUKvS?ad<lsThtcJlZX1h5(8PZm>`?yhN#OQXq{3y*0ltJ75Y
zWBDEJeie?$<dONy$Lbpe#gnKLk2E2^_%rjk_nG-kFnHxAQZl6aj6c*oqR2pCJYg|-
z@0}R?cdao%SIXI-rKU4Dn+i0b{pRT}ei<mxWWs4+0R$A&cPptUK&rr(3n87f$k5d}
zt+dU13Lr*Xed@%d3T0^+UbUe2tZWb$!UVK*$6p1FqOKH%3W`#t3b0r|Z3EJ<-lWG~
z2r;c^;j-IZ7~uF~8Ztg7UY$~nUoiwL#xpcEaI8-2LWpTE)7RDG_ygdJaTJbNXU;3t
zsBcC_vh?*%%Lo@c*gyncnU=pr?*5%5fwW9xv}rW)q_&Z93=816u$?#duf^||(P;nx
zEVxNTK~#Xnz(&M?&IuUH%}tzZFlV3<G&$69k9o^+R<!(<>35hDhnb9)56b3TB@7sk
z!UWH$KAuy%6~0!f(=6D~7%=k;8MF&8NteeS8kgpVX)r~8FiFtFtU{pG9<@#sy2yxS
zqikw^xT0PF4Hg4e?g#oYqax6AyJ0Lj0rOC3Cp`{w#6L3t*%t2qps=J&G2T!kR#gKt
zg;P^bIyW&*8Y`<(RM0Z{wXiUMylF~GQ>CXH8-Ae$F!6z_d&5;Z)`tu*kJcg+YZygS
z1T}d4aHOI=G^H?s^;a<Xqvm9IM;Gf1G)W|*Y5L9NvDekdfWdhd1g~HJK!LQkO=({^
z4F7!p@tOVA(KaoQJTShf-<MNULTCAXy)#l$hT{w%^c5DSNL!0vHD1{mM+_swSU7Qo
z8ET7-;Kg@bWXOcJOSQ~+b|}h$>+GK(jWRY#xCk<d1&g*860(zqFw)bL@h(Nqyf!Z|
zF+OZ?3t`>MDpIxnhKcg#;d=^x90!gd#W}$Fz<S3G^HOl+0)=YSJmW_D!7Y#N;TY%n
z*;CMv!7Zg~^1Nl*dy4^!fsKa&E-p=BZpgq~#<LSOxZ{4gt)bvWP0ESpW@+o|)pNcM
z?b&P3`C2YQS0Udtn5Yx&Z8*bkRtmGSrM9Fbt^$}9zE+{rEXc?hFwD?aXrdmvZyZd@
z9GI&qXo+yf)CwoHP$hGPiY7xn-CPBCR@C!g4oGGy9joCCbS0~+TVSC0j?AVvP)MW6
z7lj&c7#MK00fj{=y1Gu`hKy;jHi>!i3R0z@a7Hx(UKpY7$^0^qK_pBvpv{e7Ox>W&
zG42(YXhKyDHFYq#0s<)@4xl~lt<!;(d1j+lps+9%nh5Oi^0Y(M>1ZwmFEY#3wLUew
z<V-UGfsY!AF_>c#UpA}{25Rek!e6A&UOpxF{BR5l01Ih1Ql3cfD1?k+#h0{HN&yT4
zNG`?(1uWz2qq_@-d_(Xc4RPUtfi%g$u}pd!9>U?%cs4Z6cO7kh)pnIbKq{|H)3n@A
z(GCGJkkBRaVk|x|o{I#r2G)U#EJel1FmZMkRlIq1Tw#%=s@|vLofV*ly9=7=9<+&d
zCk(c^wk}Q0B^?3F3&m|K($*jig;U~z<EtAQw=T>VcFZiqmwmDr*a#Tl*ykL;1>0tr
z9C94fbh&nmV+Fu>D+xyU`tOGxlt293$3=D>l!1TyPZhq*yOqGVd6$m?ga3)i2|4ij
z&k81U`P)0*CLev<JHR7xi%5JJq4+>qemiZ>a~J~^l|HGeO@VMB*!#uRrNvBAJkZ05
zlmbjYR`JJSuE$UalR{%o#no>zOEgy^gGVNiftsda>`h}Z0u^Bemhf>)p>A+sR)6XR
zjjuT|hnSoh#npIf(xL^E!i;m;nP+3)8kt50^PctDf)7G<4G!Ohrh$8YXkJwThIZ?A
zFza~FJY)`OUP)&Gd{4$y+v0#z4ITxrox9W3tdSZA3Z`VJx9{{p7<Cy<H@&^AEe6<E
z?8o^Z&mePtMvF;PR|-rd(Rc)wNv#k~_b8Y!aLjO_fq{z^6wHifl;*G|p01f0a@<9Z
z;5u<XSbyKFn(3MfFJfq1BIiN~7azRzs=y=sF|a7uQPXS6U>2ucB0F}bt58Wg=YBGp
z32%WgMw4SMPH^mP-Ol!=>S78tkQ_VSdhmV=7Bwnijzmo##~;UG9pIFfr7T$Fh)`Yo
z%3{D`Ab~Jo#&}Efq_m%f@P(;u?|vL=?u#$WoSzO&8U(MZvI<?eNgx#1s$g!<7{UH(
zXeLwQ>BY*$Y<wxnc9+FK3>Y9|#L10J+_oKQY9>eFr>POTeFQV{#Q-YiBrKEO6?=Ld
z?Gc$R3Lp&h630DM42&m}#V|55Bixh4z?FWkd>H{tBk_l3jJx;xWal0TC|D(Dn1J&D
zKbT9y05Xo|du$gqX!&rOK~ttk!MtTYGTCHsDY$u8|H&Zc<|PR=0}N9rv#r(HZ^q{W
zti<z75+7tRGJ*`u&o&K$Y4+BS(j0{|GP-2&xzDT}+6e|Srv>OM=3S6S-`YQGfdS&3
z!od8GW^nUA)`40VGj_Oo$9wh}uc3ai)SKl}>q*TpgAqV@-;1$CZ4hD8p$!EOhW<X#
z7ZxNKIG$*-OIr2P4z;xV&P$gq+o1Jwzd|$vRwp(N7|lP0Jzor^WzNEZKE&{c<A#Ct
z<z6wz+o4kj3acd;4*}CjluKG?TNtQ~^MNPgc+bssWqf5^6u`GOu(*T^i*z>&N_Q<S
zAW8`+-HoJxEZv}VcM1~H4btH*-BQAWbV)Y?@A}X8-n-|+e3;+v#GW}b^UQf3INnHt
zC`3#AV8#j9yrCoHEhlO$V8%^(`HgqnVD6_?biF?ZkON3a3&^q-CClzYIy)++krT~(
z(97+OTyq)8(1=~#O>PRxe<E{!Y`sCAXB9vP@OigJvp8nd)~yF41=N_D9NvSDO;vmU
zFmX!?)9M#l7OsXUp%;;P7lX{<qDjXF^Q=rm*RhZ{2I$uGYcFN`LZH~HNY7Nyo%ZNV
z=avN(g-DQr@Gw>Uo7|D-DyHG10CJli%T>I6XKicljNU7awAI~jKo2gSAjY+Al4H<C
z#`$L-qB&Z=?{<16wpJU&)c$UtM<8*pi{T*|f~+Fmy=_IQ>CSwF@3Qd>ybZlUalm=C
z=`)R^d|)D^dJ`d%OVt#R#-x?3B@?*x^P$jEY`{d6*sA1w^~!8TgwN<RxuWKGQG9G+
z0{jN0#VyOX2|Kd6w?jdpBybmM4f9vOxev{8rrTVkC;^Wo{NyNfgtTkg*TNo433v<b
z=vsHMRx0O-G9pIkN$r$Z^bcu;M;V6ALzE5xEXZ~kzvu5Cf7eG1Z<mYDJjwhC+;}u$
z2w(HnK^ir@eI|>3pZSSLJshxtc^j&1VvkCBAldOtNJ&CK8p(BdfuO`Uot!j1k1yOz
z{3i#9{C4(_%79@4PLt)$JY)fNmywV*zopsdo26Aw3hm@yTSy1jpS7n%daE{mu{`~v
z+4Z^Ao+*wuyI>+i6O#IL$14MaHeKV;M+{GeEFJ2FLYvi3^Lmjkk7A;#_?iL+PE<^;
zIS`l`(h2ASJuGVjFT6t8><}dzxNy!~+YbZM<OU6wKzIclbDgsnSp@>@%S}>03aA_L
zb7w1f{8hC{tZV)*?<wy2?!wY*Aw`Zf0g<2r3gAug8yhpTrM=KcM6|_uNOE3BWgc3b
z5&k83B5(v|B4Nv@v><r)%9>%(xCn!K*9Jpy@{YWKxJ~5#Gf<ctQQ{>QvKi4+BpjEL
zobzNr>~-*?cqJFJ$%)~&d#ei0i)l~@URBY3h+N<Z`?O0xW-Pyxk@w#dcibF#o~VoE
zo4}kMYf|(5G}V2{pKJ~K{iY5{dOy7!aY1pW44NMX@|CZ<J;E&sygOn##qxV*?F8fW
zXvN}r0@<$&T38F@A^a->XgI@?WU7r8ZOsuXzlPZt;~2gG11O<kJ~qY8l#=L0@t|y+
z5S7?a%Z)laIHD23_o>dnD{?Os7?6SCB#G2q;p_IHj@pbl7HB9W6DHb*NIh~l^=%8R
zE@@!mSAsV*e0ProC&~eHzFQc;yiezE&k<-(1CkUf2tuD-xLDst)teN+*eK1taDi}T
z9=*rd!RCFhE*Hgdg5{!~>@)NQ1@Qi|q?vY$voulW<wit-7qp4SPPPT(>*4LMK>~P%
zaU_E`MUS_}C!VL9cfWeb;2oxm*+S;%4ztwR8QGlJ>Q@t(4f|aWpPq@(MxD|Gt>*~f
znn2V~hw6!SROo3(uGYk9nI<suQ!$=y;r6U}cc5tAU1lb0rU9qG;Oj;)HPjKgYmk?q
zFQ|e#FBEm#(E{xw6Z413D4Gy4QDxU)3R3=KP7<T~Gb5`P*NjaZ-v&2h18;?43QznO
z!DhQX5=O{6y8a9NE*CT!FpqOW5sFC{^CU^!b80_!IBj0eY9;+LWBwK~f_N-QVj(?%
zhP4|*)>bSG!A$~9$NcUtGI7ObUW1`=(WIxHoH)PujRfrMrpF&r=%~=HLRY;)nV4Q$
zr52e^2TUx!URo3{nSfrXt(tU=Klk(dI_;p6jGvW>=<R74`?T5C-D!)xW(C$7uE5^)
z)`UEb4N9FrbD^8#jiK64-tI+m1B*61O~ZhKg#O!jag;nju@;6Aiv0e<FK7sJ#^Ecz
z<IS(>68>57E6<%Jclsnbflgk?DTxl8#aAufx!l!QQ5YP@*25v`F-1MMV``~pBD=>u
zd|1-_cw`c3sw&TF{NLjrY(}SK9Xk9?Yn;;|Us?Q~>oM$9PCB;$c?K-sWPk0wNnMhf
zK3(D<<|ZO%BreJ#j7&h`pI3f@LGusK=ajV2>Eo1EcUyTmDT7d3;M*9YVBIuY^`mZG
zMUxIVoH{J#x_M9~tcs{7K8FJ6>}K$5|4pDS;oBb+bEK8<DTA^?`?u{yyheiRMltd6
zup$a(K$WuGDZAKXUMyKE6&kQ#5tSpY(NOL1rvK*eARJb(uhqOEPlJUKlFBJYx!0tP
z`$Ha{E&-RVn7k(My>i}6Om%$+WYUNT1F)|NytoVZuhMx$iOS@0Av!`gz!XfIp7gmJ
zx_b#$&FJ?Z@JXxbPQuM~p^s;bq9SS*%~pL%4l_2`Z_6i8tCJ<t!OA$H&@_NgMe{cp
z8{qMrTaUC{N!LBc6%4x{{?Wy+&4gK73GHvEbI(I)xH{4y#HZBtvr`Yd3bEww$>&tX
zD)PHt<~w0~wwQF^P*yZQWyf<d>|&yE8E<84xcV}#nyGFS&seNxMn?s2w?u;8?*I7f
z>|Mi(R8^ae@J|te*WB`-XU1pVX_|K_+i4plGie)drCpT24aNfu{P@7<$&s14kH@4~
z_pGv-pGJ6w3O!tz@iNxAige^EP4zU`xIkLAD3X0g;70)fAIJwYkl30xb0d`o#=WO)
zXE|9cXWTc<j}ycO#`eUTj>1@i``c|qzhOv~1u^W&qQ`>hrlw@jRqENYj!pEubl5-J
zk|H(ZsHOc5B={ZPg|-^ZWCxKAnfT&_d-u-)aUC^z5QUoPe9>;=YNm-rAH(v6s^6CR
zb1WvC)9cvaW5vgaU@Xi#e}Wzt^4q<hn#?+unKG<%mNAWVQy~&ZQlZ-rn@48wNV*;e
z6h%;L7fN|ye(_MpmD!>2b8qX0#gG*3?YU>I@X*=jT2*nP@P}J^K|Kyc8bgL1W2;??
zD6J@xt^Nr_g?flRTWgmm7>AdXO7-@QtMac1TTc;D1bZl#*!IemT>umQx123Meo4(K
z<=;a7<wOWP1nHjKFLg3=p8KoC;6_hGV`*`_9*T{^3;~K5^N@G+dFr)yek0ho=P_)T
z<yf~g@4}KzV_fTf)AjG<&czcR>99|MiOY7XKGcfl<D?Uz8~_SAJ`a$Ap;IV*FDu`h
za@2i2lj=_lmR#G~GnjvFVy<U&N`$AiHH{{FkENg2>op^?P2QawZ|iPmuF)|u9v+%U
z0(=PKIc39UkG*M}E;-7^UY?e=t$R{hd{oFx(`mF##rRG)qXw>#e>~7dNHBCX6K!QY
z5-mbZ#xt<^wUp@~*pwpeB14Cq=Zv!Qt&f@)uXl3Kms2=D_%^o(I$}&AVuTaUz#}B>
zYDLYTv%q9m*Pz^1KyS8<r0~GMdyUO^KJ$kyHWICQ+YDeEpAS&=)Z^_yducn9RK<Ob
zMd8*~(^07F0m3&Qv+(bva8lJ*rWLzkFqny63;WG%FcWV6aWg%-gwE8ZoSf|5$7w-Y
zXY?v_`WV4$0f(B-nfwb+g_lu0lo`I0VjYMf-Pi7SgJl2U8t*YC1fEo{&IC)oWb7o~
zLcNWPFii*PQviq8oA}t`T@%y!QNj@~TGk?hA}I*MC<Nk$DU5tJ#S@pIr@NL=6+g!|
z;qJZ(Eq0pWEF1_DdP<2)>LNE1fP?gjVRujrwmR`zrb;Vn@9s$wuCQfC<-rsgc&iwI
z`o#P;OW7_O<KR(UbP-0_15{OKyI=g<)WV&KvK%MKkH=fcj0%rSrH`$jaP+-S!xc12
zM~J^oo7JaXuEV1SL<yTm9fOedo7stuE>zjns4XktyELQu%Jcxv((I1lvhm0bX%E+J
zPbQLC-}Sv|PSmHtu#j#v&o4P35sjgdc%{1cw1@=?BmNkAPPWLvK14vO3ts~s3E6>R
zNqr6ciB(B`QTdC*-i=eZ_hD~0C>7GY|6-@D`uE)?LRv%*b^B6&bwiDzl7E7rBm;42
zb*P{7T(|ACUv9PwJ2hV-1-dVdL@tnj&x<Iq&}BqE<)ZQF^`<uP%%CfCIf--2Fz(B7
z+3Ph6Z3q9KdzGn~RUN>ME^~XU6w)t6AIn~sgi;UzLHGO&Fq+%x+*P&&-GQ<9w^s2j
z^2+pbklG&Y7xi=f(NTdflqVG&Q!8#4%mUmj{NCxGETmX1*dRt0R+m!#COZ>gfzoj7
z)AQJ16K(f_w+be@vJCcmmqmOzd7g$9af%}mcsQQ|wQO2ZdK;L#3Mx8KC6qh^`t(9(
zbObs-y@=8zM}#*&DkWd%De&so7u}2uoA;Yb%7MXQQU~lI4UbiBn!)4cHx5Nb3ynIc
zwQO$$8fT31<^x13hB181A5duaI!NdBybgUje94H#bu^IA?rPTGe!{$&MlM_HdN_DY
z;e=hs^?GNEZ&afhr7*apPinNtBh9e8!>aIWV~o2AX@mw50og=>yeJC7YZPOmOj@2P
zi%~hCG_*l+QEX{PQT((9(7Db5?8hU&WQGiOBu=`jx%4;!opdoE4jL%r2!$QJ=|O{V
z+Et#ZpRp)UC>*Vd=15&1fAqTgf|#N*$}R9#9Jzh-wIQehW7f{hW22fZXXo2{m=X5d
zs}r+cBr7IxxX@#{UGDwEQo*ig?AEry2l)>#_|e2bpUd{1!T|QRLEe15GVd8T+tcGl
z+C2{)DwOu3Pm$iHu(kF}U|7pZ_9bd<>{di7^_Jn}BQrgaWdl^yh^>_m8TCb3E0@FO
zlSet-(9AL-@dsh@6i+K$Co1I_b?2ZpP?Y*PzcWk_<y$IQN@PR)QyI0gg~h>1%Gk!l
zJ;N{4&^t}5Y_^!G(I$t(w&w9xq2(_`u-o|YgkZQG8JFF&D{kFm-8=1Lkcv-h{J}f?
zTekO3C1?4Q3a`li<gk?2+jA=ehNc&%C;Cq3Gm(X-9oAXGDn}B_2#ndxSkJcZHh%36
z)JUeh4%5RJnrR?aEn=l+x9?0Sn<1&6ge}uyiK9sy?HL|z8Gn!>NGz;GE@D*`JxzsX
zYbWR-9tRPfkKj?;ton7(9$WwkHCpV`vvM{J%5Ap<rji&)=C*HSoFU!XtWhapV~{H0
z+}jw{dJ)A$thCUk37hUC@<b7ZO(Y%o6J5{G>5zUZ$FUSn{VBN<iV2g2OH#nA?f{aG
zlpxN`4=TLX=EZ7$@xqntdL9qXnAYcogDE#|hWVEV-cUFBBB=92Nd~o*rFmG4<YlF;
zxV<SAHGuwUWx0`Cy4u$=h6?(=c?{DL0*l@3Pr>z7euhPDSARm**S{Gx?l<e!`Bgvq
z%bV<b0!S;ceOl-1@pXT3W50mU)v!ckxE1SwE+G-|=g8(+?K|U)qqf(mB-j}YfKs(+
zL+)ZjS3Re>E;;P1zxvNr<?De#B@M{21RY0GPtUYGyC$>%0gMd%(T6rBaf*9araPn8
z-MD5|!Q(Jg^OpwW08%f(l~iCcNFS4wc((j7T5S>BWRi1v_clN2O(EwhXU|5{aV8x=
z0jh_0s*a++`rXXOaSB+WyJ0xb`h)sU)lShg;~m5&*MA>A>!Z!G5La^S&uK_*ME&?b
zO~)HV-m%(OgL8f9Poq_q@he~Sy5VwTr~{CmQmk{!C2IYu-YR^{ewOt^Z%fekPYDZQ
z`c6ZrCk4qJo9q;#s+)}*I`H6c58|%?eExLEhj;eB|Kbw=wizM-e6hOBRS&LE9ZnY6
z+O(Wrw;43MzgW&}Ua(-ONSoA}<F6XQ&%bfnc|nyBT-RaK3%Edpxx>3Kg$V9X0aB^2
z4Y<FSB~o#<VMA^IKrve3_j`*k_1nHnV}r=iIoQQ@4`BKo88lW_ECZUcYJ+!D6w}lY
zm5=*Ef8nhEnh83vvV%*}Z-b`g{qJbq_g5K<j}B+nyO&rdyc!=-HdhU%`gw6*ko3MI
z2WTfb=m>+zHRYtBExz0DjN_Ld)|QjEVkN82c@I}#i=wzDfJjpKSJN(R?Tza1etY7l
z?wXtqsCOMFgM(IU^=9ku<yIAXEF32Ph(CX05Go3(1P2aP4W|fqh#FrWSEfEv(W8tS
zd$#u+7dIcL?xylNBi9E-CDWQ0OZWpv-Au2t{wl6UsXykrC+ES?xodRu{MmZK;4I2j
z>wml*0y+~flmAe|b`NVJ;QY^Y3vmEHv&F+C*?PYXNN~V_P>^4ug}wa?a**<M@fT~L
zZ;+oZ-u)!5G0xPFM#gv^6U^%NTmJQm&Wvz=iG+>WWo>$vFOd>-3PI-oU<&_@>3=N?
zKptRE6z>wlm{lPZmar|)@d!()NA13AZqAO(`WH7kV1W+WNzbC2ps{vH%XCkWIxdnq
zZD#TmrC6<bJ2uuQ^HFjiy|*ybWHl9IsHovT?uWV)8IT`k5F~iSz@YtN`Zr%JSCnf7
zuubatCnsmw#lL<P(zdo=nW;a!6xAEh$}P0CgtxQ2Jtgr-(hEQVc1*BP_DCY<K9VYD
z3Wv78S^odBuCU$!?IW+%n%6C4Iq^gZU}x>9$jF*vHg<i?QJR>BtR?3w<S>ck=zT!3
zT$--wE2I3WX_3k^{gGL#q8!&|2dgL;>zXS$P2<jA_Q*dilN7M2FC{9<3PwsXEBZ;|
zBRy4pI+$B_@H}yTI2Jhn)YN2Z5pCgHTzVQE9gXt_;o8opqM}030g;b*W$AC&{<-%|
zAL?u_XnfrDIW*pxe0%q3XnVUngZaINYX6U_klu`nxc?3T-W_n==-S=TKEl0xW0i|*
zq<a*Rm6O9vk*<Vud8hVXI~>K?8zlMh<A^?mVOiY8VARbc&{`=$cd8_M3NQ0>QJ?tn
z^7s<xviQYU>|xm|xrhA^BQh$T-wSF`?~z!foKYcN0qIp?;a2P74}A2?*IRzJ4(S@`
zQLZ$jg7tr4fq$Dxfq9pq)<#pd;wbd4uf*q$?&eF&1oxS_%<S(&Kc@}@U&G21v`=%3
zS|UH2f3FUyH;CGFjP@rg#@Y$4m6|H`ePFfA1|ef*kGv{&q7JTal3#(97M_VLR`+Os
z)(EVat>ryBy$$<vd{$rIpfWVuvB(XU65%j69}jAoR%IB$wj1K=v#S69+y)i5R;ajE
zlAgjE8dL{7I)89`_<E2ppNpnv5X^V*s~|7)W#?O^_)R;{H@lF+20k@ni*YrkqT*0y
zO=od6yvLa~y$hxRcQS3U*Tw6VsYb+s0OG)L_aS+#2EyYR1xUX1PsF>~&c;H)E@{P9
zIxHUW5IeUjjtUsAxK&sw`Nrt-hI+o8m1*VfV+IdXT!l=7{gZ$D$=}kYtE>Mg3VI#M
z>$#uLdn|V<FQdGfuzr(Sw|*oj>dd&EMrG$iJs2sBt?id&+idY?7RwLPI>^3Wdw2Ui
zHS4pi1yp5m)$noz6ni%*#mBhpy)8pQOP9FZdRmcyp|pIa-L~KuS_Lzm>``I^UER5!
z>}wXBoaV-q&ak5tH$B6Cb(~I`hQ+Zo=uc)3h~?Wku$!Y!g#R`Ie1I02dY;#x_$Sv*
z{<JA4Uo9wTGZL4)r`FG%hQBv073->eb9N>a^uxFJBmChdR4xvT60#S3W)@oYqw8yE
zOC|Y{>bIqAKhLZDC!PnTO5H&Ts<zPEwa>4nHa<tz71C~nvJ}sKax@elCUyKzvnys@
zbLR4sdK39G+MUy7DV)M>4EkKqv@iHVW&@cYKME<>yj^R!Z?DUcO|{J?=>S3Y-KR{u
z*h8|#L>Xcw1)d>{k6&4(^qV|n?a${z4zEpIdNNt<zs1zx)&9pjuzR{R9u>pGlm<ps
z<0tvHrkM|grLfP!eCuWBcim`4u-)b8ng5*Y_%&_$RH%09mEZ)RS7xLSz_uzuHZ7AI
zS2Z}EyT`oP#+vVs^M}(Oao@2uD|E)cT_en!Z^ZrYpNtcU&Sa5(Sa)5Nu{XXFb#|uw
zN~J<=YzKFqz$f-v#hT|x`95w(*u<h57&c}hw>>ZswqYv0G{975M{WoOu6cUKq2yof
zI#R;8GrfY%x|C1K?}_nEp{`c4yL(eEz!$LaTsLF!VB-vK(Urnpfo0{3&H2$#Akl^0
ze<qYb9C(#Ylbe=Yr=oeXF!0pYJ}sefQ}=qCHKMSMk+b?EC1}DYTzKs=RTd+(ya3O7
z{m~z!*AKyj9oLIGiZSnJK@8C(--Di--_P4LpGDX(HOHu`4yxt&>QyfIOAnqtmNt)R
z>b=e?^R^Z=E{imNEFr^V0<rcIIs3KpUBa8ccP7faCxIc6#^2q*?<|+;{r&fyTFZAC
z#KeU!RaI-(H@|cNO0y4o7{@#QedMSn#|{p3p}yk-IiavT{>gbsPQ2o~$>|mCEuASp
z*cDvVP)@GyWOc%&WhbS+dbDQPLqeICN+=@;Ei@#*rskouy$mnrt5`4hyoGQsb4Xkq
zm|l83$fps5@$+Ym>I%IlBtM@v@MrJv5Q|4S_`8cuss7v<{~-3~Sj~U#LxiR&_3I}x
zc{6WoRN3jyvDl&tWC`h+*CV6*_KU_`4|4XGs#;s!a9+WTA^XVIt+q>vG1pOVl(k$A
zI(Zz#{l+p%+&cWGozwBa&Swo*F0IONUP^JO$BPB4|7>mDzzmvSK3rm|+W*O^FYM4w
zghxk4cVrbHq{k#~cun~`BX72K6WfAMA1=Usu%B}09i*YDPY>ueeaguhm!Tw?E>bG}
zjCG}I5+z+C>FW31H(u-QuTQj3LvDIZ#V->W<M-;T(73vKAM;2T29G{(ZW}e>OSX8Y
zk8XdudsbT$Ep$BzJz^#vEYF%w9<ywRG}erIPBWQVv7|zsS60p`!|nGB#D3P6x?T?h
zN?%^0<=HRvZl4A?yrvMEeb*xw2H(gE7m(z?{LSF+3A-F;5j{Z$oSlPSSu4J1j?nyw
z=n0oA`BNg!@?}l=LCo7xdXt+i{zl=snQ+?Nn=}uUUc=8ud&1Hl+&n4zt#4fYlh=_J
zcYhvDP7BBv2@AZ?bZ^jFRrt_Ro$hZ$*dyM@M<HB|bIW7Hc0?|s4nDVJwo#Wf&bQVk
z4kDr}Vj7c%cXKVIzKn7h7sR~v!UC>?kn`uSy))}`B$>pKQjqW%nv|PeN?WiIpZ8le
zM{fl^N-7n@dUo?tx2@eapmB?=#(C6JOdwYHMuqV0dhlBC`woc^#rZH5tZsA`ah&_^
z)U-GCW5BSDc-ChYJGFfLN6uJ~eJxL)n<<(3<5Wlfx&&OdqP4Xniay`9pKthR+3kh=
zeR72H&$>J49fcH%lY5L`(>drje%3nBeG{KIw0m%X-`yBF`GW*5;XHA7dhkwzY|53n
z^IkvMio0XPX=;A$ffi?wz4fNBdCqez;%@0q$#?O7{=KI3jHJ;c#Qyz{mJ}rbt&vy0
zz9f{FjfDki*&dbpPO`dDb~C@Xu~Dbu;!4y0-F!{^&m7g8fxU$AuQ>Q%66|V+`zw(D
z&t+Dp2PS@6$Id#fx5%yT-tTcxFzvV2*R$$Pun|}d)VW~b1}}MXZe6W<WWj6SS^YyI
z)=G*pnY%u%)e?1FINj+Ay1{P@FsoF5R5%u0X<W;x=IPM@BDgjYinga^=9#9BM=PY<
z^;}U#R@VU;eCxF_t`DGS2;cBX9$30eVco86Hr&Sm|KxtD27z|<vkGY`0e~NcIvWOP
z>3q4_sydQ#!iT!9Hs@D<O?(X*AS{ct{a~uGJv}fCgV`8{F7k~9V?nD;5UvtAiBD6)
zcR%5SEp_giF6L?%#sDa}!R#jfHPi2dd@Zh)cC_Eb!n@>}&Mpd_z*z*0;B&lEPmz<{
zynRnme%cNmR(fM&)D&3vTD?Cg&<rl}^}IIOcMPgL=CgKm!Ehu+#7ez~9g(Y1#%!lT
zX0Fs{a7y+DJo8jfj;iF+kDa$9EMa#M!eD>-Wy>3BaOZPSGgAoEnQt;>WCqXM$HXbO
z?T@U~hqx%B4#F@Qks+<+^<XLX1ltk6biM{`-*>y+4L?Lvq#V%ToZ({!zABA(cX{*+
zPZqHlCYRYY^dM-jNmEh=zjVvAJfwKmI-G(D=}m=Yg~hRh8t->vPlolK1{Zff@%0Z9
zbHC6DvqVTZSg%KON+q;*y0OE_ex=b5FSviLP?@>g-O`B88+Qzj(nh=#$G_$#BOBV2
zx=T;$eVgge>`-V1y}XgU-bAsX1@WR$Jn<B%#236`a9^6O4e&d<<U`3T_0JCdy|o_<
zzcFX}Us8$sRT_pJr|lKMjLA~;<b&=QH`X4Jj4}JzZTOz7?+Vu1SPhj_dezw2ynGfB
zz(^2_B9^5JR#L_WJd4V+zy<^`*oyOqq$e`8jPr*4ChUc5^YU}dRgIn*^+^2QTIlT$
z9t8p(P4TCLhPR?>J?~vHsTi&vImVt5I{vh|W45ru9*N3VvR^7sObj%W3WC$W{oQ6k
zF63^6J=D?|cSXU&qMsj3B&bSM$(ht=-Fj}UK+$a6SswIlpZimzi(pM7KF+p}W^~Un
z5tgw-ZrBR{<E;6KC&CmXh+1Gb4nT~X7g}!`hW8*+;+E&(x^*N++r!XwH_!k)ZeC*p
zUo1HKvgw9krOdw45$^B3u3JIZH!qlzcb%~M;0EfLJVE35s88V>xm%kinp+>u%}`ZF
z$MDRHcUD+qI?{xBP_CRd(=7yRWs7C~7Y8iPMOD{qO3c&2n;f5MTgaVRDEaoIJ2WL+
z2mgh@`T3f!Gys6K6ok5kd|5N_q7`|S;m8t!uE`E7F}V|T7+SF6eg76`K+YHNGq}~F
zW*HC6`@0)br0VD4W<3Z%7+dT2c7;K8T=w2O^Z&->t{%z3YEs=22Y@<KKS>V1;;~8`
zJvFWWL;%mU2Ore(vDyRf`;yoT=8sLP?0H=!9lUMqPa2~;s<EK;Ibp^<h0@bl;vYnz
zB6IQDH$>bnFzgmcJ_pr|BqBBrtMSgpTeUJd)-<*et4U?zkO^973#LBw$N?*9vqH8M
zU?0nvQm`<Mcm5Cp%1TE<C!qz{WqP4U5}|1}97%S{wa$-*Im-{vJcU13J8F_D=Q8Mb
zHoeX<XwbW$li-l@yUk^!Nvp6xoA8v0`8*aEQ^!|P$;GK$LDpJ$mmNImH-)i|D3=ae
z$p|!y*Y+6dDk>hXDz)R%PL65!pT-O*0t;Kn6E7%p0NBT`j%|Gv$5=35a7%J~&-z5y
z!DBu@k${G9Ax}T72N?W0$><MVm1HCdLtk^PD3+Im#=O%Oy^N=S(HEdpSft?RdyA{v
zz8%SDy{X(bO^J`QnnzQ7_>9)>$epD7&5v1O40}Y@1}FQLN~Pa0eXnso5ng`XR@W~K
z;3HqyGfgL_{^4e?<P`9Qj&s?&<Q_2+4@kWqKJ&|0Q_Grg#XYWeCN!y?i6?S&zbh)-
zQ<62@&9W-mJY$S0i)&96i#|I1ai%8hV5r0EXiivVF{sgRTXf1{wsmJI49ArmFU&{h
zV*6xzL5wA*nHib&Mq%n$Q7|1Xf>dGn7l)nvm$erKrDmP+;i2p3#Up}@meER&eAfeG
zc`neYxJxS{H%$8=9*`1xa3TlzVA)_<^k`)doKf`a8yBsClCmxym?vk^8%JB6j2oPW
zu9+0hRtDkLiVIf&1#xUTW?xX>7MC_3))1%!65%Of`9E<5flB~JW-y)M56M|rLu%yu
zsx1voJR>vHFxmv8pC<toy+#_uzf51chCvI{^I5^K2w@-V0-$;KLaN=9u9%7*5ir^a
zo)~&CNS!c2QB|GpQ0<(s62h$~OPeJP(Ni;M$s0R~bG)^7$ad=EuEFC~e?gFC=3SD$
zF7by4I?NeVbuOyUyAx-A_KUo$TEcmQJuV3Aos8uh88}pcLAv^S@#3dzo6+f+EWc{B
z6PQVoJ|PXtBYjF39xm<nJyAZIY}-6Q>4CCSvnx9(wIY*xFLkjq)<;qHgr^3ciIw7X
z0qsn$H)+xQ@uU}UwL&hOJ}0&q^ycDF>h~G=_<TS;YFMb^PPyn%K@@=l24X+f*R!C#
z7xFtt7yZQP_8{s0a@2S`Zs_jLhDjzpg7c$Mk5^5hWeR3To$j-0jPDM91BKYhd&8?=
z_;A4ac|68^Pw_C<!@*JzzjB56+x4ECpije}d$v>hi3^3)Difonu0yA_-e&v`8aQ()
zGu?9V=;yG1B0yNh{(hM6&-)#|opgTfKP)V(+}x>pn1+!xJ?=zrXI@qlBD~w!`aJ3z
zDKj1`+)p`#I|`h&G7^NN`QkpzsjmI>G|-UH!X!qQmwuv-NgT*Qz(a(+(CNhpUxBAv
z9O17@BpY<cf=aUpHgNg2JV`5KT-+xrd14w{D1D-ZR=wJJ1JM9{O%{Y{-?v=0Vjpr;
zjfK9Ih^OAXFJ+%?+|V<YOg;B%jD}ijhF5LXT4|0>RCW#mp1j~{DR<p*n+USsRTA@^
z-(GESE#=PUGE&<Ze8M9aON?3km|3Gr{riG>aHYXc!G*!@P3KvD(59SpX}7k0_7u}U
zyZf(R|FfvX#VBYE^L!JL_mbp)RQzLb{r;E&SA+gB)3X2PtK<M|n<GKsi)ltS4Ai!k
zhyC9|`kpDTTl?O%ko4LAuIeI}mJY7smHtdB^LOU{M~f$P=y)9`xl9e}|ECI$hJl(n
xbixMg|J76gW84F(AIT5YrJ?_)iU&w=MJHBXw5!vyAccndD9Ninuaq?j`hV(KfcO9a

diff --git a/hadoop-tools/pom.xml b/hadoop-tools/pom.xml
index 6cb112b67b7..c4ee6f7375f 100644
--- a/hadoop-tools/pom.xml
+++ b/hadoop-tools/pom.xml
@@ -33,7 +33,6 @@
     <module>hadoop-streaming</module>
     <module>hadoop-distcp</module>
     <module>hadoop-federation-balance</module>
-    <module>hadoop-dynamometer</module>
     <module>hadoop-rumen</module>
     <module>hadoop-gridmix</module>
     <module>hadoop-tools-dist</module>
