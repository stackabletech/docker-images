Entirely remove hadoop-sls

From: Lars Francke <git@lars-francke.de>

This needs to be removed before hadoop-rumen as hadoop-sls has a dependency
on hadoop-rumen
---
 .../src/main/resources/assemblies/hadoop-sls.xml   |   47 
 .../src/main/resources/assemblies/hadoop-tools.xml |   11 
 hadoop-project/pom.xml                             |    5 
 hadoop-project/src/site/site.xml                   |    1 
 hadoop-tools/hadoop-sls/README                     |   32 
 .../hadoop-sls/dev-support/findbugs-exclude.xml    |   26 
 hadoop-tools/hadoop-sls/pom.xml                    |  210 
 .../hadoop-sls/src/main/assemblies/sls.xml         |   57 
 hadoop-tools/hadoop-sls/src/main/bin/rumen2sls.sh  |  107 
 hadoop-tools/hadoop-sls/src/main/bin/slsrun.sh     |  146 
 .../src/main/data/2jobs2min-rumen-jh.json          |10132 -------------------
 .../src/main/html/css/bootstrap-responsive.min.css |   19 
 .../hadoop-sls/src/main/html/css/bootstrap.min.css |   37 
 .../src/main/html/js/thirdparty/bootstrap.min.js   |    6 
 .../src/main/html/js/thirdparty/d3.v3.js           | 8823 ----------------
 .../src/main/html/js/thirdparty/jquery.js          |10872 --------------------
 .../src/main/html/showSimulationTrace.html         |  376 -
 .../src/main/html/simulate.html.template           |  306 -
 .../src/main/html/simulate.info.html.template      |   50 
 .../hadoop-sls/src/main/html/track.html.template   |  193 
 .../org/apache/hadoop/yarn/sls/AMDefinition.java   |  105 
 .../hadoop/yarn/sls/AMDefinitionFactory.java       |  133 
 .../apache/hadoop/yarn/sls/AMDefinitionRumen.java  |  167 
 .../apache/hadoop/yarn/sls/AMDefinitionSLS.java    |  185 
 .../apache/hadoop/yarn/sls/AMDefinitionSynth.java  |  146 
 .../java/org/apache/hadoop/yarn/sls/AMRunner.java  |  299 -
 .../org/apache/hadoop/yarn/sls/JobDefinition.java  |   87 
 .../java/org/apache/hadoop/yarn/sls/NMRunner.java  |  238 
 .../java/org/apache/hadoop/yarn/sls/RMRunner.java  |  137 
 .../hadoop/yarn/sls/ReservationClientUtil.java     |   76 
 .../hadoop/yarn/sls/RumenToSLSConverter.java       |  235 
 .../java/org/apache/hadoop/yarn/sls/SLSRunner.java |  519 -
 .../hadoop/yarn/sls/TaskContainerDefinition.java   |  247 
 .../hadoop/yarn/sls/appmaster/AMSimulator.java     |  524 -
 .../hadoop/yarn/sls/appmaster/DAGAMSimulator.java  |  285 -
 .../hadoop/yarn/sls/appmaster/MRAMSimulator.java   |  415 -
 .../yarn/sls/appmaster/StreamAMSimulator.java      |  269 
 .../hadoop/yarn/sls/appmaster/package-info.java    |   21 
 .../hadoop/yarn/sls/conf/SLSConfiguration.java     |  134 
 .../hadoop/yarn/sls/nodemanager/NMSimulator.java   |  318 -
 .../hadoop/yarn/sls/nodemanager/NodeInfo.java      |  271 
 .../yarn/sls/resourcemanager/MockAMLauncher.java   |  117 
 .../sls/scheduler/CapacitySchedulerMetrics.java    |   31 
 .../yarn/sls/scheduler/ContainerSimulator.java     |  147 
 .../yarn/sls/scheduler/FairSchedulerMetrics.java   |  213 
 .../yarn/sls/scheduler/FifoSchedulerMetrics.java   |   63 
 .../scheduler/NodeUpdateSchedulerEventWrapper.java |   34 
 .../hadoop/yarn/sls/scheduler/RMNodeWrapper.java   |  245 
 .../yarn/sls/scheduler/SLSCapacityScheduler.java   |  162 
 .../yarn/sls/scheduler/SLSFairScheduler.java       |  123 
 .../yarn/sls/scheduler/SLSSchedulerCommons.java    |  343 -
 .../yarn/sls/scheduler/SchedulerMetrics.java       |  736 -
 .../yarn/sls/scheduler/SchedulerWrapper.java       |   56 
 .../hadoop/yarn/sls/scheduler/TaskRunner.java      |  188 
 .../apache/hadoop/yarn/sls/scheduler/Tracker.java  |   46 
 .../apache/hadoop/yarn/sls/synthetic/SynthJob.java |  377 -
 .../yarn/sls/synthetic/SynthTraceJobProducer.java  |  665 -
 .../hadoop/yarn/sls/synthetic/SynthUtils.java      |  101 
 .../hadoop/yarn/sls/synthetic/package-info.java    |   22 
 .../hadoop/yarn/sls/utils/NodeUsageRanges.java     |   68 
 .../org/apache/hadoop/yarn/sls/utils/SLSUtils.java |  253 
 .../apache/hadoop/yarn/sls/utils/package-info.java |   21 
 .../org/apache/hadoop/yarn/sls/web/SLSWebApp.java  |  651 -
 .../src/main/sample-conf/capacity-scheduler.xml    |   60 
 .../src/main/sample-conf/fair-scheduler.xml        |   50 
 .../src/main/sample-conf/log4j.properties          |   19 
 .../hadoop-sls/src/main/sample-conf/sls-runner.xml |   81 
 .../hadoop-sls/src/main/sample-conf/yarn-site.xml  |   80 
 .../src/site/markdown/SchedulerLoadSimulator.md    |  524 -
 .../hadoop-sls/src/site/resources/css/site.css     |   30 
 .../src/site/resources/images/sls_JVM.png          |  Bin
 .../src/site/resources/images/sls_arch.png         |  Bin
 .../site/resources/images/sls_cluster_memory.png   |  Bin
 .../site/resources/images/sls_cluster_vcores.png   |  Bin
 .../images/sls_queue_allocated_memory.png          |  Bin
 .../images/sls_queue_allocated_vcores.png          |  Bin
 .../images/sls_running_apps_containers.png         |  Bin
 .../images/sls_scheduler_operation_timecost.png    |  Bin
 .../src/site/resources/images/sls_track_job.png    |  Bin
 .../src/site/resources/images/sls_track_queue.png  |  Bin
 .../apache/hadoop/yarn/sls/BaseSLSRunnerTest.java  |  153 
 .../apache/hadoop/yarn/sls/TestDagAMSimulator.java |   92 
 .../yarn/sls/TestReservationSystemInvariants.java  |   77 
 .../hadoop/yarn/sls/TestSLSDagAMSimulator.java     |   76 
 .../hadoop/yarn/sls/TestSLSGenericSynth.java       |   76 
 .../org/apache/hadoop/yarn/sls/TestSLSRunner.java  |  128 
 .../hadoop/yarn/sls/TestSLSStreamAMSynth.java      |   76 
 .../hadoop/yarn/sls/TestSynthJobGeneration.java    |  266 
 .../hadoop/yarn/sls/appmaster/TestAMSimulator.java |  386 -
 .../yarn/sls/nodemanager/TestNMSimulator.java      |  234 
 .../hadoop/yarn/sls/scheduler/TestTaskRunner.java  |  247 
 .../apache/hadoop/yarn/sls/utils/TestSLSUtils.java |  144 
 .../apache/hadoop/yarn/sls/web/TestSLSWebApp.java  |  122 
 .../src/test/resources/capacity-scheduler.xml      |   70 
 .../src/test/resources/exit-invariants.txt         |    8 
 .../src/test/resources/fair-scheduler.xml          |   52 
 .../hadoop-sls/src/test/resources/inputsls.json    |   63 
 .../hadoop-sls/src/test/resources/log4j.properties |   19 
 .../src/test/resources/nodes-with-resources.json   |   23 
 .../hadoop-sls/src/test/resources/nodes.json       |   84 
 .../src/test/resources/ongoing-invariants.txt      |   54 
 .../src/test/resources/simulate.html.template      |  278 -
 .../src/test/resources/simulate.info.html.template |   50 
 .../hadoop-sls/src/test/resources/sls-runner.xml   |   89 
 .../hadoop-sls/src/test/resources/sls_dag.json     |   62 
 .../hadoop-sls/src/test/resources/syn.json         |   55 
 .../hadoop-sls/src/test/resources/syn_generic.json |   56 
 .../hadoop-sls/src/test/resources/syn_stream.json  |   47 
 .../src/test/resources/track.html.template         |  193 
 .../hadoop-sls/src/test/resources/yarn-site.xml    |   80 
 hadoop-tools/hadoop-tools-dist/pom.xml             |    5 
 hadoop-tools/pom.xml                               |    1 
 112 files changed, 45139 deletions(-)
 delete mode 100644 hadoop-assemblies/src/main/resources/assemblies/hadoop-sls.xml
 delete mode 100644 hadoop-tools/hadoop-sls/README
 delete mode 100644 hadoop-tools/hadoop-sls/dev-support/findbugs-exclude.xml
 delete mode 100644 hadoop-tools/hadoop-sls/pom.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/assemblies/sls.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/bin/rumen2sls.sh
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/bin/slsrun.sh
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/data/2jobs2min-rumen-jh.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/css/bootstrap-responsive.min.css
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/css/bootstrap.min.css
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/bootstrap.min.js
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/d3.v3.js
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/jquery.js
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/showSimulationTrace.html
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/simulate.html.template
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/simulate.info.html.template
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/html/track.html.template
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinition.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionFactory.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionRumen.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSLS.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSynth.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMRunner.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/JobDefinition.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/NMRunner.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RMRunner.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/ReservationClientUtil.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/TaskContainerDefinition.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/DAGAMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/MRAMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/package-info.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/conf/SLSConfiguration.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NodeInfo.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/CapacitySchedulerMetrics.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/ContainerSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FifoSchedulerMetrics.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/NodeUpdateSchedulerEventWrapper.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/RMNodeWrapper.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSFairScheduler.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSSchedulerCommons.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerWrapper.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/TaskRunner.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/Tracker.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthJob.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthTraceJobProducer.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthUtils.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/package-info.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/NodeUsageRanges.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/package-info.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/sample-conf/capacity-scheduler.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/sample-conf/fair-scheduler.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/sample-conf/log4j.properties
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/sample-conf/sls-runner.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/main/sample-conf/yarn-site.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/markdown/SchedulerLoadSimulator.md
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/css/site.css
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_JVM.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_arch.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_cluster_memory.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_cluster_vcores.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_queue_allocated_memory.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_queue_allocated_vcores.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_running_apps_containers.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_scheduler_operation_timecost.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_track_job.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/site/resources/images/sls_track_queue.png
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/BaseSLSRunnerTest.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestDagAMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestReservationSystemInvariants.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSDagAMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSGenericSynth.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSRunner.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSStreamAMSynth.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSynthJobGeneration.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/appmaster/TestAMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/nodemanager/TestNMSimulator.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/scheduler/TestTaskRunner.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/utils/TestSLSUtils.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/web/TestSLSWebApp.java
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/capacity-scheduler.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/exit-invariants.txt
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/fair-scheduler.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/inputsls.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/log4j.properties
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/nodes-with-resources.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/nodes.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/ongoing-invariants.txt
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/simulate.html.template
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/simulate.info.html.template
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/sls-runner.xml
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/sls_dag.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/syn.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/syn_generic.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/syn_stream.json
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/track.html.template
 delete mode 100644 hadoop-tools/hadoop-sls/src/test/resources/yarn-site.xml

diff --git a/hadoop-assemblies/src/main/resources/assemblies/hadoop-sls.xml b/hadoop-assemblies/src/main/resources/assemblies/hadoop-sls.xml
deleted file mode 100644
index 95b263ab9dc..00000000000
--- a/hadoop-assemblies/src/main/resources/assemblies/hadoop-sls.xml
+++ /dev/null
@@ -1,47 +0,0 @@
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one
-  or more contributor license agreements.  See the NOTICE file
-  distributed with this work for additional information
-  regarding copyright ownership.  The ASF licenses this file
-  to you under the Apache License, Version 2.0 (the
-  "License"); you may not use this file except in compliance
-  with the License.  You may obtain a copy of the License at
-  
-       http://www.apache.org/licenses/LICENSE-2.0
-  
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
-  <id>hadoop-sls</id>
-  <formats>
-    <format>dir</format>
-  </formats>
-  <includeBaseDirectory>false</includeBaseDirectory>
-
-  <fileSets>
-    <fileSet>
-      <directory>${basedir}/src/main/bin</directory>
-      <outputDirectory>sls/bin</outputDirectory>
-      <fileMode>0755</fileMode>
-    </fileSet>
-    <fileSet>
-      <directory>${basedir}/src/main/html</directory>
-      <outputDirectory>sls/html</outputDirectory>
-    </fileSet>
-    <fileSet>
-      <directory>${basedir}/src/main/sample-conf</directory>
-      <outputDirectory>sls/sample-conf</outputDirectory>
-    </fileSet>
-    <fileSet>
-      <directory>${basedir}/src/main/data</directory>
-      <outputDirectory>sls/sample-data</outputDirectory>
-    </fileSet>
-  </fileSets>
-
-</assembly>
diff --git a/hadoop-assemblies/src/main/resources/assemblies/hadoop-tools.xml b/hadoop-assemblies/src/main/resources/assemblies/hadoop-tools.xml
index 013f47479ef..8270d72e496 100644
--- a/hadoop-assemblies/src/main/resources/assemblies/hadoop-tools.xml
+++ b/hadoop-assemblies/src/main/resources/assemblies/hadoop-tools.xml
@@ -83,17 +83,6 @@
       <outputDirectory>/libexec/shellprofile.d</outputDirectory>
       <fileMode>0755</fileMode>
     </fileSet>
-    <fileSet>
-      <directory>../hadoop-sls/target</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/sources</outputDirectory>
-      <includes>
-        <include>*-sources.jar</include>
-      </includes>
-    </fileSet>
-    <fileSet>
-      <directory>../hadoop-sls/target/hadoop-sls-${project.version}/sls</directory>
-      <outputDirectory>/share/hadoop/${hadoop.component}/sls</outputDirectory>
-    </fileSet>
     <fileSet>
       <directory>../hadoop-aws/src/main/bin</directory>
       <outputDirectory>/bin</outputDirectory>
diff --git a/hadoop-project/pom.xml b/hadoop-project/pom.xml
index 1776a9499bd..87f23a3ddbc 100644
--- a/hadoop-project/pom.xml
+++ b/hadoop-project/pom.xml
@@ -1511,11 +1511,6 @@
         <artifactId>metrics-core</artifactId>
         <version>${metrics.version}</version>
       </dependency>
-      <dependency>
-        <groupId>org.apache.hadoop</groupId>
-        <artifactId>hadoop-sls</artifactId>
-        <version>${hadoop.version}</version>
-      </dependency>
       <dependency>
         <groupId>org.apache.hadoop</groupId>
         <artifactId>hadoop-cloud-storage</artifactId>
diff --git a/hadoop-project/src/site/site.xml b/hadoop-project/src/site/site.xml
index 55ae67136f2..65a03b815b9 100644
--- a/hadoop-project/src/site/site.xml
+++ b/hadoop-project/src/site/site.xml
@@ -194,7 +194,6 @@
       <item name="DistCp" href="hadoop-distcp/DistCp.html"/>
       <item name="HDFS Federation Balance" href="hadoop-federation-balance/HDFSFederationBalance.html"/>
       <item name="Rumen" href="hadoop-rumen/Rumen.html"/>
-      <item name="Scheduler Load Simulator" href="hadoop-sls/SchedulerLoadSimulator.html"/>
       <item name="Hadoop Benchmarking" href="hadoop-project-dist/hadoop-common/Benchmarking.html"/>
     </menu>
 
diff --git a/hadoop-tools/hadoop-sls/README b/hadoop-tools/hadoop-sls/README
deleted file mode 100644
index b76079e27b3..00000000000
--- a/hadoop-tools/hadoop-sls/README
+++ /dev/null
@@ -1,32 +0,0 @@
-Yarn Scheduler Load Simulator (SLS)
-
-SLS is a stress and performance harness for the Yarn Resource Manager Scheduler
-that exercises the scheduler implementation simulating the cluster size and the
-applications load without having to have a cluster nor applications.
-
-SLS runs a regular RM without RPC endpoints and uses a NodeManager and
-Application Manager simulators to send and receive events simulating cluster
-and application load behavior.
-
-==== Quick Start ====
-
-Let $HADOOP_ROOT represent the Hadoop install directory. If you build Hadoop
-yourself, $HADOOP_ROOT is hadoop-dist/target/hadoop-$VERSION. The simulator 
-is located at $HADOOP_ROOT/share/hadoop/tools/sls. The folder sls contains 
-four directories: bin (running scripts), html (web portal to view progress),
-sample-conf (some example configurations), and sample-data (an example rumen
-trace).
-
-STEP 1: Copy all configuration files (under sample-conf) to $HADOOP_ROOT/etc/hadoop.
-STEP 2: Go to the $HADOOP_ROOT/share/hadoop/tools/sls directory, and run the simulator 
-using the sample rumen trace (under sample-data).
-
-bin/slsrun.sh --input-rumen=sample-data/2jobs2min-rumen-jh.json --output-dir=sample-output
-
-The simulator will start to run, and you can track the running progress 
-using its web portal (http://$HOST:10001/simulate, where $HOST is the place 
-where you run the simulator.). All collected scheduler metrics are stored 
-under the output-dir during running. This trace takes about 3 mins to finish.
-
-For more detailed setup, you can check out the document 
-(http://issues.apache.org/jira/secure/attachment/12604817/YARN-1021.pdf) 
diff --git a/hadoop-tools/hadoop-sls/dev-support/findbugs-exclude.xml b/hadoop-tools/hadoop-sls/dev-support/findbugs-exclude.xml
deleted file mode 100644
index 9f63ff252b3..00000000000
--- a/hadoop-tools/hadoop-sls/dev-support/findbugs-exclude.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-   contributor license agreements.  See the NOTICE file distributed with
-   this work for additional information regarding copyright ownership.
-   The ASF licenses this file to You under the Apache License, Version 2.0
-   (the "License"); you may not use this file except in compliance with
-   the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<FindBugsFilter>
-
- <!-- Ignore comparedTo, equals warnings -->
-  <Match>
-    <Class name="org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator" />
-    <Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS" />
-  </Match>
-
-</FindBugsFilter>
diff --git a/hadoop-tools/hadoop-sls/pom.xml b/hadoop-tools/hadoop-sls/pom.xml
deleted file mode 100644
index 8c779e975a7..00000000000
--- a/hadoop-tools/hadoop-sls/pom.xml
+++ /dev/null
@@ -1,210 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <parent>
-    <groupId>org.apache.hadoop</groupId>
-    <artifactId>hadoop-project</artifactId>
-    <version>3.4.0</version>
-    <relativePath>../../hadoop-project</relativePath>
-  </parent>
-  <artifactId>hadoop-sls</artifactId>
-  <version>3.4.0</version>
-  <description>Apache Hadoop Scheduler Load Simulator</description>
-  <name>Apache Hadoop Scheduler Load Simulator</name>
-  <packaging>jar</packaging>
-
-  <dependencies>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-client</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-minicluster</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-rumen</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>io.dropwizard.metrics</groupId>
-      <artifactId>metrics-core</artifactId>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.eclipse.jetty</groupId>
-      <artifactId>jetty-server</artifactId>
-      <scope>provided</scope>
-      <exclusions>
-        <exclusion>
-          <groupId>org.eclipse.jetty</groupId>
-          <artifactId>javax.servlet-api</artifactId>
-        </exclusion>
-      </exclusions>
-    </dependency>
-    <dependency>
-      <groupId>org.eclipse.jetty</groupId>
-      <artifactId>jetty-util</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.fasterxml.jackson.core</groupId>
-      <artifactId>jackson-databind</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>org.mockito</groupId>
-      <artifactId>mockito-core</artifactId>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <resources>
-      <resource>
-      <directory>src/main/</directory>
-      <includes>
-        <include>html/simulate.html.template</include>
-        <include>html/simulate.info.html.template</include>
-        <include>html/track.html.template</include>
-        <include>html/css/bootstrap-responsive.min.css</include>
-        <include>html/css/bootstrap.min.css</include>
-        <include>html/js/thirdparty/bootstrap.min.js</include>
-        <include>html/js/thirdparty/d3.v3.js</include>
-        <include>html/js/thirdparty/d3-LICENSE</include>
-        <include>html/js/thirdparty/jquery.js</include>
-      </includes>
-      </resource>
-    </resources>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-source-plugin</artifactId>
-        <configuration>
-          <attach>true</attach>
-        </configuration>
-        <executions>
-          <execution>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-      <plugin>
-        <groupId>com.github.spotbugs</groupId>
-        <artifactId>spotbugs-maven-plugin</artifactId>
-        <configuration>
-          <xmlOutput>true</xmlOutput>
-          <excludeFilterFile>${basedir}/dev-support/findbugs-exclude.xml</excludeFilterFile>
-          <effort>Max</effort>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.rat</groupId>
-        <artifactId>apache-rat-plugin</artifactId>
-        <configuration>
-          <excludes>
-            <exclude>src/main/data/2jobs2min-rumen-jh.json</exclude>
-            <exclude>src/main/html/js/thirdparty/jquery.js</exclude>
-            <exclude>src/main/html/js/thirdparty/d3.v3.js</exclude>
-            <exclude>src/main/html/simulate.html.template</exclude>
-            <exclude>src/main/html/simulate.info.html.template</exclude>
-            <exclude>src/main/html/track.html.template</exclude>
-            <exclude>src/test/resources/simulate.html.template</exclude>
-            <exclude>src/test/resources/simulate.info.html.template</exclude>
-            <exclude>src/test/resources/track.html.template</exclude>
-            <exclude>src/test/resources/syn.json</exclude>
-            <exclude>src/test/resources/syn_generic.json</exclude>
-            <exclude>src/test/resources/syn_stream.json</exclude>
-            <exclude>src/test/resources/inputsls.json</exclude>
-            <exclude>src/test/resources/nodes.json</exclude>
-            <exclude>src/test/resources/nodes-with-resources.json</exclude>
-            <exclude>src/test/resources/exit-invariants.txt</exclude>
-            <exclude>src/test/resources/ongoing-invariants.txt</exclude>
-            <exclude>src/test/resources/sls_dag.json</exclude>
-          </excludes>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-
-  <profiles>
-    <profile>
-      <id>dist</id>
-      <activation>
-        <activeByDefault>false</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-assembly-plugin</artifactId>
-            <dependencies>
-              <dependency>
-                <groupId>org.apache.hadoop</groupId>
-                <artifactId>hadoop-assemblies</artifactId>
-                <version>${project.version}</version>
-              </dependency>
-            </dependencies>
-            <executions>
-              <execution>
-                <id>dist</id>
-                <phase>prepare-package</phase>
-                <goals>
-                  <goal>single</goal>
-                </goals>
-                <configuration>
-                  <appendAssemblyId>false</appendAssemblyId>
-                  <attach>false</attach>
-                  <finalName>${project.artifactId}-${project.version}</finalName>
-                  <descriptorRefs>
-                    <descriptorRef>hadoop-sls</descriptorRef>
-                  </descriptorRefs>
-                </configuration>
-              </execution>
-            </executions>
-          </plugin>
-       <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-dependency-plugin</artifactId>
-        <executions>
-          <execution>
-            <id>deplist</id>
-            <phase>compile</phase>
-            <goals>
-              <goal>list</goal>
-            </goals>
-            <configuration>
-              <!-- referenced by a built-in command -->
-              <outputFile>${project.basedir}/target/hadoop-tools-deps/${project.artifactId}.tools-builtin.txt</outputFile>
-            </configuration>
-          </execution>
-        </executions>
-      </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
-</project>
diff --git a/hadoop-tools/hadoop-sls/src/main/assemblies/sls.xml b/hadoop-tools/hadoop-sls/src/main/assemblies/sls.xml
deleted file mode 100644
index 085a5d86d6d..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/assemblies/sls.xml
+++ /dev/null
@@ -1,57 +0,0 @@
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one
-  or more contributor license agreements.  See the NOTICE file
-  distributed with this work for additional information
-  regarding copyright ownership.  The ASF licenses this file
-  to you under the Apache License, Version 2.0 (the
-  "License"); you may not use this file except in compliance
-  with the License.  You may obtain a copy of the License at
-  
-       http://www.apache.org/licenses/LICENSE-2.0
-  
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
-  <id>sls</id>
-  <formats>
-    <format>dir</format>
-    <format>tar.gz</format>
-  </formats>
-  <includeBaseDirectory>false</includeBaseDirectory>
-
-  <fileSets>
-    <fileSet>
-      <directory>${basedir}/src/main/bin</directory>
-      <outputDirectory>bin</outputDirectory>
-      <fileMode>0755</fileMode>
-    </fileSet>
-    <fileSet>
-      <directory>${basedir}/src/main/data</directory>
-      <outputDirectory>sample-data</outputDirectory>
-    </fileSet>
-    <fileSet>
-      <directory>${basedir}/src/main/html</directory>
-      <outputDirectory>html</outputDirectory>
-    </fileSet>
-    <fileSet>
-      <directory>${basedir}/src/main/sample-conf</directory>
-      <outputDirectory>sample-conf</outputDirectory>
-    </fileSet>
-  </fileSets>
-
-  <dependencySets>
-    <dependencySet>
-      <outputDirectory>/lib</outputDirectory>
-      <unpack>false</unpack>
-      <scope>compile</scope>
-      <useProjectArtifact>true</useProjectArtifact>
-    </dependencySet>
-  </dependencySets>
-
-</assembly>
diff --git a/hadoop-tools/hadoop-sls/src/main/bin/rumen2sls.sh b/hadoop-tools/hadoop-sls/src/main/bin/rumen2sls.sh
deleted file mode 100644
index cda4e73f4ab..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/bin/rumen2sls.sh
+++ /dev/null
@@ -1,107 +0,0 @@
-#!/usr/bin/env bash
-#
-#  Licensed under the Apache License, Version 2.0 (the "License");
-#  you may not use this file except in compliance with the License.
-#  You may obtain a copy of the License at
-#
-#    http://www.apache.org/licenses/LICENSE-2.0
-#
-#  Unless required by applicable law or agreed to in writing, software
-#  distributed under the License is distributed on an "AS IS" BASIS,
-#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#  See the License for the specific language governing permissions and
-#  limitations under the License. See accompanying LICENSE file.
-#
-
-function hadoop_usage()
-{
-  echo "Usage: rumen2sls.sh <OPTIONS>"
-  echo "                 --rumen-file=<RUMEN_FILE>"
-  echo "                 --output-dir=<SLS_OUTPUT_DIR>"
-  echo "                 [--output-prefix=<PREFIX>] (default is sls)"
-  echo
-}
-
-function parse_args()
-{
-  for i in "$@"; do
-    case $i in
-      --rumen-file=*)
-        rumenfile=${i#*=}
-      ;;
-      --output-dir=*)
-        outputdir=${i#*=}
-      ;;
-      --output-prefix=*)
-        outputprefix=${i#*=}
-      ;;
-      *)
-        hadoop_error "ERROR: Invalid option ${i}"
-        hadoop_exit_with_usage 1
-      ;;
-    esac
-  done
-
-  if [[ -z "${rumenfile}" ]] ; then
-    hadoop_error "ERROR: --rumen-file must be specified."
-    hadoop_exit_with_usage 1
-  fi
-
-  if [[ -z "${outputdir}" ]] ; then
-    hadoop_error "ERROR: --output-dir must be specified."
-    hadoop_exit_with_usage 1
-  fi
-}
-
-function calculate_classpath()
-{
-  hadoop_add_to_classpath_tools hadoop-rumen
-}
-
-function run_sls_generator()
-{
-  local args
-
-  if [[ -z "${outputprefix}" ]] ; then
-    outputprefix="sls"
-  fi
-
-  hadoop_add_param args -input "-input ${rumenfile}"
-  hadoop_add_param args -outputJobs "-outputJobs ${outputdir}/${outputprefix}-jobs.json"
-  hadoop_add_param args -outputNodes "-outputNodes ${outputdir}/${outputprefix}-nodes.json"
-
-  hadoop_add_client_opts
-
-  hadoop_finalize
-  # shellcheck disable=SC2086
-  hadoop_java_exec rumen2sls org.apache.hadoop.yarn.sls.RumenToSLSConverter ${args}
-}
-
-# let's locate libexec...
-if [[ -n "${HADOOP_HOME}" ]]; then
-  HADOOP_DEFAULT_LIBEXEC_DIR="${HADOOP_HOME}/libexec"
-else
-  this="${BASH_SOURCE-$0}"
-  bin=$(cd -P -- "$(dirname -- "${this}")" >/dev/null && pwd -P)
-  HADOOP_DEFAULT_LIBEXEC_DIR="${bin}/../../../../../libexec"
-fi
-
-HADOOP_LIBEXEC_DIR="${HADOOP_LIBEXEC_DIR:-$HADOOP_DEFAULT_LIBEXEC_DIR}"
-# shellcheck disable=SC2034
-HADOOP_NEW_CONFIG=true
-if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then
-  # shellcheck disable=SC1090
-  . "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh"
-else
-  echo "ERROR: Cannot execute ${HADOOP_LIBEXEC_DIR}/hadoop-config.sh." 2>&1
-  exit 1
-fi
-
-if [ $# = 0 ]; then
-  hadoop_exit_with_usage 1
-fi
-
-parse_args "${@}"
-calculate_classpath
-run_sls_generator
-
diff --git a/hadoop-tools/hadoop-sls/src/main/bin/slsrun.sh b/hadoop-tools/hadoop-sls/src/main/bin/slsrun.sh
deleted file mode 100644
index 5a9de89ae69..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/bin/slsrun.sh
+++ /dev/null
@@ -1,146 +0,0 @@
-#!/usr/bin/env bash
-#
-#  Licensed under the Apache License, Version 2.0 (the "License");
-#  you may not use this file except in compliance with the License.
-#  You may obtain a copy of the License at
-#
-#    http://www.apache.org/licenses/LICENSE-2.0
-#
-#  Unless required by applicable law or agreed to in writing, software
-#  distributed under the License is distributed on an "AS IS" BASIS,
-#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#  See the License for the specific language governing permissions and
-#  limitations under the License. See accompanying LICENSE file.
-#
-
-function hadoop_usage()
-{
-  echo "Usage: slsrun.sh <OPTIONS> "
-  echo "                 --tracetype=<SYNTH | SLS | RUMEN>"
-  echo "                 --tracelocation=<FILE1,FILE2,...>"
-  echo "                 (deprecated --input-rumen=<FILE1,FILE2,...>  | --input-sls=<FILE1,FILE2,...>)"
-  echo "                 --output-dir=<SLS_SIMULATION_OUTPUT_DIRECTORY>"
-  echo "                 [--nodes=<SLS_NODES_FILE>]"
-  echo "                 [--track-jobs=<JOBID1,JOBID2,...>]"
-  echo "                 [--print-simulation]"
-}
-
-function parse_args()
-{
-  for i in "$@"; do
-    case $i in
-      --input-rumen=*)
-        inputrumen=${i#*=}
-      ;;
-      --input-sls=*)
-        inputsls=${i#*=}
-      ;;
-      --tracetype=*)
-        tracetype=${i#*=}
-      ;;
-      --tracelocation=*)
-        tracelocation=${i#*=}
-      ;;
-      --output-dir=*)
-        outputdir=${i#*=}
-      ;;
-      --nodes=*)
-        nodes=${i#*=}
-      ;;
-      --track-jobs=*)
-        trackjobs=${i#*=}
-      ;;
-      --print-simulation)
-        printsimulation="true"
-      ;;
-      *)
-        hadoop_error "ERROR: Invalid option ${i}"
-        hadoop_exit_with_usage 1
-      ;;
-    esac
-  done
-
-  if [[ -z "${inputrumen}" && -z "${inputsls}" && -z "${tracetype}" ]] ; then
-    hadoop_error "ERROR: Either --input-rumen, --input-sls, or --tracetype (with --tracelocation) must be specified."
-  fi
-
-  if [[ -n "${inputrumen}" && -n "${inputsls}" && -n "${tracetype}" ]] ; then
-    hadoop_error "ERROR: Only specify one of --input-rumen, --input-sls, or --tracetype (with --tracelocation)"
-  fi
-
-  if [[ -z "${outputdir}" ]] ; then
-    hadoop_error "ERROR: The output directory --output-dir must be specified."
-    hadoop_exit_with_usage 1
-  fi
-}
-
-function calculate_classpath
-{
-  hadoop_add_to_classpath_tools hadoop-sls
-
-  hadoop_add_classpath "${HADOOP_YARN_HOME}/${YARN_DIR}/timelineservice"'/*'
-}
-
-function run_simulation() {
-
-  local args
-
-   if [[ "${inputsls}" != "" ]] ; then
-        hadoop_add_param args -inputsls "-inputsls ${inputsls}"
-   fi
-   if [[ "${inputrumen}" != "" ]] ; then
-        hadoop_add_param args -inputrumen "-inputrumen ${inputrumen}"
-   fi
-   if [[ "${tracetype}" != "" ]] ; then
-        hadoop_add_param args -tracetype "-tracetype ${tracetype}"
-        hadoop_add_param args -tracelocation "-tracelocation ${tracelocation}"
-   fi
-
-  hadoop_add_param args -output "-output ${outputdir}"
-
-  if [[ -n "${nodes}" ]] ; then
-    hadoop_add_param args -nodes "-nodes ${nodes}"
-  fi
-
-  if [[ -n "${trackjobs}" ]] ; then
-    hadoop_add_param args -trackjobs "-trackjobs ${trackjobs}"
-  fi
-
-  if [[ "${printsimulation}" == "true" ]] ; then
-    hadoop_add_param args -printsimulation "-printsimulation"
-  fi
-
-  hadoop_add_client_opts
-
-  hadoop_finalize
-  # shellcheck disable=SC2086
-  hadoop_java_exec sls org.apache.hadoop.yarn.sls.SLSRunner ${args}
-}
-
-# let's locate libexec...
-if [[ -n "${HADOOP_HOME}" ]]; then
-  HADOOP_DEFAULT_LIBEXEC_DIR="${HADOOP_HOME}/libexec"
-else
-  this="${BASH_SOURCE-$0}"
-  bin=$(cd -P -- "$(dirname -- "${this}")" >/dev/null && pwd -P)
-  HADOOP_DEFAULT_LIBEXEC_DIR="${bin}/../../../../../libexec"
-fi
-
-HADOOP_LIBEXEC_DIR="${HADOOP_LIBEXEC_DIR:-$HADOOP_DEFAULT_LIBEXEC_DIR}"
-# shellcheck disable=SC2034
-HADOOP_NEW_CONFIG=true
-if [[ -f "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh" ]]; then
-  # shellcheck disable=SC1090
-  . "${HADOOP_LIBEXEC_DIR}/hadoop-config.sh"
-else
-  echo "ERROR: Cannot execute ${HADOOP_LIBEXEC_DIR}/hadoop-config.sh." 2>&1
-  exit 1
-fi
-
-if [[ $# = 0 ]]; then
-  hadoop_exit_with_usage 1
-fi
-
-parse_args "${@}"
-calculate_classpath
-run_simulation
diff --git a/hadoop-tools/hadoop-sls/src/main/data/2jobs2min-rumen-jh.json b/hadoop-tools/hadoop-sls/src/main/data/2jobs2min-rumen-jh.json
deleted file mode 100644
index 8e9af7549cd..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/data/2jobs2min-rumen-jh.json
+++ /dev/null
@@ -1,10132 +0,0 @@
-{
-  "priority" : "NORMAL",
-  "jobID" : "job_1369942127770_1205",
-  "user" : "jenkins",
-  "jobName" : "TeraGen",
-  "submitTime" : 1371222054499,
-  "finishTime" : 1371222153874,
-  "queue" : "sls_queue_1",
-  "mapTasks" : [ {
-    "startTime" : 1371222059053,
-    "taskID" : "task_1369942127770_1205_m_000000",
-    "taskType" : "MAP",
-    "finishTime" : 1371222078206,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222061163,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222078206,
-      "attemptID" : "attempt_1369942127770_1205_m_000000_0",
-      "clockSplits" : [ 1481, 1481, 1481, 1481, 1481, 1481, 1169, 1064, 1064, 1173, 1197, 2485 ],
-      "cpuUsages" : [ 1253, 1254, 1254, 1254, 1254, 1254, 1198, 1180, 1179, 984, 942, 1294 ],
-      "vmemKbytes" : [ 113886, 341661, 569436, 797210, 1024985, 1252759, 1416845, 1424087, 1424088, 1424088, 1424087, 1424088 ],
-      "physMemKbytes" : [ 24766, 74299, 123833, 173366, 222900, 272433, 308230, 310197, 310604, 309580, 305826, 302119 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 82,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14300,
-        "virtualMemoryUsage" : 1458266112,
-        "physicalMemoryUsage" : 308215808,
-        "heapUsage" : 745406464
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 82,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059055,
-    "taskID" : "task_1369942127770_1205_m_000001",
-    "taskType" : "MAP",
-    "finishTime" : 1371222076092,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222061164,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222076092,
-      "attemptID" : "attempt_1369942127770_1205_m_000001_0",
-      "clockSplits" : [ 1621, 1621, 1622, 1621, 1622, 1457, 908, 908, 908, 2328, 150, 151 ],
-      "cpuUsages" : [ 1306, 1307, 1307, 1306, 1307, 1264, 1119, 1119, 1119, 1020, 993, 993 ],
-      "vmemKbytes" : [ 122129, 366389, 610648, 854907, 1099167, 1336974, 1409412, 1409411, 1409412, 1409412, 1409411, 1409412 ],
-      "physMemKbytes" : [ 27010, 81032, 135053, 189074, 243096, 295613, 309560, 306611, 303663, 300925, 298639, 296368 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14160,
-        "virtualMemoryUsage" : 1443237888,
-        "physicalMemoryUsage" : 302317568,
-        "heapUsage" : 745209856
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059055,
-    "taskID" : "task_1369942127770_1205_m_000002",
-    "taskType" : "MAP",
-    "finishTime" : 1371222076916,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222061159,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222076916,
-      "attemptID" : "attempt_1369942127770_1205_m_000002_0",
-      "clockSplits" : [ 1529, 1530, 1530, 1530, 1529, 1530, 1072, 975, 975, 2938, 269, 269 ],
-      "cpuUsages" : [ 1266, 1266, 1267, 1266, 1267, 1266, 1172, 1152, 1151, 1056, 995, 996 ],
-      "vmemKbytes" : [ 115166, 345498, 575831, 806163, 1036496, 1266828, 1418750, 1422271, 1422272, 1422272, 1422271, 1422272 ],
-      "physMemKbytes" : [ 25182, 75547, 125913, 176278, 226644, 277009, 311047, 314183, 316587, 318060, 315880, 313328 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14260,
-        "virtualMemoryUsage" : 1456406528,
-        "physicalMemoryUsage" : 319447040,
-        "heapUsage" : 740294656
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059055,
-    "taskID" : "task_1369942127770_1205_m_000003",
-    "taskType" : "MAP",
-    "finishTime" : 1371222078156,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222061160,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222078156,
-      "attemptID" : "attempt_1369942127770_1205_m_000003_0",
-      "clockSplits" : [ 1473, 1473, 1473, 1473, 1474, 1473, 1250, 1064, 1065, 2986, 293, 294 ],
-      "cpuUsages" : [ 1227, 1227, 1227, 1227, 1227, 1228, 1214, 1202, 1203, 1076, 966, 966 ],
-      "vmemKbytes" : [ 111579, 334737, 557896, 781055, 1004214, 1227373, 1417243, 1440219, 1440220, 1440220, 1440219, 1440220 ],
-      "physMemKbytes" : [ 24240, 72721, 121202, 169683, 218165, 266646, 308296, 315697, 318384, 320500, 319654, 318383 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14300,
-        "virtualMemoryUsage" : 1474785280,
-        "physicalMemoryUsage" : 325296128,
-        "heapUsage" : 744161280
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059056,
-    "taskID" : "task_1369942127770_1205_m_000004",
-    "taskType" : "MAP",
-    "finishTime" : 1371222077984,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222061161,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222077984,
-      "attemptID" : "attempt_1369942127770_1205_m_000004_0",
-      "clockSplits" : [ 1441, 1441, 1441, 1441, 1441, 1441, 1297, 1139, 1139, 3202, 106, 107 ],
-      "cpuUsages" : [ 1231, 1231, 1231, 1231, 1231, 1231, 1241, 1253, 1252, 1018, 920, 920 ],
-      "vmemKbytes" : [ 110202, 330607, 551012, 771417, 991823, 1212228, 1407542, 1437667, 1437668, 1437668, 1437667, 1437668 ],
-      "physMemKbytes" : [ 23865, 71596, 119328, 167059, 214790, 262521, 305059, 313396, 315497, 316328, 313564, 310583 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14350,
-        "virtualMemoryUsage" : 1472172032,
-        "physicalMemoryUsage" : 316485632,
-        "heapUsage" : 740163584
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059056,
-    "taskID" : "task_1369942127770_1205_m_000005",
-    "taskType" : "MAP",
-    "finishTime" : 1371222078263,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222061161,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222078263,
-      "attemptID" : "attempt_1369942127770_1205_m_000005_0",
-      "clockSplits" : [ 1467, 1467, 1467, 1467, 1468, 1467, 1222, 1044, 1043, 3239, 138, 138 ],
-      "cpuUsages" : [ 1228, 1229, 1228, 1229, 1229, 1228, 1187, 1157, 1157, 1036, 951, 951 ],
-      "vmemKbytes" : [ 109716, 329150, 548584, 768017, 987451, 1206884, 1389627, 1409139, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 24267, 72802, 121338, 169873, 218408, 266943, 307379, 311778, 311871, 311950, 311973, 311991 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14290,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 319471616,
-        "heapUsage" : 732299264
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059056,
-    "taskID" : "task_1369942127770_1205_m_000006",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080381,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061165,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080381,
-      "attemptID" : "attempt_1369942127770_1205_m_000006_0",
-      "clockSplits" : [ 2346, 2347, 2347, 2347, 1888, 1412, 1285, 962, 962, 962, 1936, 416 ],
-      "cpuUsages" : [ 1386, 1386, 1386, 1386, 1216, 1041, 1052, 1082, 1082, 1081, 1185, 1217 ],
-      "vmemKbytes" : [ 157018, 471054, 785090, 1099125, 1375327, 1416027, 1416046, 1416396, 1416871, 1417345, 1417679, 1417692 ],
-      "physMemKbytes" : [ 32211, 96633, 161055, 225476, 282302, 291840, 293174, 293917, 294444, 294970, 293975, 289481 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14500,
-        "virtualMemoryUsage" : 1451716608,
-        "physicalMemoryUsage" : 294055936,
-        "heapUsage" : 740032512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059057,
-    "taskID" : "task_1369942127770_1205_m_000007",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080174,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061168,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080174,
-      "attemptID" : "attempt_1369942127770_1205_m_000007_0",
-      "clockSplits" : [ 1912, 1913, 1913, 1913, 1913, 1395, 1079, 1080, 1110, 1121, 1122, 2528 ],
-      "cpuUsages" : [ 1309, 1309, 1309, 1309, 1309, 1145, 1046, 1045, 1004, 988, 989, 1278 ],
-      "vmemKbytes" : [ 133705, 401116, 668527, 935938, 1203349, 1418939, 1437988, 1437987, 1437988, 1437988, 1437987, 1437988 ],
-      "physMemKbytes" : [ 29116, 87350, 145583, 203816, 262051, 309017, 313251, 313344, 312660, 309967, 307170, 305234 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14040,
-        "virtualMemoryUsage" : 1472499712,
-        "physicalMemoryUsage" : 312479744,
-        "heapUsage" : 723451904
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059057,
-    "taskID" : "task_1369942127770_1205_m_000008",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080738,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061150,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080738,
-      "attemptID" : "attempt_1369942127770_1205_m_000008_0",
-      "clockSplits" : [ 2192, 2193, 2192, 2193, 2192, 1226, 1140, 1210, 1721, 2853, 235, 236 ],
-      "cpuUsages" : [ 1340, 1340, 1340, 1341, 1340, 1169, 1153, 1147, 1096, 1086, 1059, 1059 ],
-      "vmemKbytes" : [ 140265, 420795, 701325, 981854, 1262385, 1424418, 1425336, 1425335, 1425336, 1425336, 1425335, 1425336 ],
-      "physMemKbytes" : [ 29311, 87935, 146559, 205182, 263807, 298779, 301592, 304203, 305246, 305221, 304062, 302477 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14470,
-        "virtualMemoryUsage" : 1459544064,
-        "physicalMemoryUsage" : 308924416,
-        "heapUsage" : 742719488
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059057,
-    "taskID" : "task_1369942127770_1205_m_000009",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080294,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061167,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080294,
-      "attemptID" : "attempt_1369942127770_1205_m_000009_0",
-      "clockSplits" : [ 2681, 2682, 2682, 2682, 931, 900, 900, 1034, 1187, 1187, 1891, 364 ],
-      "cpuUsages" : [ 1476, 1476, 1476, 1476, 1162, 1156, 1157, 1127, 1092, 1093, 1116, 1123 ],
-      "vmemKbytes" : [ 176827, 530481, 884136, 1237790, 1420639, 1420691, 1420692, 1420691, 1420692, 1420692, 1420691, 1420692 ],
-      "physMemKbytes" : [ 38211, 114635, 191059, 267482, 307826, 309555, 311274, 312396, 309356, 305514, 301727, 298067 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14930,
-        "virtualMemoryUsage" : 1454788608,
-        "physicalMemoryUsage" : 303349760,
-        "heapUsage" : 740229120
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059058,
-    "taskID" : "task_1369942127770_1205_m_000010",
-    "taskType" : "MAP",
-    "finishTime" : 1371222079719,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061175,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222079719,
-      "attemptID" : "attempt_1369942127770_1205_m_000010_0",
-      "clockSplits" : [ 3057, 3058, 3057, 1958, 885, 884, 885, 835, 833, 832, 1597, 655 ],
-      "cpuUsages" : [ 1654, 1654, 1654, 1336, 1024, 1025, 1024, 1025, 1025, 1025, 1040, 1124 ],
-      "vmemKbytes" : [ 201676, 605031, 1008386, 1360094, 1409336, 1409383, 1409432, 1409459, 1409460, 1409460, 1409459, 1409460 ],
-      "physMemKbytes" : [ 44104, 132313, 220523, 297458, 308371, 308546, 308722, 308946, 309231, 309516, 309798, 309880 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14610,
-        "virtualMemoryUsage" : 1443287040,
-        "physicalMemoryUsage" : 317300736,
-        "heapUsage" : 740556800
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059058,
-    "taskID" : "task_1369942127770_1205_m_000011",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080741,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061174,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080741,
-      "attemptID" : "attempt_1369942127770_1205_m_000011_0",
-      "clockSplits" : [ 2091, 2091, 2092, 2091, 2092, 1144, 1117, 1175, 1617, 3521, 265, 266 ],
-      "cpuUsages" : [ 1356, 1356, 1356, 1356, 1356, 1094, 1087, 1096, 1172, 1157, 1062, 1062 ],
-      "vmemKbytes" : [ 141112, 423336, 705560, 987783, 1270008, 1419228, 1419348, 1419347, 1419348, 1419348, 1419347, 1419348 ],
-      "physMemKbytes" : [ 30717, 92154, 153590, 215025, 276462, 309084, 309404, 309697, 309866, 309922, 307623, 303864 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14510,
-        "virtualMemoryUsage" : 1453412352,
-        "physicalMemoryUsage" : 309231616,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059058,
-    "taskID" : "task_1369942127770_1205_m_000012",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080631,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061173,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080631,
-      "attemptID" : "attempt_1369942127770_1205_m_000012_0",
-      "clockSplits" : [ 2152, 2152, 2152, 2152, 2152, 1134, 1107, 1143, 1402, 1403, 2199, 298 ],
-      "cpuUsages" : [ 1365, 1365, 1365, 1365, 1366, 1024, 1015, 1026, 1101, 1102, 1136, 1140 ],
-      "vmemKbytes" : [ 140246, 420739, 701232, 981725, 1262218, 1409325, 1409412, 1409411, 1409412, 1409412, 1409411, 1409412 ],
-      "physMemKbytes" : [ 29429, 88287, 147145, 206002, 264861, 296705, 298774, 300812, 301651, 301721, 300159, 296175 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14370,
-        "virtualMemoryUsage" : 1443237888,
-        "physicalMemoryUsage" : 301232128,
-        "heapUsage" : 745209856
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059059,
-    "taskID" : "task_1369942127770_1205_m_000013",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080047,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222061177,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080047,
-      "attemptID" : "attempt_1369942127770_1205_m_000013_0",
-      "clockSplits" : [ 2415, 2415, 2416, 2415, 1669, 929, 929, 927, 906, 905, 906, 2031 ],
-      "cpuUsages" : [ 1582, 1583, 1583, 1583, 1323, 1064, 1064, 1052, 899, 899, 899, 1289 ],
-      "vmemKbytes" : [ 156678, 470034, 783390, 1096746, 1370593, 1409423, 1409424, 1409423, 1409424, 1409424, 1409423, 1409424 ],
-      "physMemKbytes" : [ 33111, 99335, 165559, 231782, 289734, 298476, 299089, 299699, 299882, 299738, 299593, 299448 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14820,
-        "virtualMemoryUsage" : 1443250176,
-        "physicalMemoryUsage" : 306561024,
-        "heapUsage" : 740622336
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059060,
-    "taskID" : "task_1369942127770_1205_m_000014",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080403,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061182,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080403,
-      "attemptID" : "attempt_1369942127770_1205_m_000014_0",
-      "clockSplits" : [ 2246, 2247, 2247, 2246, 1771, 975, 975, 1058, 1672, 3290, 244, 244 ],
-      "cpuUsages" : [ 1482, 1483, 1483, 1483, 1333, 1082, 1081, 1076, 1036, 1050, 1095, 1096 ],
-      "vmemKbytes" : [ 153262, 459788, 766314, 1072839, 1357907, 1417931, 1417932, 1417931, 1417932, 1417932, 1417931, 1417932 ],
-      "physMemKbytes" : [ 32426, 97279, 162133, 226986, 287711, 305142, 311027, 316866, 318854, 318343, 317108, 315553 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14780,
-        "virtualMemoryUsage" : 1451962368,
-        "physicalMemoryUsage" : 322330624,
-        "heapUsage" : 668336128
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059060,
-    "taskID" : "task_1369942127770_1205_m_000015",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080385,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061182,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080385,
-      "attemptID" : "attempt_1369942127770_1205_m_000015_0",
-      "clockSplits" : [ 2112, 2113, 2112, 2113, 2112, 1311, 1311, 1686, 1973, 1973, 191, 191 ],
-      "cpuUsages" : [ 1520, 1520, 1521, 1520, 1520, 1067, 1068, 1204, 1311, 863, 843, 843 ],
-      "vmemKbytes" : [ 142431, 427293, 712156, 997018, 1281881, 1423875, 1423876, 1423875, 1423876, 1423876, 1423875, 1423876 ],
-      "physMemKbytes" : [ 31512, 94536, 157561, 220586, 283611, 315540, 316563, 317494, 317993, 317677, 316454, 315229 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14800,
-        "virtualMemoryUsage" : 1458049024,
-        "physicalMemoryUsage" : 322166784,
-        "heapUsage" : 663617536
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059060,
-    "taskID" : "task_1369942127770_1205_m_000016",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080314,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061183,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080314,
-      "attemptID" : "attempt_1369942127770_1205_m_000016_0",
-      "clockSplits" : [ 2331, 2332, 2332, 2332, 1845, 1142, 1143, 1145, 1148, 1148, 1817, 406 ],
-      "cpuUsages" : [ 1376, 1377, 1377, 1377, 1290, 1165, 1165, 1121, 1081, 1082, 1000, 979 ],
-      "vmemKbytes" : [ 154918, 464754, 774590, 1084425, 1368248, 1422215, 1422216, 1422215, 1422216, 1422216, 1422215, 1422216 ],
-      "physMemKbytes" : [ 31161, 93486, 155811, 218135, 275753, 291774, 298030, 303393, 303746, 303320, 303009, 302957 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14390,
-        "virtualMemoryUsage" : 1456349184,
-        "physicalMemoryUsage" : 310206464,
-        "heapUsage" : 663683072
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059061,
-    "taskID" : "task_1369942127770_1205_m_000017",
-    "taskType" : "MAP",
-    "finishTime" : 1371222079863,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061183,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222079863,
-      "attemptID" : "attempt_1369942127770_1205_m_000017_0",
-      "clockSplits" : [ 2120, 2120, 2121, 2120, 2120, 1291, 1115, 1115, 847, 837, 837, 2031 ],
-      "cpuUsages" : [ 1314, 1314, 1314, 1314, 1314, 1108, 1065, 1065, 889, 882, 882, 1289 ],
-      "vmemKbytes" : [ 136175, 408526, 680878, 953229, 1225581, 1405242, 1409412, 1409411, 1409412, 1409412, 1409411, 1409412 ],
-      "physMemKbytes" : [ 25452, 76356, 127261, 178166, 229071, 262663, 263476, 263509, 263661, 263953, 264244, 264609 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13750,
-        "virtualMemoryUsage" : 1443237888,
-        "physicalMemoryUsage" : 271626240,
-        "heapUsage" : 592183296
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059061,
-    "taskID" : "task_1369942127770_1205_m_000018",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080024,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061180,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080024,
-      "attemptID" : "attempt_1369942127770_1205_m_000018_0",
-      "clockSplits" : [ 2373, 2374, 2374, 2373, 1909, 925, 926, 925, 890, 882, 882, 2005 ],
-      "cpuUsages" : [ 1613, 1614, 1613, 1614, 1458, 1128, 1127, 1128, 917, 876, 876, 1256 ],
-      "vmemKbytes" : [ 151697, 455092, 758487, 1061882, 1349627, 1419523, 1419524, 1419523, 1419524, 1419524, 1419523, 1419524 ],
-      "physMemKbytes" : [ 30652, 91958, 153263, 214568, 272912, 290016, 293889, 297762, 300019, 299336, 298590, 297860 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 15220,
-        "virtualMemoryUsage" : 1453592576,
-        "physicalMemoryUsage" : 304734208,
-        "heapUsage" : 665190400
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059061,
-    "taskID" : "task_1369942127770_1205_m_000019",
-    "taskType" : "MAP",
-    "finishTime" : 1371222081077,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061181,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222081077,
-      "attemptID" : "attempt_1369942127770_1205_m_000019_0",
-      "clockSplits" : [ 2353, 2354, 2353, 2354, 1929, 1071, 1072, 1395, 2209, 2348, 224, 224 ],
-      "cpuUsages" : [ 1428, 1429, 1429, 1428, 1376, 1271, 1270, 1203, 1037, 908, 890, 891 ],
-      "vmemKbytes" : [ 152162, 456488, 760814, 1065139, 1352750, 1420763, 1420764, 1420763, 1420764, 1420764, 1420763, 1420764 ],
-      "physMemKbytes" : [ 32961, 98884, 164808, 230731, 293309, 311938, 316956, 321727, 322219, 321123, 319983, 318842 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14560,
-        "virtualMemoryUsage" : 1454862336,
-        "physicalMemoryUsage" : 325910528,
-        "heapUsage" : 663552000
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059062,
-    "taskID" : "task_1369942127770_1205_m_000020",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080321,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061184,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080321,
-      "attemptID" : "attempt_1369942127770_1205_m_000020_0",
-      "clockSplits" : [ 2427, 2428, 2428, 2428, 2102, 1517, 1285, 748, 748, 747, 1610, 664 ],
-      "cpuUsages" : [ 1443, 1443, 1443, 1443, 1389, 1289, 1200, 994, 995, 995, 1024, 1202 ],
-      "vmemKbytes" : [ 153064, 459194, 765324, 1071453, 1357999, 1421147, 1421148, 1421147, 1421148, 1421148, 1421147, 1421148 ],
-      "physMemKbytes" : [ 29737, 89213, 148688, 208163, 263841, 276188, 276277, 276205, 276076, 275947, 275853, 277999 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14860,
-        "virtualMemoryUsage" : 1455255552,
-        "physicalMemoryUsage" : 286453760,
-        "heapUsage" : 616431616
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059062,
-    "taskID" : "task_1369942127770_1205_m_000021",
-    "taskType" : "MAP",
-    "finishTime" : 1371222081794,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222061178,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222081794,
-      "attemptID" : "attempt_1369942127770_1205_m_000021_0",
-      "clockSplits" : [ 2597, 2597, 2597, 2597, 1562, 1164, 1163, 5456, 198, 197, 197, 198 ],
-      "cpuUsages" : [ 1446, 1447, 1447, 1447, 1261, 1190, 1189, 983, 897, 898, 897, 898 ],
-      "vmemKbytes" : [ 164696, 494089, 823482, 1152875, 1396412, 1409139, 1409140, 1409139, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 32676, 98028, 163380, 228731, 280650, 296453, 310265, 319456, 319884, 318033, 316181, 314330 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14060,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 320843776,
-        "heapUsage" : 656801792
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059062,
-    "taskID" : "task_1369942127770_1205_m_000022",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080729,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061185,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080729,
-      "attemptID" : "attempt_1369942127770_1205_m_000022_0",
-      "clockSplits" : [ 2144, 2145, 2144, 2145, 2144, 1183, 1111, 1280, 2538, 2355, 174, 175 ],
-      "cpuUsages" : [ 1386, 1387, 1386, 1387, 1386, 1209, 1196, 1179, 1059, 978, 968, 969 ],
-      "vmemKbytes" : [ 140664, 421992, 703320, 984647, 1265976, 1425650, 1426340, 1426339, 1426340, 1426340, 1426339, 1426340 ],
-      "physMemKbytes" : [ 29534, 88604, 147673, 206742, 265812, 300766, 304205, 307483, 308781, 307931, 305761, 303579 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14490,
-        "virtualMemoryUsage" : 1460572160,
-        "physicalMemoryUsage" : 309747712,
-        "heapUsage" : 742064128
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059063,
-    "taskID" : "task_1369942127770_1205_m_000023",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080052,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061186,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080052,
-      "attemptID" : "attempt_1369942127770_1205_m_000023_0",
-      "clockSplits" : [ 1873, 1874, 1874, 1874, 1874, 1622, 923, 924, 924, 1161, 1185, 2750 ],
-      "cpuUsages" : [ 1302, 1303, 1302, 1303, 1303, 1229, 1028, 1027, 1027, 755, 727, 1274 ],
-      "vmemKbytes" : [ 124166, 372498, 620831, 869164, 1117497, 1357087, 1424104, 1424103, 1424104, 1424104, 1424103, 1424104 ],
-      "physMemKbytes" : [ 26868, 80607, 134345, 188083, 241822, 293671, 308210, 308261, 308313, 307095, 304076, 301141 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13580,
-        "virtualMemoryUsage" : 1458282496,
-        "physicalMemoryUsage" : 307507200,
-        "heapUsage" : 736362496
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059063,
-    "taskID" : "task_1369942127770_1205_m_000024",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080302,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061188,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080302,
-      "attemptID" : "attempt_1369942127770_1205_m_000024_0",
-      "clockSplits" : [ 2106, 2107, 2107, 2106, 2107, 1429, 1184, 1182, 1159, 1159, 1920, 542 ],
-      "cpuUsages" : [ 1331, 1331, 1332, 1331, 1331, 1174, 1116, 1098, 957, 957, 1087, 1445 ],
-      "vmemKbytes" : [ 134890, 404670, 674451, 944231, 1214012, 1410949, 1420432, 1420431, 1420432, 1420432, 1420431, 1420432 ],
-      "physMemKbytes" : [ 28316, 84948, 141580, 198211, 254844, 296319, 298789, 299283, 299498, 299534, 299556, 299285 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14490,
-        "virtualMemoryUsage" : 1454522368,
-        "physicalMemoryUsage" : 306270208,
-        "heapUsage" : 742981632
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059063,
-    "taskID" : "task_1369942127770_1205_m_000025",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080632,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061188,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080632,
-      "attemptID" : "attempt_1369942127770_1205_m_000025_0",
-      "clockSplits" : [ 1860, 1860, 1860, 1861, 1860, 1610, 1421, 3187, 3528, 128, 128, 129 ],
-      "cpuUsages" : [ 1300, 1300, 1300, 1300, 1301, 1224, 1167, 1370, 1043, 928, 928, 929 ],
-      "vmemKbytes" : [ 130800, 392403, 654005, 915607, 1177210, 1396290, 1420456, 1420455, 1420456, 1420456, 1420455, 1420456 ],
-      "physMemKbytes" : [ 29090, 87270, 145451, 203632, 261813, 309693, 310356, 306542, 311703, 310079, 308271, 306464 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14090,
-        "virtualMemoryUsage" : 1454546944,
-        "physicalMemoryUsage" : 312893440,
-        "heapUsage" : 737214464
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059063,
-    "taskID" : "task_1369942127770_1205_m_000026",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080672,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061191,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080672,
-      "attemptID" : "attempt_1369942127770_1205_m_000026_0",
-      "clockSplits" : [ 2007, 2007, 2008, 2007, 2007, 1238, 1132, 1218, 1845, 3515, 225, 225 ],
-      "cpuUsages" : [ 1331, 1332, 1332, 1332, 1332, 1209, 1192, 1188, 1165, 1134, 1096, 1097 ],
-      "vmemKbytes" : [ 137621, 412863, 688106, 963348, 1238591, 1407402, 1409404, 1409403, 1409404, 1409404, 1409403, 1409404 ],
-      "physMemKbytes" : [ 30191, 90575, 150959, 211342, 271726, 307874, 306038, 303761, 302896, 302808, 301704, 300384 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14740,
-        "virtualMemoryUsage" : 1443229696,
-        "physicalMemoryUsage" : 306917376,
-        "heapUsage" : 740360192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059064,
-    "taskID" : "task_1369942127770_1205_m_000027",
-    "taskType" : "MAP",
-    "finishTime" : 1371222081541,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061193,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222081541,
-      "attemptID" : "attempt_1369942127770_1205_m_000027_0",
-      "clockSplits" : [ 1920, 1921, 1921, 1920, 1921, 1430, 1280, 3682, 1168, 780, 780, 1620 ],
-      "cpuUsages" : [ 1362, 1362, 1362, 1362, 1363, 1239, 1201, 1547, 995, 930, 929, 1238 ],
-      "vmemKbytes" : [ 137700, 413102, 688504, 963905, 1239308, 1433933, 1441480, 1441479, 1441480, 1441480, 1441479, 1441480 ],
-      "physMemKbytes" : [ 29565, 88698, 147830, 206962, 266095, 308482, 312089, 314493, 316975, 315186, 313383, 311581 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14890,
-        "virtualMemoryUsage" : 1476075520,
-        "physicalMemoryUsage" : 318078976,
-        "heapUsage" : 740425728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059064,
-    "taskID" : "task_1369942127770_1205_m_000028",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080630,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061190,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080630,
-      "attemptID" : "attempt_1369942127770_1205_m_000028_0",
-      "clockSplits" : [ 2031, 2031, 2032, 2031, 2032, 1270, 1145, 1198, 1543, 3690, 212, 213 ],
-      "cpuUsages" : [ 1318, 1318, 1319, 1318, 1318, 1074, 1032, 1028, 997, 1001, 1033, 1034 ],
-      "vmemKbytes" : [ 138260, 414780, 691301, 967821, 1244342, 1419237, 1422052, 1422051, 1422052, 1422052, 1422051, 1422052 ],
-      "physMemKbytes" : [ 29586, 88758, 147930, 207102, 266275, 304866, 308604, 311744, 312930, 312923, 312015, 310530 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13790,
-        "virtualMemoryUsage" : 1456181248,
-        "physicalMemoryUsage" : 317222912,
-        "heapUsage" : 744620032
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059064,
-    "taskID" : "task_1369942127770_1205_m_000029",
-    "taskType" : "MAP",
-    "finishTime" : 1371222080196,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222061192,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222080196,
-      "attemptID" : "attempt_1369942127770_1205_m_000029_0",
-      "clockSplits" : [ 2041, 2041, 2042, 2041, 2041, 1432, 1199, 1193, 1146, 1147, 2130, 545 ],
-      "cpuUsages" : [ 1372, 1372, 1372, 1373, 1372, 1165, 1087, 1080, 1032, 1033, 1054, 1088 ],
-      "vmemKbytes" : [ 135224, 405672, 676121, 946570, 1217019, 1416578, 1426876, 1426875, 1426876, 1426876, 1426875, 1426876 ],
-      "physMemKbytes" : [ 28101, 84303, 140506, 196709, 252912, 295457, 301536, 305584, 305557, 302915, 300478, 299963 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14400,
-        "virtualMemoryUsage" : 1461121024,
-        "physicalMemoryUsage" : 307138560,
-        "heapUsage" : 740556800
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059065,
-    "taskID" : "task_1369942127770_1205_m_000030",
-    "taskType" : "MAP",
-    "finishTime" : 1371222095399,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222077057,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222095399,
-      "attemptID" : "attempt_1369942127770_1205_m_000030_0",
-      "clockSplits" : [ 2140, 2140, 2140, 2140, 1862, 1004, 1003, 984, 822, 822, 822, 2455 ],
-      "cpuUsages" : [ 1207, 1207, 1207, 1207, 1120, 851, 851, 857, 906, 905, 906, 1366 ],
-      "vmemKbytes" : [ 149343, 448029, 746716, 1045403, 1335142, 1420323, 1420324, 1420323, 1420324, 1420324, 1420323, 1420324 ],
-      "physMemKbytes" : [ 31929, 95787, 159645, 223502, 285438, 303417, 303091, 302749, 300865, 297952, 295038, 292244 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12590,
-        "virtualMemoryUsage" : 1454411776,
-        "physicalMemoryUsage" : 298463232,
-        "heapUsage" : 728760320
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059065,
-    "taskID" : "task_1369942127770_1205_m_000031",
-    "taskType" : "MAP",
-    "finishTime" : 1371222101752,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222078069,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222101752,
-      "attemptID" : "attempt_1369942127770_1205_m_000031_0",
-      "clockSplits" : [ 2274, 2274, 2274, 2274, 3454, 978, 978, 1034, 1463, 1462, 2573, 529 ],
-      "cpuUsages" : [ 1334, 1334, 1334, 1335, 1214, 1033, 1033, 1023, 944, 943, 1021, 1022 ],
-      "vmemKbytes" : [ 179277, 537833, 896388, 1254943, 1440327, 1440379, 1440380, 1440379, 1440380, 1440380, 1440379, 1440380 ],
-      "physMemKbytes" : [ 38140, 114421, 190703, 266984, 306533, 307559, 308886, 310183, 308915, 305992, 304523, 304521 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13810,
-        "virtualMemoryUsage" : 1474949120,
-        "physicalMemoryUsage" : 315183104,
-        "heapUsage" : 728956928
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059065,
-    "taskID" : "task_1369942127770_1205_m_000032",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102468,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222080073,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102468,
-      "attemptID" : "attempt_1369942127770_1205_m_000032_0",
-      "clockSplits" : [ 2030, 2030, 2031, 2030, 1666, 982, 982, 1072, 1743, 1650, 1476, 4204 ],
-      "cpuUsages" : [ 1109, 1109, 1109, 1110, 1120, 1139, 1140, 1119, 972, 937, 873, 1313 ],
-      "vmemKbytes" : [ 153120, 459362, 765604, 1071845, 1359504, 1424519, 1424520, 1424519, 1424520, 1424520, 1424519, 1424520 ],
-      "physMemKbytes" : [ 32822, 98466, 164110, 229754, 291374, 304780, 304107, 303437, 303182, 302954, 299856, 296038 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13420,
-        "virtualMemoryUsage" : 1458708480,
-        "physicalMemoryUsage" : 307167232,
-        "heapUsage" : 728825856
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059065,
-    "taskID" : "task_1369942127770_1205_m_000033",
-    "taskType" : "MAP",
-    "finishTime" : 1371222101998,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222080074,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222101998,
-      "attemptID" : "attempt_1369942127770_1205_m_000033_0",
-      "clockSplits" : [ 2253, 2254, 2254, 2254, 1075, 1055, 1055, 1607, 1658, 1287, 1210, 3957 ],
-      "cpuUsages" : [ 1286, 1287, 1287, 1287, 1060, 1056, 1056, 1356, 1385, 1130, 1076, 1364 ],
-      "vmemKbytes" : [ 176727, 530182, 883638, 1237093, 1419839, 1419891, 1419892, 1419891, 1419892, 1419892, 1419891, 1419892 ],
-      "physMemKbytes" : [ 34968, 104906, 174844, 244781, 281486, 282625, 283754, 284431, 284483, 285884, 289832, 293683 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14630,
-        "virtualMemoryUsage" : 1453969408,
-        "physicalMemoryUsage" : 301670400,
-        "heapUsage" : 677380096
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059066,
-    "taskID" : "task_1369942127770_1205_m_000034",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102416,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222080074,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102416,
-      "attemptID" : "attempt_1369942127770_1205_m_000034_0",
-      "clockSplits" : [ 2608, 2609, 2608, 2609, 1753, 770, 771, 770, 856, 994, 994, 3824 ],
-      "cpuUsages" : [ 1296, 1297, 1296, 1297, 1205, 1099, 1098, 1099, 1020, 889, 890, 1044 ],
-      "vmemKbytes" : [ 158696, 476089, 793483, 1110876, 1393919, 1439299, 1439300, 1439299, 1439300, 1439300, 1439299, 1439300 ],
-      "physMemKbytes" : [ 34127, 102381, 170635, 238889, 299969, 311412, 313378, 315343, 317033, 315889, 314000, 312155 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13820,
-        "virtualMemoryUsage" : 1473843200,
-        "physicalMemoryUsage" : 319066112,
-        "heapUsage" : 740556800
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059066,
-    "taskID" : "task_1369942127770_1205_m_000035",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102415,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222081100,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102415,
-      "attemptID" : "attempt_1369942127770_1205_m_000035_0",
-      "clockSplits" : [ 4636, 4637, 1169, 1033, 1033, 670, 655, 655, 655, 3321, 143, 143 ],
-      "cpuUsages" : [ 1717, 1718, 1013, 985, 986, 885, 881, 881, 881, 908, 1012, 1013 ],
-      "vmemKbytes" : [ 348902, 1046707, 1421400, 1421895, 1421896, 1421895, 1421896, 1421895, 1421896, 1421896, 1421895, 1421896 ],
-      "physMemKbytes" : [ 71074, 213222, 292772, 299823, 306780, 310573, 310648, 310717, 310786, 310854, 310865, 310851 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13200,
-        "virtualMemoryUsage" : 1456021504,
-        "physicalMemoryUsage" : 318390272,
-        "heapUsage" : 731447296
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059066,
-    "taskID" : "task_1369942127770_1205_m_000036",
-    "taskType" : "MAP",
-    "finishTime" : 1371222125169,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222081101,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222125169,
-      "attemptID" : "attempt_1369942127770_1205_m_000036_0",
-      "clockSplits" : [ 6230, 3745, 1243, 1242, 1250, 1249, 1335, 1441, 1332, 1024, 1024, 22949 ],
-      "cpuUsages" : [ 2117, 1566, 1010, 1011, 961, 960, 1002, 1055, 988, 801, 801, 1438 ],
-      "vmemKbytes" : [ 474617, 1306098, 1425656, 1425655, 1425656, 1425655, 1425656, 1425655, 1425656, 1425656, 1425655, 1425656 ],
-      "physMemKbytes" : [ 88814, 246089, 280314, 293875, 300976, 301213, 301436, 301555, 301570, 299938, 297659, 295692 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13710,
-        "virtualMemoryUsage" : 1459871744,
-        "physicalMemoryUsage" : 303833088,
-        "heapUsage" : 727973888
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059067,
-    "taskID" : "task_1369942127770_1205_m_000037",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103766,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222081107,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103766,
-      "attemptID" : "attempt_1369942127770_1205_m_000037_0",
-      "clockSplits" : [ 5242, 4571, 1409, 1409, 1234, 1232, 1096, 946, 945, 2922, 485, 485 ],
-      "cpuUsages" : [ 1863, 1705, 964, 963, 1018, 1018, 961, 896, 896, 892, 877, 877 ],
-      "vmemKbytes" : [ 390265, 1158821, 1424332, 1424331, 1424332, 1424331, 1424332, 1424331, 1424332, 1424332, 1424331, 1424332 ],
-      "physMemKbytes" : [ 77364, 229859, 288579, 297802, 302713, 303041, 303341, 303445, 303514, 303521, 301077, 297356 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13440,
-        "virtualMemoryUsage" : 1458515968,
-        "physicalMemoryUsage" : 303296512,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059067,
-    "taskID" : "task_1369942127770_1205_m_000038",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102985,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222081108,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102985,
-      "attemptID" : "attempt_1369942127770_1205_m_000038_0",
-      "clockSplits" : [ 3604, 3605, 2556, 894, 894, 894, 1661, 1683, 801, 800, 800, 3680 ],
-      "cpuUsages" : [ 1519, 1519, 1354, 1093, 1093, 1093, 1206, 1172, 767, 766, 766, 1152 ],
-      "vmemKbytes" : [ 269653, 808959, 1307904, 1409271, 1409272, 1409271, 1409272, 1409271, 1409272, 1409272, 1409271, 1409272 ],
-      "physMemKbytes" : [ 56075, 168226, 272040, 293728, 294479, 295228, 297304, 301666, 302286, 300462, 298637, 296864 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13500,
-        "virtualMemoryUsage" : 1443094528,
-        "physicalMemoryUsage" : 303415296,
-        "heapUsage" : 734986240
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059067,
-    "taskID" : "task_1369942127770_1205_m_000039",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102412,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222081122,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102412,
-      "attemptID" : "attempt_1369942127770_1205_m_000039_0",
-      "clockSplits" : [ 2243, 2243, 2243, 2243, 1297, 1281, 1209, 1149, 1148, 1142, 1139, 1139 ],
-      "cpuUsages" : [ 1346, 1347, 1347, 1346, 1136, 1131, 1212, 1279, 1278, 996, 906, 906 ],
-      "vmemKbytes" : [ 176693, 530079, 883466, 1236853, 1419563, 1419615, 1419616, 1419615, 1419616, 1419616, 1419615, 1419616 ],
-      "physMemKbytes" : [ 38075, 114226, 190377, 266528, 305978, 306151, 306399, 307073, 307808, 308344, 308411, 308460 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14520,
-        "virtualMemoryUsage" : 1453686784,
-        "physicalMemoryUsage" : 315822080,
-        "heapUsage" : 732823552
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059068,
-    "taskID" : "task_1369942127770_1205_m_000040",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103554,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222081118,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103554,
-      "attemptID" : "attempt_1369942127770_1205_m_000040_0",
-      "clockSplits" : [ 4372, 4372, 2703, 1678, 1229, 1040, 1041, 902, 737, 738, 738, 2881 ],
-      "cpuUsages" : [ 1756, 1756, 1411, 1200, 1199, 1198, 1199, 1027, 823, 823, 823, 1025 ],
-      "vmemKbytes" : [ 298429, 895288, 1377502, 1420639, 1420640, 1420639, 1420640, 1420639, 1420640, 1420640, 1420639, 1420640 ],
-      "physMemKbytes" : [ 58537, 175611, 270284, 279159, 280291, 283392, 286616, 290044, 294932, 300108, 305284, 310287 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14240,
-        "virtualMemoryUsage" : 1454735360,
-        "physicalMemoryUsage" : 319156224,
-        "heapUsage" : 678690816
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059068,
-    "taskID" : "task_1369942127770_1205_m_000041",
-    "taskType" : "MAP",
-    "finishTime" : 1371222101748,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222081109,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222101748,
-      "attemptID" : "attempt_1369942127770_1205_m_000041_0",
-      "clockSplits" : [ 3312, 3313, 3219, 801, 802, 802, 802, 889, 889, 889, 2693, 837 ],
-      "cpuUsages" : [ 1508, 1509, 1490, 985, 985, 985, 986, 1108, 1109, 1108, 971, 846 ],
-      "vmemKbytes" : [ 242835, 728505, 1213832, 1438767, 1438768, 1438767, 1438768, 1438767, 1438768, 1438768, 1438767, 1438768 ],
-      "physMemKbytes" : [ 52179, 156537, 260822, 309253, 309436, 309618, 309801, 308717, 306403, 304088, 302092, 301832 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13690,
-        "virtualMemoryUsage" : 1473298432,
-        "physicalMemoryUsage" : 309014528,
-        "heapUsage" : 723976192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059068,
-    "taskID" : "task_1369942127770_1205_m_000042",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103767,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222081119,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103767,
-      "attemptID" : "attempt_1369942127770_1205_m_000042_0",
-      "clockSplits" : [ 3561, 3561, 3262, 2606, 888, 859, 859, 1003, 1314, 1315, 3006, 196 ],
-      "cpuUsages" : [ 1552, 1552, 1459, 1255, 1134, 1133, 1132, 1045, 857, 857, 789, 785 ],
-      "vmemKbytes" : [ 267994, 803983, 1313613, 1439867, 1439868, 1439867, 1439868, 1439867, 1439868, 1439868, 1439867, 1439868 ],
-      "physMemKbytes" : [ 57155, 171467, 280300, 309448, 311589, 312912, 314235, 315324, 313077, 309747, 307880, 307877 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13740,
-        "virtualMemoryUsage" : 1474424832,
-        "physicalMemoryUsage" : 318595072,
-        "heapUsage" : 723779584
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059068,
-    "taskID" : "task_1369942127770_1205_m_000043",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103881,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222081121,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103881,
-      "attemptID" : "attempt_1369942127770_1205_m_000043_0",
-      "clockSplits" : [ 3716, 3716, 2909, 1143, 1144, 1262, 1372, 1465, 1825, 3631, 197, 197 ],
-      "cpuUsages" : [ 1623, 1623, 1461, 1106, 1107, 1215, 1316, 1250, 988, 939, 886, 886 ],
-      "vmemKbytes" : [ 262336, 787009, 1285817, 1409271, 1409272, 1409271, 1409272, 1409271, 1409272, 1409272, 1409271, 1409272 ],
-      "physMemKbytes" : [ 54165, 162495, 265672, 294053, 297834, 301158, 301963, 302374, 302514, 302198, 299793, 297016 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14500,
-        "virtualMemoryUsage" : 1443094528,
-        "physicalMemoryUsage" : 302665728,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059069,
-    "taskID" : "task_1369942127770_1205_m_000044",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102868,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222081121,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102868,
-      "attemptID" : "attempt_1369942127770_1205_m_000044_0",
-      "clockSplits" : [ 3420, 3421, 2683, 1617, 1400, 1158, 1158, 3301, 2885, 154, 154, 155 ],
-      "cpuUsages" : [ 1443, 1443, 1405, 1350, 1224, 1085, 1085, 1191, 924, 903, 903, 904 ],
-      "vmemKbytes" : [ 271947, 815841, 1314315, 1409403, 1409404, 1409403, 1409404, 1409403, 1409404, 1409404, 1409403, 1409404 ],
-      "physMemKbytes" : [ 56476, 169428, 273297, 296495, 300225, 300941, 301104, 302318, 304696, 304473, 304240, 304008 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13940,
-        "virtualMemoryUsage" : 1443229696,
-        "physicalMemoryUsage" : 311136256,
-        "heapUsage" : 740360192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059069,
-    "taskID" : "task_1369942127770_1205_m_000045",
-    "taskType" : "MAP",
-    "finishTime" : 1371222127471,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222081121,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222127471,
-      "attemptID" : "attempt_1369942127770_1205_m_000045_0",
-      "clockSplits" : [ 4495, 4496, 1624, 1019, 1020, 1151, 1211, 1978, 28975, 125, 125, 125 ],
-      "cpuUsages" : [ 1757, 1757, 1255, 1150, 1150, 1108, 1090, 1085, 1209, 816, 816, 817 ],
-      "vmemKbytes" : [ 326114, 978343, 1408153, 1418043, 1418044, 1418043, 1418044, 1418043, 1418044, 1418044, 1418043, 1418044 ],
-      "physMemKbytes" : [ 67381, 202144, 292944, 300742, 306585, 311066, 311413, 311477, 311272, 310097, 308858, 307619 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14010,
-        "virtualMemoryUsage" : 1452077056,
-        "physicalMemoryUsage" : 314368000,
-        "heapUsage" : 721223680
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059069,
-    "taskID" : "task_1369942127770_1205_m_000046",
-    "taskType" : "MAP",
-    "finishTime" : 1371222124895,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222082113,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222124895,
-      "attemptID" : "attempt_1369942127770_1205_m_000046_0",
-      "clockSplits" : [ 3256, 3257, 3256, 3257, 1592, 889, 889, 867, 781, 782, 781, 23168 ],
-      "cpuUsages" : [ 1366, 1366, 1366, 1366, 1331, 1318, 1318, 1230, 906, 907, 906, 1320 ],
-      "vmemKbytes" : [ 165057, 495172, 825288, 1155403, 1403989, 1418567, 1418568, 1418567, 1418568, 1418568, 1418567, 1418568 ],
-      "physMemKbytes" : [ 30439, 91319, 152199, 213078, 259370, 263787, 265596, 267636, 276563, 288702, 300841, 312600 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14700,
-        "virtualMemoryUsage" : 1452613632,
-        "physicalMemoryUsage" : 323588096,
-        "heapUsage" : 675282944
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059070,
-    "taskID" : "task_1369942127770_1205_m_000047",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102985,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222082114,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102985,
-      "attemptID" : "attempt_1369942127770_1205_m_000047_0",
-      "clockSplits" : [ 4299, 4300, 2006, 1431, 1084, 884, 883, 874, 802, 802, 802, 2699 ],
-      "cpuUsages" : [ 1763, 1763, 1335, 1228, 1182, 1155, 1156, 1116, 822, 822, 822, 1126 ],
-      "vmemKbytes" : [ 320229, 960687, 1396409, 1409271, 1409272, 1409271, 1409272, 1409271, 1409272, 1409272, 1409271, 1409272 ],
-      "physMemKbytes" : [ 63258, 189774, 277972, 287030, 292846, 295605, 298083, 300529, 300299, 298352, 296405, 294521 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14290,
-        "virtualMemoryUsage" : 1443094528,
-        "physicalMemoryUsage" : 301035520,
-        "heapUsage" : 724041728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059070,
-    "taskID" : "task_1369942127770_1205_m_000048",
-    "taskType" : "MAP",
-    "finishTime" : 1371222102897,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222082113,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222102897,
-      "attemptID" : "attempt_1369942127770_1205_m_000048_0",
-      "clockSplits" : [ 2803, 2803, 2804, 1930, 902, 901, 902, 3220, 799, 798, 799, 2118 ],
-      "cpuUsages" : [ 1423, 1423, 1424, 1233, 1010, 1009, 1009, 1396, 817, 818, 817, 1261 ],
-      "vmemKbytes" : [ 199009, 597028, 995047, 1351087, 1409272, 1409271, 1409272, 1409271, 1409272, 1409272, 1409271, 1409272 ],
-      "physMemKbytes" : [ 43013, 129039, 215066, 291871, 303240, 301826, 300413, 299727, 299138, 298063, 296988, 296589 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13640,
-        "virtualMemoryUsage" : 1443094528,
-        "physicalMemoryUsage" : 307924992,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059070,
-    "taskID" : "task_1369942127770_1205_m_000049",
-    "taskType" : "MAP",
-    "finishTime" : 1371222129137,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222082116,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222129137,
-      "attemptID" : "attempt_1369942127770_1205_m_000049_0",
-      "clockSplits" : [ 2860, 2861, 2861, 2861, 1894, 1005, 1005, 7694, 5464, 5464, 5464, 7263 ],
-      "cpuUsages" : [ 1406, 1406, 1407, 1406, 1267, 1138, 1137, 1367, 736, 735, 736, 1109 ],
-      "vmemKbytes" : [ 160162, 480486, 800810, 1121133, 1398054, 1434867, 1434868, 1434867, 1434868, 1434868, 1434867, 1434868 ],
-      "physMemKbytes" : [ 30785, 92356, 153927, 215498, 269221, 279523, 283170, 286860, 294606, 304983, 315359, 325403 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13910,
-        "virtualMemoryUsage" : 1469304832,
-        "physicalMemoryUsage" : 336125952,
-        "heapUsage" : 675872768
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059071,
-    "taskID" : "task_1369942127770_1205_m_000050",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103702,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222082115,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103702,
-      "attemptID" : "attempt_1369942127770_1205_m_000050_0",
-      "clockSplits" : [ 3070, 3071, 3071, 3030, 1063, 1064, 1063, 981, 981, 980, 2531, 678 ],
-      "cpuUsages" : [ 1472, 1472, 1473, 1465, 1137, 1137, 1136, 1360, 1362, 1361, 920, 815 ],
-      "vmemKbytes" : [ 177976, 533928, 889881, 1245762, 1416656, 1416655, 1416656, 1416913, 1417437, 1417960, 1418314, 1418324 ],
-      "physMemKbytes" : [ 34783, 104349, 173916, 243470, 282136, 292267, 302399, 307271, 306752, 306233, 305870, 305826 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 15110,
-        "virtualMemoryUsage" : 1452363776,
-        "physicalMemoryUsage" : 313147392,
-        "heapUsage" : 663683072
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059071,
-    "taskID" : "task_1369942127770_1205_m_000051",
-    "taskType" : "MAP",
-    "finishTime" : 1371222114762,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222082116,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222114762,
-      "attemptID" : "attempt_1369942127770_1205_m_000051_0",
-      "clockSplits" : [ 2776, 2776, 2776, 2776, 2052, 1135, 1135, 15865, 337, 337, 337, 337 ],
-      "cpuUsages" : [ 1381, 1382, 1382, 1382, 1259, 1102, 1103, 1505, 806, 806, 806, 806 ],
-      "vmemKbytes" : [ 157661, 472983, 788305, 1103627, 1388243, 1437451, 1437452, 1437451, 1437452, 1437452, 1437451, 1437452 ],
-      "physMemKbytes" : [ 32208, 96626, 161044, 225461, 284440, 301714, 310271, 317790, 318550, 317867, 317184, 316501 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13720,
-        "virtualMemoryUsage" : 1471950848,
-        "physicalMemoryUsage" : 323747840,
-        "heapUsage" : 657391616
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059071,
-    "taskID" : "task_1369942127770_1205_m_000052",
-    "taskType" : "MAP",
-    "finishTime" : 1371222116084,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222082115,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222116084,
-      "attemptID" : "attempt_1369942127770_1205_m_000052_0",
-      "clockSplits" : [ 3007, 3008, 3007, 3008, 1568, 1223, 1222, 15532, 596, 597, 597, 597 ],
-      "cpuUsages" : [ 1507, 1507, 1507, 1507, 1238, 1175, 1174, 1321, 776, 776, 776, 776 ],
-      "vmemKbytes" : [ 169124, 507373, 845623, 1183872, 1412160, 1418503, 1418504, 1418503, 1418504, 1418504, 1418503, 1418504 ],
-      "physMemKbytes" : [ 32359, 97079, 161798, 226517, 275030, 290830, 305697, 313100, 310842, 308599, 306356, 304113 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14040,
-        "virtualMemoryUsage" : 1452548096,
-        "physicalMemoryUsage" : 310263808,
-        "heapUsage" : 656736256
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059071,
-    "taskID" : "task_1369942127770_1205_m_000053",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103694,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222083110,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103694,
-      "attemptID" : "attempt_1369942127770_1205_m_000053_0",
-      "clockSplits" : [ 2723, 2724, 2723, 2724, 1401, 1380, 987, 720, 719, 720, 2336, 1346 ],
-      "cpuUsages" : [ 1461, 1462, 1462, 1462, 1176, 1172, 1031, 936, 935, 935, 957, 1051 ],
-      "vmemKbytes" : [ 176884, 530654, 884423, 1238192, 1420450, 1420491, 1420492, 1420491, 1420492, 1420492, 1420491, 1420492 ],
-      "physMemKbytes" : [ 38706, 116120, 193534, 270947, 310895, 311037, 311316, 312193, 313137, 314081, 315011, 315367 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14100,
-        "virtualMemoryUsage" : 1454583808,
-        "physicalMemoryUsage" : 322899968,
-        "heapUsage" : 742457344
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059072,
-    "taskID" : "task_1369942127770_1205_m_000054",
-    "taskType" : "MAP",
-    "finishTime" : 1371222127757,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222083125,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222127757,
-      "attemptID" : "attempt_1369942127770_1205_m_000054_0",
-      "clockSplits" : [ 3770, 3770, 3350, 1454, 1455, 1119, 1113, 4738, 5863, 5864, 5864, 5864 ],
-      "cpuUsages" : [ 1933, 1934, 1782, 1099, 1099, 1086, 1086, 1152, 789, 790, 790, 790 ],
-      "vmemKbytes" : [ 255816, 767448, 1270616, 1440657, 1438670, 1437636, 1437636, 1437623, 1436443, 1434504, 1432565, 1430626 ],
-      "physMemKbytes" : [ 53820, 161460, 267313, 302807, 301966, 303414, 307344, 311222, 310193, 305969, 301744, 297520 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14690,
-        "virtualMemoryUsage" : 1463967744,
-        "physicalMemoryUsage" : 302465024,
-        "heapUsage" : 742260736
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059072,
-    "taskID" : "task_1369942127770_1205_m_000055",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103714,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222083112,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103714,
-      "attemptID" : "attempt_1369942127770_1205_m_000055_0",
-      "clockSplits" : [ 2702, 2702, 2702, 2702, 1233, 1210, 1258, 1338, 3529, 268, 268, 268 ],
-      "cpuUsages" : [ 1441, 1442, 1442, 1442, 1145, 1140, 1151, 1168, 1147, 810, 811, 811 ],
-      "vmemKbytes" : [ 178795, 536385, 893975, 1251564, 1434355, 1431439, 1428693, 1428123, 1428124, 1428124, 1428123, 1428124 ],
-      "physMemKbytes" : [ 38002, 114007, 190012, 266017, 303836, 301085, 298665, 299727, 301696, 301927, 300774, 299621 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14200,
-        "virtualMemoryUsage" : 1462398976,
-        "physicalMemoryUsage" : 306319360,
-        "heapUsage" : 740425728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059072,
-    "taskID" : "task_1369942127770_1205_m_000056",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103849,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222083165,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103849,
-      "attemptID" : "attempt_1369942127770_1205_m_000056_0",
-      "clockSplits" : [ 1942, 1942, 1942, 1943, 1942, 1815, 1471, 1602, 2567, 3041, 158, 159 ],
-      "cpuUsages" : [ 1364, 1365, 1365, 1365, 1365, 1347, 1296, 1278, 1135, 891, 864, 865 ],
-      "vmemKbytes" : [ 125438, 376316, 627194, 878071, 1128949, 1370541, 1435402, 1432859, 1428772, 1425767, 1425743, 1425744 ],
-      "physMemKbytes" : [ 26942, 80826, 134711, 188595, 242480, 294459, 310173, 312011, 309654, 305607, 303001, 300406 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14590,
-        "virtualMemoryUsage" : 1459961856,
-        "physicalMemoryUsage" : 306216960,
-        "heapUsage" : 742785024
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059073,
-    "taskID" : "task_1369942127770_1205_m_000057",
-    "taskType" : "MAP",
-    "finishTime" : 1371222103712,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222083127,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222103712,
-      "attemptID" : "attempt_1369942127770_1205_m_000057_0",
-      "clockSplits" : [ 2428, 2429, 2428, 2429, 2428, 1847, 997, 998, 1005, 1021, 1022, 1546 ],
-      "cpuUsages" : [ 1364, 1364, 1364, 1364, 1364, 1191, 938, 938, 886, 752, 753, 1142 ],
-      "vmemKbytes" : [ 128472, 385419, 642365, 899311, 1156258, 1391627, 1433817, 1430184, 1426697, 1425764, 1425763, 1425764 ],
-      "physMemKbytes" : [ 27860, 83580, 139301, 195021, 250742, 301700, 310016, 308217, 306366, 303606, 300513, 297518 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13420,
-        "virtualMemoryUsage" : 1459982336,
-        "physicalMemoryUsage" : 303755264,
-        "heapUsage" : 744357888
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059073,
-    "taskID" : "task_1369942127770_1205_m_000058",
-    "taskType" : "MAP",
-    "finishTime" : 1371222122471,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222083128,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222122471,
-      "attemptID" : "attempt_1369942127770_1205_m_000058_0",
-      "clockSplits" : [ 2490, 2490, 2491, 2338, 1678, 1612, 1441, 24272, 130, 131, 130, 131 ],
-      "cpuUsages" : [ 1390, 1390, 1390, 1352, 1192, 1144, 1016, 1333, 848, 848, 848, 849 ],
-      "vmemKbytes" : [ 184824, 554474, 924124, 1287306, 1409448, 1409447, 1409448, 1409447, 1409448, 1409448, 1409447, 1409448 ],
-      "physMemKbytes" : [ 39675, 119026, 198377, 276344, 302719, 302849, 301090, 298636, 297427, 296963, 296499, 296036 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13600,
-        "virtualMemoryUsage" : 1443274752,
-        "physicalMemoryUsage" : 302903296,
-        "heapUsage" : 718929920
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059073,
-    "taskID" : "task_1369942127770_1205_m_000059",
-    "taskType" : "MAP",
-    "finishTime" : 1371222124673,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222083120,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222124673,
-      "attemptID" : "attempt_1369942127770_1205_m_000059_0",
-      "clockSplits" : [ 2762, 2762, 2763, 2762, 1265, 1242, 1113, 964, 964, 1098, 1562, 22290 ],
-      "cpuUsages" : [ 1534, 1534, 1534, 1534, 1104, 1098, 1078, 1053, 1054, 977, 714, 1136 ],
-      "vmemKbytes" : [ 178607, 535821, 893035, 1250249, 1432998, 1430391, 1428024, 1427639, 1427640, 1427640, 1427639, 1427640 ],
-      "physMemKbytes" : [ 34082, 102247, 170412, 238577, 281383, 297244, 311441, 313974, 314247, 314480, 313649, 312382 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14350,
-        "virtualMemoryUsage" : 1461903360,
-        "physicalMemoryUsage" : 319496192,
-        "heapUsage" : 663027712
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059073,
-    "taskID" : "task_1369942127770_1205_m_000060",
-    "taskType" : "MAP",
-    "finishTime" : 1371222116128,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222097139,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222116128,
-      "attemptID" : "attempt_1369942127770_1205_m_000060_0",
-      "clockSplits" : [ 1500, 1501, 1500, 1501, 1500, 1501, 1487, 1433, 1426, 1113, 1114, 3407 ],
-      "cpuUsages" : [ 1038, 1039, 1038, 1039, 1038, 1039, 1025, 968, 966, 874, 873, 1403 ],
-      "vmemKbytes" : [ 105321, 315966, 526611, 737256, 947901, 1158545, 1365245, 1432246, 1429737, 1428540, 1428539, 1428540 ],
-      "physMemKbytes" : [ 22420, 67262, 112104, 156945, 201787, 246628, 290619, 304477, 303341, 301354, 298591, 295908 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12340,
-        "virtualMemoryUsage" : 1462824960,
-        "physicalMemoryUsage" : 302157824,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059074,
-    "taskID" : "task_1369942127770_1205_m_000061",
-    "taskType" : "MAP",
-    "finishTime" : 1371222116509,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222103155,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222116509,
-      "attemptID" : "attempt_1369942127770_1205_m_000061_0",
-      "clockSplits" : [ 1102, 1103, 1103, 1103, 1102, 1103, 1103, 1103, 1105, 1105, 2090, 227 ],
-      "cpuUsages" : [ 1023, 1024, 1023, 1024, 1024, 1023, 1024, 998, 914, 913, 1030, 1230 ],
-      "vmemKbytes" : [ 91613, 274839, 458066, 641293, 824520, 1007746, 1190973, 1369212, 1423060, 1423060, 1423059, 1423060 ],
-      "physMemKbytes" : [ 19978, 59934, 99891, 139848, 179805, 219762, 259719, 298545, 309145, 307525, 306010, 305645 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12250,
-        "virtualMemoryUsage" : 1457213440,
-        "physicalMemoryUsage" : 312954880,
-        "heapUsage" : 724041728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059074,
-    "taskID" : "task_1369942127770_1205_m_000062",
-    "taskType" : "MAP",
-    "finishTime" : 1371222120045,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222103156,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222120045,
-      "attemptID" : "attempt_1369942127770_1205_m_000062_0",
-      "clockSplits" : [ 1830, 1830, 1831, 1830, 1519, 770, 770, 769, 812, 1065, 1065, 2792 ],
-      "cpuUsages" : [ 1251, 1252, 1251, 1252, 1189, 1038, 1037, 1038, 1015, 876, 875, 1306 ],
-      "vmemKbytes" : [ 149737, 449211, 748686, 1048161, 1334683, 1409291, 1409292, 1409291, 1409292, 1409292, 1409291, 1409292 ],
-      "physMemKbytes" : [ 32142, 96428, 160713, 224998, 286484, 302152, 301689, 301225, 300738, 298783, 295954, 293214 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13380,
-        "virtualMemoryUsage" : 1443115008,
-        "physicalMemoryUsage" : 299433984,
-        "heapUsage" : 723779584
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059074,
-    "taskID" : "task_1369942127770_1205_m_000063",
-    "taskType" : "MAP",
-    "finishTime" : 1371222117644,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222103154,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222117644,
-      "attemptID" : "attempt_1369942127770_1205_m_000063_0",
-      "clockSplits" : [ 1249, 1250, 1250, 1249, 1250, 1250, 1298, 1478, 4009, 67, 67, 67 ],
-      "cpuUsages" : [ 1103, 1103, 1103, 1104, 1103, 1103, 1096, 1068, 1060, 989, 989, 989 ],
-      "vmemKbytes" : [ 104541, 313625, 522708, 731791, 940876, 1149959, 1354370, 1419379, 1419380, 1419380, 1419379, 1419380 ],
-      "physMemKbytes" : [ 22813, 68439, 114065, 159690, 205317, 250942, 295600, 311369, 313657, 314573, 314492, 314412 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12810,
-        "virtualMemoryUsage" : 1453445120,
-        "physicalMemoryUsage" : 321916928,
-        "heapUsage" : 728825856
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059075,
-    "taskID" : "task_1369942127770_1205_m_000064",
-    "taskType" : "MAP",
-    "finishTime" : 1371222117257,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222103156,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222117257,
-      "attemptID" : "attempt_1369942127770_1205_m_000064_0",
-      "clockSplits" : [ 1141, 1141, 1142, 1141, 1142, 1141, 1142, 1624, 2159, 1884, 219, 220 ],
-      "cpuUsages" : [ 1100, 1100, 1101, 1100, 1100, 1101, 1100, 1111, 1123, 880, 877, 877 ],
-      "vmemKbytes" : [ 95516, 286549, 477582, 668615, 859648, 1050681, 1241715, 1411172, 1437472, 1437472, 1437471, 1437472 ],
-      "physMemKbytes" : [ 20537, 61611, 102686, 143760, 184835, 225910, 266985, 303753, 311949, 312235, 309723, 307212 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12570,
-        "virtualMemoryUsage" : 1471971328,
-        "physicalMemoryUsage" : 313298944,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059075,
-    "taskID" : "task_1369942127770_1205_m_000065",
-    "taskType" : "MAP",
-    "finishTime" : 1371222142884,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222103154,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222142884,
-      "attemptID" : "attempt_1369942127770_1205_m_000065_0",
-      "clockSplits" : [ 6846, 6847, 6846, 6847, 6846, 1331, 720, 720, 720, 1574, 213, 214 ],
-      "cpuUsages" : [ 1068, 1069, 1069, 1068, 1069, 823, 795, 795, 796, 814, 827, 827 ],
-      "vmemKbytes" : [ 138171, 414514, 690857, 967200, 1243543, 1407908, 1409284, 1409283, 1409284, 1409284, 1409283, 1409284 ],
-      "physMemKbytes" : [ 27592, 82777, 137962, 193147, 248333, 280961, 280755, 280271, 279788, 279136, 277800, 276389 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11020,
-        "virtualMemoryUsage" : 1443106816,
-        "physicalMemoryUsage" : 282300416,
-        "heapUsage" : 606863360
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059075,
-    "taskID" : "task_1369942127770_1205_m_000066",
-    "taskType" : "MAP",
-    "finishTime" : 1371222118279,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222104206,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222118279,
-      "attemptID" : "attempt_1369942127770_1205_m_000066_0",
-      "clockSplits" : [ 1309, 1310, 1310, 1310, 1309, 1310, 1093, 740, 741, 741, 2689, 206 ],
-      "cpuUsages" : [ 1116, 1117, 1117, 1116, 1117, 1117, 1046, 933, 933, 933, 942, 1113 ],
-      "vmemKbytes" : [ 107292, 321876, 536460, 751043, 965628, 1180211, 1379124, 1420075, 1420076, 1420076, 1420075, 1420076 ],
-      "physMemKbytes" : [ 23107, 69321, 115536, 161750, 207965, 254180, 296965, 305182, 304437, 303692, 302947, 302581 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12600,
-        "virtualMemoryUsage" : 1454157824,
-        "physicalMemoryUsage" : 309813248,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059076,
-    "taskID" : "task_1369942127770_1205_m_000067",
-    "taskType" : "MAP",
-    "finishTime" : 1371222122382,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222104212,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222122382,
-      "attemptID" : "attempt_1369942127770_1205_m_000067_0",
-      "clockSplits" : [ 2306, 2306, 2307, 2306, 969, 948, 949, 1054, 1108, 1109, 2584, 218 ],
-      "cpuUsages" : [ 1454, 1454, 1455, 1454, 1273, 1269, 1270, 991, 848, 848, 1001, 1033 ],
-      "vmemKbytes" : [ 179001, 537003, 895005, 1253007, 1437446, 1437487, 1437488, 1437487, 1437488, 1437488, 1437487, 1437488 ],
-      "physMemKbytes" : [ 37869, 113607, 189345, 265083, 304399, 305018, 305630, 306131, 306267, 306373, 305816, 304030 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14350,
-        "virtualMemoryUsage" : 1471987712,
-        "physicalMemoryUsage" : 310398976,
-        "heapUsage" : 723779584
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059076,
-    "taskID" : "task_1369942127770_1205_m_000068",
-    "taskType" : "MAP",
-    "finishTime" : 1371222139789,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222104213,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222139789,
-      "attemptID" : "attempt_1369942127770_1205_m_000068_0",
-      "clockSplits" : [ 7214, 7215, 7214, 7215, 722, 608, 609, 609, 608, 2851, 158, 158 ],
-      "cpuUsages" : [ 1219, 1220, 1220, 1220, 895, 890, 890, 890, 890, 861, 857, 858 ],
-      "vmemKbytes" : [ 178706, 536118, 893530, 1250942, 1435030, 1433622, 1432162, 1430701, 1429241, 1428318, 1428303, 1428304 ],
-      "physMemKbytes" : [ 33878, 101634, 169390, 237145, 275703, 283011, 290312, 297612, 304913, 309538, 309654, 309698 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12160,
-        "virtualMemoryUsage" : 1462583296,
-        "physicalMemoryUsage" : 317272064,
-        "heapUsage" : 661913600
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059076,
-    "taskID" : "task_1369942127770_1205_m_000069",
-    "taskType" : "MAP",
-    "finishTime" : 1371222117823,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222104211,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222117823,
-      "attemptID" : "attempt_1369942127770_1205_m_000069_0",
-      "clockSplits" : [ 1345, 1346, 1346, 1346, 1345, 1346, 1251, 1080, 1080, 1943, 89, 90 ],
-      "cpuUsages" : [ 1283, 1284, 1284, 1284, 1284, 1284, 1262, 1222, 1222, 1068, 886, 887 ],
-      "vmemKbytes" : [ 107219, 321657, 536096, 750535, 964974, 1179413, 1380249, 1424691, 1424692, 1424692, 1424691, 1424692 ],
-      "physMemKbytes" : [ 23184, 69554, 115924, 162293, 208663, 255032, 298478, 308303, 308574, 308817, 308869, 308884 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14250,
-        "virtualMemoryUsage" : 1458884608,
-        "physicalMemoryUsage" : 316305408,
-        "heapUsage" : 728498176
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059076,
-    "taskID" : "task_1369942127770_1205_m_000070",
-    "taskType" : "MAP",
-    "finishTime" : 1371222120103,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222104209,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222120103,
-      "attemptID" : "attempt_1369942127770_1205_m_000070_0",
-      "clockSplits" : [ 2413, 2414, 2414, 2414, 829, 801, 801, 3485, 79, 80, 79, 80 ],
-      "cpuUsages" : [ 1351, 1352, 1352, 1351, 1086, 1082, 1081, 1047, 792, 792, 792, 792 ],
-      "vmemKbytes" : [ 178427, 535281, 892136, 1248991, 1432584, 1430750, 1428865, 1426991, 1426256, 1426256, 1426255, 1426256 ],
-      "physMemKbytes" : [ 37393, 112181, 186969, 261756, 300169, 299652, 299123, 298584, 297156, 295154, 293151, 291149 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12870,
-        "virtualMemoryUsage" : 1460486144,
-        "physicalMemoryUsage" : 297111552,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059077,
-    "taskID" : "task_1369942127770_1205_m_000071",
-    "taskType" : "MAP",
-    "finishTime" : 1371222116746,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222104212,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222116746,
-      "attemptID" : "attempt_1369942127770_1205_m_000071_0",
-      "clockSplits" : [ 1399, 1400, 1400, 1400, 1400, 1400, 842, 615, 615, 614, 615, 829 ],
-      "cpuUsages" : [ 1079, 1080, 1079, 1080, 1079, 1080, 919, 855, 854, 854, 854, 1127 ],
-      "vmemKbytes" : [ 114375, 343125, 571876, 800626, 1029377, 1258128, 1429156, 1438747, 1438748, 1438748, 1438747, 1438748 ],
-      "physMemKbytes" : [ 24578, 73734, 122891, 172048, 221205, 270361, 306966, 308465, 307878, 307290, 306702, 306207 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11940,
-        "virtualMemoryUsage" : 1473277952,
-        "physicalMemoryUsage" : 313466880,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059077,
-    "taskID" : "task_1369942127770_1205_m_000072",
-    "taskType" : "MAP",
-    "finishTime" : 1371222119279,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222104210,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222119279,
-      "attemptID" : "attempt_1369942127770_1205_m_000072_0",
-      "clockSplits" : [ 1218, 1219, 1219, 1219, 1218, 1219, 1219, 990, 787, 787, 786, 3182 ],
-      "cpuUsages" : [ 1182, 1182, 1182, 1182, 1182, 1182, 1182, 1067, 964, 965, 965, 1145 ],
-      "vmemKbytes" : [ 96309, 288929, 481549, 674168, 866788, 1059407, 1252028, 1417169, 1435861, 1432977, 1430092, 1427627 ],
-      "physMemKbytes" : [ 20607, 61821, 103035, 144249, 185464, 226678, 267893, 302818, 304217, 300676, 297135, 294096 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13380,
-        "virtualMemoryUsage" : 1461575680,
-        "physicalMemoryUsage" : 300732416,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059077,
-    "taskID" : "task_1369942127770_1205_m_000073",
-    "taskType" : "MAP",
-    "finishTime" : 1371222116354,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222105211,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222116354,
-      "attemptID" : "attempt_1369942127770_1205_m_000073_0",
-      "clockSplits" : [ 1066, 1066, 1066, 1066, 1066, 1066, 1066, 3425, 62, 62, 62, 62 ],
-      "cpuUsages" : [ 983, 983, 983, 983, 983, 984, 983, 964, 826, 826, 826, 826 ],
-      "vmemKbytes" : [ 91186, 273558, 455931, 638304, 820677, 1003049, 1185422, 1366539, 1437580, 1437580, 1437579, 1437580 ],
-      "physMemKbytes" : [ 18730, 56190, 93651, 131111, 168572, 206032, 243493, 280753, 300503, 308951, 317398, 325847 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11150,
-        "virtualMemoryUsage" : 1472081920,
-        "physicalMemoryUsage" : 337993728,
-        "heapUsage" : 679804928
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059078,
-    "taskID" : "task_1369942127770_1205_m_000074",
-    "taskType" : "MAP",
-    "finishTime" : 1371222117482,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222105212,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222117482,
-      "attemptID" : "attempt_1369942127770_1205_m_000074_0",
-      "clockSplits" : [ 1130, 1131, 1131, 1131, 1131, 1131, 1130, 1087, 760, 760, 760, 983 ],
-      "cpuUsages" : [ 1122, 1123, 1123, 1123, 1123, 1123, 1123, 1103, 953, 952, 952, 1210 ],
-      "vmemKbytes" : [ 89422, 268266, 447110, 625954, 804799, 983643, 1162488, 1340061, 1409432, 1409432, 1409431, 1409432 ],
-      "physMemKbytes" : [ 19797, 59392, 98988, 138583, 178180, 217775, 257371, 296665, 310308, 307505, 304701, 301898 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13030,
-        "virtualMemoryUsage" : 1443258368,
-        "physicalMemoryUsage" : 307699712,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059078,
-    "taskID" : "task_1369942127770_1205_m_000075",
-    "taskType" : "MAP",
-    "finishTime" : 1371222122401,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222105213,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222122401,
-      "attemptID" : "attempt_1369942127770_1205_m_000075_0",
-      "clockSplits" : [ 1858, 1858, 1858, 1858, 1859, 1408, 1202, 1156, 804, 803, 804, 1715 ],
-      "cpuUsages" : [ 1273, 1274, 1274, 1274, 1274, 1159, 1106, 1069, 800, 799, 799, 1319 ],
-      "vmemKbytes" : [ 133405, 400215, 667026, 933837, 1200648, 1404711, 1417880, 1417879, 1417880, 1417880, 1417879, 1417880 ],
-      "physMemKbytes" : [ 28701, 86104, 143508, 200911, 258315, 302557, 306759, 308178, 307670, 305916, 304161, 302442 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13420,
-        "virtualMemoryUsage" : 1451909120,
-        "physicalMemoryUsage" : 309051392,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059078,
-    "taskID" : "task_1369942127770_1205_m_000076",
-    "taskType" : "MAP",
-    "finishTime" : 1371222122853,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222106215,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222122853,
-      "attemptID" : "attempt_1369942127770_1205_m_000076_0",
-      "clockSplits" : [ 1403, 1403, 1403, 1403, 1403, 1403, 1403, 1741, 4606, 154, 155, 155 ],
-      "cpuUsages" : [ 1148, 1149, 1149, 1149, 1149, 1149, 1149, 1159, 1170, 996, 996, 997 ],
-      "vmemKbytes" : [ 91602, 274808, 458014, 641219, 824426, 1007631, 1190838, 1369307, 1423984, 1423984, 1423983, 1423984 ],
-      "physMemKbytes" : [ 19851, 59554, 99258, 138961, 178666, 218369, 258073, 296821, 310558, 310242, 307937, 305632 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13360,
-        "virtualMemoryUsage" : 1458159616,
-        "physicalMemoryUsage" : 311787520,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059079,
-    "taskID" : "task_1369942127770_1205_m_000077",
-    "taskType" : "MAP",
-    "finishTime" : 1371222123218,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222106215,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222123218,
-      "attemptID" : "attempt_1369942127770_1205_m_000077_0",
-      "clockSplits" : [ 2676, 2677, 2676, 2677, 821, 793, 794, 3489, 97, 97, 97, 97 ],
-      "cpuUsages" : [ 1339, 1340, 1340, 1340, 957, 951, 951, 951, 975, 975, 975, 976 ],
-      "vmemKbytes" : [ 176938, 530815, 884692, 1238569, 1420882, 1420923, 1420924, 1420923, 1420924, 1420924, 1420923, 1420924 ],
-      "physMemKbytes" : [ 38335, 115005, 191676, 268346, 307977, 308255, 308526, 308795, 308516, 307709, 306902, 306095 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13070,
-        "virtualMemoryUsage" : 1455026176,
-        "physicalMemoryUsage" : 313028608,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059079,
-    "taskID" : "task_1369942127770_1205_m_000078",
-    "taskType" : "MAP",
-    "finishTime" : 1371222127755,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222107218,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222127755,
-      "attemptID" : "attempt_1369942127770_1205_m_000078_0",
-      "clockSplits" : [ 2466, 2467, 2466, 2467, 3087, 638, 583, 582, 583, 583, 1609, 3001 ],
-      "cpuUsages" : [ 1319, 1319, 1320, 1319, 1177, 909, 903, 903, 902, 903, 786, 1120 ],
-      "vmemKbytes" : [ 176823, 530469, 884116, 1237762, 1420607, 1420659, 1420660, 1420659, 1420660, 1420660, 1420659, 1420660 ],
-      "physMemKbytes" : [ 37490, 112471, 187452, 262433, 299476, 297339, 296741, 296144, 295547, 294950, 294467, 294436 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12880,
-        "virtualMemoryUsage" : 1454755840,
-        "physicalMemoryUsage" : 301457408,
-        "heapUsage" : 723779584
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059079,
-    "taskID" : "task_1369942127770_1205_m_000079",
-    "taskType" : "MAP",
-    "finishTime" : 1371222127589,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222107220,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222127589,
-      "attemptID" : "attempt_1369942127770_1205_m_000079_0",
-      "clockSplits" : [ 2808, 2809, 2809, 2808, 850, 816, 816, 814, 796, 797, 797, 3445 ],
-      "cpuUsages" : [ 1306, 1307, 1307, 1307, 1048, 1043, 1043, 1018, 839, 838, 838, 1256 ],
-      "vmemKbytes" : [ 179463, 538389, 897316, 1256243, 1441819, 1441871, 1441872, 1441871, 1441872, 1441872, 1441871, 1441872 ],
-      "physMemKbytes" : [ 38683, 116049, 193416, 270783, 311546, 313136, 314715, 316267, 315488, 313213, 310938, 308727 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13150,
-        "virtualMemoryUsage" : 1476476928,
-        "physicalMemoryUsage" : 315416576,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059080,
-    "taskID" : "task_1369942127770_1205_m_000080",
-    "taskType" : "MAP",
-    "finishTime" : 1371222123105,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222107219,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222123105,
-      "attemptID" : "attempt_1369942127770_1205_m_000080_0",
-      "clockSplits" : [ 2261, 2262, 2262, 2262, 2198, 591, 591, 591, 591, 592, 1475, 205 ],
-      "cpuUsages" : [ 1233, 1233, 1234, 1233, 1223, 948, 949, 948, 949, 948, 1055, 1087 ],
-      "vmemKbytes" : [ 142013, 426040, 710068, 994095, 1277915, 1409291, 1409292, 1409291, 1409292, 1409292, 1409291, 1409292 ],
-      "physMemKbytes" : [ 30773, 92321, 153868, 215415, 276919, 305910, 306883, 307856, 308829, 309802, 309923, 308075 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13040,
-        "virtualMemoryUsage" : 1443115008,
-        "physicalMemoryUsage" : 314482688,
-        "heapUsage" : 742129664
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059080,
-    "taskID" : "task_1369942127770_1205_m_000081",
-    "taskType" : "MAP",
-    "finishTime" : 1371222132159,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222116240,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222132159,
-      "attemptID" : "attempt_1369942127770_1205_m_000081_0",
-      "clockSplits" : [ 1059, 1060, 1060, 1060, 1059, 1060, 1060, 1410, 4727, 335, 334, 335 ],
-      "cpuUsages" : [ 1089, 1090, 1090, 1090, 1090, 1090, 1090, 1091, 1008, 847, 847, 848 ],
-      "vmemKbytes" : [ 91426, 274280, 457134, 639987, 822841, 1005694, 1188548, 1370102, 1441028, 1441028, 1441027, 1441028 ],
-      "physMemKbytes" : [ 20740, 62221, 103704, 145185, 186667, 228148, 269631, 310818, 326794, 325251, 323278, 321306 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12430,
-        "virtualMemoryUsage" : 1475612672,
-        "physicalMemoryUsage" : 327917568,
-        "heapUsage" : 657260544
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059080,
-    "taskID" : "task_1369942127770_1205_m_000082",
-    "taskType" : "MAP",
-    "finishTime" : 1371222132250,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222117244,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222132250,
-      "attemptID" : "attempt_1369942127770_1205_m_000082_0",
-      "clockSplits" : [ 1229, 1230, 1230, 1230, 1229, 1230, 1230, 3866, 83, 84, 83, 84 ],
-      "cpuUsages" : [ 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1009, 919, 918, 919, 919 ],
-      "vmemKbytes" : [ 92019, 276058, 460097, 644136, 828175, 1012214, 1196253, 1377655, 1441156, 1441156, 1441155, 1441156 ],
-      "physMemKbytes" : [ 18161, 54484, 90809, 127132, 163456, 199779, 236103, 271895, 283917, 283136, 282355, 281574 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11980,
-        "virtualMemoryUsage" : 1475743744,
-        "physicalMemoryUsage" : 287850496,
-        "heapUsage" : 608370688
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059080,
-    "taskID" : "task_1369942127770_1205_m_000083",
-    "taskType" : "MAP",
-    "finishTime" : 1371222134319,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222117244,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222134319,
-      "attemptID" : "attempt_1369942127770_1205_m_000083_0",
-      "clockSplits" : [ 2126, 2126, 2126, 2126, 842, 820, 819, 813, 783, 783, 783, 2923 ],
-      "cpuUsages" : [ 1199, 1200, 1200, 1200, 934, 930, 930, 909, 816, 816, 816, 1250 ],
-      "vmemKbytes" : [ 178727, 536181, 893635, 1251088, 1434711, 1432295, 1429826, 1427400, 1426584, 1426584, 1426583, 1426584 ],
-      "physMemKbytes" : [ 38394, 115182, 191970, 268758, 307779, 306378, 304967, 303565, 302585, 301819, 301052, 300280 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12200,
-        "virtualMemoryUsage" : 1460822016,
-        "physicalMemoryUsage" : 307064832,
-        "heapUsage" : 734920704
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059081,
-    "taskID" : "task_1369942127770_1205_m_000084",
-    "taskType" : "MAP",
-    "finishTime" : 1371222133861,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222118252,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222133861,
-      "attemptID" : "attempt_1369942127770_1205_m_000084_0",
-      "clockSplits" : [ 2230, 2231, 2231, 2231, 750, 709, 709, 709, 803, 871, 871, 872 ],
-      "cpuUsages" : [ 1179, 1179, 1180, 1179, 1004, 999, 998, 999, 861, 761, 760, 761 ],
-      "vmemKbytes" : [ 178623, 535870, 893117, 1250364, 1438606, 1438739, 1438740, 1438739, 1438740, 1438740, 1438739, 1438740 ],
-      "physMemKbytes" : [ 34739, 104219, 173699, 243178, 279472, 278825, 278153, 277480, 277015, 277474, 278043, 278614 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12480,
-        "virtualMemoryUsage" : 1473269760,
-        "physicalMemoryUsage" : 284733440,
-        "heapUsage" : 601817088
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059081,
-    "taskID" : "task_1369942127770_1205_m_000085",
-    "taskType" : "MAP",
-    "finishTime" : 1371222139704,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222118252,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222139704,
-      "attemptID" : "attempt_1369942127770_1205_m_000085_0",
-      "clockSplits" : [ 3454, 3455, 3455, 3454, 1009, 966, 966, 746, 682, 681, 682, 1895 ],
-      "cpuUsages" : [ 1451, 1451, 1451, 1452, 1056, 1049, 1050, 858, 801, 801, 802, 1128 ],
-      "vmemKbytes" : [ 177565, 532695, 887825, 1242955, 1426567, 1426619, 1426620, 1426619, 1426620, 1426620, 1426619, 1426620 ],
-      "physMemKbytes" : [ 36583, 109749, 182916, 256083, 293999, 294187, 294366, 294292, 293645, 292976, 292306, 291648 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13350,
-        "virtualMemoryUsage" : 1460858880,
-        "physicalMemoryUsage" : 298389504,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059081,
-    "taskID" : "task_1369942127770_1205_m_000086",
-    "taskType" : "MAP",
-    "finishTime" : 1371222136354,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222118251,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222136354,
-      "attemptID" : "attempt_1369942127770_1205_m_000086_0",
-      "clockSplits" : [ 3475, 3475, 3476, 711, 642, 643, 642, 677, 933, 934, 933, 1558 ],
-      "cpuUsages" : [ 1468, 1468, 1468, 1016, 1005, 1005, 1004, 979, 787, 786, 786, 1068 ],
-      "vmemKbytes" : [ 238103, 714311, 1190519, 1438076, 1434027, 1429835, 1425644, 1421481, 1419856, 1419856, 1419855, 1419856 ],
-      "physMemKbytes" : [ 50419, 151257, 252095, 303534, 300615, 297664, 294714, 291769, 289364, 287302, 285239, 283851 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12840,
-        "virtualMemoryUsage" : 1453932544,
-        "physicalMemoryUsage" : 290590720,
-        "heapUsage" : 723451904
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059082,
-    "taskID" : "task_1369942127770_1205_m_000087",
-    "taskType" : "MAP",
-    "finishTime" : 1371222139789,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222118251,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222139789,
-      "attemptID" : "attempt_1369942127770_1205_m_000087_0",
-      "clockSplits" : [ 3491, 3492, 3492, 3492, 853, 807, 807, 806, 796, 796, 796, 1904 ],
-      "cpuUsages" : [ 1371, 1372, 1371, 1372, 1005, 999, 1000, 981, 848, 849, 848, 1114 ],
-      "vmemKbytes" : [ 176529, 529588, 882647, 1235706, 1418247, 1418299, 1418300, 1418299, 1418300, 1418300, 1418299, 1418300 ],
-      "physMemKbytes" : [ 37865, 113597, 189329, 265060, 304618, 305460, 306291, 307107, 306593, 305225, 303856, 302522 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13130,
-        "virtualMemoryUsage" : 1452339200,
-        "physicalMemoryUsage" : 309321728,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059082,
-    "taskID" : "task_1369942127770_1205_m_000088",
-    "taskType" : "MAP",
-    "finishTime" : 1371222136362,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222119253,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222136362,
-      "attemptID" : "attempt_1369942127770_1205_m_000088_0",
-      "clockSplits" : [ 2893, 2894, 2894, 1311, 689, 690, 689, 743, 930, 931, 930, 1511 ],
-      "cpuUsages" : [ 1313, 1313, 1313, 1052, 949, 949, 949, 909, 770, 769, 770, 1204 ],
-      "vmemKbytes" : [ 214687, 644062, 1073437, 1392086, 1409140, 1409139, 1409140, 1409139, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 46097, 138291, 230486, 299182, 303872, 304943, 306014, 307012, 305925, 303888, 301850, 300616 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12260,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 307785728,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059082,
-    "taskID" : "task_1369942127770_1205_m_000089",
-    "taskType" : "MAP",
-    "finishTime" : 1371222132666,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222119254,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222132666,
-      "attemptID" : "attempt_1369942127770_1205_m_000089_0",
-      "clockSplits" : [ 1524, 1525, 1525, 1525, 1525, 1525, 596, 541, 542, 541, 541, 1496 ],
-      "cpuUsages" : [ 1088, 1088, 1088, 1089, 1088, 1088, 829, 814, 813, 814, 813, 1188 ],
-      "vmemKbytes" : [ 118410, 355230, 592051, 828872, 1065693, 1302514, 1433707, 1434071, 1434072, 1434072, 1434071, 1434072 ],
-      "physMemKbytes" : [ 25455, 76367, 127278, 178189, 229102, 280013, 307852, 307113, 306294, 305475, 304656, 303834 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11800,
-        "virtualMemoryUsage" : 1468489728,
-        "physicalMemoryUsage" : 310685696,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059082,
-    "taskID" : "task_1369942127770_1205_m_000090",
-    "taskType" : "MAP",
-    "finishTime" : 1371222141107,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222119254,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222141107,
-      "attemptID" : "attempt_1369942127770_1205_m_000090_0",
-      "clockSplits" : [ 3299, 3300, 3300, 3300, 1010, 971, 971, 735, 677, 677, 677, 2932 ],
-      "cpuUsages" : [ 1468, 1469, 1469, 1468, 1113, 1106, 1106, 896, 845, 845, 844, 1181 ],
-      "vmemKbytes" : [ 177790, 533371, 888953, 1244534, 1428379, 1428431, 1428432, 1428431, 1428432, 1428432, 1428431, 1428432 ],
-      "physMemKbytes" : [ 36477, 109431, 182386, 255341, 293743, 295167, 296582, 297326, 296690, 296012, 295333, 294667 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13810,
-        "virtualMemoryUsage" : 1462714368,
-        "physicalMemoryUsage" : 301477888,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059083,
-    "taskID" : "task_1369942127770_1205_m_000091",
-    "taskType" : "MAP",
-    "finishTime" : 1371222135965,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222120259,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222135965,
-      "attemptID" : "attempt_1369942127770_1205_m_000091_0",
-      "clockSplits" : [ 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 2873, 208, 208, 208 ],
-      "cpuUsages" : [ 1031, 1032, 1031, 1032, 1031, 1032, 1031, 1032, 875, 811, 811, 811 ],
-      "vmemKbytes" : [ 86236, 258709, 431183, 603656, 776130, 948603, 1121077, 1293550, 1422372, 1429552, 1429551, 1429552 ],
-      "physMemKbytes" : [ 17759, 53278, 88799, 124318, 159839, 195358, 230879, 266398, 292713, 293373, 292518, 291663 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11660,
-        "virtualMemoryUsage" : 1463861248,
-        "physicalMemoryUsage" : 298164224,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059083,
-    "taskID" : "task_1369942127770_1205_m_000092",
-    "taskType" : "MAP",
-    "finishTime" : 1371222141263,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222120260,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222141263,
-      "attemptID" : "attempt_1369942127770_1205_m_000092_0",
-      "clockSplits" : [ 2790, 2790, 2790, 2790, 1207, 1183, 1013, 663, 663, 664, 663, 3419 ],
-      "cpuUsages" : [ 1414, 1415, 1414, 1415, 1063, 1057, 992, 858, 858, 858, 858, 1138 ],
-      "vmemKbytes" : [ 175507, 526522, 877537, 1228552, 1409390, 1409431, 1409432, 1409431, 1409432, 1409432, 1409431, 1409432 ],
-      "physMemKbytes" : [ 37701, 113103, 188506, 263908, 302825, 302979, 303086, 302647, 302037, 301427, 300816, 300337 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13470,
-        "virtualMemoryUsage" : 1443258368,
-        "physicalMemoryUsage" : 307466240,
-        "heapUsage" : 723910656
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222059083,
-    "taskID" : "task_1369942127770_1205_m_000093",
-    "taskType" : "MAP",
-    "finishTime" : 1371222140945,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222121262,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222140945,
-      "attemptID" : "attempt_1369942127770_1205_m_000093_0",
-      "clockSplits" : [ 2364, 2365, 2365, 2365, 2596, 1091, 628, 629, 628, 629, 2831, 383 ],
-      "cpuUsages" : [ 1300, 1300, 1300, 1300, 1207, 990, 924, 925, 924, 925, 887, 878 ],
-      "vmemKbytes" : [ 179076, 537228, 895381, 1253534, 1438050, 1437355, 1434909, 1432392, 1429877, 1427361, 1425627, 1425572 ],
-      "physMemKbytes" : [ 38409, 115228, 192047, 268866, 308684, 308141, 305153, 302065, 298978, 295891, 293745, 293615 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13140,
-        "virtualMemoryUsage" : 1459785728,
-        "physicalMemoryUsage" : 300752896,
-        "heapUsage" : 727515136
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059084,
-    "taskID" : "task_1369942127770_1205_m_000094",
-    "taskType" : "MAP",
-    "finishTime" : 1371222136213,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222122266,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222136213,
-      "attemptID" : "attempt_1369942127770_1205_m_000094_0",
-      "clockSplits" : [ 1233, 1233, 1234, 1233, 1234, 1233, 1233, 762, 671, 672, 672, 2532 ],
-      "cpuUsages" : [ 980, 981, 980, 981, 980, 981, 981, 746, 702, 702, 702, 1204 ],
-      "vmemKbytes" : [ 98416, 295249, 492083, 688916, 885750, 1082583, 1279417, 1406650, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 21848, 65544, 109240, 152936, 196633, 240328, 284025, 311912, 311463, 310448, 309433, 308423 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 10920,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 315342848,
-        "heapUsage" : 723451904
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222059084,
-    "taskID" : "task_1369942127770_1205_m_000095",
-    "taskType" : "MAP",
-    "finishTime" : 1371222141112,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222123269,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222141112,
-      "attemptID" : "attempt_1369942127770_1205_m_000095_0",
-      "clockSplits" : [ 2087, 2088, 2087, 2088, 2088, 1195, 746, 746, 746, 2974, 245, 246 ],
-      "cpuUsages" : [ 1246, 1246, 1247, 1246, 1247, 1130, 1071, 1071, 1071, 975, 875, 875 ],
-      "vmemKbytes" : [ 132085, 396256, 660427, 924598, 1188769, 1394563, 1409404, 1409403, 1409404, 1409404, 1409403, 1409404 ],
-      "physMemKbytes" : [ 28569, 85709, 142849, 199988, 257129, 301711, 305219, 305534, 305849, 305967, 304859, 303540 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13560,
-        "virtualMemoryUsage" : 1443229696,
-        "physicalMemoryUsage" : 310263808,
-        "heapUsage" : 734920704
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  } ],
-  "reduceTasks" : [ ],
-  "launchTime" : 1371222058937,
-  "totalMaps" : 96,
-  "totalReduces" : 0,
-  "otherTasks" : [ ],
-  "jobProperties" : {
-    "mapreduce.job.ubertask.enable" : "false",
-    "yarn.resourcemanager.max-completed-applications" : "10000",
-    "yarn.resourcemanager.delayed.delegation-token.removal-interval-ms" : "30000",
-    "mapreduce.client.submit.file.replication" : "2",
-    "yarn.nodemanager.container-manager.thread-count" : "20",
-    "mapred.queue.default.acl-administer-jobs" : "*",
-    "dfs.image.transfer.bandwidthPerSec" : "0",
-    "mapreduce.jobtracker.staging.root.dir" : "/user",
-    "yarn.resourcemanager.recovery.enabled" : "false",
-    "yarn.resourcemanager.am.max-retries" : "1",
-    "dfs.block.access.token.lifetime" : "600",
-    "fs.AbstractFileSystem.file.impl" : "org.apache.hadoop.fs.local.LocalFs",
-    "mapreduce.client.completion.pollinterval" : "5000",
-    "mapreduce.job.ubertask.maxreduces" : "1",
-    "mapreduce.reduce.shuffle.memory.limit.percent" : "0.25",
-    "dfs.domain.socket.path" : "/var/run/hdfs-sockets/dn",
-    "hadoop.ssl.keystores.factory.class" : "org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory",
-    "hadoop.http.authentication.kerberos.keytab" : "${user.home}/hadoop.keytab",
-    "yarn.nodemanager.keytab" : "/etc/krb5.keytab",
-    "mapreduce.task.io.sort.factor" : "10",
-    "yarn.nodemanager.disk-health-checker.interval-ms" : "120000",
-    "mapreduce.job.working.dir" : "hdfs://a2115.smile.com:8020/user/jenkins",
-    "yarn.admin.acl" : "*",
-    "mapreduce.job.speculative.speculativecap" : "0.1",
-    "dfs.namenode.num.checkpoints.retained" : "2",
-    "dfs.namenode.delegation.token.renew-interval" : "86400000",
-    "yarn.nodemanager.resource.memory-mb" : "8192",
-    "io.map.index.interval" : "128",
-    "mapreduce.task.files.preserve.failedtasks" : "false",
-    "dfs.namenode.http-address" : "a2115.smile.com:20101",
-    "ha.zookeeper.session-timeout.ms" : "5000",
-    "hadoop.hdfs.configuration.version" : "1",
-    "dfs.datanode.balance.bandwidthPerSec" : "1048576",
-    "mapreduce.reduce.shuffle.connect.timeout" : "180000",
-    "dfs.journalnode.rpc-address" : "0.0.0.0:8485",
-    "yarn.nodemanager.aux-services" : "mapreduce.shuffle",
-    "mapreduce.job.counters.max" : "120",
-    "dfs.datanode.readahead.bytes" : "4193404",
-    "ipc.client.connect.max.retries.on.timeouts" : "45",
-    "mapreduce.job.complete.cancel.delegation.tokens" : "true",
-    "dfs.client.failover.max.attempts" : "15",
-    "dfs.namenode.checkpoint.dir" : "file://${hadoop.tmp.dir}/dfs/namesecondary",
-    "dfs.namenode.replication.work.multiplier.per.iteration" : "2",
-    "fs.trash.interval" : "1",
-    "yarn.resourcemanager.admin.address" : "a2115.smile.com:8033",
-    "ha.health-monitor.check-interval.ms" : "1000",
-    "mapreduce.job.outputformat.class" : "org.apache.hadoop.examples.terasort.TeraOutputFormat",
-    "hadoop.jetty.logs.serve.aliases" : "true",
-    "hadoop.http.authentication.kerberos.principal" : "HTTP/_HOST@LOCALHOST",
-    "mapreduce.job.reduce.shuffle.consumer.plugin.class" : "org.apache.hadoop.mapreduce.task.reduce.Shuffle",
-    "s3native.blocksize" : "67108864",
-    "dfs.namenode.edits.dir" : "${dfs.namenode.name.dir}",
-    "ha.health-monitor.sleep-after-disconnect.ms" : "1000",
-    "dfs.encrypt.data.transfer" : "false",
-    "dfs.datanode.http.address" : "0.0.0.0:9864",
-    "mapreduce.terasort.num-rows" : "400000000",
-    "mapreduce.job.map.class" : "org.apache.hadoop.examples.terasort.TeraGen$SortGenMapper",
-    "dfs.namenode.write.stale.datanode.ratio" : "0.5f",
-    "dfs.client.use.datanode.hostname" : "false",
-    "yarn.acl.enable" : "true",
-    "hadoop.security.instrumentation.requires.admin" : "false",
-    "yarn.nodemanager.localizer.fetch.thread-count" : "4",
-    "hadoop.security.authorization" : "false",
-    "user.name" : "jenkins",
-    "dfs.namenode.fs-limits.min-block-size" : "1048576",
-    "dfs.client.failover.connection.retries.on.timeouts" : "0",
-    "hadoop.security.group.mapping.ldap.search.filter.group" : "(objectClass=group)",
-    "mapreduce.output.fileoutputformat.compress.codec" : "org.apache.hadoop.io.compress.DefaultCodec",
-    "dfs.namenode.safemode.extension" : "30000",
-    "mapreduce.shuffle.port" : "8080",
-    "mapreduce.reduce.log.level" : "INFO",
-    "yarn.log-aggregation-enable" : "false",
-    "dfs.datanode.sync.behind.writes" : "false",
-    "dfs.https.server.keystore.resource" : "ssl-server.xml",
-    "hadoop.security.group.mapping.ldap.search.attr.group.name" : "cn",
-    "dfs.namenode.replication.min" : "1",
-    "mapreduce.map.java.opts" : " -Xmx825955249",
-    "yarn.scheduler.fair.allocation.file" : "/etc/yarn/fair-scheduler.xml",
-    "s3native.bytes-per-checksum" : "512",
-    "tfile.fs.output.buffer.size" : "262144",
-    "yarn.nodemanager.local-dirs" : "${hadoop.tmp.dir}/nm-local-dir",
-    "mapreduce.jobtracker.persist.jobstatus.active" : "false",
-    "fs.AbstractFileSystem.hdfs.impl" : "org.apache.hadoop.fs.Hdfs",
-    "mapreduce.job.map.output.collector.class" : "org.apache.hadoop.mapred.MapTask$MapOutputBuffer",
-    "dfs.namenode.safemode.min.datanodes" : "0",
-    "hadoop.security.uid.cache.secs" : "14400",
-    "dfs.client.https.need-auth" : "false",
-    "dfs.client.write.exclude.nodes.cache.expiry.interval.millis" : "600000",
-    "dfs.client.https.keystore.resource" : "ssl-client.xml",
-    "dfs.namenode.max.objects" : "0",
-    "hadoop.ssl.client.conf" : "ssl-client.xml",
-    "dfs.namenode.safemode.threshold-pct" : "0.999f",
-    "dfs.blocksize" : "134217728",
-    "yarn.resourcemanager.scheduler.class" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler",
-    "mapreduce.job.reduce.slowstart.completedmaps" : "0.8",
-    "mapreduce.job.end-notification.retry.attempts" : "5",
-    "mapreduce.job.inputformat.class" : "org.apache.hadoop.examples.terasort.TeraGen$RangeInputFormat",
-    "mapreduce.map.memory.mb" : "1024",
-    "mapreduce.job.user.name" : "jenkins",
-    "io.native.lib.available" : "true",
-    "dfs.client-write-packet-size" : "65536",
-    "mapreduce.client.progressmonitor.pollinterval" : "1000",
-    "dfs.namenode.name.dir" : "file://${hadoop.tmp.dir}/dfs/name",
-    "dfs.ha.log-roll.period" : "120",
-    "mapreduce.reduce.input.buffer.percent" : "0.0",
-    "mapreduce.map.output.compress.codec" : "org.apache.hadoop.io.compress.SnappyCodec",
-    "dfs.client.failover.sleep.base.millis" : "500",
-    "dfs.datanode.directoryscan.threads" : "1",
-    "mapreduce.jobtracker.address" : "neededForHive:999999",
-    "mapreduce.cluster.local.dir" : "${hadoop.tmp.dir}/mapred/local",
-    "yarn.scheduler.fair.user-as-default-queue" : "true",
-    "mapreduce.job.application.attempt.id" : "1",
-    "dfs.permissions.enabled" : "true",
-    "yarn.scheduler.fair.preemption" : "true",
-    "mapreduce.reduce.shuffle.parallelcopies" : "5",
-    "yarn.nodemanager.env-whitelist" : "JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,YARN_HOME",
-    "mapreduce.job.maxtaskfailures.per.tracker" : "3",
-    "ipc.client.connection.maxidletime" : "10000",
-    "mapreduce.shuffle.ssl.enabled" : "false",
-    "dfs.namenode.invalidate.work.pct.per.iteration" : "0.32f",
-    "dfs.blockreport.intervalMsec" : "21600000",
-    "fs.s3n.sleepTimeSeconds" : "10",
-    "dfs.namenode.replication.considerLoad" : "true",
-    "dfs.client.block.write.retries" : "3",
-    "hadoop.ssl.server.conf" : "ssl-server.xml",
-    "dfs.namenode.name.dir.restore" : "false",
-    "rpc.engine.org.apache.hadoop.mapreduce.v2.api.MRClientProtocolPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "dfs.datanode.hdfs-blocks-metadata.enabled" : "true",
-    "ha.zookeeper.parent-znode" : "/hadoop-ha",
-    "mapreduce.reduce.merge.inmem.threshold" : "1000",
-    "mapreduce.input.fileinputformat.split.minsize" : "0",
-    "dfs.replication" : "3",
-    "ipc.client.tcpnodelay" : "false",
-    "dfs.namenode.accesstime.precision" : "3600000",
-    "dfs.client.read.shortcircuit.skip.checksum" : "false",
-    "mapreduce.job.jvm.numtasks" : "1",
-    "mapreduce.task.io.sort.mb" : "100",
-    "io.file.buffer.size" : "65536",
-    "dfs.namenode.audit.loggers" : "default",
-    "dfs.namenode.checkpoint.txns" : "1000000",
-    "yarn.nodemanager.admin-env" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
-    "mapreduce.job.jar" : "/user/jenkins/.staging/job_1369942127770_1205/job.jar",
-    "mapreduce.job.split.metainfo.maxsize" : "10000000",
-    "kfs.replication" : "3",
-    "rpc.engine.org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms" : "1000",
-    "mapreduce.reduce.maxattempts" : "4",
-    "kfs.stream-buffer-size" : "4096",
-    "dfs.ha.tail-edits.period" : "60",
-    "hadoop.security.authentication" : "simple",
-    "fs.s3n.buffer.dir" : "${hadoop.tmp.dir}/s3n",
-    "rpc.engine.org.apache.hadoop.yarn.api.AMRMProtocolPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "yarn.app.mapreduce.am.job.task.listener.thread-count" : "30",
-    "dfs.namenode.avoid.read.stale.datanode" : "false",
-    "mapreduce.job.reduces" : "0",
-    "mapreduce.map.sort.spill.percent" : "0.8",
-    "dfs.datanode.drop.cache.behind.writes" : "false",
-    "mapreduce.job.end-notification.retry.interval" : "1",
-    "mapreduce.job.maps" : "96",
-    "mapreduce.job.speculative.slownodethreshold" : "1.0",
-    "tfile.fs.input.buffer.size" : "262144",
-    "mapreduce.map.speculative" : "false",
-    "dfs.block.access.token.enable" : "false",
-    "dfs.journalnode.http-address" : "0.0.0.0:8480",
-    "mapreduce.job.acl-view-job" : " ",
-    "mapreduce.reduce.shuffle.retry-delay.max.ms" : "60000",
-    "mapreduce.job.end-notification.max.retry.interval" : "5",
-    "ftp.blocksize" : "67108864",
-    "mapreduce.reduce.java.opts" : " -Xmx825955249",
-    "dfs.datanode.data.dir" : "file://${hadoop.tmp.dir}/dfs/data",
-    "ha.failover-controller.cli-check.rpc-timeout.ms" : "20000",
-    "dfs.namenode.max.extra.edits.segments.retained" : "10000",
-    "dfs.https.port" : "20102",
-    "dfs.namenode.replication.interval" : "3",
-    "mapreduce.task.skip.start.attempts" : "2",
-    "dfs.namenode.https-address" : "a2115.smile.com:20102",
-    "ipc.client.kill.max" : "10",
-    "dfs.ha.automatic-failover.enabled" : "false",
-    "mapreduce.jobhistory.keytab" : "/etc/security/keytab/jhs.service.keytab",
-    "dfs.image.transfer.timeout" : "600000",
-    "dfs.client.failover.sleep.max.millis" : "15000",
-    "mapreduce.job.end-notification.max.attempts" : "5",
-    "mapreduce.task.tmp.dir" : "./tmp",
-    "dfs.default.chunk.view.size" : "32768",
-    "kfs.bytes-per-checksum" : "512",
-    "mapreduce.reduce.memory.mb" : "1024",
-    "hadoop.http.filter.initializers" : "org.apache.hadoop.yarn.server.webproxy.amfilter.AmFilterInitializer",
-    "dfs.datanode.failed.volumes.tolerated" : "0",
-    "hadoop.http.authentication.type" : "simple",
-    "dfs.datanode.data.dir.perm" : "700",
-    "yarn.resourcemanager.client.thread-count" : "50",
-    "ipc.server.listen.queue.size" : "128",
-    "mapreduce.reduce.skip.maxgroups" : "0",
-    "file.stream-buffer-size" : "4096",
-    "dfs.namenode.fs-limits.max-directory-items" : "0",
-    "io.mapfile.bloom.size" : "1048576",
-    "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
-    "mapreduce.map.maxattempts" : "4",
-    "yarn.log-aggregation.retain-seconds" : "-1",
-    "yarn.app.mapreduce.am.job.committer.cancel-timeout" : "60000",
-    "ftp.replication" : "3",
-    "yarn.nodemanager.health-checker.script.timeout-ms" : "1200000",
-    "mapreduce.jobhistory.address" : "a2115.smile.com:10020",
-    "mapreduce.jobtracker.taskcache.levels" : "2",
-    "dfs.datanode.dns.nameserver" : "default",
-    "mapreduce.application.classpath" : "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*,$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*",
-    "yarn.nodemanager.log.retain-seconds" : "10800",
-    "mapred.child.java.opts" : "-Xmx200m",
-    "dfs.replication.max" : "512",
-    "map.sort.class" : "org.apache.hadoop.util.QuickSort",
-    "dfs.stream-buffer-size" : "4096",
-    "dfs.namenode.backup.address" : "0.0.0.0:50100",
-    "hadoop.util.hash.type" : "murmur",
-    "dfs.block.access.key.update.interval" : "600",
-    "dfs.datanode.dns.interface" : "default",
-    "dfs.datanode.use.datanode.hostname" : "false",
-    "mapreduce.job.output.key.class" : "org.apache.hadoop.io.Text",
-    "dfs.client.read.shortcircuit" : "false",
-    "dfs.namenode.backup.http-address" : "0.0.0.0:50105",
-    "yarn.nodemanager.container-monitor.interval-ms" : "3000",
-    "yarn.nodemanager.disk-health-checker.min-healthy-disks" : "0.25",
-    "kfs.client-write-packet-size" : "65536",
-    "ha.zookeeper.acl" : "world:anyone:rwcda",
-    "yarn.nodemanager.sleep-delay-before-sigkill.ms" : "250",
-    "mapreduce.job.dir" : "/user/jenkins/.staging/job_1369942127770_1205",
-    "io.map.index.skip" : "0",
-    "net.topology.node.switch.mapping.impl" : "org.apache.hadoop.net.ScriptBasedMapping",
-    "fs.s3n.maxRetries" : "4",
-    "ha.failover-controller.new-active.rpc-timeout.ms" : "60000",
-    "s3native.client-write-packet-size" : "65536",
-    "yarn.resourcemanager.amliveliness-monitor.interval-ms" : "1000",
-    "hadoop.http.staticuser.user" : "dr.who",
-    "mapreduce.reduce.speculative" : "false",
-    "mapreduce.client.output.filter" : "FAILED",
-    "mapreduce.ifile.readahead.bytes" : "4194304",
-    "mapreduce.task.userlog.limit.kb" : "0",
-    "mapreduce.tasktracker.map.tasks.maximum" : "2",
-    "hadoop.http.authentication.simple.anonymous.allowed" : "true",
-    "hadoop.fuse.timer.period" : "5",
-    "dfs.namenode.num.extra.edits.retained" : "1000000",
-    "hadoop.rpc.socket.factory.class.default" : "org.apache.hadoop.net.StandardSocketFactory",
-    "mapreduce.job.submithostname" : "a2115.smile.com",
-    "dfs.namenode.handler.count" : "10",
-    "fs.automatic.close" : "false",
-    "mapreduce.job.submithostaddress" : "10.20.206.115",
-    "dfs.datanode.directoryscan.interval" : "21600",
-    "yarn.resourcemanager.address" : "a2115.smile.com:8032",
-    "yarn.nodemanager.health-checker.interval-ms" : "600000",
-    "yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs" : "86400",
-    "mapreduce.reduce.markreset.buffer.percent" : "0.0",
-    "hadoop.security.group.mapping.ldap.directory.search.timeout" : "10000",
-    "mapreduce.map.log.level" : "INFO",
-    "dfs.bytes-per-checksum" : "512",
-    "yarn.nodemanager.localizer.address" : "0.0.0.0:8040",
-    "dfs.namenode.checkpoint.max-retries" : "3",
-    "ha.health-monitor.rpc-timeout.ms" : "45000",
-    "yarn.resourcemanager.keytab" : "/etc/krb5.keytab",
-    "ftp.stream-buffer-size" : "4096",
-    "dfs.namenode.avoid.write.stale.datanode" : "false",
-    "hadoop.security.group.mapping.ldap.search.attr.member" : "member",
-    "mapreduce.output.fileoutputformat.outputdir" : "hdfs://a2115.smile.com:8020/user/jenkins/tera-gen-1",
-    "dfs.blockreport.initialDelay" : "0",
-    "yarn.nm.liveness-monitor.expiry-interval-ms" : "600000",
-    "hadoop.http.authentication.token.validity" : "36000",
-    "dfs.namenode.delegation.token.max-lifetime" : "604800000",
-    "mapreduce.job.hdfs-servers" : "${fs.defaultFS}",
-    "s3native.replication" : "3",
-    "yarn.nodemanager.localizer.client.thread-count" : "5",
-    "dfs.heartbeat.interval" : "3",
-    "rpc.engine.org.apache.hadoop.ipc.ProtocolMetaInfoPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "dfs.ha.fencing.ssh.connect-timeout" : "30000",
-    "yarn.resourcemanager.container.liveness-monitor.interval-ms" : "600000",
-    "yarn.am.liveness-monitor.expiry-interval-ms" : "600000",
-    "mapreduce.task.profile" : "false",
-    "mapreduce.jobhistory.webapp.address" : "a2115.smile.com:19888",
-    "ha.failover-controller.graceful-fence.rpc-timeout.ms" : "5000",
-    "yarn.ipc.rpc.class" : "org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC",
-    "mapreduce.job.name" : "TeraGen",
-    "kfs.blocksize" : "67108864",
-    "yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs" : "86400",
-    "mapreduce.job.ubertask.maxmaps" : "9",
-    "yarn.scheduler.maximum-allocation-mb" : "8192",
-    "yarn.nodemanager.heartbeat.interval-ms" : "1000",
-    "dfs.namenode.secondary.http-address" : "0.0.0.0:9868",
-    "mapreduce.task.timeout" : "600000",
-    "mapreduce.framework.name" : "yarn",
-    "ipc.client.idlethreshold" : "4000",
-    "ftp.bytes-per-checksum" : "512",
-    "ipc.server.tcpnodelay" : "false",
-    "dfs.namenode.stale.datanode.interval" : "30000",
-    "mapreduce.job.speculative.slowtaskthreshold" : "1.0",
-    "yarn.nodemanager.localizer.cache.target-size-mb" : "10240",
-    "yarn.nodemanager.remote-app-log-dir" : "/tmp/logs",
-    "mapreduce.job.queuename" : "sls_queue_1",
-    "dfs.client.failover.connection.retries" : "0",
-    "hadoop.rpc.protection" : "authentication",
-    "yarn.scheduler.minimum-allocation-mb" : "1024",
-    "yarn.app.mapreduce.client-am.ipc.max-retries" : "1",
-    "hadoop.security.auth_to_local" : "DEFAULT",
-    "dfs.secondary.namenode.kerberos.internal.spnego.principal" : "${dfs.web.authentication.kerberos.principal}",
-    "ftp.client-write-packet-size" : "65536",
-    "fs.defaultFS" : "hdfs://a2115.smile.com:8020",
-    "yarn.nodemanager.address" : "0.0.0.0:0",
-    "yarn.scheduler.fair.assignmultiple" : "true",
-    "yarn.resourcemanager.scheduler.client.thread-count" : "50",
-    "mapreduce.task.merge.progress.records" : "10000",
-    "file.client-write-packet-size" : "65536",
-    "yarn.nodemanager.delete.thread-count" : "4",
-    "yarn.resourcemanager.scheduler.address" : "a2115.smile.com:8030",
-    "fs.trash.checkpoint.interval" : "0",
-    "hadoop.http.authentication.signature.secret.file" : "${user.home}/hadoop-http-auth-signature-secret",
-    "s3native.stream-buffer-size" : "4096",
-    "mapreduce.reduce.shuffle.read.timeout" : "180000",
-    "mapreduce.admin.user.env" : "LD_LIBRARY_PATH=$HADOOP_COMMON_HOME/lib/native",
-    "yarn.app.mapreduce.am.command-opts" : " -Xmx1238932873",
-    "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
-    "fs.permissions.umask-mode" : "022",
-    "dfs.client.domain.socket.data.traffic" : "false",
-    "hadoop.common.configuration.version" : "0.23.0",
-    "mapreduce.output.fileoutputformat.compress.type" : "BLOCK",
-    "mapreduce.ifile.readahead" : "true",
-    "hadoop.security.group.mapping.ldap.ssl" : "false",
-    "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization",
-    "yarn.nodemanager.aux-services.mapreduce.shuffle.class" : "org.apache.hadoop.mapred.ShuffleHandler",
-    "fs.df.interval" : "60000",
-    "mapreduce.reduce.shuffle.input.buffer.percent" : "0.70",
-    "io.seqfile.compress.blocksize" : "1000000",
-    "hadoop.security.groups.cache.secs" : "300",
-    "ipc.client.connect.max.retries" : "10",
-    "dfs.namenode.delegation.key.update-interval" : "86400000",
-    "yarn.nodemanager.process-kill-wait.ms" : "5000",
-    "yarn.application.classpath" : "$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/*,$HADOOP_COMMON_HOME/lib/*,$HADOOP_HDFS_HOME/*,$HADOOP_HDFS_HOME/lib/*,$HADOOP_MAPRED_HOME/*,$HADOOP_MAPRED_HOME/lib/*,$YARN_HOME/*,$YARN_HOME/lib/*",
-    "yarn.app.mapreduce.client.max-retries" : "3",
-    "dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction" : "0.75f",
-    "yarn.nodemanager.log-aggregation.compression-type" : "none",
-    "hadoop.security.group.mapping.ldap.search.filter.user" : "(&(objectClass=user)(sAMAccountName={0}))",
-    "yarn.nodemanager.localizer.cache.cleanup.interval-ms" : "600000",
-    "dfs.image.compress" : "false",
-    "mapred.mapper.new-api" : "true",
-    "yarn.nodemanager.log-dirs" : "${yarn.log.dir}/userlogs",
-    "dfs.namenode.kerberos.internal.spnego.principal" : "${dfs.web.authentication.kerberos.principal}",
-    "fs.s3n.block.size" : "67108864",
-    "fs.ftp.host" : "0.0.0.0",
-    "hadoop.security.group.mapping" : "org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback",
-    "dfs.datanode.address" : "0.0.0.0:9866",
-    "mapreduce.map.skip.maxrecords" : "0",
-    "dfs.datanode.https.address" : "0.0.0.0:9865",
-    "file.replication" : "1",
-    "yarn.resourcemanager.resource-tracker.address" : "a2115.smile.com:8031",
-    "dfs.datanode.drop.cache.behind.reads" : "false",
-    "hadoop.fuse.connection.timeout" : "300",
-    "hadoop.work.around.non.threadsafe.getpwuid" : "false",
-    "hadoop.tmp.dir" : "/tmp/hadoop-${user.name}",
-    "mapreduce.output.fileoutputformat.compress" : "false",
-    "mapreduce.tasktracker.indexcache.mb" : "10",
-    "mapreduce.client.genericoptionsparser.used" : "true",
-    "dfs.client.block.write.replace-datanode-on-failure.policy" : "DEFAULT",
-    "mapreduce.job.committer.setup.cleanup.needed" : "true",
-    "hadoop.kerberos.kinit.command" : "kinit",
-    "dfs.datanode.du.reserved" : "0",
-    "dfs.namenode.fs-limits.max-blocks-per-file" : "1048576",
-    "file.bytes-per-checksum" : "512",
-    "mapreduce.task.profile.reduces" : "0-2",
-    "dfs.client.block.write.replace-datanode-on-failure.enable" : "true",
-    "mapreduce.job.output.value.class" : "org.apache.hadoop.io.Text",
-    "yarn.dispatcher.exit-on-error" : "true",
-    "net.topology.script.number.args" : "100",
-    "mapreduce.task.profile.maps" : "0-2",
-    "dfs.namenode.decommission.interval" : "30",
-    "dfs.image.compression.codec" : "org.apache.hadoop.io.compress.DefaultCodec",
-    "yarn.resourcemanager.webapp.address" : "a2115.smile.com:8088",
-    "mapreduce.jobtracker.system.dir" : "${hadoop.tmp.dir}/mapred/system",
-    "hadoop.ssl.hostname.verifier" : "DEFAULT",
-    "yarn.nodemanager.vmem-pmem-ratio" : "2.1",
-    "dfs.namenode.support.allow.format" : "true",
-    "mapreduce.jobhistory.principal" : "jhs/_HOST@REALM.TLD",
-    "io.mapfile.bloom.error.rate" : "0.005",
-    "mapreduce.shuffle.ssl.file.buffer.size" : "65536",
-    "dfs.permissions.superusergroup" : "supergroup",
-    "dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold" : "10737418240",
-    "mapreduce.cluster.acls.enabled" : "false",
-    "yarn.nodemanager.remote-app-log-dir-suffix" : "logs",
-    "ha.failover-controller.graceful-fence.connection.retries" : "1",
-    "ha.health-monitor.connect-retry-interval.ms" : "1000",
-    "mapreduce.reduce.shuffle.merge.percent" : "0.66",
-    "yarn.app.mapreduce.am.resource.mb" : "1536",
-    "io.seqfile.local.dir" : "${hadoop.tmp.dir}/io/local",
-    "dfs.namenode.checkpoint.check.period" : "60",
-    "yarn.resourcemanager.nm.liveness-monitor.interval-ms" : "1000",
-    "file.blocksize" : "67108864",
-    "tfile.io.chunk.size" : "1048576",
-    "mapreduce.job.acl-modify-job" : " ",
-    "yarn.nodemanager.webapp.address" : "0.0.0.0:8042",
-    "mapreduce.tasktracker.reduce.tasks.maximum" : "2",
-    "io.skip.checksum.errors" : "false",
-    "mapreduce.cluster.temp.dir" : "${hadoop.tmp.dir}/mapred/temp",
-    "yarn.app.mapreduce.am.staging-dir" : "/user",
-    "dfs.namenode.edits.journal-plugin.qjournal" : "org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager",
-    "dfs.datanode.handler.count" : "10",
-    "fs.ftp.host.port" : "21",
-    "dfs.namenode.decommission.nodes.per.interval" : "5",
-    "yarn.resourcemanager.admin.client.thread-count" : "1",
-    "dfs.namenode.fs-limits.max-component-length" : "0",
-    "dfs.namenode.checkpoint.period" : "3600",
-    "fs.AbstractFileSystem.viewfs.impl" : "org.apache.hadoop.fs.viewfs.ViewFs",
-    "yarn.resourcemanager.resource-tracker.client.thread-count" : "50",
-    "mapreduce.map.output.compress" : "true",
-    "dfs.datanode.ipc.address" : "0.0.0.0:9867",
-    "hadoop.ssl.require.client.cert" : "false",
-    "yarn.nodemanager.delete.debug-delay-sec" : "0",
-    "dfs.datanode.max.transfer.threads" : "4096"
-  },
-  "computonsPerMapInputByte" : -1,
-  "computonsPerMapOutputByte" : -1,
-  "computonsPerReduceInputByte" : -1,
-  "computonsPerReduceOutputByte" : -1,
-  "heapMegabytes" : 200,
-  "outcome" : "SUCCESS",
-  "jobtype" : "JAVA",
-  "directDependantJobs" : [ ],
-  "successfulMapAttemptCDFs" : [ {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 47021,
-    "minimum" : 11143,
-    "rankings" : [ {
-      "datum" : 13354,
-      "relativeRanking" : 0.05
-    }, {
-      "datum" : 14101,
-      "relativeRanking" : 0.1
-    }, {
-      "datum" : 15609,
-      "relativeRanking" : 0.15
-    }, {
-      "datum" : 15919,
-      "relativeRanking" : 0.2
-    }, {
-      "datum" : 17003,
-      "relativeRanking" : 0.25
-    }, {
-      "datum" : 17109,
-      "relativeRanking" : 0.3
-    }, {
-      "datum" : 18342,
-      "relativeRanking" : 0.35
-    }, {
-      "datum" : 18870,
-      "relativeRanking" : 0.4
-    }, {
-      "datum" : 19127,
-      "relativeRanking" : 0.45
-    }, {
-      "datum" : 19221,
-      "relativeRanking" : 0.5
-    }, {
-      "datum" : 19481,
-      "relativeRanking" : 0.55
-    }, {
-      "datum" : 19896,
-      "relativeRanking" : 0.6
-    }, {
-      "datum" : 20585,
-      "relativeRanking" : 0.65
-    }, {
-      "datum" : 20784,
-      "relativeRanking" : 0.7
-    }, {
-      "datum" : 21452,
-      "relativeRanking" : 0.75
-    }, {
-      "datum" : 21853,
-      "relativeRanking" : 0.8
-    }, {
-      "datum" : 22436,
-      "relativeRanking" : 0.85
-    }, {
-      "datum" : 32646,
-      "relativeRanking" : 0.9
-    }, {
-      "datum" : 41553,
-      "relativeRanking" : 0.95
-    } ],
-    "numberValues" : 96
-  } ],
-  "failedMapAttemptCDFs" : [ {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  } ],
-  "successfulReduceAttemptCDF" : {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  },
-  "failedReduceAttemptCDF" : {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  },
-  "mapperTriesToSucceed" : [ 1.0 ],
-  "failedMapperFraction" : 0.0,
-  "relativeTime" : 0,
-  "clusterMapMB" : -1,
-  "clusterReduceMB" : -1,
-  "jobMapMB" : 200,
-  "jobReduceMB" : 200
-}
-{
-  "priority" : "NORMAL",
-  "jobID" : "job_1369942127770_1206",
-  "user" : "jenkins",
-  "jobName" : "TeraGen",
-  "submitTime" : 1371222159703,
-  "finishTime" : 1371222251755,
-  "queue" : "sls_queue_1",
-  "mapTasks" : [ {
-    "startTime" : 1371222164113,
-    "taskID" : "task_1369942127770_1206_m_000000",
-    "taskType" : "MAP",
-    "finishTime" : 1371222188484,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166321,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222188484,
-      "attemptID" : "attempt_1369942127770_1206_m_000000_0",
-      "clockSplits" : [ 2278, 2279, 2279, 2279, 1641, 1090, 1090, 3620, 943, 943, 943, 2773 ],
-      "cpuUsages" : [ 1480, 1481, 1481, 1481, 1298, 1141, 1141, 1312, 814, 815, 814, 1062 ],
-      "vmemKbytes" : [ 161561, 484683, 807806, 1130929, 1407572, 1442299, 1442300, 1442299, 1442300, 1442300, 1442299, 1442300 ],
-      "physMemKbytes" : [ 34370, 103111, 171853, 240594, 299471, 307004, 307167, 309072, 310772, 308485, 306197, 304712 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 82,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14320,
-        "virtualMemoryUsage" : 1476915200,
-        "physicalMemoryUsage" : 311963648,
-        "heapUsage" : 735051776
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 82,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164115,
-    "taskID" : "task_1369942127770_1206_m_000001",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185876,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166287,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185876,
-      "attemptID" : "attempt_1369942127770_1206_m_000001_0",
-      "clockSplits" : [ 1967, 1967, 1967, 1967, 1968, 1160, 1022, 1021, 922, 887, 887, 3761 ],
-      "cpuUsages" : [ 1290, 1290, 1290, 1291, 1290, 1137, 1110, 1111, 890, 812, 812, 1247 ],
-      "vmemKbytes" : [ 136908, 410726, 684543, 958360, 1232179, 1406210, 1409140, 1409139, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 29838, 89517, 149196, 208875, 268554, 307143, 309569, 311375, 312131, 310214, 308165, 306185 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13650,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 312889344,
-        "heapUsage" : 734986240
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164115,
-    "taskID" : "task_1369942127770_1206_m_000002",
-    "taskType" : "MAP",
-    "finishTime" : 1371222187434,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166324,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222187434,
-      "attemptID" : "attempt_1369942127770_1206_m_000002_0",
-      "clockSplits" : [ 2525, 2525, 2525, 2526, 1158, 1048, 1049, 3067, 3187, 40, 40, 40 ],
-      "cpuUsages" : [ 1475, 1475, 1475, 1475, 1136, 1109, 1109, 1564, 795, 739, 739, 739 ],
-      "vmemKbytes" : [ 174639, 523917, 873196, 1222474, 1422137, 1423103, 1423104, 1423103, 1423104, 1423104, 1423103, 1423104 ],
-      "physMemKbytes" : [ 38111, 114334, 190557, 266780, 310216, 310109, 309790, 309622, 308756, 306687, 304614, 302541 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14130,
-        "virtualMemoryUsage" : 1457258496,
-        "physicalMemoryUsage" : 308678656,
-        "heapUsage" : 740360192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164115,
-    "taskID" : "task_1369942127770_1206_m_000003",
-    "taskType" : "MAP",
-    "finishTime" : 1371222186091,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166325,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222186091,
-      "attemptID" : "attempt_1369942127770_1206_m_000003_0",
-      "clockSplits" : [ 2228, 2229, 2229, 2228, 1992, 1092, 1093, 1296, 4777, 199, 199, 199 ],
-      "cpuUsages" : [ 1387, 1388, 1388, 1388, 1346, 1185, 1184, 1169, 1046, 879, 880, 880 ],
-      "vmemKbytes" : [ 148980, 446940, 744901, 1042862, 1334323, 1427567, 1427568, 1427567, 1427568, 1427568, 1427567, 1427568 ],
-      "physMemKbytes" : [ 31982, 95948, 159914, 223879, 286454, 306599, 306786, 306971, 307048, 307043, 307026, 307009 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14120,
-        "virtualMemoryUsage" : 1461829632,
-        "physicalMemoryUsage" : 314368000,
-        "heapUsage" : 728760320
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164116,
-    "taskID" : "task_1369942127770_1206_m_000004",
-    "taskType" : "MAP",
-    "finishTime" : 1371222189053,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166287,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222189053,
-      "attemptID" : "attempt_1369942127770_1206_m_000004_0",
-      "clockSplits" : [ 2506, 2507, 2507, 2507, 1358, 1134, 1277, 3003, 1031, 1032, 3177, 718 ],
-      "cpuUsages" : [ 1424, 1424, 1425, 1424, 1199, 1156, 1162, 1212, 826, 825, 851, 1032 ],
-      "vmemKbytes" : [ 170607, 511823, 853038, 1194253, 1416017, 1420563, 1420564, 1420563, 1420564, 1420564, 1420563, 1420564 ],
-      "physMemKbytes" : [ 36772, 110318, 183863, 257408, 305224, 306250, 306299, 306447, 304928, 302270, 299633, 298578 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 85,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13960,
-        "virtualMemoryUsage" : 1454657536,
-        "physicalMemoryUsage" : 305713152,
-        "heapUsage" : 728367104
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 85,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164116,
-    "taskID" : "task_1369942127770_1206_m_000005",
-    "taskType" : "MAP",
-    "finishTime" : 1371222184979,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166323,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222184979,
-      "attemptID" : "attempt_1369942127770_1206_m_000005_0",
-      "clockSplits" : [ 1921, 1921, 1921, 1921, 1922, 1602, 1010, 1010, 1013, 1026, 1026, 2353 ],
-      "cpuUsages" : [ 1306, 1306, 1306, 1306, 1306, 1250, 1146, 1146, 1053, 788, 788, 1199 ],
-      "vmemKbytes" : [ 126096, 378289, 630482, 882675, 1134868, 1371662, 1425028, 1425027, 1425028, 1425028, 1425027, 1425028 ],
-      "physMemKbytes" : [ 28145, 84436, 140727, 197018, 253310, 306166, 318110, 318149, 318111, 316467, 314188, 311974 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13900,
-        "virtualMemoryUsage" : 1459228672,
-        "physicalMemoryUsage" : 318754816,
-        "heapUsage" : 734986240
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164116,
-    "taskID" : "task_1369942127770_1206_m_000006",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185246,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166324,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185246,
-      "attemptID" : "attempt_1369942127770_1206_m_000006_0",
-      "clockSplits" : [ 2131, 2131, 2132, 2131, 2083, 1125, 1125, 1164, 1326, 1326, 1702, 541 ],
-      "cpuUsages" : [ 1351, 1351, 1351, 1351, 1344, 1220, 1220, 1130, 761, 760, 931, 960 ],
-      "vmemKbytes" : [ 145579, 436739, 727899, 1019058, 1309880, 1441771, 1441772, 1441771, 1441772, 1441772, 1441771, 1441772 ],
-      "physMemKbytes" : [ 31512, 94536, 157560, 220583, 283538, 313578, 316306, 318981, 319869, 319878, 318776, 315776 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13730,
-        "virtualMemoryUsage" : 1476374528,
-        "physicalMemoryUsage" : 321802240,
-        "heapUsage" : 740491264
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164117,
-    "taskID" : "task_1369942127770_1206_m_000007",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185092,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222166325,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185092,
-      "attemptID" : "attempt_1369942127770_1206_m_000007_0",
-      "clockSplits" : [ 1853, 1853, 1853, 1854, 1853, 1487, 971, 970, 986, 1064, 1064, 2953 ],
-      "cpuUsages" : [ 1287, 1287, 1288, 1287, 1287, 1189, 1049, 1049, 1004, 776, 776, 1151 ],
-      "vmemKbytes" : [ 126150, 378452, 630754, 883055, 1135357, 1365947, 1409140, 1409139, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 27651, 82956, 138261, 193565, 248870, 299639, 311257, 313850, 316375, 315596, 313007, 310500 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13430,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 317206528,
-        "heapUsage" : 740425728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164117,
-    "taskID" : "task_1369942127770_1206_m_000008",
-    "taskType" : "MAP",
-    "finishTime" : 1371222188434,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166282,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222188434,
-      "attemptID" : "attempt_1369942127770_1206_m_000008_0",
-      "clockSplits" : [ 2257, 2258, 2258, 2257, 1845, 1172, 1171, 3581, 845, 845, 845, 2798 ],
-      "cpuUsages" : [ 1359, 1359, 1359, 1360, 1314, 1240, 1241, 1179, 860, 861, 861, 1097 ],
-      "vmemKbytes" : [ 153669, 461007, 768346, 1075685, 1360846, 1419935, 1419936, 1419935, 1419936, 1419936, 1419935, 1419936 ],
-      "physMemKbytes" : [ 34010, 102032, 170054, 238075, 301205, 314458, 314675, 315015, 314035, 311954, 309873, 308002 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14090,
-        "virtualMemoryUsage" : 1454014464,
-        "physicalMemoryUsage" : 315056128,
-        "heapUsage" : 735051776
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164117,
-    "taskID" : "task_1369942127770_1206_m_000009",
-    "taskType" : "MAP",
-    "finishTime" : 1371222186078,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166289,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222186078,
-      "attemptID" : "attempt_1369942127770_1206_m_000009_0",
-      "clockSplits" : [ 2038, 2039, 2038, 2039, 2038, 1268, 1144, 1104, 802, 803, 803, 3666 ],
-      "cpuUsages" : [ 1317, 1317, 1318, 1317, 1317, 1417, 1432, 1349, 722, 722, 723, 1209 ],
-      "vmemKbytes" : [ 139866, 419600, 699334, 979067, 1258801, 1434828, 1437528, 1437527, 1437528, 1437528, 1437527, 1437528 ],
-      "physMemKbytes" : [ 30358, 91075, 151792, 212509, 273226, 312566, 316176, 319207, 320182, 319829, 319476, 319130 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72234,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14160,
-        "virtualMemoryUsage" : 1472028672,
-        "physicalMemoryUsage" : 326660096,
-        "heapUsage" : 740360192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72234,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164118,
-    "taskID" : "task_1369942127770_1206_m_000010",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185273,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166293,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185273,
-      "attemptID" : "attempt_1369942127770_1206_m_000010_0",
-      "clockSplits" : [ 1550, 1551, 1551, 1551, 1551, 1551, 1348, 982, 983, 1069, 1644, 3642 ],
-      "cpuUsages" : [ 1196, 1197, 1197, 1197, 1197, 1197, 1161, 1097, 1097, 1062, 830, 1372 ],
-      "vmemKbytes" : [ 106103, 318309, 530515, 742720, 954927, 1167133, 1365716, 1409403, 1409404, 1409404, 1409403, 1409404 ],
-      "physMemKbytes" : [ 23450, 70351, 117253, 164154, 211056, 257957, 301852, 311562, 311632, 311701, 311734, 311749 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13800,
-        "virtualMemoryUsage" : 1443229696,
-        "physicalMemoryUsage" : 319262720,
-        "heapUsage" : 728629248
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164118,
-    "taskID" : "task_1369942127770_1206_m_000011",
-    "taskType" : "MAP",
-    "finishTime" : 1371222188434,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166290,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222188434,
-      "attemptID" : "attempt_1369942127770_1206_m_000011_0",
-      "clockSplits" : [ 2018, 2018, 2019, 2018, 2019, 1684, 1356, 6988, 74, 73, 74, 74 ],
-      "cpuUsages" : [ 1424, 1425, 1425, 1424, 1425, 1364, 1305, 1424, 818, 819, 818, 819 ],
-      "vmemKbytes" : [ 128226, 384681, 641136, 897591, 1154046, 1377893, 1409404, 1409403, 1409404, 1409404, 1409403, 1409404 ],
-      "physMemKbytes" : [ 28599, 85797, 142996, 200194, 257393, 307333, 314455, 314599, 314625, 314232, 313838, 313445 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14790,
-        "virtualMemoryUsage" : 1443229696,
-        "physicalMemoryUsage" : 320749568,
-        "heapUsage" : 740425728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164118,
-    "taskID" : "task_1369942127770_1206_m_000012",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185278,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166295,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185278,
-      "attemptID" : "attempt_1369942127770_1206_m_000012_0",
-      "clockSplits" : [ 1913, 1914, 1914, 1914, 1914, 1611, 911, 910, 911, 1149, 1191, 2725 ],
-      "cpuUsages" : [ 1375, 1376, 1376, 1376, 1376, 1301, 1127, 1127, 1128, 891, 850, 1257 ],
-      "vmemKbytes" : [ 124608, 373827, 623045, 872262, 1121481, 1359363, 1420140, 1420139, 1420140, 1420140, 1420139, 1420140 ],
-      "physMemKbytes" : [ 26214, 78645, 131075, 183505, 235936, 285986, 298857, 298969, 299082, 298216, 295652, 293146 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14560,
-        "virtualMemoryUsage" : 1454223360,
-        "physicalMemoryUsage" : 299470848,
-        "heapUsage" : 740491264
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164119,
-    "taskID" : "task_1369942127770_1206_m_000013",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185273,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166291,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185273,
-      "attemptID" : "attempt_1369942127770_1206_m_000013_0",
-      "clockSplits" : [ 1713, 1714, 1713, 1714, 1713, 1714, 1293, 1179, 1176, 1125, 1125, 2795 ],
-      "cpuUsages" : [ 1221, 1221, 1221, 1221, 1221, 1221, 1236, 1241, 1229, 807, 807, 1234 ],
-      "vmemKbytes" : [ 115735, 347206, 578677, 810148, 1041619, 1273090, 1433402, 1438795, 1438796, 1438796, 1438795, 1438796 ],
-      "physMemKbytes" : [ 25299, 75897, 126496, 177095, 227694, 278292, 314180, 318040, 320785, 321923, 321617, 321326 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13880,
-        "virtualMemoryUsage" : 1473327104,
-        "physicalMemoryUsage" : 328986624,
-        "heapUsage" : 740556800
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164120,
-    "taskID" : "task_1369942127770_1206_m_000014",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185953,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166297,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185953,
-      "attemptID" : "attempt_1369942127770_1206_m_000014_0",
-      "clockSplits" : [ 1818, 1819, 1819, 1819, 1819, 1797, 1598, 1781, 4888, 164, 164, 164 ],
-      "cpuUsages" : [ 1243, 1244, 1244, 1244, 1244, 1251, 1319, 1273, 930, 856, 856, 856 ],
-      "vmemKbytes" : [ 121322, 363966, 606611, 849256, 1091901, 1333349, 1431760, 1431686, 1425453, 1421556, 1421555, 1421556 ],
-      "physMemKbytes" : [ 26145, 78435, 130726, 183016, 235307, 287356, 310547, 313799, 309838, 305300, 303271, 301242 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13560,
-        "virtualMemoryUsage" : 1455673344,
-        "physicalMemoryUsage" : 307433472,
-        "heapUsage" : 723845120
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164120,
-    "taskID" : "task_1369942127770_1206_m_000015",
-    "taskType" : "MAP",
-    "finishTime" : 1371222189058,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222166333,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222189058,
-      "attemptID" : "attempt_1369942127770_1206_m_000015_0",
-      "clockSplits" : [ 2170, 2171, 2171, 2171, 2028, 1094, 1095, 4145, 798, 798, 798, 3281 ],
-      "cpuUsages" : [ 1358, 1358, 1358, 1358, 1333, 1171, 1172, 1237, 815, 816, 815, 1259 ],
-      "vmemKbytes" : [ 146393, 439180, 731967, 1024754, 1314962, 1425067, 1425068, 1425067, 1425068, 1425068, 1425067, 1425068 ],
-      "physMemKbytes" : [ 32691, 98075, 163459, 228842, 293658, 318728, 319501, 320253, 319820, 318699, 317577, 316047 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14050,
-        "virtualMemoryUsage" : 1459269632,
-        "physicalMemoryUsage" : 320176128,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164121,
-    "taskID" : "task_1369942127770_1206_m_000016",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185112,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166298,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185112,
-      "attemptID" : "attempt_1369942127770_1206_m_000016_0",
-      "clockSplits" : [ 2147, 2147, 2148, 2147, 2054, 874, 874, 874, 919, 985, 986, 2651 ],
-      "cpuUsages" : [ 1392, 1392, 1393, 1392, 1371, 1101, 1100, 1100, 1008, 870, 870, 1241 ],
-      "vmemKbytes" : [ 144202, 432606, 721011, 1009416, 1297041, 1420819, 1420820, 1420819, 1420820, 1420820, 1420819, 1420820 ],
-      "physMemKbytes" : [ 30336, 91008, 151680, 212351, 272862, 299357, 300156, 300954, 301511, 299852, 297656, 295530 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14230,
-        "virtualMemoryUsage" : 1454919680,
-        "physicalMemoryUsage" : 301989888,
-        "heapUsage" : 734920704
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164121,
-    "taskID" : "task_1369942127770_1206_m_000017",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185125,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166299,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185125,
-      "attemptID" : "attempt_1369942127770_1206_m_000017_0",
-      "clockSplits" : [ 2056, 2056, 2056, 2057, 2056, 1240, 1157, 1132, 945, 946, 945, 2174 ],
-      "cpuUsages" : [ 1376, 1377, 1376, 1377, 1377, 1106, 1080, 1060, 914, 915, 915, 1267 ],
-      "vmemKbytes" : [ 141624, 424872, 708121, 991370, 1274619, 1441166, 1442372, 1442371, 1442372, 1442372, 1442371, 1442372 ],
-      "physMemKbytes" : [ 30671, 92015, 153358, 214701, 276045, 312210, 312702, 312916, 311552, 309174, 306795, 305251 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14140,
-        "virtualMemoryUsage" : 1476988928,
-        "physicalMemoryUsage" : 312541184,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164121,
-    "taskID" : "task_1369942127770_1206_m_000018",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185117,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166301,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185117,
-      "attemptID" : "attempt_1369942127770_1206_m_000018_0",
-      "clockSplits" : [ 1934, 1934, 1934, 1934, 1934, 1203, 1012, 1012, 930, 897, 896, 3188 ],
-      "cpuUsages" : [ 1359, 1360, 1359, 1360, 1359, 1168, 1117, 1117, 949, 878, 878, 1216 ],
-      "vmemKbytes" : [ 138262, 414786, 691311, 967835, 1244360, 1434031, 1439980, 1439979, 1439980, 1439980, 1439979, 1439980 ],
-      "physMemKbytes" : [ 30204, 90615, 151026, 211436, 271847, 313905, 317141, 319119, 320017, 317820, 315430, 313109 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14120,
-        "virtualMemoryUsage" : 1474539520,
-        "physicalMemoryUsage" : 319881216,
-        "heapUsage" : 740294656
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164121,
-    "taskID" : "task_1369942127770_1206_m_000019",
-    "taskType" : "MAP",
-    "finishTime" : 1371222186145,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166303,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222186145,
-      "attemptID" : "attempt_1369942127770_1206_m_000019_0",
-      "clockSplits" : [ 3008, 3009, 3009, 1882, 895, 895, 893, 819, 819, 819, 2062, 1653 ],
-      "cpuUsages" : [ 1646, 1647, 1647, 1320, 1034, 1034, 1032, 934, 934, 935, 941, 966 ],
-      "vmemKbytes" : [ 203217, 609652, 1016088, 1364807, 1409140, 1409139, 1409140, 1409139, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 42475, 127426, 212377, 285272, 294585, 294637, 294690, 295048, 295688, 296328, 296949, 297136 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14150,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 304185344,
-        "heapUsage" : 740294656
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164122,
-    "taskID" : "task_1369942127770_1206_m_000020",
-    "taskType" : "MAP",
-    "finishTime" : 1371222188294,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166304,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222188294,
-      "attemptID" : "attempt_1369942127770_1206_m_000020_0",
-      "clockSplits" : [ 2521, 2522, 2521, 2522, 1166, 875, 875, 3843, 796, 796, 796, 2750 ],
-      "cpuUsages" : [ 1465, 1465, 1465, 1465, 1165, 1100, 1100, 1152, 745, 746, 745, 1157 ],
-      "vmemKbytes" : [ 169996, 509988, 849980, 1189972, 1414887, 1420227, 1420228, 1420227, 1420228, 1420228, 1420227, 1420228 ],
-      "physMemKbytes" : [ 37258, 111774, 186290, 260806, 310285, 311992, 312537, 313043, 312040, 310217, 308394, 306622 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13770,
-        "virtualMemoryUsage" : 1454313472,
-        "physicalMemoryUsage" : 313397248,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164122,
-    "taskID" : "task_1369942127770_1206_m_000021",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185112,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166306,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185112,
-      "attemptID" : "attempt_1369942127770_1206_m_000021_0",
-      "clockSplits" : [ 1800, 1801, 1800, 1801, 1801, 1639, 1110, 1109, 1053, 976, 977, 2929 ],
-      "cpuUsages" : [ 1297, 1297, 1297, 1297, 1297, 1248, 1084, 1085, 966, 809, 809, 1224 ],
-      "vmemKbytes" : [ 125011, 375035, 625059, 875082, 1125106, 1368301, 1441708, 1441707, 1441708, 1441708, 1441707, 1441708 ],
-      "physMemKbytes" : [ 27270, 81812, 136354, 190895, 245438, 298570, 316659, 319596, 322165, 321755, 320696, 319661 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13710,
-        "virtualMemoryUsage" : 1476308992,
-        "physicalMemoryUsage" : 326963200,
-        "heapUsage" : 740360192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164122,
-    "taskID" : "task_1369942127770_1206_m_000022",
-    "taskType" : "MAP",
-    "finishTime" : 1371222186222,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166307,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222186222,
-      "attemptID" : "attempt_1369942127770_1206_m_000022_0",
-      "clockSplits" : [ 1673, 1674, 1674, 1674, 1674, 1674, 1281, 1231, 1150, 1000, 1000, 3869 ],
-      "cpuUsages" : [ 1270, 1271, 1271, 1270, 1271, 1271, 1189, 1180, 1050, 811, 810, 1176 ],
-      "vmemKbytes" : [ 116283, 348851, 581419, 813986, 1046555, 1279122, 1420532, 1422059, 1422060, 1422060, 1422059, 1422060 ],
-      "physMemKbytes" : [ 24619, 73859, 123098, 172337, 221577, 270816, 300537, 300304, 299627, 297553, 295072, 292670 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13920,
-        "virtualMemoryUsage" : 1456189440,
-        "physicalMemoryUsage" : 298930176,
-        "heapUsage" : 740425728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164123,
-    "taskID" : "task_1369942127770_1206_m_000023",
-    "taskType" : "MAP",
-    "finishTime" : 1371222186145,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222166345,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222186145,
-      "attemptID" : "attempt_1369942127770_1206_m_000023_0",
-      "clockSplits" : [ 1890, 1890, 1890, 1890, 1890, 1603, 1310, 1285, 1093, 1093, 2285, 1599 ],
-      "cpuUsages" : [ 1300, 1301, 1300, 1301, 1301, 1183, 1064, 1042, 878, 877, 908, 985 ],
-      "vmemKbytes" : [ 130897, 392693, 654489, 916284, 1178080, 1407818, 1441216, 1441215, 1441216, 1441216, 1441215, 1441216 ],
-      "physMemKbytes" : [ 28778, 86335, 143893, 201450, 259007, 309525, 316931, 316984, 315303, 312502, 309811, 309093 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13500,
-        "virtualMemoryUsage" : 1475805184,
-        "physicalMemoryUsage" : 316432384,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164123,
-    "taskID" : "task_1369942127770_1206_m_000024",
-    "taskType" : "MAP",
-    "finishTime" : 1371222189046,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222166312,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222189046,
-      "attemptID" : "attempt_1369942127770_1206_m_000024_0",
-      "clockSplits" : [ 2253, 2253, 2253, 2254, 1847, 969, 969, 7872, 514, 515, 514, 515 ],
-      "cpuUsages" : [ 1355, 1356, 1356, 1355, 1273, 1091, 1092, 1191, 1000, 1000, 1000, 1001 ],
-      "vmemKbytes" : [ 153860, 461581, 769302, 1077023, 1369366, 1441319, 1441320, 1441319, 1441320, 1441320, 1441319, 1441320 ],
-      "physMemKbytes" : [ 30297, 90891, 151486, 212080, 269690, 284519, 285383, 286252, 287524, 289042, 290561, 292080 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14070,
-        "virtualMemoryUsage" : 1475911680,
-        "physicalMemoryUsage" : 299868160,
-        "heapUsage" : 677838848
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164123,
-    "taskID" : "task_1369942127770_1206_m_000025",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185135,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222166313,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185135,
-      "attemptID" : "attempt_1369942127770_1206_m_000025_0",
-      "clockSplits" : [ 2136, 2136, 2136, 2137, 2130, 1075, 1075, 1048, 844, 844, 844, 2412 ],
-      "cpuUsages" : [ 1387, 1387, 1388, 1387, 1386, 1053, 1052, 1035, 894, 895, 895, 1351 ],
-      "vmemKbytes" : [ 142390, 427170, 711951, 996731, 1281508, 1422399, 1422400, 1422399, 1422400, 1422400, 1422399, 1422400 ],
-      "physMemKbytes" : [ 26260, 78782, 131304, 183825, 236347, 262453, 262696, 262931, 262484, 261596, 260708, 259812 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14110,
-        "virtualMemoryUsage" : 1456537600,
-        "physicalMemoryUsage" : 265564160,
-        "heapUsage" : 610598912
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164124,
-    "taskID" : "task_1369942127770_1206_m_000026",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185121,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222166319,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185121,
-      "attemptID" : "attempt_1369942127770_1206_m_000026_0",
-      "clockSplits" : [ 2178, 2179, 2178, 2179, 1980, 1194, 1194, 904, 713, 713, 713, 2671 ],
-      "cpuUsages" : [ 1365, 1365, 1365, 1365, 1309, 1089, 1089, 917, 805, 805, 805, 1301 ],
-      "vmemKbytes" : [ 147880, 443640, 739400, 1035160, 1324892, 1419083, 1419084, 1419083, 1419084, 1419084, 1419083, 1419084 ],
-      "physMemKbytes" : [ 29159, 87477, 145795, 204112, 261297, 281682, 284343, 286121, 284301, 282096, 279891, 278128 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13580,
-        "virtualMemoryUsage" : 1453142016,
-        "physicalMemoryUsage" : 286785536,
-        "heapUsage" : 609091584
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164124,
-    "taskID" : "task_1369942127770_1206_m_000027",
-    "taskType" : "MAP",
-    "finishTime" : 1371222186069,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222166318,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222186069,
-      "attemptID" : "attempt_1369942127770_1206_m_000027_0",
-      "clockSplits" : [ 2248, 2249, 2249, 2248, 1776, 1068, 1067, 993, 918, 918, 2288, 1622 ],
-      "cpuUsages" : [ 1367, 1368, 1367, 1368, 1258, 1097, 1096, 966, 836, 836, 879, 1172 ],
-      "vmemKbytes" : [ 154759, 464278, 773798, 1083317, 1368023, 1423659, 1423660, 1423659, 1423660, 1423660, 1423659, 1423660 ],
-      "physMemKbytes" : [ 30750, 92253, 153756, 215259, 271847, 283056, 283244, 283187, 281664, 279894, 278154, 278631 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13680,
-        "virtualMemoryUsage" : 1457827840,
-        "physicalMemoryUsage" : 286220288,
-        "heapUsage" : 592445440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164124,
-    "taskID" : "task_1369942127770_1206_m_000028",
-    "taskType" : "MAP",
-    "finishTime" : 1371222185115,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222166327,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222185115,
-      "attemptID" : "attempt_1369942127770_1206_m_000028_0",
-      "clockSplits" : [ 2169, 2170, 2170, 2170, 2072, 953, 954, 953, 890, 876, 876, 2529 ],
-      "cpuUsages" : [ 1402, 1402, 1403, 1402, 1374, 1043, 1042, 1043, 920, 896, 895, 1618 ],
-      "vmemKbytes" : [ 146031, 438093, 730155, 1022217, 1313341, 1436891, 1436892, 1436891, 1436892, 1436892, 1436891, 1436892 ],
-      "physMemKbytes" : [ 28835, 86506, 144177, 201848, 259347, 285982, 289861, 293740, 300259, 311707, 323267, 334513 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14440,
-        "virtualMemoryUsage" : 1471377408,
-        "physicalMemoryUsage" : 346238976,
-        "heapUsage" : 679346176
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164124,
-    "taskID" : "task_1369942127770_1206_m_000029",
-    "taskType" : "MAP",
-    "finishTime" : 1371222186085,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222166330,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222186085,
-      "attemptID" : "attempt_1369942127770_1206_m_000029_0",
-      "clockSplits" : [ 2131, 2132, 2132, 2132, 2131, 1196, 1106, 1107, 1114, 1115, 2070, 1384 ],
-      "cpuUsages" : [ 1316, 1317, 1317, 1317, 1317, 1079, 1056, 1048, 986, 985, 1017, 1075 ],
-      "vmemKbytes" : [ 141371, 424113, 706855, 989597, 1272340, 1437442, 1438532, 1438531, 1438532, 1438532, 1438531, 1438532 ],
-      "physMemKbytes" : [ 27222, 81669, 136115, 190561, 245008, 277502, 279390, 281042, 280013, 277262, 274876, 276619 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13830,
-        "virtualMemoryUsage" : 1473056768,
-        "physicalMemoryUsage" : 284745728,
-        "heapUsage" : 608043008
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164125,
-    "taskID" : "task_1369942127770_1206_m_000030",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209777,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222186223,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209777,
-      "attemptID" : "attempt_1369942127770_1206_m_000030_0",
-      "clockSplits" : [ 3325, 3325, 3326, 1633, 1137, 1137, 1676, 1628, 916, 916, 917, 3460 ],
-      "cpuUsages" : [ 1614, 1615, 1615, 1232, 1121, 1121, 1189, 1174, 1017, 1017, 1017, 1238 ],
-      "vmemKbytes" : [ 220995, 662987, 1104979, 1414799, 1426152, 1426151, 1426152, 1426151, 1426152, 1426152, 1426151, 1426152 ],
-      "physMemKbytes" : [ 46111, 138333, 230555, 295761, 299962, 301841, 304098, 306831, 306453, 304076, 301699, 299750 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 15080,
-        "virtualMemoryUsage" : 1460379648,
-        "physicalMemoryUsage" : 306688000,
-        "heapUsage" : 745209856
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164125,
-    "taskID" : "task_1369942127770_1206_m_000031",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209814,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222186224,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209814,
-      "attemptID" : "attempt_1369942127770_1206_m_000031_0",
-      "clockSplits" : [ 2788, 2789, 2789, 2665, 1430, 1431, 1710, 1647, 900, 899, 900, 3438 ],
-      "cpuUsages" : [ 1386, 1387, 1387, 1361, 1109, 1109, 1131, 1115, 964, 965, 964, 1252 ],
-      "vmemKbytes" : [ 182198, 546594, 910990, 1273865, 1424288, 1424287, 1424288, 1424287, 1424288, 1424288, 1424287, 1424288 ],
-      "physMemKbytes" : [ 38354, 115062, 191770, 268152, 298904, 297349, 296494, 296717, 296215, 295239, 294262, 293471 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14390,
-        "virtualMemoryUsage" : 1458470912,
-        "physicalMemoryUsage" : 302673920,
-        "heapUsage" : 724500480
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164125,
-    "taskID" : "task_1369942127770_1206_m_000032",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209796,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222186230,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209796,
-      "attemptID" : "attempt_1369942127770_1206_m_000032_0",
-      "clockSplits" : [ 3446, 3446, 3447, 1666, 1610, 1052, 1052, 1212, 2392, 1340, 1113, 1783 ],
-      "cpuUsages" : [ 1574, 1575, 1575, 1192, 1179, 1036, 1036, 1060, 1242, 897, 823, 1161 ],
-      "vmemKbytes" : [ 236125, 708377, 1180629, 1421325, 1421348, 1421347, 1421348, 1421347, 1421348, 1421348, 1421347, 1421348 ],
-      "physMemKbytes" : [ 51196, 153591, 255986, 308231, 308353, 309496, 311445, 313379, 314141, 313513, 311665, 309787 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14350,
-        "virtualMemoryUsage" : 1455460352,
-        "physicalMemoryUsage" : 316284928,
-        "heapUsage" : 741015552
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164126,
-    "taskID" : "task_1369942127770_1206_m_000033",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209114,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222186269,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209114,
-      "attemptID" : "attempt_1369942127770_1206_m_000033_0",
-      "clockSplits" : [ 2867, 2868, 2867, 2868, 1157, 1130, 1219, 2051, 1397, 925, 924, 2567 ],
-      "cpuUsages" : [ 1397, 1397, 1397, 1397, 1133, 1129, 1138, 1227, 1043, 911, 911, 1420 ],
-      "vmemKbytes" : [ 177507, 532523, 887539, 1242554, 1425454, 1425495, 1425496, 1425495, 1425496, 1425496, 1425495, 1425496 ],
-      "physMemKbytes" : [ 35271, 105813, 176355, 246896, 284278, 286428, 288564, 289767, 290547, 292311, 294191, 296014 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14500,
-        "virtualMemoryUsage" : 1459707904,
-        "physicalMemoryUsage" : 303673344,
-        "heapUsage" : 669974528
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164126,
-    "taskID" : "task_1369942127770_1206_m_000034",
-    "taskType" : "MAP",
-    "finishTime" : 1371222205072,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222186230,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222205072,
-      "attemptID" : "attempt_1369942127770_1206_m_000034_0",
-      "clockSplits" : [ 1942, 1943, 1943, 1942, 1943, 1831, 787, 788, 788, 889, 1494, 2545 ],
-      "cpuUsages" : [ 1226, 1226, 1227, 1226, 1227, 1208, 1040, 1039, 1040, 1009, 828, 1724 ],
-      "vmemKbytes" : [ 121272, 363818, 606363, 848908, 1091454, 1332855, 1430977, 1429650, 1428324, 1427011, 1426523, 1426524 ],
-      "physMemKbytes" : [ 27249, 81750, 136250, 190750, 245251, 299492, 321349, 320728, 320107, 319489, 319062, 318747 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14020,
-        "virtualMemoryUsage" : 1460760576,
-        "physicalMemoryUsage" : 326189056,
-        "heapUsage" : 668139520
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164126,
-    "taskID" : "task_1369942127770_1206_m_000035",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209265,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222186231,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209265,
-      "attemptID" : "attempt_1369942127770_1206_m_000035_0",
-      "clockSplits" : [ 2312, 2313, 2313, 2313, 2313, 2097, 1450, 1407, 1083, 1084, 3675, 312 ],
-      "cpuUsages" : [ 1166, 1167, 1167, 1166, 1167, 1149, 1093, 1075, 945, 945, 1023, 1307 ],
-      "vmemKbytes" : [ 123562, 370687, 617812, 864937, 1112063, 1351529, 1421224, 1421223, 1421224, 1421224, 1421223, 1421224 ],
-      "physMemKbytes" : [ 23849, 71548, 119247, 166946, 214646, 260983, 277134, 280864, 282024, 281525, 281038, 280933 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13460,
-        "virtualMemoryUsage" : 1455333376,
-        "physicalMemoryUsage" : 293855232,
-        "heapUsage" : 645595136
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164127,
-    "taskID" : "task_1369942127770_1206_m_000036",
-    "taskType" : "MAP",
-    "finishTime" : 1371222205027,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222186270,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222205027,
-      "attemptID" : "attempt_1369942127770_1206_m_000036_0",
-      "clockSplits" : [ 1457, 1458, 1457, 1458, 1458, 1457, 1588, 1594, 1020, 1007, 1007, 3788 ],
-      "cpuUsages" : [ 1146, 1146, 1146, 1146, 1147, 1146, 1350, 1361, 1032, 1024, 1024, 1372 ],
-      "vmemKbytes" : [ 117533, 352601, 587669, 822736, 1057804, 1292871, 1420975, 1421223, 1421224, 1421224, 1421223, 1421224 ],
-      "physMemKbytes" : [ 25662, 76986, 128310, 179634, 230959, 282283, 311405, 313987, 314079, 311498, 308915, 307356 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14040,
-        "virtualMemoryUsage" : 1455333376,
-        "physicalMemoryUsage" : 314486784,
-        "heapUsage" : 725483520
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164127,
-    "taskID" : "task_1369942127770_1206_m_000037",
-    "taskType" : "MAP",
-    "finishTime" : 1371222204802,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222186229,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222204802,
-      "attemptID" : "attempt_1369942127770_1206_m_000037_0",
-      "clockSplits" : [ 2817, 2817, 2817, 1469, 1026, 1027, 1211, 1334, 3276, 257, 257, 258 ],
-      "cpuUsages" : [ 1465, 1466, 1466, 1237, 1161, 1162, 1220, 1260, 1163, 850, 850, 850 ],
-      "vmemKbytes" : [ 221437, 664313, 1107189, 1424591, 1438128, 1438127, 1438128, 1438127, 1438128, 1438128, 1438127, 1438128 ],
-      "physMemKbytes" : [ 47520, 142560, 237600, 305733, 308702, 308767, 308909, 309355, 309754, 308145, 305672, 303200 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14150,
-        "virtualMemoryUsage" : 1472643072,
-        "physicalMemoryUsage" : 309211136,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164127,
-    "taskID" : "task_1369942127770_1206_m_000038",
-    "taskType" : "MAP",
-    "finishTime" : 1371222205071,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222186231,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222205071,
-      "attemptID" : "attempt_1369942127770_1206_m_000038_0",
-      "clockSplits" : [ 2279, 2280, 2280, 2280, 869, 832, 833, 833, 889, 890, 889, 3531 ],
-      "cpuUsages" : [ 1331, 1332, 1332, 1332, 1164, 1161, 1160, 1159, 1012, 1011, 1012, 1254 ],
-      "vmemKbytes" : [ 176677, 530031, 883386, 1236740, 1422008, 1422115, 1422116, 1422115, 1422116, 1422116, 1422115, 1422116 ],
-      "physMemKbytes" : [ 37600, 112801, 188002, 263203, 303425, 305112, 306777, 308442, 309142, 308918, 308694, 308464 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14390,
-        "virtualMemoryUsage" : 1456246784,
-        "physicalMemoryUsage" : 315645952,
-        "heapUsage" : 745013248
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164127,
-    "taskID" : "task_1369942127770_1206_m_000039",
-    "taskType" : "MAP",
-    "finishTime" : 1371222204844,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222186270,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222204844,
-      "attemptID" : "attempt_1369942127770_1206_m_000039_0",
-      "clockSplits" : [ 1520, 1521, 1521, 1520, 1521, 1502, 1411, 1412, 1054, 1023, 1024, 3236 ],
-      "cpuUsages" : [ 1201, 1201, 1201, 1201, 1201, 1219, 1301, 1301, 1078, 1060, 1059, 997 ],
-      "vmemKbytes" : [ 123345, 370038, 616730, 863421, 1110114, 1353144, 1437648, 1437647, 1437648, 1437648, 1437647, 1437648 ],
-      "physMemKbytes" : [ 26607, 79823, 133038, 186253, 239469, 291949, 312598, 316277, 317760, 316265, 314752, 313761 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14310,
-        "virtualMemoryUsage" : 1472151552,
-        "physicalMemoryUsage" : 321114112,
-        "heapUsage" : 738000896
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164128,
-    "taskID" : "task_1369942127770_1206_m_000040",
-    "taskType" : "MAP",
-    "finishTime" : 1371222208051,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222187226,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222208051,
-      "attemptID" : "attempt_1369942127770_1206_m_000040_0",
-      "clockSplits" : [ 2708, 2709, 2709, 2708, 1324, 1241, 1170, 983, 983, 3572, 201, 201 ],
-      "cpuUsages" : [ 1449, 1450, 1449, 1450, 1163, 1146, 1099, 972, 971, 970, 945, 946 ],
-      "vmemKbytes" : [ 173689, 521067, 868445, 1215823, 1408585, 1409139, 1409140, 1409139, 1409140, 1409140, 1409139, 1409140 ],
-      "physMemKbytes" : [ 37436, 112308, 187180, 262052, 304948, 308090, 311012, 311933, 312102, 312258, 310764, 308111 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14260,
-        "virtualMemoryUsage" : 1442959360,
-        "physicalMemoryUsage" : 314261504,
-        "heapUsage" : 739639296
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164128,
-    "taskID" : "task_1369942127770_1206_m_000041",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209764,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222187225,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209764,
-      "attemptID" : "attempt_1369942127770_1206_m_000041_0",
-      "clockSplits" : [ 2460, 2461, 2461, 2366, 1711, 1637, 1437, 1554, 2430, 3338, 136, 137 ],
-      "cpuUsages" : [ 1422, 1423, 1423, 1400, 1245, 1214, 1134, 1139, 1181, 1020, 984, 985 ],
-      "vmemKbytes" : [ 183430, 550292, 917154, 1281033, 1420664, 1420663, 1420664, 1420663, 1420664, 1420664, 1420663, 1420664 ],
-      "physMemKbytes" : [ 38854, 116562, 194270, 271356, 301598, 302728, 304891, 307428, 308423, 307956, 306560, 305139 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14710,
-        "virtualMemoryUsage" : 1454759936,
-        "physicalMemoryUsage" : 311668736,
-        "heapUsage" : 734986240
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164129,
-    "taskID" : "task_1369942127770_1206_m_000042",
-    "taskType" : "MAP",
-    "finishTime" : 1371222210013,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222188236,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222210013,
-      "attemptID" : "attempt_1369942127770_1206_m_000042_0",
-      "clockSplits" : [ 2345, 2345, 2346, 2345, 2345, 1441, 1165, 1139, 942, 942, 942, 3297 ],
-      "cpuUsages" : [ 1329, 1330, 1330, 1330, 1330, 1110, 1042, 1028, 918, 919, 918, 1176 ],
-      "vmemKbytes" : [ 135997, 407991, 679985, 951978, 1223973, 1416016, 1423416, 1423415, 1423416, 1423416, 1423415, 1423416 ],
-      "physMemKbytes" : [ 29954, 89862, 149770, 209678, 269587, 312158, 314689, 315603, 315555, 314887, 314219, 313779 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13870,
-        "virtualMemoryUsage" : 1457577984,
-        "physicalMemoryUsage" : 321241088,
-        "heapUsage" : 745275392
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164129,
-    "taskID" : "task_1369942127770_1206_m_000043",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209829,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222188247,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209829,
-      "attemptID" : "attempt_1369942127770_1206_m_000043_0",
-      "clockSplits" : [ 2418, 2419, 2419, 2159, 1443, 1453, 1585, 1514, 988, 987, 988, 3120 ],
-      "cpuUsages" : [ 1496, 1497, 1497, 1419, 1200, 1197, 1139, 1120, 984, 983, 984, 1064 ],
-      "vmemKbytes" : [ 192713, 578139, 963566, 1335372, 1439240, 1439239, 1439240, 1439239, 1439240, 1439240, 1439239, 1439240 ],
-      "physMemKbytes" : [ 41062, 123187, 205312, 284536, 306688, 306724, 308963, 312869, 313477, 311955, 310433, 309628 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14730,
-        "virtualMemoryUsage" : 1473781760,
-        "physicalMemoryUsage" : 316993536,
-        "heapUsage" : 742588416
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164129,
-    "taskID" : "task_1369942127770_1206_m_000044",
-    "taskType" : "MAP",
-    "finishTime" : 1371222205147,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222188243,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222205147,
-      "attemptID" : "attempt_1369942127770_1206_m_000044_0",
-      "clockSplits" : [ 1997, 1998, 1998, 1998, 1656, 1015, 1015, 992, 821, 821, 821, 1763 ],
-      "cpuUsages" : [ 1362, 1363, 1363, 1363, 1290, 1156, 1155, 1116, 828, 828, 828, 1418 ],
-      "vmemKbytes" : [ 154789, 464368, 773947, 1083526, 1374102, 1436109, 1431198, 1426321, 1424416, 1424416, 1424415, 1424416 ],
-      "physMemKbytes" : [ 33320, 99960, 166601, 233241, 295602, 306484, 302294, 298121, 295429, 293687, 291944, 290254 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14070,
-        "virtualMemoryUsage" : 1458601984,
-        "physicalMemoryUsage" : 296701952,
-        "heapUsage" : 740294656
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164130,
-    "taskID" : "task_1369942127770_1206_m_000045",
-    "taskType" : "MAP",
-    "finishTime" : 1371222208888,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222188284,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222208888,
-      "attemptID" : "attempt_1369942127770_1206_m_000045_0",
-      "clockSplits" : [ 2408, 2408, 2409, 2408, 1248, 994, 993, 1546, 1811, 1173, 1142, 2044 ],
-      "cpuUsages" : [ 1442, 1443, 1443, 1443, 1216, 1167, 1167, 1242, 1278, 871, 851, 1187 ],
-      "vmemKbytes" : [ 170497, 511493, 852489, 1193484, 1419688, 1425179, 1425180, 1425179, 1425180, 1425180, 1425179, 1425180 ],
-      "physMemKbytes" : [ 36659, 109977, 183295, 256613, 305816, 308651, 310334, 311695, 312050, 312197, 312184, 312178 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14750,
-        "virtualMemoryUsage" : 1459384320,
-        "physicalMemoryUsage" : 319713280,
-        "heapUsage" : 733020160
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164130,
-    "taskID" : "task_1369942127770_1206_m_000046",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209764,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222188246,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209764,
-      "attemptID" : "attempt_1369942127770_1206_m_000046_0",
-      "clockSplits" : [ 2411, 2412, 2411, 2412, 1354, 1182, 1201, 1287, 1288, 1246, 1233, 3075 ],
-      "cpuUsages" : [ 1429, 1430, 1430, 1430, 1204, 1167, 1149, 1069, 1069, 932, 888, 1233 ],
-      "vmemKbytes" : [ 170204, 510614, 851024, 1191433, 1405939, 1409271, 1409272, 1409271, 1409272, 1409272, 1409271, 1409272 ],
-      "physMemKbytes" : [ 36770, 110311, 183853, 257394, 302847, 301188, 298826, 298087, 298200, 297470, 294709, 291944 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14430,
-        "virtualMemoryUsage" : 1443094528,
-        "physicalMemoryUsage" : 298102784,
-        "heapUsage" : 740622336
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164130,
-    "taskID" : "task_1369942127770_1206_m_000047",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209770,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222188244,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209770,
-      "attemptID" : "attempt_1369942127770_1206_m_000047_0",
-      "clockSplits" : [ 2359, 2360, 2360, 2360, 991, 967, 967, 1864, 1869, 1009, 1009, 3406 ],
-      "cpuUsages" : [ 1381, 1382, 1381, 1382, 1111, 1107, 1107, 1332, 1274, 926, 926, 1181 ],
-      "vmemKbytes" : [ 175422, 526266, 877111, 1227955, 1409352, 1409403, 1409404, 1409403, 1409404, 1409404, 1409403, 1409404 ],
-      "physMemKbytes" : [ 38481, 115443, 192406, 269368, 308485, 307099, 305702, 305330, 307856, 308596, 308675, 308751 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14490,
-        "virtualMemoryUsage" : 1443229696,
-        "physicalMemoryUsage" : 316166144,
-        "heapUsage" : 743505920
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164130,
-    "taskID" : "task_1369942127770_1206_m_000048",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209758,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222188248,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209758,
-      "attemptID" : "attempt_1369942127770_1206_m_000048_0",
-      "clockSplits" : [ 2073, 2074, 2074, 2074, 2073, 1639, 1272, 1276, 1301, 1301, 1674, 1842 ],
-      "cpuUsages" : [ 1234, 1235, 1235, 1235, 1235, 1183, 1139, 1135, 1103, 1104, 909, 823 ],
-      "vmemKbytes" : [ 129783, 389349, 648915, 908480, 1168047, 1389454, 1416722, 1416815, 1416852, 1416852, 1416851, 1416852 ],
-      "physMemKbytes" : [ 25359, 76080, 126801, 177521, 228242, 271580, 277354, 277862, 277694, 277090, 276628, 276597 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13990,
-        "virtualMemoryUsage" : 1450856448,
-        "physicalMemoryUsage" : 287096832,
-        "heapUsage" : 598081536
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164131,
-    "taskID" : "task_1369942127770_1206_m_000049",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209877,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222188245,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209877,
-      "attemptID" : "attempt_1369942127770_1206_m_000049_0",
-      "clockSplits" : [ 2394, 2395, 2394, 2395, 2395, 1860, 1150, 1150, 985, 905, 904, 2700 ],
-      "cpuUsages" : [ 1252, 1253, 1253, 1253, 1253, 1165, 1047, 1048, 897, 822, 823, 1324 ],
-      "vmemKbytes" : [ 126489, 379468, 632447, 885426, 1138405, 1368134, 1409448, 1409495, 1409533, 1409536, 1409535, 1409536 ],
-      "physMemKbytes" : [ 26096, 78289, 130482, 182675, 234868, 282278, 290926, 291083, 290759, 288885, 286894, 284958 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13390,
-        "virtualMemoryUsage" : 1443364864,
-        "physicalMemoryUsage" : 291172352,
-        "heapUsage" : 728629248
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164131,
-    "taskID" : "task_1369942127770_1206_m_000050",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209871,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222188246,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209871,
-      "attemptID" : "attempt_1369942127770_1206_m_000050_0",
-      "clockSplits" : [ 2330, 2330, 2331, 2330, 2331, 1760, 1284, 1228, 809, 809, 809, 3269 ],
-      "cpuUsages" : [ 1299, 1300, 1300, 1299, 1300, 1110, 952, 941, 864, 865, 864, 1296 ],
-      "vmemKbytes" : [ 129180, 387540, 645900, 904260, 1162621, 1382642, 1409412, 1409411, 1409412, 1409412, 1409411, 1409412 ],
-      "physMemKbytes" : [ 27390, 82173, 136956, 191739, 246522, 293591, 301780, 304563, 305591, 305485, 305379, 305268 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13390,
-        "virtualMemoryUsage" : 1443237888,
-        "physicalMemoryUsage" : 312508416,
-        "heapUsage" : 745275392
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164131,
-    "taskID" : "task_1369942127770_1206_m_000051",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209798,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222189249,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209798,
-      "attemptID" : "attempt_1369942127770_1206_m_000051_0",
-      "clockSplits" : [ 2459, 2460, 2460, 2460, 2460, 1450, 922, 923, 947, 1056, 1056, 1891 ],
-      "cpuUsages" : [ 1238, 1239, 1239, 1239, 1239, 1071, 982, 982, 962, 870, 869, 1390 ],
-      "vmemKbytes" : [ 133415, 400246, 667077, 933908, 1200739, 1410001, 1425708, 1425707, 1425708, 1425708, 1425707, 1425708 ],
-      "physMemKbytes" : [ 29016, 87050, 145083, 203116, 261151, 306685, 310195, 310295, 310356, 308899, 306668, 304504 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13320,
-        "virtualMemoryUsage" : 1459924992,
-        "physicalMemoryUsage" : 311140352,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164132,
-    "taskID" : "task_1369942127770_1206_m_000052",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209546,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222189252,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209546,
-      "attemptID" : "attempt_1369942127770_1206_m_000052_0",
-      "clockSplits" : [ 2113, 2113, 2113, 2113, 1296, 902, 902, 1007, 1429, 1434, 1749, 3118 ],
-      "cpuUsages" : [ 1343, 1343, 1343, 1343, 1163, 1076, 1077, 1044, 916, 918, 1010, 1614 ],
-      "vmemKbytes" : [ 165998, 497994, 829990, 1161986, 1418463, 1436051, 1436052, 1435986, 1433726, 1430398, 1428787, 1428788 ],
-      "physMemKbytes" : [ 31862, 95586, 159310, 223034, 272810, 278461, 280865, 283418, 290959, 300928, 308895, 314795 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14190,
-        "virtualMemoryUsage" : 1463078912,
-        "physicalMemoryUsage" : 324112384,
-        "heapUsage" : 672333824
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164132,
-    "taskID" : "task_1369942127770_1206_m_000053",
-    "taskType" : "MAP",
-    "finishTime" : 1371222211732,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222189248,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222211732,
-      "attemptID" : "attempt_1369942127770_1206_m_000053_0",
-      "clockSplits" : [ 3379, 3380, 3379, 3380, 1214, 1180, 1480, 2139, 2348, 200, 200, 200 ],
-      "cpuUsages" : [ 1382, 1382, 1382, 1382, 1146, 1141, 1199, 1326, 847, 768, 767, 768 ],
-      "vmemKbytes" : [ 176837, 530511, 884186, 1237861, 1420070, 1420111, 1420112, 1420111, 1420112, 1420112, 1420111, 1420112 ],
-      "physMemKbytes" : [ 37701, 113105, 188508, 263911, 302843, 303027, 303274, 304566, 304973, 303294, 301579, 299865 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13490,
-        "virtualMemoryUsage" : 1454194688,
-        "physicalMemoryUsage" : 306184192,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164132,
-    "taskID" : "task_1369942127770_1206_m_000054",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209794,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222189250,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209794,
-      "attemptID" : "attempt_1369942127770_1206_m_000054_0",
-      "clockSplits" : [ 1915, 1915, 1915, 1915, 1915, 1152, 1100, 1150, 1523, 1535, 1698, 2805 ],
-      "cpuUsages" : [ 1363, 1363, 1363, 1363, 1363, 1198, 1188, 1163, 976, 977, 997, 1316 ],
-      "vmemKbytes" : [ 140637, 421911, 703185, 984458, 1265733, 1423312, 1423856, 1423855, 1423856, 1423856, 1423855, 1423856 ],
-      "physMemKbytes" : [ 30869, 92607, 154346, 216085, 277824, 313467, 315980, 318362, 319339, 319401, 317453, 314073 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14630,
-        "virtualMemoryUsage" : 1458028544,
-        "physicalMemoryUsage" : 320655360,
-        "heapUsage" : 740294656
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164133,
-    "taskID" : "task_1369942127770_1206_m_000055",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209829,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222190266,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209829,
-      "attemptID" : "attempt_1369942127770_1206_m_000055_0",
-      "clockSplits" : [ 2156, 2157, 2157, 2157, 1560, 923, 923, 951, 1166, 1165, 3553, 294 ],
-      "cpuUsages" : [ 1567, 1568, 1568, 1568, 1331, 1078, 1079, 1081, 1094, 1094, 1067, 1035 ],
-      "vmemKbytes" : [ 159573, 478720, 797867, 1117014, 1398782, 1441271, 1441272, 1441271, 1441272, 1441272, 1441271, 1441272 ],
-      "physMemKbytes" : [ 34072, 102218, 170364, 238509, 298798, 308785, 309842, 310878, 310220, 308476, 306900, 306628 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 15280,
-        "virtualMemoryUsage" : 1475862528,
-        "physicalMemoryUsage" : 313933824,
-        "heapUsage" : 740491264
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164133,
-    "taskID" : "task_1369942127770_1206_m_000056",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209766,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222190265,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209766,
-      "attemptID" : "attempt_1369942127770_1206_m_000056_0",
-      "clockSplits" : [ 1671, 1672, 1672, 1672, 1671, 1485, 1304, 1382, 1955, 1637, 1335, 2040 ],
-      "cpuUsages" : [ 1307, 1307, 1308, 1307, 1307, 1228, 1152, 1137, 1033, 976, 924, 1214 ],
-      "vmemKbytes" : [ 129345, 388038, 646731, 905424, 1164117, 1389407, 1420696, 1420695, 1420696, 1420696, 1420695, 1420696 ],
-      "physMemKbytes" : [ 29283, 87851, 146419, 204986, 263554, 314885, 324186, 326689, 327672, 327261, 324457, 321292 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14200,
-        "virtualMemoryUsage" : 1454792704,
-        "physicalMemoryUsage" : 327684096,
-        "heapUsage" : 659947520
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164133,
-    "taskID" : "task_1369942127770_1206_m_000057",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209780,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222190273,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209780,
-      "attemptID" : "attempt_1369942127770_1206_m_000057_0",
-      "clockSplits" : [ 1937, 1937, 1937, 1937, 1937, 1808, 921, 921, 920, 1160, 1247, 2840 ],
-      "cpuUsages" : [ 1261, 1262, 1262, 1261, 1262, 1229, 1008, 1008, 1007, 884, 839, 1247 ],
-      "vmemKbytes" : [ 120936, 362811, 604686, 846560, 1088435, 1328359, 1420532, 1420531, 1420532, 1420532, 1420531, 1420532 ],
-      "physMemKbytes" : [ 26360, 79080, 131800, 184520, 237241, 289556, 311113, 313482, 315853, 316764, 313891, 310918 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13530,
-        "virtualMemoryUsage" : 1454624768,
-        "physicalMemoryUsage" : 317476864,
-        "heapUsage" : 728170496
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164133,
-    "taskID" : "task_1369942127770_1206_m_000058",
-    "taskType" : "MAP",
-    "finishTime" : 1371222209289,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222190266,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222209289,
-      "attemptID" : "attempt_1369942127770_1206_m_000058_0",
-      "clockSplits" : [ 1567, 1568, 1568, 1568, 1568, 1568, 1852, 2691, 800, 800, 799, 2669 ],
-      "cpuUsages" : [ 1236, 1236, 1237, 1236, 1237, 1236, 1292, 1435, 895, 895, 895, 1280 ],
-      "vmemKbytes" : [ 104429, 313288, 522147, 731006, 939866, 1148725, 1353137, 1418911, 1418912, 1418912, 1418911, 1418912 ],
-      "physMemKbytes" : [ 22528, 67586, 112643, 157700, 202758, 247815, 292006, 309112, 309629, 307720, 305811, 303966 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14110,
-        "virtualMemoryUsage" : 1452965888,
-        "physicalMemoryUsage" : 310743040,
-        "heapUsage" : 740360192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164134,
-    "taskID" : "task_1369942127770_1206_m_000059",
-    "taskType" : "MAP",
-    "finishTime" : 1371222211562,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222192248,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222211562,
-      "attemptID" : "attempt_1369942127770_1206_m_000059_0",
-      "clockSplits" : [ 2767, 2767, 2768, 2767, 849, 819, 819, 967, 2079, 2282, 212, 213 ],
-      "cpuUsages" : [ 1464, 1464, 1465, 1464, 1054, 1047, 1047, 1043, 1010, 905, 843, 844 ],
-      "vmemKbytes" : [ 177532, 532598, 887664, 1242729, 1425654, 1425695, 1425696, 1425695, 1425696, 1425696, 1425695, 1425696 ],
-      "physMemKbytes" : [ 35793, 107380, 178967, 250554, 288480, 290645, 292802, 294945, 295913, 295599, 293360, 290944 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13650,
-        "virtualMemoryUsage" : 1459912704,
-        "physicalMemoryUsage" : 296689664,
-        "heapUsage" : 740425728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164134,
-    "taskID" : "task_1369942127770_1206_m_000060",
-    "taskType" : "MAP",
-    "finishTime" : 1371222225441,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222206294,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222225441,
-      "attemptID" : "attempt_1369942127770_1206_m_000060_0",
-      "clockSplits" : [ 1420, 1420, 1421, 1420, 1420, 1421, 1382, 1130, 1130, 1252, 1448, 4180 ],
-      "cpuUsages" : [ 1221, 1222, 1222, 1222, 1221, 1222, 1208, 1119, 1120, 1000, 808, 1165 ],
-      "vmemKbytes" : [ 104942, 314826, 524711, 734595, 944480, 1154364, 1362397, 1441311, 1441312, 1441312, 1441311, 1441312 ],
-      "physMemKbytes" : [ 22576, 67728, 112881, 158034, 203187, 248339, 293119, 311828, 314605, 317000, 315530, 313123 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13850,
-        "virtualMemoryUsage" : 1475903488,
-        "physicalMemoryUsage" : 319762432,
-        "heapUsage" : 742326272
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164134,
-    "taskID" : "task_1369942127770_1206_m_000061",
-    "taskType" : "MAP",
-    "finishTime" : 1371222221672,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222206296,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222221672,
-      "attemptID" : "attempt_1369942127770_1206_m_000061_0",
-      "clockSplits" : [ 1217, 1218, 1218, 1218, 1218, 1217, 1218, 1218, 1106, 972, 972, 2580 ],
-      "cpuUsages" : [ 1102, 1102, 1103, 1102, 1103, 1102, 1102, 1103, 1008, 896, 896, 1281 ],
-      "vmemKbytes" : [ 84070, 252211, 420352, 588493, 756634, 924775, 1092916, 1261057, 1411777, 1436728, 1436727, 1436728 ],
-      "physMemKbytes" : [ 16339, 49018, 81697, 114376, 147055, 179734, 212413, 245092, 274523, 280502, 281827, 283091 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12900,
-        "virtualMemoryUsage" : 1471209472,
-        "physicalMemoryUsage" : 290119680,
-        "heapUsage" : 674496512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164135,
-    "taskID" : "task_1369942127770_1206_m_000062",
-    "taskType" : "MAP",
-    "finishTime" : 1371222221958,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222206298,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222221958,
-      "attemptID" : "attempt_1369942127770_1206_m_000062_0",
-      "clockSplits" : [ 1276, 1276, 1277, 1276, 1276, 1277, 1253, 882, 881, 882, 3492, 94 ],
-      "cpuUsages" : [ 1156, 1157, 1157, 1157, 1157, 1156, 1148, 990, 990, 990, 1022, 1060 ],
-      "vmemKbytes" : [ 101522, 304566, 507610, 710654, 913699, 1116743, 1319439, 1409411, 1409412, 1409412, 1409411, 1409412 ],
-      "physMemKbytes" : [ 21852, 65556, 109261, 152965, 196670, 240375, 284000, 301612, 298461, 295309, 292461, 291917 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13490,
-        "virtualMemoryUsage" : 1443237888,
-        "physicalMemoryUsage" : 299003904,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164135,
-    "taskID" : "task_1369942127770_1206_m_000063",
-    "taskType" : "MAP",
-    "finishTime" : 1371222227163,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222207290,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222227163,
-      "attemptID" : "attempt_1369942127770_1206_m_000063_0",
-      "clockSplits" : [ 1693, 1694, 1694, 1694, 1694, 1694, 1713, 2362, 4563, 269, 269, 270 ],
-      "cpuUsages" : [ 1238, 1239, 1238, 1239, 1238, 1239, 1171, 1204, 1078, 895, 895, 896 ],
-      "vmemKbytes" : [ 117528, 352587, 587645, 822702, 1057761, 1292818, 1424850, 1425327, 1425328, 1425328, 1425327, 1425328 ],
-      "physMemKbytes" : [ 25760, 77280, 128800, 180319, 231840, 283359, 312333, 312567, 315051, 313807, 312106, 310406 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13690,
-        "virtualMemoryUsage" : 1459535872,
-        "physicalMemoryUsage" : 316899328,
-        "heapUsage" : 735051776
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164135,
-    "taskID" : "task_1369942127770_1206_m_000064",
-    "taskType" : "MAP",
-    "finishTime" : 1371222227254,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222207289,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222227254,
-      "attemptID" : "attempt_1369942127770_1206_m_000064_0",
-      "clockSplits" : [ 1705, 1705, 1705, 1705, 1705, 1702, 1632, 1534, 805, 806, 806, 3859 ],
-      "cpuUsages" : [ 1228, 1228, 1228, 1228, 1228, 1225, 1140, 1106, 851, 851, 851, 1326 ],
-      "vmemKbytes" : [ 119109, 357327, 595545, 833763, 1071982, 1310012, 1419836, 1419835, 1419836, 1419836, 1419835, 1419836 ],
-      "physMemKbytes" : [ 25719, 77160, 128601, 180042, 231483, 282884, 306601, 306586, 305168, 302849, 300530, 298267 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13590,
-        "virtualMemoryUsage" : 1453912064,
-        "physicalMemoryUsage" : 304549888,
-        "heapUsage" : 734855168
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164135,
-    "taskID" : "task_1369942127770_1206_m_000065",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230890,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222207289,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230890,
-      "attemptID" : "attempt_1369942127770_1206_m_000065_0",
-      "clockSplits" : [ 2510, 2511, 2511, 2511, 881, 855, 855, 3817, 956, 957, 957, 4275 ],
-      "cpuUsages" : [ 1419, 1420, 1419, 1420, 975, 968, 969, 1185, 898, 899, 898, 1340 ],
-      "vmemKbytes" : [ 175498, 526495, 877492, 1228489, 1409318, 1409359, 1409360, 1409359, 1409360, 1409360, 1409359, 1409360 ],
-      "physMemKbytes" : [ 37886, 113658, 189430, 265201, 304989, 306545, 308094, 310685, 313574, 311030, 308486, 306866 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13810,
-        "virtualMemoryUsage" : 1443184640,
-        "physicalMemoryUsage" : 314040320,
-        "heapUsage" : 734920704
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164136,
-    "taskID" : "task_1369942127770_1206_m_000066",
-    "taskType" : "MAP",
-    "finishTime" : 1371222241231,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222209293,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222241231,
-      "attemptID" : "attempt_1369942127770_1206_m_000066_0",
-      "clockSplits" : [ 1787, 1787, 1788, 1787, 1787, 1088, 1085, 4240, 1584, 1583, 1583, 11834 ],
-      "cpuUsages" : [ 1420, 1421, 1421, 1421, 1421, 1182, 1181, 1242, 848, 848, 848, 1147 ],
-      "vmemKbytes" : [ 141716, 425148, 708581, 992014, 1275447, 1418363, 1418476, 1418585, 1418628, 1418628, 1418627, 1418628 ],
-      "physMemKbytes" : [ 30409, 91229, 152048, 212867, 273687, 305868, 308943, 311994, 312816, 312180, 311543, 310922 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14400,
-        "virtualMemoryUsage" : 1452675072,
-        "physicalMemoryUsage" : 318169088,
-        "heapUsage" : 745537536
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164136,
-    "taskID" : "task_1369942127770_1206_m_000067",
-    "taskType" : "MAP",
-    "finishTime" : 1371222225138,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222209294,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222225138,
-      "attemptID" : "attempt_1369942127770_1206_m_000067_0",
-      "clockSplits" : [ 1165, 1166, 1165, 1166, 1166, 1165, 1166, 928, 723, 722, 722, 3621 ],
-      "cpuUsages" : [ 1214, 1215, 1215, 1215, 1215, 1215, 1215, 1030, 869, 869, 869, 1129 ],
-      "vmemKbytes" : [ 95135, 285405, 475675, 665945, 856216, 1046485, 1236756, 1399842, 1420452, 1420452, 1420451, 1420452 ],
-      "physMemKbytes" : [ 18348, 55044, 91740, 128435, 165132, 201827, 238524, 271054, 281752, 289291, 296830, 304922 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13660,
-        "virtualMemoryUsage" : 1454542848,
-        "physicalMemoryUsage" : 319750144,
-        "heapUsage" : 673841152
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164136,
-    "taskID" : "task_1369942127770_1206_m_000068",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230905,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222210298,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230905,
-      "attemptID" : "attempt_1369942127770_1206_m_000068_0",
-      "clockSplits" : [ 2408, 2408, 2408, 2409, 1930, 1718, 1379, 1310, 798, 798, 797, 2239 ],
-      "cpuUsages" : [ 1541, 1542, 1541, 1542, 1162, 1109, 1032, 997, 741, 740, 740, 1213 ],
-      "vmemKbytes" : [ 178979, 536937, 894896, 1252854, 1437270, 1437311, 1437312, 1437311, 1437312, 1437312, 1437311, 1437312 ],
-      "physMemKbytes" : [ 38258, 114775, 191292, 267809, 307294, 307439, 307617, 307800, 307382, 306576, 305769, 304983 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13900,
-        "virtualMemoryUsage" : 1471807488,
-        "physicalMemoryUsage" : 312037376,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164137,
-    "taskID" : "task_1369942127770_1206_m_000069",
-    "taskType" : "MAP",
-    "finishTime" : 1371222225328,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222210302,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222225328,
-      "attemptID" : "attempt_1369942127770_1206_m_000069_0",
-      "clockSplits" : [ 1091, 1092, 1091, 1092, 1092, 1091, 1092, 1058, 803, 804, 804, 3736 ],
-      "cpuUsages" : [ 1107, 1107, 1108, 1107, 1108, 1107, 1108, 1073, 810, 810, 810, 1305 ],
-      "vmemKbytes" : [ 89984, 269954, 449923, 629892, 809862, 989831, 1169801, 1348531, 1418636, 1418636, 1418635, 1418636 ],
-      "physMemKbytes" : [ 17538, 52614, 87690, 122765, 157842, 192917, 227994, 262894, 282408, 291993, 301578, 311953 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12740,
-        "virtualMemoryUsage" : 1452683264,
-        "physicalMemoryUsage" : 329846784,
-        "heapUsage" : 655818752
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164137,
-    "taskID" : "task_1369942127770_1206_m_000070",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230923,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222210301,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230923,
-      "attemptID" : "attempt_1369942127770_1206_m_000070_0",
-      "clockSplits" : [ 1667, 1667, 1667, 1667, 1667, 1451, 1272, 1327, 1731, 1653, 1491, 3356 ],
-      "cpuUsages" : [ 1331, 1331, 1331, 1331, 1332, 1146, 993, 987, 942, 944, 946, 1406 ],
-      "vmemKbytes" : [ 130716, 392148, 653580, 915011, 1176444, 1398858, 1425760, 1425759, 1425760, 1425760, 1425759, 1425760 ],
-      "physMemKbytes" : [ 25209, 75627, 126045, 176463, 226882, 269981, 276408, 277936, 291940, 312986, 321089, 324970 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 14020,
-        "virtualMemoryUsage" : 1459978240,
-        "physicalMemoryUsage" : 333864960,
-        "heapUsage" : 675282944
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164137,
-    "taskID" : "task_1369942127770_1206_m_000071",
-    "taskType" : "MAP",
-    "finishTime" : 1371222243147,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222210300,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222243147,
-      "attemptID" : "attempt_1369942127770_1206_m_000071_0",
-      "clockSplits" : [ 2317, 2317, 2317, 2318, 830, 804, 803, 20720, 104, 104, 104, 104 ],
-      "cpuUsages" : [ 1476, 1476, 1476, 1476, 1068, 1062, 1061, 1367, 764, 765, 764, 765 ],
-      "vmemKbytes" : [ 179124, 537372, 895621, 1253870, 1439095, 1439147, 1439148, 1439147, 1439148, 1439148, 1439147, 1439148 ],
-      "physMemKbytes" : [ 38656, 115968, 193280, 270591, 311557, 313623, 315680, 317727, 317803, 316372, 314939, 313508 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13520,
-        "virtualMemoryUsage" : 1473687552,
-        "physicalMemoryUsage" : 320299008,
-        "heapUsage" : 740425728
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164138,
-    "taskID" : "task_1369942127770_1206_m_000072",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230925,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222210302,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230925,
-      "attemptID" : "attempt_1369942127770_1206_m_000072_0",
-      "clockSplits" : [ 2052, 2053, 2052, 2053, 2052, 1753, 1343, 1286, 863, 863, 863, 3385 ],
-      "cpuUsages" : [ 1301, 1302, 1301, 1302, 1301, 1214, 1093, 1070, 887, 887, 887, 1265 ],
-      "vmemKbytes" : [ 129050, 387150, 645250, 903350, 1161451, 1396549, 1439636, 1439635, 1439636, 1439636, 1439635, 1439636 ],
-      "physMemKbytes" : [ 27936, 83809, 139683, 195556, 251430, 302570, 314193, 316918, 316967, 315288, 313608, 312145 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13810,
-        "virtualMemoryUsage" : 1474187264,
-        "physicalMemoryUsage" : 319389696,
-        "heapUsage" : 725942272
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164138,
-    "taskID" : "task_1369942127770_1206_m_000073",
-    "taskType" : "MAP",
-    "finishTime" : 1371222233643,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222211323,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222233643,
-      "attemptID" : "attempt_1369942127770_1206_m_000073_0",
-      "clockSplits" : [ 2850, 2850, 2851, 2850, 3634, 922, 921, 915, 864, 864, 863, 1931 ],
-      "cpuUsages" : [ 1422, 1422, 1422, 1422, 1195, 974, 974, 956, 814, 813, 814, 1162 ],
-      "vmemKbytes" : [ 178725, 536177, 893628, 1251079, 1430284, 1428495, 1428496, 1428495, 1428496, 1428496, 1428495, 1428496 ],
-      "physMemKbytes" : [ 33814, 101442, 169070, 236698, 286736, 296978, 302601, 308176, 309819, 308938, 308057, 307285 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13390,
-        "virtualMemoryUsage" : 1462779904,
-        "physicalMemoryUsage" : 314519552,
-        "heapUsage" : 656801792
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164138,
-    "taskID" : "task_1369942127770_1206_m_000074",
-    "taskType" : "MAP",
-    "finishTime" : 1371222231021,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222211318,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222231021,
-      "attemptID" : "attempt_1369942127770_1206_m_000074_0",
-      "clockSplits" : [ 2026, 2027, 2026, 2027, 1805, 998, 998, 1150, 2266, 1405, 1124, 1124 ],
-      "cpuUsages" : [ 1354, 1354, 1355, 1354, 1264, 933, 933, 931, 908, 776, 734, 734 ],
-      "vmemKbytes" : [ 148613, 445839, 743066, 1040292, 1330604, 1422019, 1422020, 1422019, 1422020, 1422020, 1422019, 1422020 ],
-      "physMemKbytes" : [ 32329, 96989, 161649, 226308, 289469, 309488, 309679, 309869, 309968, 309242, 306663, 304002 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13210,
-        "virtualMemoryUsage" : 1456148480,
-        "physicalMemoryUsage" : 313556992,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164139,
-    "taskID" : "task_1369942127770_1206_m_000075",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230806,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222211320,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230806,
-      "attemptID" : "attempt_1369942127770_1206_m_000075_0",
-      "clockSplits" : [ 1609, 1609, 1610, 1609, 1609, 1610, 1609, 1437, 800, 800, 800, 3712 ],
-      "cpuUsages" : [ 1126, 1126, 1126, 1126, 1127, 1126, 1126, 1078, 896, 897, 896, 1050 ],
-      "vmemKbytes" : [ 91606, 274818, 458031, 641244, 824457, 1007670, 1190883, 1369937, 1426664, 1426664, 1426663, 1426664 ],
-      "physMemKbytes" : [ 18989, 56967, 94945, 132922, 170901, 208878, 246857, 284002, 296666, 297978, 299289, 300540 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13070,
-        "virtualMemoryUsage" : 1460903936,
-        "physicalMemoryUsage" : 308080640,
-        "heapUsage" : 728367104
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164139,
-    "taskID" : "task_1369942127770_1206_m_000076",
-    "taskType" : "MAP",
-    "finishTime" : 1371222231013,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222211322,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222231013,
-      "attemptID" : "attempt_1369942127770_1206_m_000076_0",
-      "clockSplits" : [ 1510, 1510, 1510, 1510, 1511, 1510, 1543, 3155, 989, 989, 3170, 779 ],
-      "cpuUsages" : [ 1182, 1183, 1183, 1183, 1183, 1183, 1182, 1138, 1003, 1002, 1004, 1174 ],
-      "vmemKbytes" : [ 103292, 309877, 516463, 723048, 929633, 1136218, 1342774, 1442573, 1441656, 1440154, 1438651, 1437908 ],
-      "physMemKbytes" : [ 22609, 67829, 113048, 158267, 203487, 248706, 293920, 315760, 313552, 309910, 306268, 304426 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13600,
-        "virtualMemoryUsage" : 1472417792,
-        "physicalMemoryUsage" : 311689216,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164139,
-    "taskID" : "task_1369942127770_1206_m_000077",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230986,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222211321,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230986,
-      "attemptID" : "attempt_1369942127770_1206_m_000077_0",
-      "clockSplits" : [ 2453, 2454, 2454, 2454, 983, 819, 818, 834, 953, 953, 952, 3225 ],
-      "cpuUsages" : [ 1358, 1358, 1358, 1358, 1081, 1050, 1050, 1036, 929, 930, 930, 882 ],
-      "vmemKbytes" : [ 173221, 519663, 866105, 1212547, 1419007, 1420775, 1420776, 1420775, 1420776, 1420776, 1420775, 1420776 ],
-      "physMemKbytes" : [ 37672, 113016, 188361, 263705, 309197, 311033, 312493, 313926, 312972, 310477, 307981, 306375 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13630,
-        "virtualMemoryUsage" : 1454874624,
-        "physicalMemoryUsage" : 313704448,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164139,
-    "taskID" : "task_1369942127770_1206_m_000078",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230909,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222211322,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230909,
-      "attemptID" : "attempt_1369942127770_1206_m_000078_0",
-      "clockSplits" : [ 1544, 1545, 1545, 1545, 1545, 1544, 1888, 2074, 1066, 1066, 3565, 400 ],
-      "cpuUsages" : [ 1237, 1237, 1238, 1237, 1237, 1238, 1206, 1153, 966, 966, 971, 994 ],
-      "vmemKbytes" : [ 109547, 328642, 547738, 766833, 985929, 1205024, 1394686, 1420099, 1420100, 1420100, 1420099, 1420100 ],
-      "physMemKbytes" : [ 23842, 71526, 119211, 166896, 214581, 262265, 303541, 309043, 308442, 307473, 306523, 306207 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13790,
-        "virtualMemoryUsage" : 1454182400,
-        "physicalMemoryUsage" : 313499648,
-        "heapUsage" : 734789632
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164140,
-    "taskID" : "task_1369942127770_1206_m_000079",
-    "taskType" : "MAP",
-    "finishTime" : 1371222241634,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222212318,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222241634,
-      "attemptID" : "attempt_1369942127770_1206_m_000079_0",
-      "clockSplits" : [ 1728, 1728, 1728, 1728, 1729, 1728, 1984, 16602, 89, 88, 89, 89 ],
-      "cpuUsages" : [ 1174, 1174, 1175, 1174, 1175, 1174, 1167, 1241, 766, 767, 766, 767 ],
-      "vmemKbytes" : [ 109233, 327701, 546169, 764636, 983104, 1201571, 1396830, 1428571, 1428572, 1428572, 1428571, 1428572 ],
-      "physMemKbytes" : [ 23542, 70627, 117712, 164797, 211882, 258967, 301447, 311452, 311774, 309734, 307693, 305652 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12520,
-        "virtualMemoryUsage" : 1462857728,
-        "physicalMemoryUsage" : 311943168,
-        "heapUsage" : 723714048
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164140,
-    "taskID" : "task_1369942127770_1206_m_000080",
-    "taskType" : "MAP",
-    "finishTime" : 1371222234375,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222212320,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222234375,
-      "attemptID" : "attempt_1369942127770_1206_m_000080_0",
-      "clockSplits" : [ 2667, 2668, 2668, 2668, 1137, 1111, 1291, 2903, 866, 867, 866, 2337 ],
-      "cpuUsages" : [ 1361, 1362, 1361, 1362, 1011, 1005, 1020, 1148, 925, 926, 925, 1094 ],
-      "vmemKbytes" : [ 179085, 537255, 895425, 1253594, 1438779, 1438831, 1438832, 1438831, 1438832, 1438832, 1438831, 1438832 ],
-      "physMemKbytes" : [ 38347, 115043, 191739, 268434, 308300, 308750, 309191, 309763, 309488, 308604, 307719, 306908 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13500,
-        "virtualMemoryUsage" : 1473363968,
-        "physicalMemoryUsage" : 314023936,
-        "heapUsage" : 723714048
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164140,
-    "taskID" : "task_1369942127770_1206_m_000081",
-    "taskType" : "MAP",
-    "finishTime" : 1371222233436,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222212365,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222233436,
-      "attemptID" : "attempt_1369942127770_1206_m_000081_0",
-      "clockSplits" : [ 2872, 2872, 2872, 2872, 1498, 1478, 1590, 1608, 2713, 183, 183, 184 ],
-      "cpuUsages" : [ 1372, 1372, 1372, 1373, 1091, 1087, 955, 934, 919, 918, 918, 919 ],
-      "vmemKbytes" : [ 177378, 532136, 886894, 1241651, 1424418, 1424459, 1424460, 1424459, 1424460, 1424460, 1424459, 1424460 ],
-      "physMemKbytes" : [ 36488, 109466, 182444, 255421, 293123, 293347, 293592, 293884, 293699, 292787, 291867, 290948 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13300,
-        "virtualMemoryUsage" : 1458647040,
-        "physicalMemoryUsage" : 297373696,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164141,
-    "taskID" : "task_1369942127770_1206_m_000082",
-    "taskType" : "MAP",
-    "finishTime" : 1371222234234,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222212323,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222234234,
-      "attemptID" : "attempt_1369942127770_1206_m_000082_0",
-      "clockSplits" : [ 2757, 2758, 2757, 2758, 2290, 984, 985, 1009, 1193, 1192, 2624, 600 ],
-      "cpuUsages" : [ 1283, 1284, 1284, 1283, 1212, 1011, 1012, 1009, 997, 997, 992, 986 ],
-      "vmemKbytes" : [ 150595, 451787, 752979, 1054170, 1344891, 1426535, 1426536, 1426535, 1426536, 1426536, 1426535, 1426536 ],
-      "physMemKbytes" : [ 30285, 90858, 151430, 212001, 270566, 289039, 291857, 294632, 293797, 290645, 287899, 287491 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13350,
-        "virtualMemoryUsage" : 1460772864,
-        "physicalMemoryUsage" : 294371328,
-        "heapUsage" : 723714048
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164141,
-    "taskID" : "task_1369942127770_1206_m_000083",
-    "taskType" : "MAP",
-    "finishTime" : 1371222234374,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222212325,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222234374,
-      "attemptID" : "attempt_1369942127770_1206_m_000083_0",
-      "clockSplits" : [ 2632, 2633, 2633, 2632, 2063, 1726, 1324, 1287, 1007, 1006, 1668, 1433 ],
-      "cpuUsages" : [ 1382, 1382, 1382, 1382, 1210, 1095, 961, 964, 990, 990, 989, 963 ],
-      "vmemKbytes" : [ 179482, 538446, 897411, 1256376, 1441309, 1441351, 1441352, 1441351, 1441352, 1441352, 1441351, 1441352 ],
-      "physMemKbytes" : [ 38229, 114688, 191148, 267607, 307615, 309001, 311141, 313407, 313352, 311808, 310265, 309532 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13690,
-        "virtualMemoryUsage" : 1475944448,
-        "physicalMemoryUsage" : 316928000,
-        "heapUsage" : 744685568
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164141,
-    "taskID" : "task_1369942127770_1206_m_000084",
-    "taskType" : "MAP",
-    "finishTime" : 1371222233257,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222212365,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222233257,
-      "attemptID" : "attempt_1369942127770_1206_m_000084_0",
-      "clockSplits" : [ 3170, 3170, 3170, 3170, 841, 800, 800, 873, 1410, 1411, 1720, 353 ],
-      "cpuUsages" : [ 1398, 1399, 1399, 1399, 938, 929, 929, 934, 971, 970, 919, 915 ],
-      "vmemKbytes" : [ 176295, 528885, 881475, 1234064, 1416363, 1416415, 1416416, 1416415, 1416416, 1416416, 1416415, 1416416 ],
-      "physMemKbytes" : [ 35965, 107895, 179825, 251754, 289004, 289138, 289261, 289383, 289436, 289443, 288025, 284629 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13100,
-        "virtualMemoryUsage" : 1450409984,
-        "physicalMemoryUsage" : 289714176,
-        "heapUsage" : 723582976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164142,
-    "taskID" : "task_1369942127770_1206_m_000085",
-    "taskType" : "MAP",
-    "finishTime" : 1371222240854,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222212327,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222240854,
-      "attemptID" : "attempt_1369942127770_1206_m_000085_0",
-      "clockSplits" : [ 2049, 2050, 2049, 2050, 2046, 1082, 1082, 15663, 112, 113, 113, 113 ],
-      "cpuUsages" : [ 1282, 1283, 1283, 1283, 1282, 865, 866, 1015, 778, 777, 778, 778 ],
-      "vmemKbytes" : [ 143872, 431618, 719364, 1007109, 1294853, 1437631, 1437632, 1437631, 1437632, 1437632, 1437631, 1437632 ],
-      "physMemKbytes" : [ 31953, 95859, 159765, 223671, 287577, 319740, 320639, 321522, 320713, 318771, 316828, 314887 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12270,
-        "virtualMemoryUsage" : 1472135168,
-        "physicalMemoryUsage" : 321449984,
-        "heapUsage" : 656867328
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164142,
-    "taskID" : "task_1369942127770_1206_m_000086",
-    "taskType" : "MAP",
-    "finishTime" : 1371222230895,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222212325,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222230895,
-      "attemptID" : "attempt_1369942127770_1206_m_000086_0",
-      "clockSplits" : [ 1916, 1917, 1917, 1917, 1917, 1310, 628, 629, 629, 628, 1548, 3609 ],
-      "cpuUsages" : [ 1298, 1299, 1299, 1298, 1299, 1114, 906, 906, 907, 906, 944, 1414 ],
-      "vmemKbytes" : [ 129021, 387064, 645107, 903150, 1161194, 1390573, 1426632, 1426631, 1426632, 1426632, 1426631, 1426632 ],
-      "physMemKbytes" : [ 27206, 81618, 136031, 190443, 244856, 293234, 300915, 301006, 301097, 301188, 300855, 298031 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13590,
-        "virtualMemoryUsage" : 1460871168,
-        "physicalMemoryUsage" : 304197632,
-        "heapUsage" : 738656256
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164142,
-    "taskID" : "task_1369942127770_1206_m_000087",
-    "taskType" : "MAP",
-    "finishTime" : 1371222243205,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222212324,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222243205,
-      "attemptID" : "attempt_1369942127770_1206_m_000087_0",
-      "clockSplits" : [ 2494, 2494, 2494, 2494, 1979, 18502, 69, 70, 70, 70, 70, 70 ],
-      "cpuUsages" : [ 1501, 1501, 1501, 1501, 1135, 1230, 804, 803, 803, 804, 803, 804 ],
-      "vmemKbytes" : [ 178670, 536012, 893354, 1250695, 1435451, 1432834, 1425524, 1425523, 1425524, 1425524, 1425523, 1425524 ],
-      "physMemKbytes" : [ 38239, 114717, 191196, 267674, 307284, 303356, 292389, 292664, 292939, 293215, 293490, 293766 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13190,
-        "virtualMemoryUsage" : 1459736576,
-        "physicalMemoryUsage" : 300957696,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164142,
-    "taskID" : "task_1369942127770_1206_m_000088",
-    "taskType" : "MAP",
-    "finishTime" : 1371222232772,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222212326,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222232772,
-      "attemptID" : "attempt_1369942127770_1206_m_000088_0",
-      "clockSplits" : [ 2652, 2652, 2653, 2652, 1643, 1624, 1581, 4351, 35, 35, 35, 35 ],
-      "cpuUsages" : [ 1349, 1350, 1350, 1350, 1074, 1054, 836, 832, 804, 803, 804, 804 ],
-      "vmemKbytes" : [ 177435, 532306, 887178, 1242049, 1424874, 1424915, 1424916, 1424915, 1424916, 1424916, 1424915, 1424916 ],
-      "physMemKbytes" : [ 36160, 108480, 180800, 253120, 290481, 290705, 291974, 294028, 293783, 292064, 290343, 288624 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 12710,
-        "virtualMemoryUsage" : 1459113984,
-        "physicalMemoryUsage" : 294797312,
-        "heapUsage" : 723648512
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164143,
-    "taskID" : "task_1369942127770_1206_m_000089",
-    "taskType" : "MAP",
-    "finishTime" : 1371222232612,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2117.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2117.smile.com",
-      "startTime" : 1371222213322,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222232612,
-      "attemptID" : "attempt_1369942127770_1206_m_000089_0",
-      "clockSplits" : [ 2150, 2150, 2150, 2150, 2150, 1793, 1344, 1294, 925, 926, 926, 1328 ],
-      "cpuUsages" : [ 1229, 1229, 1229, 1229, 1229, 1163, 1080, 1055, 866, 865, 866, 1240 ],
-      "vmemKbytes" : [ 129366, 388101, 646836, 905570, 1164305, 1397662, 1437812, 1437790, 1435927, 1432883, 1429838, 1427696 ],
-      "physMemKbytes" : [ 27669, 83009, 138349, 193688, 249028, 299294, 310933, 314481, 312611, 307268, 301925, 298134 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 13280,
-        "virtualMemoryUsage" : 1461878784,
-        "physicalMemoryUsage" : 305094656,
-        "heapUsage" : 740360192
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164143,
-    "taskID" : "task_1369942127770_1206_m_000090",
-    "taskType" : "MAP",
-    "finishTime" : 1371222235284,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222223387,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222235284,
-      "attemptID" : "attempt_1369942127770_1206_m_000090_0",
-      "clockSplits" : [ 1105, 1106, 1106, 1106, 1105, 1106, 1106, 3584, 142, 142, 142, 143 ],
-      "cpuUsages" : [ 1039, 1040, 1040, 1039, 1040, 1040, 1039, 1034, 799, 800, 800, 800 ],
-      "vmemKbytes" : [ 89336, 268010, 446684, 625357, 804032, 982705, 1161380, 1339992, 1424680, 1424680, 1424679, 1424680 ],
-      "physMemKbytes" : [ 18972, 56916, 94861, 132805, 170750, 208694, 246639, 284573, 305523, 311161, 316798, 322437 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11510,
-        "virtualMemoryUsage" : 1458872320,
-        "physicalMemoryUsage" : 333062144,
-        "heapUsage" : 662962176
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164143,
-    "taskID" : "task_1369942127770_1206_m_000091",
-    "taskType" : "MAP",
-    "finishTime" : 1371222237538,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2115.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2115.smile.com",
-      "startTime" : 1371222223387,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222237538,
-      "attemptID" : "attempt_1369942127770_1206_m_000091_0",
-      "clockSplits" : [ 1479, 1479, 1479, 1479, 1479, 1479, 1300, 625, 625, 625, 625, 1471 ],
-      "cpuUsages" : [ 955, 956, 956, 955, 956, 956, 901, 694, 694, 694, 694, 1249 ],
-      "vmemKbytes" : [ 104472, 313416, 522360, 731303, 940248, 1149191, 1353575, 1418951, 1418952, 1418952, 1418951, 1418952 ],
-      "physMemKbytes" : [ 22666, 67999, 113332, 158665, 203998, 249331, 293651, 307068, 305951, 304834, 303716, 302630 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 10660,
-        "virtualMemoryUsage" : 1453006848,
-        "physicalMemoryUsage" : 309538816,
-        "heapUsage" : 723517440
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164144,
-    "taskID" : "task_1369942127770_1206_m_000092",
-    "taskType" : "MAP",
-    "finishTime" : 1371222239274,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222225390,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222239274,
-      "attemptID" : "attempt_1369942127770_1206_m_000092_0",
-      "clockSplits" : [ 1029, 1029, 1030, 1029, 1030, 1029, 1030, 1029, 1030, 2434, 717, 718 ],
-      "cpuUsages" : [ 945, 945, 945, 945, 945, 945, 945, 945, 945, 895, 730, 730 ],
-      "vmemKbytes" : [ 72549, 217647, 362746, 507844, 652943, 798041, 943140, 1088238, 1233337, 1374501, 1417191, 1417192 ],
-      "physMemKbytes" : [ 14112, 42336, 70560, 98783, 127008, 155231, 183456, 211680, 239905, 267439, 277716, 280513 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11280,
-        "virtualMemoryUsage" : 1451204608,
-        "physicalMemoryUsage" : 288616448,
-        "heapUsage" : 674430976
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  }, {
-    "startTime" : 1371222164144,
-    "taskID" : "task_1369942127770_1206_m_000093",
-    "taskType" : "MAP",
-    "finishTime" : 1371222249913,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2116.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2116.smile.com",
-      "startTime" : 1371222226395,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222249913,
-      "attemptID" : "attempt_1369942127770_1206_m_000093_0",
-      "clockSplits" : [ 1998, 1998, 1998, 1999, 1998, 1998, 1999, 1998, 1998, 1998, 1999, 1533 ],
-      "cpuUsages" : [ 852, 852, 853, 852, 853, 852, 853, 852, 852, 853, 852, 1494 ],
-      "vmemKbytes" : [ 62260, 186780, 311301, 435821, 560342, 684863, 809384, 933904, 1058425, 1182946, 1307467, 1419006 ],
-      "physMemKbytes" : [ 12360, 37081, 61802, 86523, 111244, 135965, 160686, 185407, 210128, 234849, 259570, 281661 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 10870,
-        "virtualMemoryUsage" : 1471885312,
-        "physicalMemoryUsage" : 291975168,
-        "heapUsage" : 674562048
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164144,
-    "taskID" : "task_1369942127770_1206_m_000094",
-    "taskType" : "MAP",
-    "finishTime" : 1371222241825,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222227397,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222241825,
-      "attemptID" : "attempt_1369942127770_1206_m_000094_0",
-      "clockSplits" : [ 1436, 1437, 1437, 1437, 1437, 1436, 1437, 3845, 130, 129, 129, 130 ],
-      "cpuUsages" : [ 1038, 1039, 1039, 1039, 1039, 1039, 1039, 1031, 891, 892, 892, 892 ],
-      "vmemKbytes" : [ 90707, 272123, 453538, 634953, 816370, 997785, 1179201, 1360296, 1440536, 1440536, 1440535, 1440536 ],
-      "physMemKbytes" : [ 19774, 59323, 98872, 138421, 177970, 217519, 257068, 296545, 313357, 312135, 310912, 309691 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666700,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166667,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166667,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11870,
-        "virtualMemoryUsage" : 1475108864,
-        "physicalMemoryUsage" : 316497920,
-        "heapUsage" : 723451904
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166667,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166667
-  }, {
-    "startTime" : 1371222164145,
-    "taskID" : "task_1369942127770_1206_m_000095",
-    "taskType" : "MAP",
-    "finishTime" : 1371222241726,
-    "attempts" : [ {
-      "location" : {
-        "layers" : [ "default-rack", "a2118.smile.com" ]
-      },
-      "hostName" : "/default-rack/a2118.smile.com",
-      "startTime" : 1371222228399,
-      "result" : "SUCCESS",
-      "finishTime" : 1371222241726,
-      "attemptID" : "attempt_1369942127770_1206_m_000095_0",
-      "clockSplits" : [ 1288, 1289, 1289, 1289, 1288, 1289, 1289, 1289, 2675, 112, 112, 112 ],
-      "cpuUsages" : [ 992, 993, 993, 992, 993, 993, 992, 993, 853, 832, 832, 832 ],
-      "vmemKbytes" : [ 88547, 265642, 442738, 619833, 796929, 974024, 1151119, 1328214, 1437170, 1435904, 1433127, 1430352 ],
-      "physMemKbytes" : [ 19692, 59077, 98462, 137847, 177232, 216617, 256003, 295388, 318265, 314440, 310247, 306056 ],
-      "shuffleFinished" : -1,
-      "sortFinished" : -1,
-      "hdfsBytesRead" : 86,
-      "hdfsBytesWritten" : 416666600,
-      "fileBytesRead" : 0,
-      "fileBytesWritten" : 72236,
-      "mapInputRecords" : 4166666,
-      "mapOutputBytes" : -1,
-      "mapOutputRecords" : 4166666,
-      "combineInputRecords" : -1,
-      "reduceInputGroups" : -1,
-      "reduceInputRecords" : -1,
-      "reduceShuffleBytes" : -1,
-      "reduceOutputRecords" : -1,
-      "spilledRecords" : 0,
-      "mapInputBytes" : -1,
-      "resourceUsageMetrics" : {
-        "cumulativeCpuUsage" : 11290,
-        "virtualMemoryUsage" : 1463259136,
-        "physicalMemoryUsage" : 311255040,
-        "heapUsage" : 740229120
-      }
-    } ],
-    "preferredLocations" : [ ],
-    "taskStatus" : "SUCCESS",
-    "inputBytes" : 86,
-    "inputRecords" : 4166666,
-    "outputBytes" : 72236,
-    "outputRecords" : 4166666
-  } ],
-  "reduceTasks" : [ ],
-  "launchTime" : 1371222164048,
-  "totalMaps" : 96,
-  "totalReduces" : 0,
-  "otherTasks" : [ ],
-  "jobProperties" : {
-    "mapreduce.job.ubertask.enable" : "false",
-    "yarn.resourcemanager.max-completed-applications" : "10000",
-    "yarn.resourcemanager.delayed.delegation-token.removal-interval-ms" : "30000",
-    "mapreduce.client.submit.file.replication" : "2",
-    "yarn.nodemanager.container-manager.thread-count" : "20",
-    "mapred.queue.default.acl-administer-jobs" : "*",
-    "dfs.image.transfer.bandwidthPerSec" : "0",
-    "mapreduce.jobtracker.staging.root.dir" : "/user",
-    "yarn.resourcemanager.recovery.enabled" : "false",
-    "yarn.resourcemanager.am.max-retries" : "1",
-    "dfs.block.access.token.lifetime" : "600",
-    "fs.AbstractFileSystem.file.impl" : "org.apache.hadoop.fs.local.LocalFs",
-    "mapreduce.client.completion.pollinterval" : "5000",
-    "mapreduce.job.ubertask.maxreduces" : "1",
-    "mapreduce.reduce.shuffle.memory.limit.percent" : "0.25",
-    "dfs.domain.socket.path" : "/var/run/hdfs-sockets/dn",
-    "hadoop.ssl.keystores.factory.class" : "org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory",
-    "hadoop.http.authentication.kerberos.keytab" : "${user.home}/hadoop.keytab",
-    "yarn.nodemanager.keytab" : "/etc/krb5.keytab",
-    "mapreduce.task.io.sort.factor" : "10",
-    "yarn.nodemanager.disk-health-checker.interval-ms" : "120000",
-    "mapreduce.job.working.dir" : "hdfs://a2115.smile.com:8020/user/jenkins",
-    "yarn.admin.acl" : "*",
-    "mapreduce.job.speculative.speculativecap" : "0.1",
-    "dfs.namenode.num.checkpoints.retained" : "2",
-    "dfs.namenode.delegation.token.renew-interval" : "86400000",
-    "yarn.nodemanager.resource.memory-mb" : "8192",
-    "io.map.index.interval" : "128",
-    "mapreduce.task.files.preserve.failedtasks" : "false",
-    "dfs.namenode.http-address" : "a2115.smile.com:20101",
-    "ha.zookeeper.session-timeout.ms" : "5000",
-    "hadoop.hdfs.configuration.version" : "1",
-    "dfs.datanode.balance.bandwidthPerSec" : "1048576",
-    "mapreduce.reduce.shuffle.connect.timeout" : "180000",
-    "dfs.journalnode.rpc-address" : "0.0.0.0:8485",
-    "yarn.nodemanager.aux-services" : "mapreduce.shuffle",
-    "mapreduce.job.counters.max" : "120",
-    "dfs.datanode.readahead.bytes" : "4193404",
-    "ipc.client.connect.max.retries.on.timeouts" : "45",
-    "mapreduce.job.complete.cancel.delegation.tokens" : "true",
-    "dfs.client.failover.max.attempts" : "15",
-    "dfs.namenode.checkpoint.dir" : "file://${hadoop.tmp.dir}/dfs/namesecondary",
-    "dfs.namenode.replication.work.multiplier.per.iteration" : "2",
-    "fs.trash.interval" : "1",
-    "yarn.resourcemanager.admin.address" : "a2115.smile.com:8033",
-    "ha.health-monitor.check-interval.ms" : "1000",
-    "mapreduce.job.outputformat.class" : "org.apache.hadoop.examples.terasort.TeraOutputFormat",
-    "hadoop.jetty.logs.serve.aliases" : "true",
-    "hadoop.http.authentication.kerberos.principal" : "HTTP/_HOST@LOCALHOST",
-    "mapreduce.job.reduce.shuffle.consumer.plugin.class" : "org.apache.hadoop.mapreduce.task.reduce.Shuffle",
-    "s3native.blocksize" : "67108864",
-    "dfs.namenode.edits.dir" : "${dfs.namenode.name.dir}",
-    "ha.health-monitor.sleep-after-disconnect.ms" : "1000",
-    "dfs.encrypt.data.transfer" : "false",
-    "dfs.datanode.http.address" : "0.0.0.0:9864",
-    "mapreduce.terasort.num-rows" : "400000000",
-    "mapreduce.job.map.class" : "org.apache.hadoop.examples.terasort.TeraGen$SortGenMapper",
-    "dfs.namenode.write.stale.datanode.ratio" : "0.5f",
-    "dfs.client.use.datanode.hostname" : "false",
-    "yarn.acl.enable" : "true",
-    "hadoop.security.instrumentation.requires.admin" : "false",
-    "yarn.nodemanager.localizer.fetch.thread-count" : "4",
-    "hadoop.security.authorization" : "false",
-    "user.name" : "jenkins",
-    "dfs.namenode.fs-limits.min-block-size" : "1048576",
-    "dfs.client.failover.connection.retries.on.timeouts" : "0",
-    "hadoop.security.group.mapping.ldap.search.filter.group" : "(objectClass=group)",
-    "mapreduce.output.fileoutputformat.compress.codec" : "org.apache.hadoop.io.compress.DefaultCodec",
-    "dfs.namenode.safemode.extension" : "30000",
-    "mapreduce.shuffle.port" : "8080",
-    "mapreduce.reduce.log.level" : "INFO",
-    "yarn.log-aggregation-enable" : "false",
-    "dfs.datanode.sync.behind.writes" : "false",
-    "dfs.https.server.keystore.resource" : "ssl-server.xml",
-    "hadoop.security.group.mapping.ldap.search.attr.group.name" : "cn",
-    "dfs.namenode.replication.min" : "1",
-    "mapreduce.map.java.opts" : " -Xmx825955249",
-    "yarn.scheduler.fair.allocation.file" : "/etc/yarn/fair-scheduler.xml",
-    "s3native.bytes-per-checksum" : "512",
-    "tfile.fs.output.buffer.size" : "262144",
-    "yarn.nodemanager.local-dirs" : "${hadoop.tmp.dir}/nm-local-dir",
-    "mapreduce.jobtracker.persist.jobstatus.active" : "false",
-    "fs.AbstractFileSystem.hdfs.impl" : "org.apache.hadoop.fs.Hdfs",
-    "mapreduce.job.map.output.collector.class" : "org.apache.hadoop.mapred.MapTask$MapOutputBuffer",
-    "dfs.namenode.safemode.min.datanodes" : "0",
-    "hadoop.security.uid.cache.secs" : "14400",
-    "dfs.client.https.need-auth" : "false",
-    "dfs.client.write.exclude.nodes.cache.expiry.interval.millis" : "600000",
-    "dfs.client.https.keystore.resource" : "ssl-client.xml",
-    "dfs.namenode.max.objects" : "0",
-    "hadoop.ssl.client.conf" : "ssl-client.xml",
-    "dfs.namenode.safemode.threshold-pct" : "0.999f",
-    "dfs.blocksize" : "134217728",
-    "yarn.resourcemanager.scheduler.class" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler",
-    "mapreduce.job.reduce.slowstart.completedmaps" : "0.8",
-    "mapreduce.job.end-notification.retry.attempts" : "5",
-    "mapreduce.job.inputformat.class" : "org.apache.hadoop.examples.terasort.TeraGen$RangeInputFormat",
-    "mapreduce.map.memory.mb" : "1024",
-    "mapreduce.job.user.name" : "jenkins",
-    "io.native.lib.available" : "true",
-    "dfs.client-write-packet-size" : "65536",
-    "mapreduce.client.progressmonitor.pollinterval" : "1000",
-    "dfs.namenode.name.dir" : "file://${hadoop.tmp.dir}/dfs/name",
-    "dfs.ha.log-roll.period" : "120",
-    "mapreduce.reduce.input.buffer.percent" : "0.0",
-    "mapreduce.map.output.compress.codec" : "org.apache.hadoop.io.compress.SnappyCodec",
-    "dfs.client.failover.sleep.base.millis" : "500",
-    "dfs.datanode.directoryscan.threads" : "1",
-    "mapreduce.jobtracker.address" : "neededForHive:999999",
-    "mapreduce.cluster.local.dir" : "${hadoop.tmp.dir}/mapred/local",
-    "yarn.scheduler.fair.user-as-default-queue" : "true",
-    "mapreduce.job.application.attempt.id" : "1",
-    "dfs.permissions.enabled" : "true",
-    "yarn.scheduler.fair.preemption" : "true",
-    "mapreduce.reduce.shuffle.parallelcopies" : "5",
-    "yarn.nodemanager.env-whitelist" : "JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,YARN_HOME",
-    "mapreduce.job.maxtaskfailures.per.tracker" : "3",
-    "ipc.client.connection.maxidletime" : "10000",
-    "mapreduce.shuffle.ssl.enabled" : "false",
-    "dfs.namenode.invalidate.work.pct.per.iteration" : "0.32f",
-    "dfs.blockreport.intervalMsec" : "21600000",
-    "fs.s3n.sleepTimeSeconds" : "10",
-    "dfs.namenode.replication.considerLoad" : "true",
-    "dfs.client.block.write.retries" : "3",
-    "hadoop.ssl.server.conf" : "ssl-server.xml",
-    "dfs.namenode.name.dir.restore" : "false",
-    "rpc.engine.org.apache.hadoop.mapreduce.v2.api.MRClientProtocolPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "dfs.datanode.hdfs-blocks-metadata.enabled" : "true",
-    "ha.zookeeper.parent-znode" : "/hadoop-ha",
-    "mapreduce.reduce.merge.inmem.threshold" : "1000",
-    "mapreduce.input.fileinputformat.split.minsize" : "0",
-    "dfs.replication" : "3",
-    "ipc.client.tcpnodelay" : "false",
-    "dfs.namenode.accesstime.precision" : "3600000",
-    "dfs.client.read.shortcircuit.skip.checksum" : "false",
-    "mapreduce.job.jvm.numtasks" : "1",
-    "mapreduce.task.io.sort.mb" : "100",
-    "io.file.buffer.size" : "65536",
-    "dfs.namenode.audit.loggers" : "default",
-    "dfs.namenode.checkpoint.txns" : "1000000",
-    "yarn.nodemanager.admin-env" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
-    "mapreduce.job.jar" : "/user/jenkins/.staging/job_1369942127770_1206/job.jar",
-    "mapreduce.job.split.metainfo.maxsize" : "10000000",
-    "kfs.replication" : "3",
-    "rpc.engine.org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms" : "1000",
-    "mapreduce.reduce.maxattempts" : "4",
-    "kfs.stream-buffer-size" : "4096",
-    "dfs.ha.tail-edits.period" : "60",
-    "hadoop.security.authentication" : "simple",
-    "fs.s3n.buffer.dir" : "${hadoop.tmp.dir}/s3",
-    "rpc.engine.org.apache.hadoop.yarn.api.AMRMProtocolPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "yarn.app.mapreduce.am.job.task.listener.thread-count" : "30",
-    "dfs.namenode.avoid.read.stale.datanode" : "false",
-    "mapreduce.job.reduces" : "0",
-    "mapreduce.map.sort.spill.percent" : "0.8",
-    "dfs.datanode.drop.cache.behind.writes" : "false",
-    "mapreduce.job.end-notification.retry.interval" : "1",
-    "mapreduce.job.maps" : "96",
-    "mapreduce.job.speculative.slownodethreshold" : "1.0",
-    "tfile.fs.input.buffer.size" : "262144",
-    "mapreduce.map.speculative" : "false",
-    "dfs.block.access.token.enable" : "false",
-    "dfs.journalnode.http-address" : "0.0.0.0:8480",
-    "mapreduce.job.acl-view-job" : " ",
-    "mapreduce.reduce.shuffle.retry-delay.max.ms" : "60000",
-    "mapreduce.job.end-notification.max.retry.interval" : "5",
-    "ftp.blocksize" : "67108864",
-    "mapreduce.reduce.java.opts" : " -Xmx825955249",
-    "dfs.datanode.data.dir" : "file://${hadoop.tmp.dir}/dfs/data",
-    "ha.failover-controller.cli-check.rpc-timeout.ms" : "20000",
-    "dfs.namenode.max.extra.edits.segments.retained" : "10000",
-    "dfs.https.port" : "20102",
-    "dfs.namenode.replication.interval" : "3",
-    "mapreduce.task.skip.start.attempts" : "2",
-    "dfs.namenode.https-address" : "a2115.smile.com:20102",
-    "ipc.client.kill.max" : "10",
-    "dfs.ha.automatic-failover.enabled" : "false",
-    "mapreduce.jobhistory.keytab" : "/etc/security/keytab/jhs.service.keytab",
-    "dfs.image.transfer.timeout" : "600000",
-    "dfs.client.failover.sleep.max.millis" : "15000",
-    "mapreduce.job.end-notification.max.attempts" : "5",
-    "mapreduce.task.tmp.dir" : "./tmp",
-    "dfs.default.chunk.view.size" : "32768",
-    "kfs.bytes-per-checksum" : "512",
-    "mapreduce.reduce.memory.mb" : "1024",
-    "hadoop.http.filter.initializers" : "org.apache.hadoop.yarn.server.webproxy.amfilter.AmFilterInitializer",
-    "dfs.datanode.failed.volumes.tolerated" : "0",
-    "hadoop.http.authentication.type" : "simple",
-    "dfs.datanode.data.dir.perm" : "700",
-    "yarn.resourcemanager.client.thread-count" : "50",
-    "ipc.server.listen.queue.size" : "128",
-    "mapreduce.reduce.skip.maxgroups" : "0",
-    "file.stream-buffer-size" : "4096",
-    "dfs.namenode.fs-limits.max-directory-items" : "0",
-    "io.mapfile.bloom.size" : "1048576",
-    "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
-    "mapreduce.map.maxattempts" : "4",
-    "yarn.log-aggregation.retain-seconds" : "-1",
-    "yarn.app.mapreduce.am.job.committer.cancel-timeout" : "60000",
-    "ftp.replication" : "3",
-    "yarn.nodemanager.health-checker.script.timeout-ms" : "1200000",
-    "mapreduce.jobhistory.address" : "a2115.smile.com:10020",
-    "mapreduce.jobtracker.taskcache.levels" : "2",
-    "dfs.datanode.dns.nameserver" : "default",
-    "mapreduce.application.classpath" : "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*,$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*",
-    "yarn.nodemanager.log.retain-seconds" : "10800",
-    "mapred.child.java.opts" : "-Xmx200m",
-    "dfs.replication.max" : "512",
-    "map.sort.class" : "org.apache.hadoop.util.QuickSort",
-    "dfs.stream-buffer-size" : "4096",
-    "dfs.namenode.backup.address" : "0.0.0.0:50100",
-    "hadoop.util.hash.type" : "murmur",
-    "dfs.block.access.key.update.interval" : "600",
-    "dfs.datanode.dns.interface" : "default",
-    "dfs.datanode.use.datanode.hostname" : "false",
-    "mapreduce.job.output.key.class" : "org.apache.hadoop.io.Text",
-    "dfs.client.read.shortcircuit" : "false",
-    "dfs.namenode.backup.http-address" : "0.0.0.0:50105",
-    "yarn.nodemanager.container-monitor.interval-ms" : "3000",
-    "yarn.nodemanager.disk-health-checker.min-healthy-disks" : "0.25",
-    "kfs.client-write-packet-size" : "65536",
-    "ha.zookeeper.acl" : "world:anyone:rwcda",
-    "yarn.nodemanager.sleep-delay-before-sigkill.ms" : "250",
-    "mapreduce.job.dir" : "/user/jenkins/.staging/job_1369942127770_1206",
-    "io.map.index.skip" : "0",
-    "net.topology.node.switch.mapping.impl" : "org.apache.hadoop.net.ScriptBasedMapping",
-    "fs.s3n.maxRetries" : "4",
-    "ha.failover-controller.new-active.rpc-timeout.ms" : "60000",
-    "s3native.client-write-packet-size" : "65536",
-    "yarn.resourcemanager.amliveliness-monitor.interval-ms" : "1000",
-    "hadoop.http.staticuser.user" : "dr.who",
-    "mapreduce.reduce.speculative" : "false",
-    "mapreduce.client.output.filter" : "FAILED",
-    "mapreduce.ifile.readahead.bytes" : "4194304",
-    "mapreduce.task.userlog.limit.kb" : "0",
-    "mapreduce.tasktracker.map.tasks.maximum" : "2",
-    "hadoop.http.authentication.simple.anonymous.allowed" : "true",
-    "hadoop.fuse.timer.period" : "5",
-    "dfs.namenode.num.extra.edits.retained" : "1000000",
-    "hadoop.rpc.socket.factory.class.default" : "org.apache.hadoop.net.StandardSocketFactory",
-    "mapreduce.job.submithostname" : "a2115.smile.com",
-    "dfs.namenode.handler.count" : "10",
-    "fs.automatic.close" : "false",
-    "mapreduce.job.submithostaddress" : "10.20.206.115",
-    "dfs.datanode.directoryscan.interval" : "21600",
-    "yarn.resourcemanager.address" : "a2115.smile.com:8032",
-    "yarn.nodemanager.health-checker.interval-ms" : "600000",
-    "yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs" : "86400",
-    "mapreduce.reduce.markreset.buffer.percent" : "0.0",
-    "hadoop.security.group.mapping.ldap.directory.search.timeout" : "10000",
-    "mapreduce.map.log.level" : "INFO",
-    "dfs.bytes-per-checksum" : "512",
-    "yarn.nodemanager.localizer.address" : "0.0.0.0:8040",
-    "dfs.namenode.checkpoint.max-retries" : "3",
-    "ha.health-monitor.rpc-timeout.ms" : "45000",
-    "yarn.resourcemanager.keytab" : "/etc/krb5.keytab",
-    "ftp.stream-buffer-size" : "4096",
-    "dfs.namenode.avoid.write.stale.datanode" : "false",
-    "hadoop.security.group.mapping.ldap.search.attr.member" : "member",
-    "mapreduce.output.fileoutputformat.outputdir" : "hdfs://a2115.smile.com:8020/user/jenkins/tera-gen-2",
-    "dfs.blockreport.initialDelay" : "0",
-    "yarn.nm.liveness-monitor.expiry-interval-ms" : "600000",
-    "hadoop.http.authentication.token.validity" : "36000",
-    "dfs.namenode.delegation.token.max-lifetime" : "604800000",
-    "mapreduce.job.hdfs-servers" : "${fs.defaultFS}",
-    "s3native.replication" : "3",
-    "yarn.nodemanager.localizer.client.thread-count" : "5",
-    "dfs.heartbeat.interval" : "3",
-    "rpc.engine.org.apache.hadoop.ipc.ProtocolMetaInfoPB" : "org.apache.hadoop.ipc.ProtobufRpcEngine",
-    "dfs.ha.fencing.ssh.connect-timeout" : "30000",
-    "yarn.resourcemanager.container.liveness-monitor.interval-ms" : "600000",
-    "yarn.am.liveness-monitor.expiry-interval-ms" : "600000",
-    "mapreduce.task.profile" : "false",
-    "mapreduce.jobhistory.webapp.address" : "a2115.smile.com:19888",
-    "ha.failover-controller.graceful-fence.rpc-timeout.ms" : "5000",
-    "yarn.ipc.rpc.class" : "org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC",
-    "mapreduce.job.name" : "TeraGen",
-    "kfs.blocksize" : "67108864",
-    "yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs" : "86400",
-    "mapreduce.job.ubertask.maxmaps" : "9",
-    "yarn.scheduler.maximum-allocation-mb" : "8192",
-    "yarn.nodemanager.heartbeat.interval-ms" : "1000",
-    "dfs.namenode.secondary.http-address" : "0.0.0.0:9868",
-    "mapreduce.task.timeout" : "600000",
-    "mapreduce.framework.name" : "yarn",
-    "ipc.client.idlethreshold" : "4000",
-    "ftp.bytes-per-checksum" : "512",
-    "ipc.server.tcpnodelay" : "false",
-    "dfs.namenode.stale.datanode.interval" : "30000",
-    "mapreduce.job.speculative.slowtaskthreshold" : "1.0",
-    "yarn.nodemanager.localizer.cache.target-size-mb" : "10240",
-    "yarn.nodemanager.remote-app-log-dir" : "/tmp/logs",
-    "mapreduce.job.queuename" : "sls_queue_1",
-    "dfs.client.failover.connection.retries" : "0",
-    "hadoop.rpc.protection" : "authentication",
-    "yarn.scheduler.minimum-allocation-mb" : "1024",
-    "yarn.app.mapreduce.client-am.ipc.max-retries" : "1",
-    "hadoop.security.auth_to_local" : "DEFAULT",
-    "dfs.secondary.namenode.kerberos.internal.spnego.principal" : "${dfs.web.authentication.kerberos.principal}",
-    "ftp.client-write-packet-size" : "65536",
-    "fs.defaultFS" : "hdfs://a2115.smile.com:8020",
-    "yarn.nodemanager.address" : "0.0.0.0:0",
-    "yarn.scheduler.fair.assignmultiple" : "true",
-    "yarn.resourcemanager.scheduler.client.thread-count" : "50",
-    "mapreduce.task.merge.progress.records" : "10000",
-    "file.client-write-packet-size" : "65536",
-    "yarn.nodemanager.delete.thread-count" : "4",
-    "yarn.resourcemanager.scheduler.address" : "a2115.smile.com:8030",
-    "fs.trash.checkpoint.interval" : "0",
-    "hadoop.http.authentication.signature.secret.file" : "${user.home}/hadoop-http-auth-signature-secret",
-    "s3native.stream-buffer-size" : "4096",
-    "mapreduce.reduce.shuffle.read.timeout" : "180000",
-    "mapreduce.admin.user.env" : "LD_LIBRARY_PATH=$HADOOP_COMMON_HOME/lib/native",
-    "yarn.app.mapreduce.am.command-opts" : " -Xmx1238932873",
-    "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
-    "fs.permissions.umask-mode" : "022",
-    "dfs.client.domain.socket.data.traffic" : "false",
-    "hadoop.common.configuration.version" : "0.23.0",
-    "mapreduce.output.fileoutputformat.compress.type" : "BLOCK",
-    "mapreduce.ifile.readahead" : "true",
-    "hadoop.security.group.mapping.ldap.ssl" : "false",
-    "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization",
-    "yarn.nodemanager.aux-services.mapreduce.shuffle.class" : "org.apache.hadoop.mapred.ShuffleHandler",
-    "fs.df.interval" : "60000",
-    "mapreduce.reduce.shuffle.input.buffer.percent" : "0.70",
-    "io.seqfile.compress.blocksize" : "1000000",
-    "hadoop.security.groups.cache.secs" : "300",
-    "ipc.client.connect.max.retries" : "10",
-    "dfs.namenode.delegation.key.update-interval" : "86400000",
-    "yarn.nodemanager.process-kill-wait.ms" : "5000",
-    "yarn.application.classpath" : "$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/*,$HADOOP_COMMON_HOME/lib/*,$HADOOP_HDFS_HOME/*,$HADOOP_HDFS_HOME/lib/*,$HADOOP_MAPRED_HOME/*,$HADOOP_MAPRED_HOME/lib/*,$YARN_HOME/*,$YARN_HOME/lib/*",
-    "yarn.app.mapreduce.client.max-retries" : "3",
-    "dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction" : "0.75f",
-    "yarn.nodemanager.log-aggregation.compression-type" : "none",
-    "hadoop.security.group.mapping.ldap.search.filter.user" : "(&(objectClass=user)(sAMAccountName={0}))",
-    "yarn.nodemanager.localizer.cache.cleanup.interval-ms" : "600000",
-    "dfs.image.compress" : "false",
-    "mapred.mapper.new-api" : "true",
-    "yarn.nodemanager.log-dirs" : "${yarn.log.dir}/userlogs",
-    "dfs.namenode.kerberos.internal.spnego.principal" : "${dfs.web.authentication.kerberos.principal}",
-    "fs.s3n.block.size" : "67108864",
-    "fs.ftp.host" : "0.0.0.0",
-    "hadoop.security.group.mapping" : "org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback",
-    "dfs.datanode.address" : "0.0.0.0:9866",
-    "mapreduce.map.skip.maxrecords" : "0",
-    "dfs.datanode.https.address" : "0.0.0.0:9865",
-    "file.replication" : "1",
-    "yarn.resourcemanager.resource-tracker.address" : "a2115.smile.com:8031",
-    "dfs.datanode.drop.cache.behind.reads" : "false",
-    "hadoop.fuse.connection.timeout" : "300",
-    "hadoop.work.around.non.threadsafe.getpwuid" : "false",
-    "hadoop.tmp.dir" : "/tmp/hadoop-${user.name}",
-    "mapreduce.output.fileoutputformat.compress" : "false",
-    "mapreduce.tasktracker.indexcache.mb" : "10",
-    "mapreduce.client.genericoptionsparser.used" : "true",
-    "dfs.client.block.write.replace-datanode-on-failure.policy" : "DEFAULT",
-    "mapreduce.job.committer.setup.cleanup.needed" : "true",
-    "hadoop.kerberos.kinit.command" : "kinit",
-    "dfs.datanode.du.reserved" : "0",
-    "dfs.namenode.fs-limits.max-blocks-per-file" : "1048576",
-    "file.bytes-per-checksum" : "512",
-    "mapreduce.task.profile.reduces" : "0-2",
-    "dfs.client.block.write.replace-datanode-on-failure.enable" : "true",
-    "mapreduce.job.output.value.class" : "org.apache.hadoop.io.Text",
-    "yarn.dispatcher.exit-on-error" : "true",
-    "net.topology.script.number.args" : "100",
-    "mapreduce.task.profile.maps" : "0-2",
-    "dfs.namenode.decommission.interval" : "30",
-    "dfs.image.compression.codec" : "org.apache.hadoop.io.compress.DefaultCodec",
-    "yarn.resourcemanager.webapp.address" : "a2115.smile.com:8088",
-    "mapreduce.jobtracker.system.dir" : "${hadoop.tmp.dir}/mapred/system",
-    "hadoop.ssl.hostname.verifier" : "DEFAULT",
-    "yarn.nodemanager.vmem-pmem-ratio" : "2.1",
-    "dfs.namenode.support.allow.format" : "true",
-    "mapreduce.jobhistory.principal" : "jhs/_HOST@REALM.TLD",
-    "io.mapfile.bloom.error.rate" : "0.005",
-    "mapreduce.shuffle.ssl.file.buffer.size" : "65536",
-    "dfs.permissions.superusergroup" : "supergroup",
-    "dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold" : "10737418240",
-    "mapreduce.cluster.acls.enabled" : "false",
-    "yarn.nodemanager.remote-app-log-dir-suffix" : "logs",
-    "ha.failover-controller.graceful-fence.connection.retries" : "1",
-    "ha.health-monitor.connect-retry-interval.ms" : "1000",
-    "mapreduce.reduce.shuffle.merge.percent" : "0.66",
-    "yarn.app.mapreduce.am.resource.mb" : "1536",
-    "io.seqfile.local.dir" : "${hadoop.tmp.dir}/io/local",
-    "dfs.namenode.checkpoint.check.period" : "60",
-    "yarn.resourcemanager.nm.liveness-monitor.interval-ms" : "1000",
-    "file.blocksize" : "67108864",
-    "tfile.io.chunk.size" : "1048576",
-    "mapreduce.job.acl-modify-job" : " ",
-    "yarn.nodemanager.webapp.address" : "0.0.0.0:8042",
-    "mapreduce.tasktracker.reduce.tasks.maximum" : "2",
-    "io.skip.checksum.errors" : "false",
-    "mapreduce.cluster.temp.dir" : "${hadoop.tmp.dir}/mapred/temp",
-    "yarn.app.mapreduce.am.staging-dir" : "/user",
-    "dfs.namenode.edits.journal-plugin.qjournal" : "org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager",
-    "dfs.datanode.handler.count" : "10",
-    "fs.ftp.host.port" : "21",
-    "dfs.namenode.decommission.nodes.per.interval" : "5",
-    "yarn.resourcemanager.admin.client.thread-count" : "1",
-    "dfs.namenode.fs-limits.max-component-length" : "0",
-    "dfs.namenode.checkpoint.period" : "3600",
-    "fs.AbstractFileSystem.viewfs.impl" : "org.apache.hadoop.fs.viewfs.ViewFs",
-    "yarn.resourcemanager.resource-tracker.client.thread-count" : "50",
-    "mapreduce.map.output.compress" : "true",
-    "dfs.datanode.ipc.address" : "0.0.0.0:9867",
-    "hadoop.ssl.require.client.cert" : "false",
-    "yarn.nodemanager.delete.debug-delay-sec" : "0",
-    "dfs.datanode.max.transfer.threads" : "4096"
-  },
-  "computonsPerMapInputByte" : -1,
-  "computonsPerMapOutputByte" : -1,
-  "computonsPerReduceInputByte" : -1,
-  "computonsPerReduceOutputByte" : -1,
-  "heapMegabytes" : 200,
-  "outcome" : "SUCCESS",
-  "jobtype" : "JAVA",
-  "directDependantJobs" : [ ],
-  "successfulMapAttemptCDFs" : [ {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 32847,
-    "minimum" : 11897,
-    "rankings" : [ {
-      "datum" : 14151,
-      "relativeRanking" : 0.05
-    }, {
-      "datum" : 15844,
-      "relativeRanking" : 0.1
-    }, {
-      "datum" : 18656,
-      "relativeRanking" : 0.15
-    }, {
-      "datum" : 18806,
-      "relativeRanking" : 0.2
-    }, {
-      "datum" : 18840,
-      "relativeRanking" : 0.25
-    }, {
-      "datum" : 18982,
-      "relativeRanking" : 0.3
-    }, {
-      "datum" : 19314,
-      "relativeRanking" : 0.35
-    }, {
-      "datum" : 19587,
-      "relativeRanking" : 0.4
-    }, {
-      "datum" : 19703,
-      "relativeRanking" : 0.45
-    }, {
-      "datum" : 19800,
-      "relativeRanking" : 0.5
-    }, {
-      "datum" : 19965,
-      "relativeRanking" : 0.55
-    }, {
-      "datum" : 20604,
-      "relativeRanking" : 0.6
-    }, {
-      "datum" : 20892,
-      "relativeRanking" : 0.65
-    }, {
-      "datum" : 21526,
-      "relativeRanking" : 0.7
-    }, {
-      "datum" : 21911,
-      "relativeRanking" : 0.75
-    }, {
-      "datum" : 22144,
-      "relativeRanking" : 0.8
-    }, {
-      "datum" : 22539,
-      "relativeRanking" : 0.85
-    }, {
-      "datum" : 23034,
-      "relativeRanking" : 0.9
-    }, {
-      "datum" : 23601,
-      "relativeRanking" : 0.95
-    } ],
-    "numberValues" : 96
-  } ],
-  "failedMapAttemptCDFs" : [ {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  }, {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  } ],
-  "successfulReduceAttemptCDF" : {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  },
-  "failedReduceAttemptCDF" : {
-    "maximum" : 9223372036854775807,
-    "minimum" : -9223372036854775808,
-    "rankings" : [ ],
-    "numberValues" : 0
-  },
-  "mapperTriesToSucceed" : [ 1.0 ],
-  "failedMapperFraction" : 0.0,
-  "relativeTime" : 0,
-  "clusterMapMB" : -1,
-  "clusterReduceMB" : -1,
-  "jobMapMB" : 200,
-  "jobReduceMB" : 200
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/html/css/bootstrap-responsive.min.css b/hadoop-tools/hadoop-sls/src/main/html/css/bootstrap-responsive.min.css
deleted file mode 100644
index 2d3ebfd9d54..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/css/bootstrap-responsive.min.css
+++ /dev/null
@@ -1,19 +0,0 @@
-/*!
- * Bootstrap Responsive v2.1.1
- *
- * Copyright 2012 Twitter, Inc
- * Licensed under the Apache License v2.0
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Designed and built with all the love in the world @twitter by @mdo and @fat.
- */
-.clearfix{*zoom:1}
-.clearfix:before,
-.clearfix:after{display:table;line-height:0;content:""}
-.clearfix:after{clear:both}
-.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}
-.input-block-level{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}
-.hidden{display:none;visibility:hidden}.visible-phone{display:none!important}
-.visible-tablet{display:none!important}.hidden-desktop{display:none!important}
-.visible-desktop{display:inherit!important}@media(min-width:768px) and (max-width:979px){.hidden-desktop{display:inherit!important}
-.visible-desktop{display:none!important}.visible-tablet{display:inherit!important}.hidden-tablet{display:none!important}}@media(max-width:767px){.hidden-desktop{display:inherit!important}.visible-desktop{display:none!important}.visible-phone{display:inherit!important}.hidden-phone{display:none!important}}@media(min-width:1200px){.row{margin-left:-30px;*zoom:1}.row:before,.row:after{display:table;line-height:0;content:""}.row:after{clear:both}[class*="span"]{float:left;min-height:1px;margin-left:30px}.container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1170px}.span12{width:1170px}.span11{width:1070px}.span10{width:970px}.span9{width:870px}.span8{width:770px}.span7{width:670px}.span6{width:570px}.span5{width:470px}.span4{width:370px}.span3{width:270px}.span2{width:170px}.span1{width:70px}.offset12{margin-left:1230px}.offset11{margin-left:1130px}.offset10{margin-left:1030px}.offset9{margin-left:930px}.offset8{margin-left:830px}.offset7{margin-left:730px}.offset6{margin-left:630px}.offset5{margin-left:530px}.offset4{margin-left:430px}.offset3{margin-left:330px}.offset2{margin-left:230px}.offset1{margin-left:130px}.row-fluid{width:100%;*zoom:1}.row-fluid:before,.row-fluid:after{display:table;line-height:0;content:""}.row-fluid:after{clear:both}.row-fluid [class*="span"]{display:block;float:left;width:100%;min-height:30px;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.row-fluid [class*="span"]:first-child{margin-left:0}.row-fluid .span12{width:100%;*width:99.94680851063829%}.row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%}.row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%}.row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%}.row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%}.row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%}.row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%}.row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%}.row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%}.row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%}.row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%}.row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%}.row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%}.row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%}.row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%}.row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%}.row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%}.row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%}.row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%}.row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%}.row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%}.row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%}.row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%}.row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%}.row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%}.row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%}.row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%}.row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%}.row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%}.row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%}.row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%}.row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%}.row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%}.row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%}.row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%}.row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%}input,textarea,.uneditable-input{margin-left:0}.controls-row [class*="span"]+[class*="span"]{margin-left:30px}input.span12,textarea.span12,.uneditable-input.span12{width:1156px}input.span11,textarea.span11,.uneditable-input.span11{width:1056px}input.span10,textarea.span10,.uneditable-input.span10{width:956px}input.span9,textarea.span9,.uneditable-input.span9{width:856px}input.span8,textarea.span8,.uneditable-input.span8{width:756px}input.span7,textarea.span7,.uneditable-input.span7{width:656px}input.span6,textarea.span6,.uneditable-input.span6{width:556px}input.span5,textarea.span5,.uneditable-input.span5{width:456px}input.span4,textarea.span4,.uneditable-input.span4{width:356px}input.span3,textarea.span3,.uneditable-input.span3{width:256px}input.span2,textarea.span2,.uneditable-input.span2{width:156px}input.span1,textarea.span1,.uneditable-input.span1{width:56px}.thumbnails{margin-left:-30px}.thumbnails>li{margin-left:30px}.row-fluid .thumbnails{margin-left:0}}@media(min-width:768px) and (max-width:979px){.row{margin-left:-20px;*zoom:1}.row:before,.row:after{display:table;line-height:0;content:""}.row:after{clear:both}[class*="span"]{float:left;min-height:1px;margin-left:20px}.container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:724px}.span12{width:724px}.span11{width:662px}.span10{width:600px}.span9{width:538px}.span8{width:476px}.span7{width:414px}.span6{width:352px}.span5{width:290px}.span4{width:228px}.span3{width:166px}.span2{width:104px}.span1{width:42px}.offset12{margin-left:764px}.offset11{margin-left:702px}.offset10{margin-left:640px}.offset9{margin-left:578px}.offset8{margin-left:516px}.offset7{margin-left:454px}.offset6{margin-left:392px}.offset5{margin-left:330px}.offset4{margin-left:268px}.offset3{margin-left:206px}.offset2{margin-left:144px}.offset1{margin-left:82px}.row-fluid{width:100%;*zoom:1}.row-fluid:before,.row-fluid:after{display:table;line-height:0;content:""}.row-fluid:after{clear:both}.row-fluid [class*="span"]{display:block;float:left;width:100%;min-height:30px;margin-left:2.7624309392265194%;*margin-left:2.709239449864817%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.row-fluid [class*="span"]:first-child{margin-left:0}.row-fluid .span12{width:100%;*width:99.94680851063829%}.row-fluid .span11{width:91.43646408839778%;*width:91.38327259903608%}.row-fluid .span10{width:82.87292817679558%;*width:82.81973668743387%}.row-fluid .span9{width:74.30939226519337%;*width:74.25620077583166%}.row-fluid .span8{width:65.74585635359117%;*width:65.69266486422946%}.row-fluid .span7{width:57.18232044198895%;*width:57.12912895262725%}.row-fluid .span6{width:48.61878453038674%;*width:48.56559304102504%}.row-fluid .span5{width:40.05524861878453%;*width:40.00205712942283%}.row-fluid .span4{width:31.491712707182323%;*width:31.43852121782062%}.row-fluid .span3{width:22.92817679558011%;*width:22.87498530621841%}.row-fluid .span2{width:14.3646408839779%;*width:14.311449394616199%}.row-fluid .span1{width:5.801104972375691%;*width:5.747913483013988%}.row-fluid .offset12{margin-left:105.52486187845304%;*margin-left:105.41847889972962%}.row-fluid .offset12:first-child{margin-left:102.76243093922652%;*margin-left:102.6560479605031%}.row-fluid .offset11{margin-left:96.96132596685082%;*margin-left:96.8549429881274%}.row-fluid .offset11:first-child{margin-left:94.1988950276243%;*margin-left:94.09251204890089%}.row-fluid .offset10{margin-left:88.39779005524862%;*margin-left:88.2914070765252%}.row-fluid .offset10:first-child{margin-left:85.6353591160221%;*margin-left:85.52897613729868%}.row-fluid .offset9{margin-left:79.8342541436464%;*margin-left:79.72787116492299%}.row-fluid .offset9:first-child{margin-left:77.07182320441989%;*margin-left:76.96544022569647%}.row-fluid .offset8{margin-left:71.2707182320442%;*margin-left:71.16433525332079%}.row-fluid .offset8:first-child{margin-left:68.50828729281768%;*margin-left:68.40190431409427%}.row-fluid .offset7{margin-left:62.70718232044199%;*margin-left:62.600799341718584%}.row-fluid .offset7:first-child{margin-left:59.94475138121547%;*margin-left:59.838368402492065%}.row-fluid .offset6{margin-left:54.14364640883978%;*margin-left:54.037263430116376%}.row-fluid .offset6:first-child{margin-left:51.38121546961326%;*margin-left:51.27483249088986%}.row-fluid .offset5{margin-left:45.58011049723757%;*margin-left:45.47372751851417%}.row-fluid .offset5:first-child{margin-left:42.81767955801105%;*margin-left:42.71129657928765%}.row-fluid .offset4{margin-left:37.01657458563536%;*margin-left:36.91019160691196%}.row-fluid .offset4:first-child{margin-left:34.25414364640884%;*margin-left:34.14776066768544%}.row-fluid .offset3{margin-left:28.45303867403315%;*margin-left:28.346655695309746%}.row-fluid .offset3:first-child{margin-left:25.69060773480663%;*margin-left:25.584224756083227%}.row-fluid .offset2{margin-left:19.88950276243094%;*margin-left:19.783119783707537%}.row-fluid .offset2:first-child{margin-left:17.12707182320442%;*margin-left:17.02068884448102%}.row-fluid .offset1{margin-left:11.32596685082873%;*margin-left:11.219583872105325%}.row-fluid .offset1:first-child{margin-left:8.56353591160221%;*margin-left:8.457152932878806%}input,textarea,.uneditable-input{margin-left:0}.controls-row [class*="span"]+[class*="span"]{margin-left:20px}input.span12,textarea.span12,.uneditable-input.span12{width:710px}input.span11,textarea.span11,.uneditable-input.span11{width:648px}input.span10,textarea.span10,.uneditable-input.span10{width:586px}input.span9,textarea.span9,.uneditable-input.span9{width:524px}input.span8,textarea.span8,.uneditable-input.span8{width:462px}input.span7,textarea.span7,.uneditable-input.span7{width:400px}input.span6,textarea.span6,.uneditable-input.span6{width:338px}input.span5,textarea.span5,.uneditable-input.span5{width:276px}input.span4,textarea.span4,.uneditable-input.span4{width:214px}input.span3,textarea.span3,.uneditable-input.span3{width:152px}input.span2,textarea.span2,.uneditable-input.span2{width:90px}input.span1,textarea.span1,.uneditable-input.span1{width:28px}}@media(max-width:767px){body{padding-right:20px;padding-left:20px}.navbar-fixed-top,.navbar-fixed-bottom,.navbar-static-top{margin-right:-20px;margin-left:-20px}.container-fluid{padding:0}.dl-horizontal dt{float:none;width:auto;clear:none;text-align:left}.dl-horizontal dd{margin-left:0}.container{width:auto}.row-fluid{width:100%}.row,.thumbnails{margin-left:0}.thumbnails>li{float:none;margin-left:0}[class*="span"],.row-fluid [class*="span"]{display:block;float:none;width:100%;margin-left:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.span12,.row-fluid .span12{width:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.input-large,.input-xlarge,.input-xxlarge,input[class*="span"],select[class*="span"],textarea[class*="span"],.uneditable-input{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.input-prepend input,.input-append input,.input-prepend input[class*="span"],.input-append input[class*="span"]{display:inline-block;width:auto}.controls-row [class*="span"]+[class*="span"]{margin-left:0}.modal{position:fixed;top:20px;right:20px;left:20px;width:auto;margin:0}.modal.fade.in{top:auto}}@media(max-width:480px){.nav-collapse{-webkit-transform:translate3d(0,0,0)}.page-header h1 small{display:block;line-height:20px}input[type="checkbox"],input[type="radio"]{border:1px solid #ccc}.form-horizontal .control-label{float:none;width:auto;padding-top:0;text-align:left}.form-horizontal .controls{margin-left:0}.form-horizontal .control-list{padding-top:0}.form-horizontal .form-actions{padding-right:10px;padding-left:10px}.modal{top:10px;right:10px;left:10px}.modal-header .close{padding:10px;margin:-10px}.carousel-caption{position:static}}@media(max-width:979px){body{padding-top:0}.navbar-fixed-top,.navbar-fixed-bottom{position:static}.navbar-fixed-top{margin-bottom:20px}.navbar-fixed-bottom{margin-top:20px}.navbar-fixed-top .navbar-inner,.navbar-fixed-bottom .navbar-inner{padding:5px}.navbar .container{width:auto;padding:0}.navbar .brand{padding-right:10px;padding-left:10px;margin:0 0 0 -5px}.nav-collapse{clear:both}.nav-collapse .nav{float:none;margin:0 0 10px}.nav-collapse .nav>li{float:none}.nav-collapse .nav>li>a{margin-bottom:2px}.nav-collapse .nav>.divider-vertical{display:none}.nav-collapse .nav .nav-header{color:#777;text-shadow:none}.nav-collapse .nav>li>a,.nav-collapse .dropdown-menu a{padding:9px 15px;font-weight:bold;color:#777;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.nav-collapse .btn{padding:4px 10px 4px;font-weight:normal;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.nav-collapse .dropdown-menu li+li a{margin-bottom:2px}.nav-collapse .nav>li>a:hover,.nav-collapse .dropdown-menu a:hover{background-color:#f2f2f2}.navbar-inverse .nav-collapse .nav>li>a:hover,.navbar-inverse .nav-collapse .dropdown-menu a:hover{background-color:#111}.nav-collapse.in .btn-group{padding:0;margin-top:5px}.nav-collapse .dropdown-menu{position:static;top:auto;left:auto;display:block;float:none;max-width:none;padding:0;margin:0 15px;background-color:transparent;border:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.nav-collapse .dropdown-menu:before,.nav-collapse .dropdown-menu:after{display:none}.nav-collapse .dropdown-menu .divider{display:none}.nav-collapse .nav>li>.dropdown-menu:before,.nav-collapse .nav>li>.dropdown-menu:after{display:none}.nav-collapse .navbar-form,.nav-collapse .navbar-search{float:none;padding:10px 15px;margin:10px 0;border-top:1px solid #f2f2f2;border-bottom:1px solid #f2f2f2;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.1);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.1);box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.1)}.navbar-inverse .nav-collapse .navbar-form,.navbar-inverse .nav-collapse .navbar-search{border-top-color:#111;border-bottom-color:#111}.navbar .nav-collapse .nav.pull-right{float:none;margin-left:0}.nav-collapse,.nav-collapse.collapse{height:0;overflow:hidden}.navbar .btn-navbar{display:block}.navbar-static .navbar-inner{padding-right:10px;padding-left:10px}}@media(min-width:980px){.nav-collapse.collapse{height:auto!important;overflow:visible!important}}
diff --git a/hadoop-tools/hadoop-sls/src/main/html/css/bootstrap.min.css b/hadoop-tools/hadoop-sls/src/main/html/css/bootstrap.min.css
deleted file mode 100644
index fd129b2cc69..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/css/bootstrap.min.css
+++ /dev/null
@@ -1,37 +0,0 @@
-/*!
- * Bootstrap v2.1.1
- *
- * Copyright 2012 Twitter, Inc
- * Licensed under the Apache License v2.0
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Designed and built with all the love in the world @twitter by @mdo and @fat.
- */
-article,
-aside,
-details,
-figcaption,
-figure,
-footer,
-header,
-hgroup,
-nav,
-section{display:block}
-audio,
-canvas,
-video{display:inline-block;*display:inline;*zoom:1}
-audio:not([controls]){display:none}
-html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}
-a:focus{
-  outline:thin dotted #333;
-  outline:5px auto -webkit-focus-ring-color;
-  outline-offset:-2px
-}
-a:hover,
-a:active{outline:0}
-sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}
-sup{top:-0.5em}sub{bottom:-0.25em}
-img{width:auto\9;height:auto;max-width:100%;vertical-align:middle;border:0;-ms-interpolation-mode:bicubic}
-#map_canvas img{max-width:none}button,input,select,textarea{margin:0;font-size:100%;vertical-align:middle}
-button,input{*overflow:visible;line-height:normal}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}
-button,input[type="button"],input[type="reset"],input[type="submit"]{cursor:pointer;-webkit-appearance:button}input[type="search"]{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield}input[type="search"]::-webkit-search-decoration,input[type="search"]::-webkit-search-cancel-button{-webkit-appearance:none}textarea{overflow:auto;vertical-align:top}.clearfix{*zoom:1}.clearfix:before,.clearfix:after{display:table;line-height:0;content:""}.clearfix:after{clear:both}.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.input-block-level{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}body{margin:0;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;line-height:20px;color:#333;background-color:#fff}a{color:#08c;text-decoration:none}a:hover{color:#005580;text-decoration:underline}.img-rounded{-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px}.img-polaroid{padding:4px;background-color:#fff;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.2);-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.1);-moz-box-shadow:0 1px 3px rgba(0,0,0,0.1);box-shadow:0 1px 3px rgba(0,0,0,0.1)}.img-circle{-webkit-border-radius:500px;-moz-border-radius:500px;border-radius:500px}.row{margin-left:-20px;*zoom:1}.row:before,.row:after{display:table;line-height:0;content:""}.row:after{clear:both}[class*="span"]{float:left;min-height:1px;margin-left:20px}.container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:940px}.span12{width:940px}.span11{width:860px}.span10{width:780px}.span9{width:700px}.span8{width:620px}.span7{width:540px}.span6{width:460px}.span5{width:380px}.span4{width:300px}.span3{width:220px}.span2{width:140px}.span1{width:60px}.offset12{margin-left:980px}.offset11{margin-left:900px}.offset10{margin-left:820px}.offset9{margin-left:740px}.offset8{margin-left:660px}.offset7{margin-left:580px}.offset6{margin-left:500px}.offset5{margin-left:420px}.offset4{margin-left:340px}.offset3{margin-left:260px}.offset2{margin-left:180px}.offset1{margin-left:100px}.row-fluid{width:100%;*zoom:1}.row-fluid:before,.row-fluid:after{display:table;line-height:0;content:""}.row-fluid:after{clear:both}.row-fluid [class*="span"]{display:block;float:left;width:100%;min-height:30px;margin-left:2.127659574468085%;*margin-left:2.074468085106383%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.row-fluid [class*="span"]:first-child{margin-left:0}.row-fluid .span12{width:100%;*width:99.94680851063829%}.row-fluid .span11{width:91.48936170212765%;*width:91.43617021276594%}.row-fluid .span10{width:82.97872340425532%;*width:82.92553191489361%}.row-fluid .span9{width:74.46808510638297%;*width:74.41489361702126%}.row-fluid .span8{width:65.95744680851064%;*width:65.90425531914893%}.row-fluid .span7{width:57.44680851063829%;*width:57.39361702127659%}.row-fluid .span6{width:48.93617021276595%;*width:48.88297872340425%}.row-fluid .span5{width:40.42553191489362%;*width:40.37234042553192%}.row-fluid .span4{width:31.914893617021278%;*width:31.861702127659576%}.row-fluid .span3{width:23.404255319148934%;*width:23.351063829787233%}.row-fluid .span2{width:14.893617021276595%;*width:14.840425531914894%}.row-fluid .span1{width:6.382978723404255%;*width:6.329787234042553%}.row-fluid .offset12{margin-left:104.25531914893617%;*margin-left:104.14893617021275%}.row-fluid .offset12:first-child{margin-left:102.12765957446808%;*margin-left:102.02127659574467%}.row-fluid .offset11{margin-left:95.74468085106382%;*margin-left:95.6382978723404%}.row-fluid .offset11:first-child{margin-left:93.61702127659574%;*margin-left:93.51063829787232%}.row-fluid .offset10{margin-left:87.23404255319149%;*margin-left:87.12765957446807%}.row-fluid .offset10:first-child{margin-left:85.1063829787234%;*margin-left:84.99999999999999%}.row-fluid .offset9{margin-left:78.72340425531914%;*margin-left:78.61702127659572%}.row-fluid .offset9:first-child{margin-left:76.59574468085106%;*margin-left:76.48936170212764%}.row-fluid .offset8{margin-left:70.2127659574468%;*margin-left:70.10638297872339%}.row-fluid .offset8:first-child{margin-left:68.08510638297872%;*margin-left:67.9787234042553%}.row-fluid .offset7{margin-left:61.70212765957446%;*margin-left:61.59574468085106%}.row-fluid .offset7:first-child{margin-left:59.574468085106375%;*margin-left:59.46808510638297%}.row-fluid .offset6{margin-left:53.191489361702125%;*margin-left:53.085106382978715%}.row-fluid .offset6:first-child{margin-left:51.063829787234035%;*margin-left:50.95744680851063%}.row-fluid .offset5{margin-left:44.68085106382979%;*margin-left:44.57446808510638%}.row-fluid .offset5:first-child{margin-left:42.5531914893617%;*margin-left:42.4468085106383%}.row-fluid .offset4{margin-left:36.170212765957444%;*margin-left:36.06382978723405%}.row-fluid .offset4:first-child{margin-left:34.04255319148936%;*margin-left:33.93617021276596%}.row-fluid .offset3{margin-left:27.659574468085104%;*margin-left:27.5531914893617%}.row-fluid .offset3:first-child{margin-left:25.53191489361702%;*margin-left:25.425531914893618%}.row-fluid .offset2{margin-left:19.148936170212764%;*margin-left:19.04255319148936%}.row-fluid .offset2:first-child{margin-left:17.02127659574468%;*margin-left:16.914893617021278%}.row-fluid .offset1{margin-left:10.638297872340425%;*margin-left:10.53191489361702%}.row-fluid .offset1:first-child{margin-left:8.51063829787234%;*margin-left:8.404255319148938%}[class*="span"].hide,.row-fluid [class*="span"].hide{display:none}[class*="span"].pull-right,.row-fluid [class*="span"].pull-right{float:right}.container{margin-right:auto;margin-left:auto;*zoom:1}.container:before,.container:after{display:table;line-height:0;content:""}.container:after{clear:both}.container-fluid{padding-right:20px;padding-left:20px;*zoom:1}.container-fluid:before,.container-fluid:after{display:table;line-height:0;content:""}.container-fluid:after{clear:both}p{margin:0 0 10px}.lead{margin-bottom:20px;font-size:21px;font-weight:200;line-height:30px}small{font-size:85%}strong{font-weight:bold}em{font-style:italic}cite{font-style:normal}.muted{color:#999}.text-warning{color:#c09853}.text-error{color:#b94a48}.text-info{color:#3a87ad}.text-success{color:#468847}h1,h2,h3,h4,h5,h6{margin:10px 0;font-family:inherit;font-weight:bold;line-height:1;color:inherit;text-rendering:optimizelegibility}h1 small,h2 small,h3 small,h4 small,h5 small,h6 small{font-weight:normal;line-height:1;color:#999}h1{font-size:36px;line-height:40px}h2{font-size:30px;line-height:40px}h3{font-size:24px;line-height:40px}h4{font-size:18px;line-height:20px}h5{font-size:14px;line-height:20px}h6{font-size:12px;line-height:20px}h1 small{font-size:24px}h2 small{font-size:18px}h3 small{font-size:14px}h4 small{font-size:14px}.page-header{padding-bottom:9px;margin:20px 0 30px;border-bottom:1px solid #eee}ul,ol{padding:0;margin:0 0 10px 25px}ul ul,ul ol,ol ol,ol ul{margin-bottom:0}li{line-height:20px}ul.unstyled,ol.unstyled{margin-left:0;list-style:none}dl{margin-bottom:20px}dt,dd{line-height:20px}dt{font-weight:bold}dd{margin-left:10px}.dl-horizontal{*zoom:1}.dl-horizontal:before,.dl-horizontal:after{display:table;line-height:0;content:""}.dl-horizontal:after{clear:both}.dl-horizontal dt{float:left;width:160px;overflow:hidden;clear:left;text-align:right;text-overflow:ellipsis;white-space:nowrap}.dl-horizontal dd{margin-left:180px}hr{margin:20px 0;border:0;border-top:1px solid #eee;border-bottom:1px solid #fff}abbr[title]{cursor:help;border-bottom:1px dotted #999}abbr.initialism{font-size:90%;text-transform:uppercase}blockquote{padding:0 0 0 15px;margin:0 0 20px;border-left:5px solid #eee}blockquote p{margin-bottom:0;font-size:16px;font-weight:300;line-height:25px}blockquote small{display:block;line-height:20px;color:#999}blockquote small:before{content:'\2014 \00A0'}blockquote.pull-right{float:right;padding-right:15px;padding-left:0;border-right:5px solid #eee;border-left:0}blockquote.pull-right p,blockquote.pull-right small{text-align:right}blockquote.pull-right small:before{content:''}blockquote.pull-right small:after{content:'\00A0 \2014'}q:before,q:after,blockquote:before,blockquote:after{content:""}address{display:block;margin-bottom:20px;font-style:normal;line-height:20px}code,pre{padding:0 3px 2px;font-family:Monaco,Menlo,Consolas,"Courier New",monospace;font-size:12px;color:#333;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}code{padding:2px 4px;color:#d14;background-color:#f7f7f9;border:1px solid #e1e1e8}pre{display:block;padding:9.5px;margin:0 0 10px;font-size:13px;line-height:20px;word-break:break-all;word-wrap:break-word;white-space:pre;white-space:pre-wrap;background-color:#f5f5f5;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.15);-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}pre.prettyprint{margin-bottom:20px}pre code{padding:0;color:inherit;background-color:transparent;border:0}.pre-scrollable{max-height:340px;overflow-y:scroll}form{margin:0 0 20px}fieldset{padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:20px;font-size:21px;line-height:40px;color:#333;border:0;border-bottom:1px solid #e5e5e5}legend small{font-size:15px;color:#999}label,input,button,select,textarea{font-size:14px;font-weight:normal;line-height:20px}input,button,select,textarea{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif}label{display:block;margin-bottom:5px}select,textarea,input[type="text"],input[type="password"],input[type="datetime"],input[type="datetime-local"],input[type="date"],input[type="month"],input[type="time"],input[type="week"],input[type="number"],input[type="email"],input[type="url"],input[type="search"],input[type="tel"],input[type="color"],.uneditable-input{display:inline-block;height:20px;padding:4px 6px;margin-bottom:9px;font-size:14px;line-height:20px;color:#555;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}input,textarea,.uneditable-input{width:206px}textarea{height:auto}textarea,input[type="text"],input[type="password"],input[type="datetime"],input[type="datetime-local"],input[type="date"],input[type="month"],input[type="time"],input[type="week"],input[type="number"],input[type="email"],input[type="url"],input[type="search"],input[type="tel"],input[type="color"],.uneditable-input{background-color:#fff;border:1px solid #ccc;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-webkit-transition:border linear .2s,box-shadow linear .2s;-moz-transition:border linear .2s,box-shadow linear .2s;-o-transition:border linear .2s,box-shadow linear .2s;transition:border linear .2s,box-shadow linear .2s}textarea:focus,input[type="text"]:focus,input[type="password"]:focus,input[type="datetime"]:focus,input[type="datetime-local"]:focus,input[type="date"]:focus,input[type="month"]:focus,input[type="time"]:focus,input[type="week"]:focus,input[type="number"]:focus,input[type="email"]:focus,input[type="url"]:focus,input[type="search"]:focus,input[type="tel"]:focus,input[type="color"]:focus,.uneditable-input:focus{border-color:rgba(82,168,236,0.8);outline:0;outline:thin dotted \9;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(82,168,236,0.6);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(82,168,236,0.6);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(82,168,236,0.6)}input[type="radio"],input[type="checkbox"]{margin:4px 0 0;margin-top:1px \9;*margin-top:0;line-height:normal;cursor:pointer}input[type="file"],input[type="image"],input[type="submit"],input[type="reset"],input[type="button"],input[type="radio"],input[type="checkbox"]{width:auto}select,input[type="file"]{height:30px;*margin-top:4px;line-height:30px}select{width:220px;background-color:#fff;border:1px solid #ccc}select[multiple],select[size]{height:auto}select:focus,input[type="file"]:focus,input[type="radio"]:focus,input[type="checkbox"]:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.uneditable-input,.uneditable-textarea{color:#999;cursor:not-allowed;background-color:#fcfcfc;border-color:#ccc;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.025);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,0.025);box-shadow:inset 0 1px 2px rgba(0,0,0,0.025)}.uneditable-input{overflow:hidden;white-space:nowrap}.uneditable-textarea{width:auto;height:auto}input:-moz-placeholder,textarea:-moz-placeholder{color:#999}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#999}input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{color:#999}.radio,.checkbox{min-height:18px;padding-left:18px}.radio input[type="radio"],.checkbox input[type="checkbox"]{float:left;margin-left:-18px}.controls>.radio:first-child,.controls>.checkbox:first-child{padding-top:5px}.radio.inline,.checkbox.inline{display:inline-block;padding-top:5px;margin-bottom:0;vertical-align:middle}.radio.inline+.radio.inline,.checkbox.inline+.checkbox.inline{margin-left:10px}.input-mini{width:60px}.input-small{width:90px}.input-medium{width:150px}.input-large{width:210px}.input-xlarge{width:270px}.input-xxlarge{width:530px}input[class*="span"],select[class*="span"],textarea[class*="span"],.uneditable-input[class*="span"],.row-fluid input[class*="span"],.row-fluid select[class*="span"],.row-fluid textarea[class*="span"],.row-fluid .uneditable-input[class*="span"]{float:none;margin-left:0}.input-append input[class*="span"],.input-append .uneditable-input[class*="span"],.input-prepend input[class*="span"],.input-prepend .uneditable-input[class*="span"],.row-fluid input[class*="span"],.row-fluid select[class*="span"],.row-fluid textarea[class*="span"],.row-fluid .uneditable-input[class*="span"],.row-fluid .input-prepend [class*="span"],.row-fluid .input-append [class*="span"]{display:inline-block}input,textarea,.uneditable-input{margin-left:0}.controls-row [class*="span"]+[class*="span"]{margin-left:20px}input.span12,textarea.span12,.uneditable-input.span12{width:926px}input.span11,textarea.span11,.uneditable-input.span11{width:846px}input.span10,textarea.span10,.uneditable-input.span10{width:766px}input.span9,textarea.span9,.uneditable-input.span9{width:686px}input.span8,textarea.span8,.uneditable-input.span8{width:606px}input.span7,textarea.span7,.uneditable-input.span7{width:526px}input.span6,textarea.span6,.uneditable-input.span6{width:446px}input.span5,textarea.span5,.uneditable-input.span5{width:366px}input.span4,textarea.span4,.uneditable-input.span4{width:286px}input.span3,textarea.span3,.uneditable-input.span3{width:206px}input.span2,textarea.span2,.uneditable-input.span2{width:126px}input.span1,textarea.span1,.uneditable-input.span1{width:46px}.controls-row{*zoom:1}.controls-row:before,.controls-row:after{display:table;line-height:0;content:""}.controls-row:after{clear:both}.controls-row [class*="span"]{float:left}input[disabled],select[disabled],textarea[disabled],input[readonly],select[readonly],textarea[readonly]{cursor:not-allowed;background-color:#eee}input[type="radio"][disabled],input[type="checkbox"][disabled],input[type="radio"][readonly],input[type="checkbox"][readonly]{background-color:transparent}.control-group.warning>label,.control-group.warning .help-block,.control-group.warning .help-inline{color:#c09853}.control-group.warning .checkbox,.control-group.warning .radio,.control-group.warning input,.control-group.warning select,.control-group.warning textarea{color:#c09853}.control-group.warning input,.control-group.warning select,.control-group.warning textarea{border-color:#c09853;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075)}.control-group.warning input:focus,.control-group.warning select:focus,.control-group.warning textarea:focus{border-color:#a47e3c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #dbc59e;-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #dbc59e;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #dbc59e}.control-group.warning .input-prepend .add-on,.control-group.warning .input-append .add-on{color:#c09853;background-color:#fcf8e3;border-color:#c09853}.control-group.error>label,.control-group.error .help-block,.control-group.error .help-inline{color:#b94a48}.control-group.error .checkbox,.control-group.error .radio,.control-group.error input,.control-group.error select,.control-group.error textarea{color:#b94a48}.control-group.error input,.control-group.error select,.control-group.error textarea{border-color:#b94a48;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075)}.control-group.error input:focus,.control-group.error select:focus,.control-group.error textarea:focus{border-color:#953b39;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #d59392;-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #d59392;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #d59392}.control-group.error .input-prepend .add-on,.control-group.error .input-append .add-on{color:#b94a48;background-color:#f2dede;border-color:#b94a48}.control-group.success>label,.control-group.success .help-block,.control-group.success .help-inline{color:#468847}.control-group.success .checkbox,.control-group.success .radio,.control-group.success input,.control-group.success select,.control-group.success textarea{color:#468847}.control-group.success input,.control-group.success select,.control-group.success textarea{border-color:#468847;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075)}.control-group.success input:focus,.control-group.success select:focus,.control-group.success textarea:focus{border-color:#356635;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #7aba7b;-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #7aba7b;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #7aba7b}.control-group.success .input-prepend .add-on,.control-group.success .input-append .add-on{color:#468847;background-color:#dff0d8;border-color:#468847}.control-group.info>label,.control-group.info .help-block,.control-group.info .help-inline{color:#3a87ad}.control-group.info .checkbox,.control-group.info .radio,.control-group.info input,.control-group.info select,.control-group.info textarea{color:#3a87ad}.control-group.info input,.control-group.info select,.control-group.info textarea{border-color:#3a87ad;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075)}.control-group.info input:focus,.control-group.info select:focus,.control-group.info textarea:focus{border-color:#2d6987;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #7ab5d3;-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #7ab5d3;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 6px #7ab5d3}.control-group.info .input-prepend .add-on,.control-group.info .input-append .add-on{color:#3a87ad;background-color:#d9edf7;border-color:#3a87ad}input:focus:required:invalid,textarea:focus:required:invalid,select:focus:required:invalid{color:#b94a48;border-color:#ee5f5b}input:focus:required:invalid:focus,textarea:focus:required:invalid:focus,select:focus:required:invalid:focus{border-color:#e9322d;-webkit-box-shadow:0 0 6px #f8b9b7;-moz-box-shadow:0 0 6px #f8b9b7;box-shadow:0 0 6px #f8b9b7}.form-actions{padding:19px 20px 20px;margin-top:20px;margin-bottom:20px;background-color:#f5f5f5;border-top:1px solid #e5e5e5;*zoom:1}.form-actions:before,.form-actions:after{display:table;line-height:0;content:""}.form-actions:after{clear:both}.help-block,.help-inline{color:#595959}.help-block{display:block;margin-bottom:10px}.help-inline{display:inline-block;*display:inline;padding-left:5px;vertical-align:middle;*zoom:1}.input-append,.input-prepend{margin-bottom:5px;font-size:0;white-space:nowrap}.input-append input,.input-prepend input,.input-append select,.input-prepend select,.input-append .uneditable-input,.input-prepend .uneditable-input{position:relative;margin-bottom:0;*margin-left:0;font-size:14px;vertical-align:top;-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}.input-append input:focus,.input-prepend input:focus,.input-append select:focus,.input-prepend select:focus,.input-append .uneditable-input:focus,.input-prepend .uneditable-input:focus{z-index:2}.input-append .add-on,.input-prepend .add-on{display:inline-block;width:auto;height:20px;min-width:16px;padding:4px 5px;font-size:14px;font-weight:normal;line-height:20px;text-align:center;text-shadow:0 1px 0 #fff;background-color:#eee;border:1px solid #ccc}.input-append .add-on,.input-prepend .add-on,.input-append .btn,.input-prepend .btn{vertical-align:top;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.input-append .active,.input-prepend .active{background-color:#a9dba9;border-color:#46a546}.input-prepend .add-on,.input-prepend .btn{margin-right:-1px}.input-prepend .add-on:first-child,.input-prepend .btn:first-child{-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.input-append input,.input-append select,.input-append .uneditable-input{-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.input-append .add-on,.input-append .btn{margin-left:-1px}.input-append .add-on:last-child,.input-append .btn:last-child{-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}.input-prepend.input-append input,.input-prepend.input-append select,.input-prepend.input-append .uneditable-input{-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.input-prepend.input-append .add-on:first-child,.input-prepend.input-append .btn:first-child{margin-right:-1px;-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.input-prepend.input-append .add-on:last-child,.input-prepend.input-append .btn:last-child{margin-left:-1px;-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}input.search-query{padding-right:14px;padding-right:4px \9;padding-left:14px;padding-left:4px \9;margin-bottom:0;-webkit-border-radius:15px;-moz-border-radius:15px;border-radius:15px}.form-search .input-append .search-query,.form-search .input-prepend .search-query{-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.form-search .input-append .search-query{-webkit-border-radius:14px 0 0 14px;-moz-border-radius:14px 0 0 14px;border-radius:14px 0 0 14px}.form-search .input-append .btn{-webkit-border-radius:0 14px 14px 0;-moz-border-radius:0 14px 14px 0;border-radius:0 14px 14px 0}.form-search .input-prepend .search-query{-webkit-border-radius:0 14px 14px 0;-moz-border-radius:0 14px 14px 0;border-radius:0 14px 14px 0}.form-search .input-prepend .btn{-webkit-border-radius:14px 0 0 14px;-moz-border-radius:14px 0 0 14px;border-radius:14px 0 0 14px}.form-search input,.form-inline input,.form-horizontal input,.form-search textarea,.form-inline textarea,.form-horizontal textarea,.form-search select,.form-inline select,.form-horizontal select,.form-search .help-inline,.form-inline .help-inline,.form-horizontal .help-inline,.form-search .uneditable-input,.form-inline .uneditable-input,.form-horizontal .uneditable-input,.form-search .input-prepend,.form-inline .input-prepend,.form-horizontal .input-prepend,.form-search .input-append,.form-inline .input-append,.form-horizontal .input-append{display:inline-block;*display:inline;margin-bottom:0;vertical-align:middle;*zoom:1}.form-search .hide,.form-inline .hide,.form-horizontal .hide{display:none}.form-search label,.form-inline label,.form-search .btn-group,.form-inline .btn-group{display:inline-block}.form-search .input-append,.form-inline .input-append,.form-search .input-prepend,.form-inline .input-prepend{margin-bottom:0}.form-search .radio,.form-search .checkbox,.form-inline .radio,.form-inline .checkbox{padding-left:0;margin-bottom:0;vertical-align:middle}.form-search .radio input[type="radio"],.form-search .checkbox input[type="checkbox"],.form-inline .radio input[type="radio"],.form-inline .checkbox input[type="checkbox"]{float:left;margin-right:3px;margin-left:0}.control-group{margin-bottom:10px}legend+.control-group{margin-top:20px;-webkit-margin-top-collapse:separate}.form-horizontal .control-group{margin-bottom:20px;*zoom:1}.form-horizontal .control-group:before,.form-horizontal .control-group:after{display:table;line-height:0;content:""}.form-horizontal .control-group:after{clear:both}.form-horizontal .control-label{float:left;width:160px;padding-top:5px;text-align:right}.form-horizontal .controls{*display:inline-block;*padding-left:20px;margin-left:180px;*margin-left:0}.form-horizontal .controls:first-child{*padding-left:180px}.form-horizontal .help-block{margin-bottom:0}.form-horizontal input+.help-block,.form-horizontal select+.help-block,.form-horizontal textarea+.help-block{margin-top:10px}.form-horizontal .form-actions{padding-left:180px}table{max-width:100%;background-color:transparent;border-collapse:collapse;border-spacing:0}.table{width:100%;margin-bottom:20px}.table th,.table td{padding:8px;line-height:20px;text-align:left;vertical-align:top;border-top:1px solid #ddd}.table th{font-weight:bold}.table thead th{vertical-align:bottom}.table caption+thead tr:first-child th,.table caption+thead tr:first-child td,.table colgroup+thead tr:first-child th,.table colgroup+thead tr:first-child td,.table thead:first-child tr:first-child th,.table thead:first-child tr:first-child td{border-top:0}.table tbody+tbody{border-top:2px solid #ddd}.table-condensed th,.table-condensed td{padding:4px 5px}.table-bordered{border:1px solid #ddd;border-collapse:separate;*border-collapse:collapse;border-left:0;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.table-bordered th,.table-bordered td{border-left:1px solid #ddd}.table-bordered caption+thead tr:first-child th,.table-bordered caption+tbody tr:first-child th,.table-bordered caption+tbody tr:first-child td,.table-bordered colgroup+thead tr:first-child th,.table-bordered colgroup+tbody tr:first-child th,.table-bordered colgroup+tbody tr:first-child td,.table-bordered thead:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child td{border-top:0}.table-bordered thead:first-child tr:first-child th:first-child,.table-bordered tbody:first-child tr:first-child td:first-child{-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-topleft:4px}.table-bordered thead:first-child tr:first-child th:last-child,.table-bordered tbody:first-child tr:first-child td:last-child{-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-moz-border-radius-topright:4px}.table-bordered thead:last-child tr:last-child th:first-child,.table-bordered tbody:last-child tr:last-child td:first-child,.table-bordered tfoot:last-child tr:last-child td:first-child{-webkit-border-radius:0 0 0 4px;-moz-border-radius:0 0 0 4px;border-radius:0 0 0 4px;-webkit-border-bottom-left-radius:4px;border-bottom-left-radius:4px;-moz-border-radius-bottomleft:4px}.table-bordered thead:last-child tr:last-child th:last-child,.table-bordered tbody:last-child tr:last-child td:last-child,.table-bordered tfoot:last-child tr:last-child td:last-child{-webkit-border-bottom-right-radius:4px;border-bottom-right-radius:4px;-moz-border-radius-bottomright:4px}.table-bordered caption+thead tr:first-child th:first-child,.table-bordered caption+tbody tr:first-child td:first-child,.table-bordered colgroup+thead tr:first-child th:first-child,.table-bordered colgroup+tbody tr:first-child td:first-child{-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-topleft:4px}.table-bordered caption+thead tr:first-child th:last-child,.table-bordered caption+tbody tr:first-child td:last-child,.table-bordered colgroup+thead tr:first-child th:last-child,.table-bordered colgroup+tbody tr:first-child td:last-child{-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-moz-border-radius-topleft:4px}.table-striped tbody tr:nth-child(odd) td,.table-striped tbody tr:nth-child(odd) th{background-color:#f9f9f9}.table-hover tbody tr:hover td,.table-hover tbody tr:hover th{background-color:#f5f5f5}table [class*=span],.row-fluid table [class*=span]{display:table-cell;float:none;margin-left:0}.table .span1{float:none;width:44px;margin-left:0}.table .span2{float:none;width:124px;margin-left:0}.table .span3{float:none;width:204px;margin-left:0}.table .span4{float:none;width:284px;margin-left:0}.table .span5{float:none;width:364px;margin-left:0}.table .span6{float:none;width:444px;margin-left:0}.table .span7{float:none;width:524px;margin-left:0}.table .span8{float:none;width:604px;margin-left:0}.table .span9{float:none;width:684px;margin-left:0}.table .span10{float:none;width:764px;margin-left:0}.table .span11{float:none;width:844px;margin-left:0}.table .span12{float:none;width:924px;margin-left:0}.table .span13{float:none;width:1004px;margin-left:0}.table .span14{float:none;width:1084px;margin-left:0}.table .span15{float:none;width:1164px;margin-left:0}.table .span16{float:none;width:1244px;margin-left:0}.table .span17{float:none;width:1324px;margin-left:0}.table .span18{float:none;width:1404px;margin-left:0}.table .span19{float:none;width:1484px;margin-left:0}.table .span20{float:none;width:1564px;margin-left:0}.table .span21{float:none;width:1644px;margin-left:0}.table .span22{float:none;width:1724px;margin-left:0}.table .span23{float:none;width:1804px;margin-left:0}.table .span24{float:none;width:1884px;margin-left:0}.table tbody tr.success td{background-color:#dff0d8}.table tbody tr.error td{background-color:#f2dede}.table tbody tr.warning td{background-color:#fcf8e3}.table tbody tr.info td{background-color:#d9edf7}.table-hover tbody tr.success:hover td{background-color:#d0e9c6}.table-hover tbody tr.error:hover td{background-color:#ebcccc}.table-hover tbody tr.warning:hover td{background-color:#faf2cc}.table-hover tbody tr.info:hover td{background-color:#c4e3f3}[class^="icon-"],[class*=" icon-"]{display:inline-block;width:14px;height:14px;margin-top:1px;*margin-right:.3em;line-height:14px;vertical-align:text-top;background-image:url("../img/glyphicons-halflings.png");background-position:14px 14px;background-repeat:no-repeat}.icon-white,.nav-tabs>.active>a>[class^="icon-"],.nav-tabs>.active>a>[class*=" icon-"],.nav-pills>.active>a>[class^="icon-"],.nav-pills>.active>a>[class*=" icon-"],.nav-list>.active>a>[class^="icon-"],.nav-list>.active>a>[class*=" icon-"],.navbar-inverse .nav>.active>a>[class^="icon-"],.navbar-inverse .nav>.active>a>[class*=" icon-"],.dropdown-menu>li>a:hover>[class^="icon-"],.dropdown-menu>li>a:hover>[class*=" icon-"],.dropdown-menu>.active>a>[class^="icon-"],.dropdown-menu>.active>a>[class*=" icon-"]{background-image:url("../img/glyphicons-halflings-white.png")}.icon-glass{background-position:0 0}.icon-music{background-position:-24px 0}.icon-search{background-position:-48px 0}.icon-envelope{background-position:-72px 0}.icon-heart{background-position:-96px 0}.icon-star{background-position:-120px 0}.icon-star-empty{background-position:-144px 0}.icon-user{background-position:-168px 0}.icon-film{background-position:-192px 0}.icon-th-large{background-position:-216px 0}.icon-th{background-position:-240px 0}.icon-th-list{background-position:-264px 0}.icon-ok{background-position:-288px 0}.icon-remove{background-position:-312px 0}.icon-zoom-in{background-position:-336px 0}.icon-zoom-out{background-position:-360px 0}.icon-off{background-position:-384px 0}.icon-signal{background-position:-408px 0}.icon-cog{background-position:-432px 0}.icon-trash{background-position:-456px 0}.icon-home{background-position:0 -24px}.icon-file{background-position:-24px -24px}.icon-time{background-position:-48px -24px}.icon-road{background-position:-72px -24px}.icon-download-alt{background-position:-96px -24px}.icon-download{background-position:-120px -24px}.icon-upload{background-position:-144px -24px}.icon-inbox{background-position:-168px -24px}.icon-play-circle{background-position:-192px -24px}.icon-repeat{background-position:-216px -24px}.icon-refresh{background-position:-240px -24px}.icon-list-alt{background-position:-264px -24px}.icon-lock{background-position:-287px -24px}.icon-flag{background-position:-312px -24px}.icon-headphones{background-position:-336px -24px}.icon-volume-off{background-position:-360px -24px}.icon-volume-down{background-position:-384px -24px}.icon-volume-up{background-position:-408px -24px}.icon-qrcode{background-position:-432px -24px}.icon-barcode{background-position:-456px -24px}.icon-tag{background-position:0 -48px}.icon-tags{background-position:-25px -48px}.icon-book{background-position:-48px -48px}.icon-bookmark{background-position:-72px -48px}.icon-print{background-position:-96px -48px}.icon-camera{background-position:-120px -48px}.icon-font{background-position:-144px -48px}.icon-bold{background-position:-167px -48px}.icon-italic{background-position:-192px -48px}.icon-text-height{background-position:-216px -48px}.icon-text-width{background-position:-240px -48px}.icon-align-left{background-position:-264px -48px}.icon-align-center{background-position:-288px -48px}.icon-align-right{background-position:-312px -48px}.icon-align-justify{background-position:-336px -48px}.icon-list{background-position:-360px -48px}.icon-indent-left{background-position:-384px -48px}.icon-indent-right{background-position:-408px -48px}.icon-facetime-video{background-position:-432px -48px}.icon-picture{background-position:-456px -48px}.icon-pencil{background-position:0 -72px}.icon-map-marker{background-position:-24px -72px}.icon-adjust{background-position:-48px -72px}.icon-tint{background-position:-72px -72px}.icon-edit{background-position:-96px -72px}.icon-share{background-position:-120px -72px}.icon-check{background-position:-144px -72px}.icon-move{background-position:-168px -72px}.icon-step-backward{background-position:-192px -72px}.icon-fast-backward{background-position:-216px -72px}.icon-backward{background-position:-240px -72px}.icon-play{background-position:-264px -72px}.icon-pause{background-position:-288px -72px}.icon-stop{background-position:-312px -72px}.icon-forward{background-position:-336px -72px}.icon-fast-forward{background-position:-360px -72px}.icon-step-forward{background-position:-384px -72px}.icon-eject{background-position:-408px -72px}.icon-chevron-left{background-position:-432px -72px}.icon-chevron-right{background-position:-456px -72px}.icon-plus-sign{background-position:0 -96px}.icon-minus-sign{background-position:-24px -96px}.icon-remove-sign{background-position:-48px -96px}.icon-ok-sign{background-position:-72px -96px}.icon-question-sign{background-position:-96px -96px}.icon-info-sign{background-position:-120px -96px}.icon-screenshot{background-position:-144px -96px}.icon-remove-circle{background-position:-168px -96px}.icon-ok-circle{background-position:-192px -96px}.icon-ban-circle{background-position:-216px -96px}.icon-arrow-left{background-position:-240px -96px}.icon-arrow-right{background-position:-264px -96px}.icon-arrow-up{background-position:-289px -96px}.icon-arrow-down{background-position:-312px -96px}.icon-share-alt{background-position:-336px -96px}.icon-resize-full{background-position:-360px -96px}.icon-resize-small{background-position:-384px -96px}.icon-plus{background-position:-408px -96px}.icon-minus{background-position:-433px -96px}.icon-asterisk{background-position:-456px -96px}.icon-exclamation-sign{background-position:0 -120px}.icon-gift{background-position:-24px -120px}.icon-leaf{background-position:-48px -120px}.icon-fire{background-position:-72px -120px}.icon-eye-open{background-position:-96px -120px}.icon-eye-close{background-position:-120px -120px}.icon-warning-sign{background-position:-144px -120px}.icon-plane{background-position:-168px -120px}.icon-calendar{background-position:-192px -120px}.icon-random{width:16px;background-position:-216px -120px}.icon-comment{background-position:-240px -120px}.icon-magnet{background-position:-264px -120px}.icon-chevron-up{background-position:-288px -120px}.icon-chevron-down{background-position:-313px -119px}.icon-retweet{background-position:-336px -120px}.icon-shopping-cart{background-position:-360px -120px}.icon-folder-close{background-position:-384px -120px}.icon-folder-open{width:16px;background-position:-408px -120px}.icon-resize-vertical{background-position:-432px -119px}.icon-resize-horizontal{background-position:-456px -118px}.icon-hdd{background-position:0 -144px}.icon-bullhorn{background-position:-24px -144px}.icon-bell{background-position:-48px -144px}.icon-certificate{background-position:-72px -144px}.icon-thumbs-up{background-position:-96px -144px}.icon-thumbs-down{background-position:-120px -144px}.icon-hand-right{background-position:-144px -144px}.icon-hand-left{background-position:-168px -144px}.icon-hand-up{background-position:-192px -144px}.icon-hand-down{background-position:-216px -144px}.icon-circle-arrow-right{background-position:-240px -144px}.icon-circle-arrow-left{background-position:-264px -144px}.icon-circle-arrow-up{background-position:-288px -144px}.icon-circle-arrow-down{background-position:-312px -144px}.icon-globe{background-position:-336px -144px}.icon-wrench{background-position:-360px -144px}.icon-tasks{background-position:-384px -144px}.icon-filter{background-position:-408px -144px}.icon-briefcase{background-position:-432px -144px}.icon-fullscreen{background-position:-456px -144px}.dropup,.dropdown{position:relative}.dropdown-toggle{*margin-bottom:-3px}.dropdown-toggle:active,.open .dropdown-toggle{outline:0}.caret{display:inline-block;width:0;height:0;vertical-align:top;border-top:4px solid #000;border-right:4px solid transparent;border-left:4px solid transparent;content:""}.dropdown .caret{margin-top:8px;margin-left:2px}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;list-style:none;background-color:#fff;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.2);*border-right-width:2px;*border-bottom-width:2px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0,0,0,0.2);-moz-box-shadow:0 5px 10px rgba(0,0,0,0.2);box-shadow:0 5px 10px rgba(0,0,0,0.2);-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box}.dropdown-menu.pull-right{right:0;left:auto}.dropdown-menu .divider{*width:100%;height:1px;margin:9px 1px;*margin:-5px 0 5px;overflow:hidden;background-color:#e5e5e5;border-bottom:1px solid #fff}.dropdown-menu a{display:block;padding:3px 20px;clear:both;font-weight:normal;line-height:20px;color:#333;white-space:nowrap}.dropdown-menu li>a:hover,.dropdown-menu li>a:focus,.dropdown-submenu:hover>a{color:#fff;text-decoration:none;background-color:#08c;background-color:#0081c2;background-image:-moz-linear-gradient(top,#08c,#0077b3);background-image:-webkit-gradient(linear,0 0,0 100%,from(#08c),to(#0077b3));background-image:-webkit-linear-gradient(top,#08c,#0077b3);background-image:-o-linear-gradient(top,#08c,#0077b3);background-image:linear-gradient(to bottom,#08c,#0077b3);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff0088cc',endColorstr='#ff0077b3',GradientType=0)}.dropdown-menu .active>a,.dropdown-menu .active>a:hover{color:#fff;text-decoration:none;background-color:#08c;background-color:#0081c2;background-image:linear-gradient(to bottom,#08c,#0077b3);background-image:-moz-linear-gradient(top,#08c,#0077b3);background-image:-webkit-gradient(linear,0 0,0 100%,from(#08c),to(#0077b3));background-image:-webkit-linear-gradient(top,#08c,#0077b3);background-image:-o-linear-gradient(top,#08c,#0077b3);background-repeat:repeat-x;outline:0;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff0088cc',endColorstr='#ff0077b3',GradientType=0)}.dropdown-menu .disabled>a,.dropdown-menu .disabled>a:hover{color:#999}.dropdown-menu .disabled>a:hover{text-decoration:none;cursor:default;background-color:transparent}.open{*z-index:1000}.open>.dropdown-menu{display:block}.pull-right>.dropdown-menu{right:0;left:auto}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{border-top:0;border-bottom:4px solid #000;content:""}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:1px}.dropdown-submenu{position:relative}.dropdown-submenu>.dropdown-menu{top:0;left:100%;margin-top:-6px;margin-left:-1px;-webkit-border-radius:0 6px 6px 6px;-moz-border-radius:0 6px 6px 6px;border-radius:0 6px 6px 6px}.dropdown-submenu:hover>.dropdown-menu{display:block}.dropdown-submenu>a:after{display:block;float:right;width:0;height:0;margin-top:5px;margin-right:-10px;border-color:transparent;border-left-color:#ccc;border-style:solid;border-width:5px 0 5px 5px;content:" "}.dropdown-submenu:hover>a:after{border-left-color:#fff}.dropdown .dropdown-menu .nav-header{padding-right:20px;padding-left:20px}.typeahead{margin-top:2px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,0.05);box-shadow:inset 0 1px 1px rgba(0,0,0,0.05)}.well blockquote{border-color:#ddd;border-color:rgba(0,0,0,0.15)}.well-large{padding:24px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px}.well-small{padding:9px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.fade{opacity:0;-webkit-transition:opacity .15s linear;-moz-transition:opacity .15s linear;-o-transition:opacity .15s linear;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{position:relative;height:0;overflow:hidden;-webkit-transition:height .35s ease;-moz-transition:height .35s ease;-o-transition:height .35s ease;transition:height .35s ease}.collapse.in{height:auto}.close{float:right;font-size:20px;font-weight:bold;line-height:20px;color:#000;text-shadow:0 1px 0 #fff;opacity:.2;filter:alpha(opacity=20)}.close:hover{color:#000;text-decoration:none;cursor:pointer;opacity:.4;filter:alpha(opacity=40)}button.close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none}.btn{display:inline-block;*display:inline;padding:4px 14px;margin-bottom:0;*margin-left:.3em;font-size:14px;line-height:20px;*line-height:20px;color:#333;text-align:center;text-shadow:0 1px 1px rgba(255,255,255,0.75);vertical-align:middle;cursor:pointer;background-color:#f5f5f5;*background-color:#e6e6e6;background-image:-webkit-gradient(linear,0 0,0 100%,from(#fff),to(#e6e6e6));background-image:-webkit-linear-gradient(top,#fff,#e6e6e6);background-image:-o-linear-gradient(top,#fff,#e6e6e6);background-image:linear-gradient(to bottom,#fff,#e6e6e6);background-image:-moz-linear-gradient(top,#fff,#e6e6e6);background-repeat:repeat-x;border:1px solid #bbb;*border:0;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);border-color:#e6e6e6 #e6e6e6 #bfbfbf;border-bottom-color:#a2a2a2;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ffffffff',endColorstr='#ffe6e6e6',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false);*zoom:1;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05)}.btn:hover,.btn:active,.btn.active,.btn.disabled,.btn[disabled]{color:#333;background-color:#e6e6e6;*background-color:#d9d9d9}.btn:active,.btn.active{background-color:#ccc \9}.btn:first-child{*margin-left:0}.btn:hover{color:#333;text-decoration:none;background-color:#e6e6e6;*background-color:#d9d9d9;background-position:0 -15px;-webkit-transition:background-position .1s linear;-moz-transition:background-position .1s linear;-o-transition:background-position .1s linear;transition:background-position .1s linear}.btn:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.active,.btn:active{background-color:#e6e6e6;background-color:#d9d9d9 \9;background-image:none;outline:0;-webkit-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05)}.btn.disabled,.btn[disabled]{cursor:default;background-color:#e6e6e6;background-image:none;opacity:.65;filter:alpha(opacity=65);-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.btn-large{padding:9px 14px;font-size:16px;line-height:normal;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.btn-large [class^="icon-"]{margin-top:2px}.btn-small{padding:3px 9px;font-size:12px;line-height:18px}.btn-small [class^="icon-"]{margin-top:0}.btn-mini{padding:2px 6px;font-size:11px;line-height:17px}.btn-block{display:block;width:100%;padding-right:0;padding-left:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.btn-block+.btn-block{margin-top:5px}input[type="submit"].btn-block,input[type="reset"].btn-block,input[type="button"].btn-block{width:100%}.btn-primary.active,.btn-warning.active,.btn-danger.active,.btn-success.active,.btn-info.active,.btn-inverse.active{color:rgba(255,255,255,0.75)}.btn{border-color:#c5c5c5;border-color:rgba(0,0,0,0.15) rgba(0,0,0,0.15) rgba(0,0,0,0.25)}.btn-primary{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#006dcc;*background-color:#04c;background-image:-webkit-gradient(linear,0 0,0 100%,from(#08c),to(#04c));background-image:-webkit-linear-gradient(top,#08c,#04c);background-image:-o-linear-gradient(top,#08c,#04c);background-image:linear-gradient(to bottom,#08c,#04c);background-image:-moz-linear-gradient(top,#08c,#04c);background-repeat:repeat-x;border-color:#04c #04c #002a80;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff0088cc',endColorstr='#ff0044cc',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-primary:hover,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{color:#fff;background-color:#04c;*background-color:#003bb3}.btn-primary:active,.btn-primary.active{background-color:#039 \9}.btn-warning{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#faa732;*background-color:#f89406;background-image:-webkit-gradient(linear,0 0,0 100%,from(#fbb450),to(#f89406));background-image:-webkit-linear-gradient(top,#fbb450,#f89406);background-image:-o-linear-gradient(top,#fbb450,#f89406);background-image:linear-gradient(to bottom,#fbb450,#f89406);background-image:-moz-linear-gradient(top,#fbb450,#f89406);background-repeat:repeat-x;border-color:#f89406 #f89406 #ad6704;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#fffbb450',endColorstr='#fff89406',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-warning:hover,.btn-warning:active,.btn-warning.active,.btn-warning.disabled,.btn-warning[disabled]{color:#fff;background-color:#f89406;*background-color:#df8505}.btn-warning:active,.btn-warning.active{background-color:#c67605 \9}.btn-danger{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#da4f49;*background-color:#bd362f;background-image:-webkit-gradient(linear,0 0,0 100%,from(#ee5f5b),to(#bd362f));background-image:-webkit-linear-gradient(top,#ee5f5b,#bd362f);background-image:-o-linear-gradient(top,#ee5f5b,#bd362f);background-image:linear-gradient(to bottom,#ee5f5b,#bd362f);background-image:-moz-linear-gradient(top,#ee5f5b,#bd362f);background-repeat:repeat-x;border-color:#bd362f #bd362f #802420;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ffee5f5b',endColorstr='#ffbd362f',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-danger:hover,.btn-danger:active,.btn-danger.active,.btn-danger.disabled,.btn-danger[disabled]{color:#fff;background-color:#bd362f;*background-color:#a9302a}.btn-danger:active,.btn-danger.active{background-color:#942a25 \9}.btn-success{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#5bb75b;*background-color:#51a351;background-image:-webkit-gradient(linear,0 0,0 100%,from(#62c462),to(#51a351));background-image:-webkit-linear-gradient(top,#62c462,#51a351);background-image:-o-linear-gradient(top,#62c462,#51a351);background-image:linear-gradient(to bottom,#62c462,#51a351);background-image:-moz-linear-gradient(top,#62c462,#51a351);background-repeat:repeat-x;border-color:#51a351 #51a351 #387038;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff62c462',endColorstr='#ff51a351',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-success:hover,.btn-success:active,.btn-success.active,.btn-success.disabled,.btn-success[disabled]{color:#fff;background-color:#51a351;*background-color:#499249}.btn-success:active,.btn-success.active{background-color:#408140 \9}.btn-info{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#49afcd;*background-color:#2f96b4;background-image:-webkit-gradient(linear,0 0,0 100%,from(#5bc0de),to(#2f96b4));background-image:-webkit-linear-gradient(top,#5bc0de,#2f96b4);background-image:-o-linear-gradient(top,#5bc0de,#2f96b4);background-image:linear-gradient(to bottom,#5bc0de,#2f96b4);background-image:-moz-linear-gradient(top,#5bc0de,#2f96b4);background-repeat:repeat-x;border-color:#2f96b4 #2f96b4 #1f6377;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff5bc0de',endColorstr='#ff2f96b4',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-info:hover,.btn-info:active,.btn-info.active,.btn-info.disabled,.btn-info[disabled]{color:#fff;background-color:#2f96b4;*background-color:#2a85a0}.btn-info:active,.btn-info.active{background-color:#24748c \9}.btn-inverse{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#363636;*background-color:#222;background-image:-webkit-gradient(linear,0 0,0 100%,from(#444),to(#222));background-image:-webkit-linear-gradient(top,#444,#222);background-image:-o-linear-gradient(top,#444,#222);background-image:linear-gradient(to bottom,#444,#222);background-image:-moz-linear-gradient(top,#444,#222);background-repeat:repeat-x;border-color:#222 #222 #000;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff444444',endColorstr='#ff222222',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.btn-inverse:hover,.btn-inverse:active,.btn-inverse.active,.btn-inverse.disabled,.btn-inverse[disabled]{color:#fff;background-color:#222;*background-color:#151515}.btn-inverse:active,.btn-inverse.active{background-color:#080808 \9}button.btn,input[type="submit"].btn{*padding-top:3px;*padding-bottom:3px}button.btn::-moz-focus-inner,input[type="submit"].btn::-moz-focus-inner{padding:0;border:0}button.btn.btn-large,input[type="submit"].btn.btn-large{*padding-top:7px;*padding-bottom:7px}button.btn.btn-small,input[type="submit"].btn.btn-small{*padding-top:3px;*padding-bottom:3px}button.btn.btn-mini,input[type="submit"].btn.btn-mini{*padding-top:1px;*padding-bottom:1px}.btn-link,.btn-link:active,.btn-link[disabled]{background-color:transparent;background-image:none;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.btn-link{color:#08c;cursor:pointer;border-color:transparent;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.btn-link:hover{color:#005580;text-decoration:underline;background-color:transparent}.btn-link[disabled]:hover{color:#333;text-decoration:none}.btn-group{position:relative;*margin-left:.3em;font-size:0;white-space:nowrap;vertical-align:middle}.btn-group:first-child{*margin-left:0}.btn-group+.btn-group{margin-left:5px}.btn-toolbar{margin-top:10px;margin-bottom:10px;font-size:0}.btn-toolbar .btn-group{display:inline-block;*display:inline;*zoom:1}.btn-toolbar .btn+.btn,.btn-toolbar .btn-group+.btn,.btn-toolbar .btn+.btn-group{margin-left:5px}.btn-group>.btn{position:relative;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.btn-group>.btn+.btn{margin-left:-1px}.btn-group>.btn,.btn-group>.dropdown-menu{font-size:14px}.btn-group>.btn-mini{font-size:11px}.btn-group>.btn-small{font-size:12px}.btn-group>.btn-large{font-size:16px}.btn-group>.btn:first-child{margin-left:0;-webkit-border-bottom-left-radius:4px;border-bottom-left-radius:4px;-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-bottomleft:4px;-moz-border-radius-topleft:4px}.btn-group>.btn:last-child,.btn-group>.dropdown-toggle{-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-webkit-border-bottom-right-radius:4px;border-bottom-right-radius:4px;-moz-border-radius-topright:4px;-moz-border-radius-bottomright:4px}.btn-group>.btn.large:first-child{margin-left:0;-webkit-border-bottom-left-radius:6px;border-bottom-left-radius:6px;-webkit-border-top-left-radius:6px;border-top-left-radius:6px;-moz-border-radius-bottomleft:6px;-moz-border-radius-topleft:6px}.btn-group>.btn.large:last-child,.btn-group>.large.dropdown-toggle{-webkit-border-top-right-radius:6px;border-top-right-radius:6px;-webkit-border-bottom-right-radius:6px;border-bottom-right-radius:6px;-moz-border-radius-topright:6px;-moz-border-radius-bottomright:6px}.btn-group>.btn:hover,.btn-group>.btn:focus,.btn-group>.btn:active,.btn-group>.btn.active{z-index:2}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group>.btn+.dropdown-toggle{*padding-top:5px;padding-right:8px;*padding-bottom:5px;padding-left:8px;-webkit-box-shadow:inset 1px 0 0 rgba(255,255,255,0.125),inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 1px 0 0 rgba(255,255,255,0.125),inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 1px 0 0 rgba(255,255,255,0.125),inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05)}.btn-group>.btn-mini+.dropdown-toggle{*padding-top:2px;padding-right:5px;*padding-bottom:2px;padding-left:5px}.btn-group>.btn-small+.dropdown-toggle{*padding-top:5px;*padding-bottom:4px}.btn-group>.btn-large+.dropdown-toggle{*padding-top:7px;padding-right:12px;*padding-bottom:7px;padding-left:12px}.btn-group.open .dropdown-toggle{background-image:none;-webkit-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05)}.btn-group.open .btn.dropdown-toggle{background-color:#e6e6e6}.btn-group.open .btn-primary.dropdown-toggle{background-color:#04c}.btn-group.open .btn-warning.dropdown-toggle{background-color:#f89406}.btn-group.open .btn-danger.dropdown-toggle{background-color:#bd362f}.btn-group.open .btn-success.dropdown-toggle{background-color:#51a351}.btn-group.open .btn-info.dropdown-toggle{background-color:#2f96b4}.btn-group.open .btn-inverse.dropdown-toggle{background-color:#222}.btn .caret{margin-top:8px;margin-left:0}.btn-mini .caret,.btn-small .caret,.btn-large .caret{margin-top:6px}.btn-large .caret{border-top-width:5px;border-right-width:5px;border-left-width:5px}.dropup .btn-large .caret{border-top:0;border-bottom:5px solid #000}.btn-primary .caret,.btn-warning .caret,.btn-danger .caret,.btn-info .caret,.btn-success .caret,.btn-inverse .caret{border-top-color:#fff;border-bottom-color:#fff}.btn-group-vertical{display:inline-block;*display:inline;*zoom:1}.btn-group-vertical .btn{display:block;float:none;width:100%;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.btn-group-vertical .btn+.btn{margin-top:-1px;margin-left:0}.btn-group-vertical .btn:first-child{-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.btn-group-vertical .btn:last-child{-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px}.btn-group-vertical .btn-large:first-child{-webkit-border-radius:6px 6px 0 0;-moz-border-radius:6px 6px 0 0;border-radius:6px 6px 0 0}.btn-group-vertical .btn-large:last-child{-webkit-border-radius:0 0 6px 6px;-moz-border-radius:0 0 6px 6px;border-radius:0 0 6px 6px}.alert{padding:8px 35px 8px 14px;margin-bottom:20px;color:#c09853;text-shadow:0 1px 0 rgba(255,255,255,0.5);background-color:#fcf8e3;border:1px solid #fbeed5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.alert h4{margin:0}.alert .close{position:relative;top:-2px;right:-21px;line-height:20px}.alert-success{color:#468847;background-color:#dff0d8;border-color:#d6e9c6}.alert-danger,.alert-error{color:#b94a48;background-color:#f2dede;border-color:#eed3d7}.alert-info{color:#3a87ad;background-color:#d9edf7;border-color:#bce8f1}.alert-block{padding-top:14px;padding-bottom:14px}.alert-block>p,.alert-block>ul{margin-bottom:0}.alert-block p+p{margin-top:5px}.nav{margin-bottom:20px;margin-left:0;list-style:none}.nav>li>a{display:block}.nav>li>a:hover{text-decoration:none;background-color:#eee}.nav>.pull-right{float:right}.nav-header{display:block;padding:3px 15px;font-size:11px;font-weight:bold;line-height:20px;color:#999;text-shadow:0 1px 0 rgba(255,255,255,0.5);text-transform:uppercase}.nav li+.nav-header{margin-top:9px}.nav-list{padding-right:15px;padding-left:15px;margin-bottom:0}.nav-list>li>a,.nav-list .nav-header{margin-right:-15px;margin-left:-15px;text-shadow:0 1px 0 rgba(255,255,255,0.5)}.nav-list>li>a{padding:3px 15px}.nav-list>.active>a,.nav-list>.active>a:hover{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.2);background-color:#08c}.nav-list [class^="icon-"]{margin-right:2px}.nav-list .divider{*width:100%;height:1px;margin:9px 1px;*margin:-5px 0 5px;overflow:hidden;background-color:#e5e5e5;border-bottom:1px solid #fff}.nav-tabs,.nav-pills{*zoom:1}.nav-tabs:before,.nav-pills:before,.nav-tabs:after,.nav-pills:after{display:table;line-height:0;content:""}.nav-tabs:after,.nav-pills:after{clear:both}.nav-tabs>li,.nav-pills>li{float:left}.nav-tabs>li>a,.nav-pills>li>a{padding-right:12px;padding-left:12px;margin-right:2px;line-height:14px}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs>li{margin-bottom:-1px}.nav-tabs>li>a{padding-top:8px;padding-bottom:8px;line-height:20px;border:1px solid transparent;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.nav-tabs>li>a:hover{border-color:#eee #eee #ddd}.nav-tabs>.active>a,.nav-tabs>.active>a:hover{color:#555;cursor:default;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent}.nav-pills>li>a{padding-top:8px;padding-bottom:8px;margin-top:2px;margin-bottom:2px;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.nav-pills>.active>a,.nav-pills>.active>a:hover{color:#fff;background-color:#08c}.nav-stacked>li{float:none}.nav-stacked>li>a{margin-right:0}.nav-tabs.nav-stacked{border-bottom:0}.nav-tabs.nav-stacked>li>a{border:1px solid #ddd;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.nav-tabs.nav-stacked>li:first-child>a{-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-topright:4px;-moz-border-radius-topleft:4px}.nav-tabs.nav-stacked>li:last-child>a{-webkit-border-bottom-right-radius:4px;border-bottom-right-radius:4px;-webkit-border-bottom-left-radius:4px;border-bottom-left-radius:4px;-moz-border-radius-bottomright:4px;-moz-border-radius-bottomleft:4px}.nav-tabs.nav-stacked>li>a:hover{z-index:2;border-color:#ddd}.nav-pills.nav-stacked>li>a{margin-bottom:3px}.nav-pills.nav-stacked>li:last-child>a{margin-bottom:1px}.nav-tabs .dropdown-menu{-webkit-border-radius:0 0 6px 6px;-moz-border-radius:0 0 6px 6px;border-radius:0 0 6px 6px}.nav-pills .dropdown-menu{-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px}.nav .dropdown-toggle .caret{margin-top:6px;border-top-color:#08c;border-bottom-color:#08c}.nav .dropdown-toggle:hover .caret{border-top-color:#005580;border-bottom-color:#005580}.nav-tabs .dropdown-toggle .caret{margin-top:8px}.nav .active .dropdown-toggle .caret{border-top-color:#fff;border-bottom-color:#fff}.nav-tabs .active .dropdown-toggle .caret{border-top-color:#555;border-bottom-color:#555}.nav>.dropdown.active>a:hover{cursor:pointer}.nav-tabs .open .dropdown-toggle,.nav-pills .open .dropdown-toggle,.nav>li.dropdown.open.active>a:hover{color:#fff;background-color:#999;border-color:#999}.nav li.dropdown.open .caret,.nav li.dropdown.open.active .caret,.nav li.dropdown.open a:hover .caret{border-top-color:#fff;border-bottom-color:#fff;opacity:1;filter:alpha(opacity=100)}.tabs-stacked .open>a:hover{border-color:#999}.tabbable{*zoom:1}.tabbable:before,.tabbable:after{display:table;line-height:0;content:""}.tabbable:after{clear:both}.tab-content{overflow:auto}.tabs-below>.nav-tabs,.tabs-right>.nav-tabs,.tabs-left>.nav-tabs{border-bottom:0}.tab-content>.tab-pane,.pill-content>.pill-pane{display:none}.tab-content>.active,.pill-content>.active{display:block}.tabs-below>.nav-tabs{border-top:1px solid #ddd}.tabs-below>.nav-tabs>li{margin-top:-1px;margin-bottom:0}.tabs-below>.nav-tabs>li>a{-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px}.tabs-below>.nav-tabs>li>a:hover{border-top-color:#ddd;border-bottom-color:transparent}.tabs-below>.nav-tabs>.active>a,.tabs-below>.nav-tabs>.active>a:hover{border-color:transparent #ddd #ddd #ddd}.tabs-left>.nav-tabs>li,.tabs-right>.nav-tabs>li{float:none}.tabs-left>.nav-tabs>li>a,.tabs-right>.nav-tabs>li>a{min-width:74px;margin-right:0;margin-bottom:3px}.tabs-left>.nav-tabs{float:left;margin-right:19px;border-right:1px solid #ddd}.tabs-left>.nav-tabs>li>a{margin-right:-1px;-webkit-border-radius:4px 0 0 4px;-moz-border-radius:4px 0 0 4px;border-radius:4px 0 0 4px}.tabs-left>.nav-tabs>li>a:hover{border-color:#eee #ddd #eee #eee}.tabs-left>.nav-tabs .active>a,.tabs-left>.nav-tabs .active>a:hover{border-color:#ddd transparent #ddd #ddd;*border-right-color:#fff}.tabs-right>.nav-tabs{float:right;margin-left:19px;border-left:1px solid #ddd}.tabs-right>.nav-tabs>li>a{margin-left:-1px;-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0}.tabs-right>.nav-tabs>li>a:hover{border-color:#eee #eee #eee #ddd}.tabs-right>.nav-tabs .active>a,.tabs-right>.nav-tabs .active>a:hover{border-color:#ddd #ddd #ddd transparent;*border-left-color:#fff}.nav>.disabled>a{color:#999}.nav>.disabled>a:hover{text-decoration:none;cursor:default;background-color:transparent}.navbar{*position:relative;*z-index:2;margin-bottom:20px;overflow:visible;color:#777}.navbar-inner{min-height:40px;padding-right:20px;padding-left:20px;background-color:#fafafa;background-image:-moz-linear-gradient(top,#fff,#f2f2f2);background-image:-webkit-gradient(linear,0 0,0 100%,from(#fff),to(#f2f2f2));background-image:-webkit-linear-gradient(top,#fff,#f2f2f2);background-image:-o-linear-gradient(top,#fff,#f2f2f2);background-image:linear-gradient(to bottom,#fff,#f2f2f2);background-repeat:repeat-x;border:1px solid #d4d4d4;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ffffffff',endColorstr='#fff2f2f2',GradientType=0);*zoom:1;-webkit-box-shadow:0 1px 4px rgba(0,0,0,0.065);-moz-box-shadow:0 1px 4px rgba(0,0,0,0.065);box-shadow:0 1px 4px rgba(0,0,0,0.065)}.navbar-inner:before,.navbar-inner:after{display:table;line-height:0;content:""}.navbar-inner:after{clear:both}.navbar .container{width:auto}.nav-collapse.collapse{height:auto}.navbar .brand{display:block;float:left;padding:10px 20px 10px;margin-left:-20px;font-size:20px;font-weight:200;color:#777;text-shadow:0 1px 0 #fff}.navbar .brand:hover{text-decoration:none}.navbar-text{margin-bottom:0;line-height:40px}.navbar-link{color:#777}.navbar-link:hover{color:#333}.navbar .divider-vertical{height:40px;margin:0 9px;border-right:1px solid #fff;border-left:1px solid #f2f2f2}.navbar .btn,.navbar .btn-group{margin-top:5px}.navbar .btn-group .btn,.navbar .input-prepend .btn,.navbar .input-append .btn{margin-top:0}.navbar-form{margin-bottom:0;*zoom:1}.navbar-form:before,.navbar-form:after{display:table;line-height:0;content:""}.navbar-form:after{clear:both}.navbar-form input,.navbar-form select,.navbar-form .radio,.navbar-form .checkbox{margin-top:5px}.navbar-form input,.navbar-form select,.navbar-form .btn{display:inline-block;margin-bottom:0}.navbar-form input[type="image"],.navbar-form input[type="checkbox"],.navbar-form input[type="radio"]{margin-top:3px}.navbar-form .input-append,.navbar-form .input-prepend{margin-top:6px;white-space:nowrap}.navbar-form .input-append input,.navbar-form .input-prepend input{margin-top:0}.navbar-search{position:relative;float:left;margin-top:5px;margin-bottom:0}.navbar-search .search-query{padding:4px 14px;margin-bottom:0;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:13px;font-weight:normal;line-height:1;-webkit-border-radius:15px;-moz-border-radius:15px;border-radius:15px}.navbar-static-top{position:static;width:100%;margin-bottom:0}.navbar-static-top .navbar-inner{-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.navbar-fixed-top,.navbar-fixed-bottom{position:fixed;right:0;left:0;z-index:1030;margin-bottom:0}.navbar-fixed-top .navbar-inner,.navbar-static-top .navbar-inner{border-width:0 0 1px}.navbar-fixed-bottom .navbar-inner{border-width:1px 0 0}.navbar-fixed-top .navbar-inner,.navbar-fixed-bottom .navbar-inner{padding-right:0;padding-left:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:940px}.navbar-fixed-top{top:0}.navbar-fixed-top .navbar-inner,.navbar-static-top .navbar-inner{-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.1),0 1px 10px rgba(0,0,0,0.1);-moz-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.1),0 1px 10px rgba(0,0,0,0.1);box-shadow:inset 0 -1px 0 rgba(0,0,0,0.1),0 1px 10px rgba(0,0,0,0.1)}.navbar-fixed-bottom{bottom:0}.navbar-fixed-bottom .navbar-inner{-webkit-box-shadow:inset 0 1px 0 rgba(0,0,0,0.1),0 -1px 10px rgba(0,0,0,0.1);-moz-box-shadow:inset 0 1px 0 rgba(0,0,0,0.1),0 -1px 10px rgba(0,0,0,0.1);box-shadow:inset 0 1px 0 rgba(0,0,0,0.1),0 -1px 10px rgba(0,0,0,0.1)}.navbar .nav{position:relative;left:0;display:block;float:left;margin:0 10px 0 0}.navbar .nav.pull-right{float:right;margin-right:0}.navbar .nav>li{float:left}.navbar .nav>li>a{float:none;padding:10px 15px 10px;color:#777;text-decoration:none;text-shadow:0 1px 0 #fff}.navbar .nav .dropdown-toggle .caret{margin-top:8px}.navbar .nav>li>a:focus,.navbar .nav>li>a:hover{color:#333;text-decoration:none;background-color:transparent}.navbar .nav>.active>a,.navbar .nav>.active>a:hover,.navbar .nav>.active>a:focus{color:#555;text-decoration:none;background-color:#e5e5e5;-webkit-box-shadow:inset 0 3px 8px rgba(0,0,0,0.125);-moz-box-shadow:inset 0 3px 8px rgba(0,0,0,0.125);box-shadow:inset 0 3px 8px rgba(0,0,0,0.125)}.navbar .btn-navbar{display:none;float:right;padding:7px 10px;margin-right:5px;margin-left:5px;color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#ededed;*background-color:#e5e5e5;background-image:-webkit-gradient(linear,0 0,0 100%,from(#f2f2f2),to(#e5e5e5));background-image:-webkit-linear-gradient(top,#f2f2f2,#e5e5e5);background-image:-o-linear-gradient(top,#f2f2f2,#e5e5e5);background-image:linear-gradient(to bottom,#f2f2f2,#e5e5e5);background-image:-moz-linear-gradient(top,#f2f2f2,#e5e5e5);background-repeat:repeat-x;border-color:#e5e5e5 #e5e5e5 #bfbfbf;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#fff2f2f2',endColorstr='#ffe5e5e5',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.075);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.075);box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.075)}.navbar .btn-navbar:hover,.navbar .btn-navbar:active,.navbar .btn-navbar.active,.navbar .btn-navbar.disabled,.navbar .btn-navbar[disabled]{color:#fff;background-color:#e5e5e5;*background-color:#d9d9d9}.navbar .btn-navbar:active,.navbar .btn-navbar.active{background-color:#ccc \9}.navbar .btn-navbar .icon-bar{display:block;width:18px;height:2px;background-color:#f5f5f5;-webkit-border-radius:1px;-moz-border-radius:1px;border-radius:1px;-webkit-box-shadow:0 1px 0 rgba(0,0,0,0.25);-moz-box-shadow:0 1px 0 rgba(0,0,0,0.25);box-shadow:0 1px 0 rgba(0,0,0,0.25)}.btn-navbar .icon-bar+.icon-bar{margin-top:3px}.navbar .nav>li>.dropdown-menu:before{position:absolute;top:-7px;left:9px;display:inline-block;border-right:7px solid transparent;border-bottom:7px solid #ccc;border-left:7px solid transparent;border-bottom-color:rgba(0,0,0,0.2);content:''}.navbar .nav>li>.dropdown-menu:after{position:absolute;top:-6px;left:10px;display:inline-block;border-right:6px solid transparent;border-bottom:6px solid #fff;border-left:6px solid transparent;content:''}.navbar-fixed-bottom .nav>li>.dropdown-menu:before{top:auto;bottom:-7px;border-top:7px solid #ccc;border-bottom:0;border-top-color:rgba(0,0,0,0.2)}.navbar-fixed-bottom .nav>li>.dropdown-menu:after{top:auto;bottom:-6px;border-top:6px solid #fff;border-bottom:0}.navbar .nav li.dropdown.open>.dropdown-toggle,.navbar .nav li.dropdown.active>.dropdown-toggle,.navbar .nav li.dropdown.open.active>.dropdown-toggle{color:#555;background-color:#e5e5e5}.navbar .nav li.dropdown>.dropdown-toggle .caret{border-top-color:#777;border-bottom-color:#777}.navbar .nav li.dropdown.open>.dropdown-toggle .caret,.navbar .nav li.dropdown.active>.dropdown-toggle .caret,.navbar .nav li.dropdown.open.active>.dropdown-toggle .caret{border-top-color:#555;border-bottom-color:#555}.navbar .pull-right>li>.dropdown-menu,.navbar .nav>li>.dropdown-menu.pull-right{right:0;left:auto}.navbar .pull-right>li>.dropdown-menu:before,.navbar .nav>li>.dropdown-menu.pull-right:before{right:12px;left:auto}.navbar .pull-right>li>.dropdown-menu:after,.navbar .nav>li>.dropdown-menu.pull-right:after{right:13px;left:auto}.navbar .pull-right>li>.dropdown-menu .dropdown-menu,.navbar .nav>li>.dropdown-menu.pull-right .dropdown-menu{right:100%;left:auto;margin-right:-1px;margin-left:0;-webkit-border-radius:6px 0 6px 6px;-moz-border-radius:6px 0 6px 6px;border-radius:6px 0 6px 6px}.navbar-inverse{color:#999}.navbar-inverse .navbar-inner{background-color:#1b1b1b;background-image:-moz-linear-gradient(top,#222,#111);background-image:-webkit-gradient(linear,0 0,0 100%,from(#222),to(#111));background-image:-webkit-linear-gradient(top,#222,#111);background-image:-o-linear-gradient(top,#222,#111);background-image:linear-gradient(to bottom,#222,#111);background-repeat:repeat-x;border-color:#252525;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff222222',endColorstr='#ff111111',GradientType=0)}.navbar-inverse .brand,.navbar-inverse .nav>li>a{color:#999;text-shadow:0 -1px 0 rgba(0,0,0,0.25)}.navbar-inverse .brand:hover,.navbar-inverse .nav>li>a:hover{color:#fff}.navbar-inverse .nav>li>a:focus,.navbar-inverse .nav>li>a:hover{color:#fff;background-color:transparent}.navbar-inverse .nav .active>a,.navbar-inverse .nav .active>a:hover,.navbar-inverse .nav .active>a:focus{color:#fff;background-color:#111}.navbar-inverse .navbar-link{color:#999}.navbar-inverse .navbar-link:hover{color:#fff}.navbar-inverse .divider-vertical{border-right-color:#222;border-left-color:#111}.navbar-inverse .nav li.dropdown.open>.dropdown-toggle,.navbar-inverse .nav li.dropdown.active>.dropdown-toggle,.navbar-inverse .nav li.dropdown.open.active>.dropdown-toggle{color:#fff;background-color:#111}.navbar-inverse .nav li.dropdown>.dropdown-toggle .caret{border-top-color:#999;border-bottom-color:#999}.navbar-inverse .nav li.dropdown.open>.dropdown-toggle .caret,.navbar-inverse .nav li.dropdown.active>.dropdown-toggle .caret,.navbar-inverse .nav li.dropdown.open.active>.dropdown-toggle .caret{border-top-color:#fff;border-bottom-color:#fff}.navbar-inverse .navbar-search .search-query{color:#fff;background-color:#515151;border-color:#111;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 rgba(255,255,255,0.15);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 rgba(255,255,255,0.15);box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 rgba(255,255,255,0.15);-webkit-transition:none;-moz-transition:none;-o-transition:none;transition:none}.navbar-inverse .navbar-search .search-query:-moz-placeholder{color:#ccc}.navbar-inverse .navbar-search .search-query:-ms-input-placeholder{color:#ccc}.navbar-inverse .navbar-search .search-query::-webkit-input-placeholder{color:#ccc}.navbar-inverse .navbar-search .search-query:focus,.navbar-inverse .navbar-search .search-query.focused{padding:5px 15px;color:#333;text-shadow:0 1px 0 #fff;background-color:#fff;border:0;outline:0;-webkit-box-shadow:0 0 3px rgba(0,0,0,0.15);-moz-box-shadow:0 0 3px rgba(0,0,0,0.15);box-shadow:0 0 3px rgba(0,0,0,0.15)}.navbar-inverse .btn-navbar{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#0e0e0e;*background-color:#040404;background-image:-webkit-gradient(linear,0 0,0 100%,from(#151515),to(#040404));background-image:-webkit-linear-gradient(top,#151515,#040404);background-image:-o-linear-gradient(top,#151515,#040404);background-image:linear-gradient(to bottom,#151515,#040404);background-image:-moz-linear-gradient(top,#151515,#040404);background-repeat:repeat-x;border-color:#040404 #040404 #000;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff151515',endColorstr='#ff040404',GradientType=0);filter:progid:dximagetransform.microsoft.gradient(enabled=false)}.navbar-inverse .btn-navbar:hover,.navbar-inverse .btn-navbar:active,.navbar-inverse .btn-navbar.active,.navbar-inverse .btn-navbar.disabled,.navbar-inverse .btn-navbar[disabled]{color:#fff;background-color:#040404;*background-color:#000}.navbar-inverse .btn-navbar:active,.navbar-inverse .btn-navbar.active{background-color:#000 \9}.breadcrumb{padding:8px 15px;margin:0 0 20px;list-style:none;background-color:#f5f5f5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.breadcrumb li{display:inline-block;*display:inline;text-shadow:0 1px 0 #fff;*zoom:1}.breadcrumb .divider{padding:0 5px;color:#ccc}.breadcrumb .active{color:#999}.pagination{height:40px;margin:20px 0}.pagination ul{display:inline-block;*display:inline;margin-bottom:0;margin-left:0;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;*zoom:1;-webkit-box-shadow:0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:0 1px 2px rgba(0,0,0,0.05);box-shadow:0 1px 2px rgba(0,0,0,0.05)}.pagination ul>li{display:inline}.pagination ul>li>a,.pagination ul>li>span{float:left;padding:0 14px;line-height:38px;text-decoration:none;background-color:#fff;border:1px solid #ddd;border-left-width:0}.pagination ul>li>a:hover,.pagination ul>.active>a,.pagination ul>.active>span{background-color:#f5f5f5}.pagination ul>.active>a,.pagination ul>.active>span{color:#999;cursor:default}.pagination ul>.disabled>span,.pagination ul>.disabled>a,.pagination ul>.disabled>a:hover{color:#999;cursor:default;background-color:transparent}.pagination ul>li:first-child>a,.pagination ul>li:first-child>span{border-left-width:1px;-webkit-border-radius:3px 0 0 3px;-moz-border-radius:3px 0 0 3px;border-radius:3px 0 0 3px}.pagination ul>li:last-child>a,.pagination ul>li:last-child>span{-webkit-border-radius:0 3px 3px 0;-moz-border-radius:0 3px 3px 0;border-radius:0 3px 3px 0}.pagination-centered{text-align:center}.pagination-right{text-align:right}.pager{margin:20px 0;text-align:center;list-style:none;*zoom:1}.pager:before,.pager:after{display:table;line-height:0;content:""}.pager:after{clear:both}.pager li{display:inline}.pager a,.pager span{display:inline-block;padding:5px 14px;background-color:#fff;border:1px solid #ddd;-webkit-border-radius:15px;-moz-border-radius:15px;border-radius:15px}.pager a:hover{text-decoration:none;background-color:#f5f5f5}.pager .next a,.pager .next span{float:right}.pager .previous a{float:left}.pager .disabled a,.pager .disabled a:hover,.pager .disabled span{color:#999;cursor:default;background-color:#fff}.modal-open .modal .dropdown-menu{z-index:2050}.modal-open .modal .dropdown.open{*z-index:2050}.modal-open .modal .popover{z-index:2060}.modal-open .modal .tooltip{z-index:2080}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop,.modal-backdrop.fade.in{opacity:.8;filter:alpha(opacity=80)}.modal{position:fixed;top:50%;left:50%;z-index:1050;width:560px;margin:-250px 0 0 -280px;overflow:auto;background-color:#fff;border:1px solid #999;border:1px solid rgba(0,0,0,0.3);*border:1px solid #999;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 3px 7px rgba(0,0,0,0.3);-moz-box-shadow:0 3px 7px rgba(0,0,0,0.3);box-shadow:0 3px 7px rgba(0,0,0,0.3);-webkit-background-clip:padding-box;-moz-background-clip:padding-box;background-clip:padding-box}.modal.fade{top:-25%;-webkit-transition:opacity .3s linear,top .3s ease-out;-moz-transition:opacity .3s linear,top .3s ease-out;-o-transition:opacity .3s linear,top .3s ease-out;transition:opacity .3s linear,top .3s ease-out}.modal.fade.in{top:50%}.modal-header{padding:9px 15px;border-bottom:1px solid #eee}.modal-header .close{margin-top:2px}.modal-header h3{margin:0;line-height:30px}.modal-body{max-height:400px;padding:15px;overflow-y:auto}.modal-form{margin-bottom:0}.modal-footer{padding:14px 15px 15px;margin-bottom:0;text-align:right;background-color:#f5f5f5;border-top:1px solid #ddd;-webkit-border-radius:0 0 6px 6px;-moz-border-radius:0 0 6px 6px;border-radius:0 0 6px 6px;*zoom:1;-webkit-box-shadow:inset 0 1px 0 #fff;-moz-box-shadow:inset 0 1px 0 #fff;box-shadow:inset 0 1px 0 #fff}.modal-footer:before,.modal-footer:after{display:table;line-height:0;content:""}.modal-footer:after{clear:both}.modal-footer .btn+.btn{margin-bottom:0;margin-left:5px}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.tooltip{position:absolute;z-index:1030;display:block;padding:5px;font-size:11px;opacity:0;filter:alpha(opacity=0);visibility:visible}.tooltip.in{opacity:.8;filter:alpha(opacity=80)}.tooltip.top{margin-top:-3px}.tooltip.right{margin-left:3px}.tooltip.bottom{margin-top:3px}.tooltip.left{margin-left:-3px}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;text-decoration:none;background-color:#000;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-top-color:#000;border-width:5px 5px 0}.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-right-color:#000;border-width:5px 5px 5px 0}.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-left-color:#000;border-width:5px 0 5px 5px}.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-bottom-color:#000;border-width:0 5px 5px}.popover{position:absolute;top:0;left:0;z-index:1010;display:none;width:236px;padding:1px;background-color:#fff;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.2);-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0,0,0,0.2);-moz-box-shadow:0 5px 10px rgba(0,0,0,0.2);box-shadow:0 5px 10px rgba(0,0,0,0.2);-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box}.popover.top{margin-bottom:10px}.popover.right{margin-left:10px}.popover.bottom{margin-top:10px}.popover.left{margin-right:10px}.popover-title{padding:8px 14px;margin:0;font-size:14px;font-weight:normal;line-height:18px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0}.popover-content{padding:9px 14px}.popover-content p,.popover-content ul,.popover-content ol{margin-bottom:0}.popover .arrow,.popover .arrow:after{position:absolute;display:inline-block;width:0;height:0;border-color:transparent;border-style:solid}.popover .arrow:after{z-index:-1;content:""}.popover.top .arrow{bottom:-10px;left:50%;margin-left:-10px;border-top-color:#fff;border-width:10px 10px 0}.popover.top .arrow:after{bottom:-1px;left:-11px;border-top-color:rgba(0,0,0,0.25);border-width:11px 11px 0}.popover.right .arrow{top:50%;left:-10px;margin-top:-10px;border-right-color:#fff;border-width:10px 10px 10px 0}.popover.right .arrow:after{bottom:-11px;left:-1px;border-right-color:rgba(0,0,0,0.25);border-width:11px 11px 11px 0}.popover.bottom .arrow{top:-10px;left:50%;margin-left:-10px;border-bottom-color:#fff;border-width:0 10px 10px}.popover.bottom .arrow:after{top:-1px;left:-11px;border-bottom-color:rgba(0,0,0,0.25);border-width:0 11px 11px}.popover.left .arrow{top:50%;right:-10px;margin-top:-10px;border-left-color:#fff;border-width:10px 0 10px 10px}.popover.left .arrow:after{right:-1px;bottom:-11px;border-left-color:rgba(0,0,0,0.25);border-width:11px 0 11px 11px}.thumbnails{margin-left:-20px;list-style:none;*zoom:1}.thumbnails:before,.thumbnails:after{display:table;line-height:0;content:""}.thumbnails:after{clear:both}.row-fluid .thumbnails{margin-left:0}.thumbnails>li{float:left;margin-bottom:20px;margin-left:20px}.thumbnail{display:block;padding:4px;line-height:20px;border:1px solid #ddd;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.055);-moz-box-shadow:0 1px 3px rgba(0,0,0,0.055);box-shadow:0 1px 3px rgba(0,0,0,0.055);-webkit-transition:all .2s ease-in-out;-moz-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}a.thumbnail:hover{border-color:#08c;-webkit-box-shadow:0 1px 4px rgba(0,105,214,0.25);-moz-box-shadow:0 1px 4px rgba(0,105,214,0.25);box-shadow:0 1px 4px rgba(0,105,214,0.25)}.thumbnail>img{display:block;max-width:100%;margin-right:auto;margin-left:auto}.thumbnail .caption{padding:9px;color:#555}.label,.badge{font-size:11.844px;font-weight:bold;line-height:14px;color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25);white-space:nowrap;vertical-align:baseline;background-color:#999}.label{padding:1px 4px 2px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.badge{padding:1px 9px 2px;-webkit-border-radius:9px;-moz-border-radius:9px;border-radius:9px}a.label:hover,a.badge:hover{color:#fff;text-decoration:none;cursor:pointer}.label-important,.badge-important{background-color:#b94a48}.label-important[href],.badge-important[href]{background-color:#953b39}.label-warning,.badge-warning{background-color:#f89406}.label-warning[href],.badge-warning[href]{background-color:#c67605}.label-success,.badge-success{background-color:#468847}.label-success[href],.badge-success[href]{background-color:#356635}.label-info,.badge-info{background-color:#3a87ad}.label-info[href],.badge-info[href]{background-color:#2d6987}.label-inverse,.badge-inverse{background-color:#333}.label-inverse[href],.badge-inverse[href]{background-color:#1a1a1a}.btn .label,.btn .badge{position:relative;top:-1px}.btn-mini .label,.btn-mini .badge{top:0}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-moz-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-ms-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-o-keyframes progress-bar-stripes{from{background-position:0 0}to{background-position:40px 0}}@keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}.progress{height:20px;margin-bottom:20px;overflow:hidden;background-color:#f7f7f7;background-image:-moz-linear-gradient(top,#f5f5f5,#f9f9f9);background-image:-webkit-gradient(linear,0 0,0 100%,from(#f5f5f5),to(#f9f9f9));background-image:-webkit-linear-gradient(top,#f5f5f5,#f9f9f9);background-image:-o-linear-gradient(top,#f5f5f5,#f9f9f9);background-image:linear-gradient(to bottom,#f5f5f5,#f9f9f9);background-repeat:repeat-x;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#fff5f5f5',endColorstr='#fff9f9f9',GradientType=0);-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1);box-shadow:inset 0 1px 2px rgba(0,0,0,0.1)}.progress .bar{float:left;width:0;height:100%;font-size:12px;color:#fff;text-align:center;text-shadow:0 -1px 0 rgba(0,0,0,0.25);background-color:#0e90d2;background-image:-moz-linear-gradient(top,#149bdf,#0480be);background-image:-webkit-gradient(linear,0 0,0 100%,from(#149bdf),to(#0480be));background-image:-webkit-linear-gradient(top,#149bdf,#0480be);background-image:-o-linear-gradient(top,#149bdf,#0480be);background-image:linear-gradient(to bottom,#149bdf,#0480be);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff149bdf',endColorstr='#ff0480be',GradientType=0);-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.15);-moz-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.15);box-shadow:inset 0 -1px 0 rgba(0,0,0,0.15);-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;-webkit-transition:width .6s ease;-moz-transition:width .6s ease;-o-transition:width .6s ease;transition:width .6s ease}.progress .bar+.bar{-webkit-box-shadow:inset 1px 0 0 rgba(0,0,0,0.15),inset 0 -1px 0 rgba(0,0,0,0.15);-moz-box-shadow:inset 1px 0 0 rgba(0,0,0,0.15),inset 0 -1px 0 rgba(0,0,0,0.15);box-shadow:inset 1px 0 0 rgba(0,0,0,0.15),inset 0 -1px 0 rgba(0,0,0,0.15)}.progress-striped .bar{background-color:#149bdf;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);-webkit-background-size:40px 40px;-moz-background-size:40px 40px;-o-background-size:40px 40px;background-size:40px 40px}.progress.active .bar{-webkit-animation:progress-bar-stripes 2s linear infinite;-moz-animation:progress-bar-stripes 2s linear infinite;-ms-animation:progress-bar-stripes 2s linear infinite;-o-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite}.progress-danger .bar,.progress .bar-danger{background-color:#dd514c;background-image:-moz-linear-gradient(top,#ee5f5b,#c43c35);background-image:-webkit-gradient(linear,0 0,0 100%,from(#ee5f5b),to(#c43c35));background-image:-webkit-linear-gradient(top,#ee5f5b,#c43c35);background-image:-o-linear-gradient(top,#ee5f5b,#c43c35);background-image:linear-gradient(to bottom,#ee5f5b,#c43c35);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ffee5f5b',endColorstr='#ffc43c35',GradientType=0)}.progress-danger.progress-striped .bar,.progress-striped .bar-danger{background-color:#ee5f5b;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.progress-success .bar,.progress .bar-success{background-color:#5eb95e;background-image:-moz-linear-gradient(top,#62c462,#57a957);background-image:-webkit-gradient(linear,0 0,0 100%,from(#62c462),to(#57a957));background-image:-webkit-linear-gradient(top,#62c462,#57a957);background-image:-o-linear-gradient(top,#62c462,#57a957);background-image:linear-gradient(to bottom,#62c462,#57a957);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff62c462',endColorstr='#ff57a957',GradientType=0)}.progress-success.progress-striped .bar,.progress-striped .bar-success{background-color:#62c462;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.progress-info .bar,.progress .bar-info{background-color:#4bb1cf;background-image:-moz-linear-gradient(top,#5bc0de,#339bb9);background-image:-webkit-gradient(linear,0 0,0 100%,from(#5bc0de),to(#339bb9));background-image:-webkit-linear-gradient(top,#5bc0de,#339bb9);background-image:-o-linear-gradient(top,#5bc0de,#339bb9);background-image:linear-gradient(to bottom,#5bc0de,#339bb9);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#ff5bc0de',endColorstr='#ff339bb9',GradientType=0)}.progress-info.progress-striped .bar,.progress-striped .bar-info{background-color:#5bc0de;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.progress-warning .bar,.progress .bar-warning{background-color:#faa732;background-image:-moz-linear-gradient(top,#fbb450,#f89406);background-image:-webkit-gradient(linear,0 0,0 100%,from(#fbb450),to(#f89406));background-image:-webkit-linear-gradient(top,#fbb450,#f89406);background-image:-o-linear-gradient(top,#fbb450,#f89406);background-image:linear-gradient(to bottom,#fbb450,#f89406);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#fffbb450',endColorstr='#fff89406',GradientType=0)}.progress-warning.progress-striped .bar,.progress-striped .bar-warning{background-color:#fbb450;background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(255,255,255,0.15)),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(255,255,255,0.15)),color-stop(0.75,rgba(255,255,255,0.15)),color-stop(0.75,transparent),to(transparent));background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,0.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,0.15) 50%,rgba(255,255,255,0.15) 75%,transparent 75%,transparent)}.accordion{margin-bottom:20px}.accordion-group{margin-bottom:2px;border:1px solid #e5e5e5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.accordion-heading{border-bottom:0}.accordion-heading .accordion-toggle{display:block;padding:8px 15px}.accordion-toggle{cursor:pointer}.accordion-inner{padding:9px 15px;border-top:1px solid #e5e5e5}.carousel{position:relative;margin-bottom:20px;line-height:1}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel .item{position:relative;display:none;-webkit-transition:.6s ease-in-out left;-moz-transition:.6s ease-in-out left;-o-transition:.6s ease-in-out left;transition:.6s ease-in-out left}.carousel .item>img{display:block;line-height:1}.carousel .active,.carousel .next,.carousel .prev{display:block}.carousel .active{left:0}.carousel .next,.carousel .prev{position:absolute;top:0;width:100%}.carousel .next{left:100%}.carousel .prev{left:-100%}.carousel .next.left,.carousel .prev.right{left:0}.carousel .active.left{left:-100%}.carousel .active.right{left:100%}.carousel-control{position:absolute;top:40%;left:15px;width:40px;height:40px;margin-top:-20px;font-size:60px;font-weight:100;line-height:30px;color:#fff;text-align:center;background:#222;border:3px solid #fff;-webkit-border-radius:23px;-moz-border-radius:23px;border-radius:23px;opacity:.5;filter:alpha(opacity=50)}.carousel-control.right{right:15px;left:auto}.carousel-control:hover{color:#fff;text-decoration:none;opacity:.9;filter:alpha(opacity=90)}.carousel-caption{position:absolute;right:0;bottom:0;left:0;padding:15px;background:#333;background:rgba(0,0,0,0.75)}.carousel-caption h4,.carousel-caption p{line-height:20px;color:#fff}.carousel-caption h4{margin:0 0 5px}.carousel-caption p{margin-bottom:0}.hero-unit{padding:60px;margin-bottom:30px;background-color:#eee;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px}.hero-unit h1{margin-bottom:0;font-size:60px;line-height:1;letter-spacing:-1px;color:inherit}.hero-unit p{font-size:18px;font-weight:200;line-height:30px;color:inherit}.pull-right{float:right}.pull-left{float:left}.hide{display:none}.show{display:block}.invisible{visibility:hidden}.affix{position:fixed}
diff --git a/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/bootstrap.min.js b/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/bootstrap.min.js
deleted file mode 100644
index 16fab531833..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/bootstrap.min.js
+++ /dev/null
@@ -1,6 +0,0 @@
-/*!
-* Bootstrap.js by @fat & @mdo
-* Copyright 2012 Twitter, Inc.
-* http://www.apache.org/licenses/LICENSE-2.0.txt
-*/
-!function(e){e(function(){"use strict";e.support.transition=function(){var e=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},n;for(n in t)if(e.style[n]!==undefined)return t[n]}();return e&&{end:e}}()})}(window.jQuery),!function(e){"use strict";var t='[data-dismiss="alert"]',n=function(n){e(n).on("click",t,this.close)};n.prototype.close=function(t){function s(){i.trigger("closed").remove()}var n=e(this),r=n.attr("data-target"),i;r||(r=n.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,"")),i=e(r),t&&t.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(t=e.Event("close"));if(t.isDefaultPrevented())return;i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.on(e.support.transition.end,s):s()},e.fn.alert=function(t){return this.each(function(){var r=e(this),i=r.data("alert");i||r.data("alert",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.alert.Constructor=n,e(function(){e("body").on("click.alert.data-api",t,n.prototype.close)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.button.defaults,n)};t.prototype.setState=function(e){var t="disabled",n=this.$element,r=n.data(),i=n.is("input")?"val":"html";e+="Text",r.resetText||n.data("resetText",n[i]()),n[i](r[e]||this.options[e]),setTimeout(function(){e=="loadingText"?n.addClass(t).attr(t,t):n.removeClass(t).removeAttr(t)},0)},t.prototype.toggle=function(){var e=this.$element.closest('[data-toggle="buttons-radio"]');e&&e.find(".active").removeClass("active"),this.$element.toggleClass("active")},e.fn.button=function(n){return this.each(function(){var r=e(this),i=r.data("button"),s=typeof n=="object"&&n;i||r.data("button",i=new t(this,s)),n=="toggle"?i.toggle():n&&i.setState(n)})},e.fn.button.defaults={loadingText:"loading..."},e.fn.button.Constructor=t,e(function(){e("body").on("click.button.data-api","[data-toggle^=button]",function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),n.button("toggle")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=n,this.options.slide&&this.slide(this.options.slide),this.options.pause=="hover"&&this.$element.on("mouseenter",e.proxy(this.pause,this)).on("mouseleave",e.proxy(this.cycle,this))};t.prototype={cycle:function(t){return t||(this.paused=!1),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},to:function(t){var n=this.$element.find(".item.active"),r=n.parent().children(),i=r.index(n),s=this;if(t>r.length-1||t<0)return;return this.sliding?this.$element.one("slid",function(){s.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",e(r[t]))},pause:function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition.end&&(this.$element.trigger(e.support.transition.end),this.cycle()),clearInterval(this.interval),this.interval=null,this},next:function(){if(this.sliding)return;return this.slide("next")},prev:function(){if(this.sliding)return;return this.slide("prev")},slide:function(t,n){var r=this.$element.find(".item.active"),i=n||r[t](),s=this.interval,o=t=="next"?"left":"right",u=t=="next"?"first":"last",a=this,f=e.Event("slide",{relatedTarget:i[0]});this.sliding=!0,s&&this.pause(),i=i.length?i:this.$element.find(".item")[u]();if(i.hasClass("active"))return;if(e.support.transition&&this.$element.hasClass("slide")){this.$element.trigger(f);if(f.isDefaultPrevented())return;i.addClass(t),i[0].offsetWidth,r.addClass(o),i.addClass(o),this.$element.one(e.support.transition.end,function(){i.removeClass([t,o].join(" ")).addClass("active"),r.removeClass(["active",o].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger("slid")},0)})}else{this.$element.trigger(f);if(f.isDefaultPrevented())return;r.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger("slid")}return s&&this.cycle(),this}},e.fn.carousel=function(n){return this.each(function(){var r=e(this),i=r.data("carousel"),s=e.extend({},e.fn.carousel.defaults,typeof n=="object"&&n),o=typeof n=="string"?n:s.slide;i||r.data("carousel",i=new t(this,s)),typeof n=="number"?i.to(n):o?i[o]():s.interval&&i.cycle()})},e.fn.carousel.defaults={interval:5e3,pause:"hover"},e.fn.carousel.Constructor=t,e(function(){e("body").on("click.carousel.data-api","[data-slide]",function(t){var n=e(this),r,i=e(n.attr("data-target")||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,"")),s=!i.data("modal")&&e.extend({},i.data(),n.data());i.carousel(s),t.preventDefault()})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.collapse.defaults,n),this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.prototype={constructor:t,dimension:function(){var e=this.$element.hasClass("width");return e?"width":"height"},show:function(){var t,n,r,i;if(this.transitioning)return;t=this.dimension(),n=e.camelCase(["scroll",t].join("-")),r=this.$parent&&this.$parent.find("> .accordion-group > .in");if(r&&r.length){i=r.data("collapse");if(i&&i.transitioning)return;r.collapse("hide"),i||r.data("collapse",null)}this.$element[t](0),this.transition("addClass",e.Event("show"),"shown"),e.support.transition&&this.$element[t](this.$element[0][n])},hide:function(){var t;if(this.transitioning)return;t=this.dimension(),this.reset(this.$element[t]()),this.transition("removeClass",e.Event("hide"),"hidden"),this.$element[t](0)},reset:function(e){var t=this.dimension();return this.$element.removeClass("collapse")[t](e||"auto")[0].offsetWidth,this.$element[e!==null?"addClass":"removeClass"]("collapse"),this},transition:function(t,n,r){var i=this,s=function(){n.type=="show"&&i.reset(),i.transitioning=0,i.$element.trigger(r)};this.$element.trigger(n);if(n.isDefaultPrevented())return;this.transitioning=1,this.$element[t]("in"),e.support.transition&&this.$element.hasClass("collapse")?this.$element.one(e.support.transition.end,s):s()},toggle:function(){this[this.$element.hasClass("in")?"hide":"show"]()}},e.fn.collapse=function(n){return this.each(function(){var r=e(this),i=r.data("collapse"),s=typeof n=="object"&&n;i||r.data("collapse",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.collapse.defaults={toggle:!0},e.fn.collapse.Constructor=t,e(function(){e("body").on("click.collapse.data-api","[data-toggle=collapse]",function(t){var n=e(this),r,i=n.attr("data-target")||t.preventDefault()||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,""),s=e(i).data("collapse")?"toggle":n.data();n[e(i).hasClass("in")?"addClass":"removeClass"]("collapsed"),e(i).collapse(s)})})}(window.jQuery),!function(e){"use strict";function r(){i(e(t)).removeClass("open")}function i(t){var n=t.attr("data-target"),r;return n||(n=t.attr("href"),n=n&&/#/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,"")),r=e(n),r.length||(r=t.parent()),r}var t="[data-toggle=dropdown]",n=function(t){var n=e(t).on("click.dropdown.data-api",this.toggle);e("html").on("click.dropdown.data-api",function(){n.parent().removeClass("open")})};n.prototype={constructor:n,toggle:function(t){var n=e(this),s,o;if(n.is(".disabled, :disabled"))return;return s=i(n),o=s.hasClass("open"),r(),o||(s.toggleClass("open"),n.focus()),!1},keydown:function(t){var n,r,s,o,u,a;if(!/(38|40|27)/.test(t.keyCode))return;n=e(this),t.preventDefault(),t.stopPropagation();if(n.is(".disabled, :disabled"))return;o=i(n),u=o.hasClass("open");if(!u||u&&t.keyCode==27)return n.click();r=e("[role=menu] li:not(.divider) a",o);if(!r.length)return;a=r.index(r.filter(":focus")),t.keyCode==38&&a>0&&a--,t.keyCode==40&&a<r.length-1&&a++,~a||(a=0),r.eq(a).focus()}},e.fn.dropdown=function(t){return this.each(function(){var r=e(this),i=r.data("dropdown");i||r.data("dropdown",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.dropdown.Constructor=n,e(function(){e("html").on("click.dropdown.data-api touchstart.dropdown.data-api",r),e("body").on("click.dropdown touchstart.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.dropdown.data-api touchstart.dropdown.data-api",t,n.prototype.toggle).on("keydown.dropdown.data-api touchstart.dropdown.data-api",t+", [role=menu]",n.prototype.keydown)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=n,this.$element=e(t).delegate('[data-dismiss="modal"]',"click.dismiss.modal",e.proxy(this.hide,this)),this.options.remote&&this.$element.find(".modal-body").load(this.options.remote)};t.prototype={constructor:t,toggle:function(){return this[this.isShown?"hide":"show"]()},show:function(){var t=this,n=e.Event("show");this.$element.trigger(n);if(this.isShown||n.isDefaultPrevented())return;e("body").addClass("modal-open"),this.isShown=!0,this.escape(),this.backdrop(function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(document.body),t.$element.show(),n&&t.$element[0].offsetWidth,t.$element.addClass("in").attr("aria-hidden",!1).focus(),t.enforceFocus(),n?t.$element.one(e.support.transition.end,function(){t.$element.trigger("shown")}):t.$element.trigger("shown")})},hide:function(t){t&&t.preventDefault();var n=this;t=e.Event("hide"),this.$element.trigger(t);if(!this.isShown||t.isDefaultPrevented())return;this.isShown=!1,e("body").removeClass("modal-open"),this.escape(),e(document).off("focusin.modal"),this.$element.removeClass("in").attr("aria-hidden",!0),e.support.transition&&this.$element.hasClass("fade")?this.hideWithTransition():this.hideModal()},enforceFocus:function(){var t=this;e(document).on("focusin.modal",function(e){t.$element[0]!==e.target&&!t.$element.has(e.target).length&&t.$element.focus()})},escape:function(){var e=this;this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.modal",function(t){t.which==27&&e.hide()}):this.isShown||this.$element.off("keyup.dismiss.modal")},hideWithTransition:function(){var t=this,n=setTimeout(function(){t.$element.off(e.support.transition.end),t.hideModal()},500);this.$element.one(e.support.transition.end,function(){clearTimeout(n),t.hideModal()})},hideModal:function(e){this.$element.hide().trigger("hidden"),this.backdrop()},removeBackdrop:function(){this.$backdrop.remove(),this.$backdrop=null},backdrop:function(t){var n=this,r=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var i=e.support.transition&&r;this.$backdrop=e('<div class="modal-backdrop '+r+'" />').appendTo(document.body),this.options.backdrop!="static"&&this.$backdrop.click(e.proxy(this.hide,this)),i&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),i?this.$backdrop.one(e.support.transition.end,t):t()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(e.support.transition.end,e.proxy(this.removeBackdrop,this)):this.removeBackdrop()):t&&t()}},e.fn.modal=function(n){return this.each(function(){var r=e(this),i=r.data("modal"),s=e.extend({},e.fn.modal.defaults,r.data(),typeof n=="object"&&n);i||r.data("modal",i=new t(this,s)),typeof n=="string"?i[n]():s.show&&i.show()})},e.fn.modal.defaults={backdrop:!0,keyboard:!0,show:!0},e.fn.modal.Constructor=t,e(function(){e("body").on("click.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),r=n.attr("href"),i=e(n.attr("data-target")||r&&r.replace(/.*(?=#[^\s]+$)/,"")),s=i.data("modal")?"toggle":e.extend({remote:!/#/.test(r)&&r},i.data(),n.data());t.preventDefault(),i.modal(s).one("hide",function(){n.focus()})})})}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger=="click"?this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this)):this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();return n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove(),this},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0,html:!0}}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content > *")[this.options.html?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",trigger:"click",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery),!function(e){"use strict";function t(t,n){var r=e.proxy(this.process,this),i=e(t).is("body")?e(window):e(t),s;this.options=e.extend({},e.fn.scrollspy.defaults,n),this.$scrollElement=i.on("scroll.scroll-spy.data-api",r),this.selector=(this.options.target||(s=e(t).attr("href"))&&s.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.$body=e("body"),this.refresh(),this.process()}t.prototype={constructor:t,refresh:function(){var t=this,n;this.offsets=e([]),this.targets=e([]),n=this.$body.find(this.selector).map(function(){var t=e(this),n=t.data("target")||t.attr("href"),r=/^#\w/.test(n)&&e(n);return r&&r.length&&[[r.position().top,n]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},process:function(){var e=this.$scrollElement.scrollTop()+this.options.offset,t=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,n=t-this.$scrollElement.height(),r=this.offsets,i=this.targets,s=this.activeTarget,o;if(e>=n)return s!=(o=i.last()[0])&&this.activate(o);for(o=r.length;o--;)s!=i[o]&&e>=r[o]&&(!r[o+1]||e<=r[o+1])&&this.activate(i[o])},activate:function(t){var n,r;this.activeTarget=t,e(this.selector).parent(".active").removeClass("active"),r=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',n=e(r).parent("li").addClass("active"),n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate")}},e.fn.scrollspy=function(n){return this.each(function(){var r=e(this),i=r.data("scrollspy"),s=typeof n=="object"&&n;i||r.data("scrollspy",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.scrollspy.Constructor=t,e.fn.scrollspy.defaults={offset:10},e(window).on("load",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);t.scrollspy(t.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.typeahead.defaults,n),this.matcher=this.options.matcher||this.matcher,this.sorter=this.options.sorter||this.sorter,this.highlighter=this.options.highlighter||this.highlighter,this.updater=this.options.updater||this.updater,this.$menu=e(this.options.menu).appendTo("body"),this.source=this.options.source,this.shown=!1,this.listen()};t.prototype={constructor:t,select:function(){var e=this.$menu.find(".active").attr("data-value");return this.$element.val(this.updater(e)).change(),this.hide()},updater:function(e){return e},show:function(){var t=e.extend({},this.$element.offset(),{height:this.$element[0].offsetHeight});return this.$menu.css({top:t.top+t.height,left:t.left}),this.$menu.show(),this.shown=!0,this},hide:function(){return this.$menu.hide(),this.shown=!1,this},lookup:function(t){var n;return this.query=this.$element.val(),!this.query||this.query.length<this.options.minLength?this.shown?this.hide():this:(n=e.isFunction(this.source)?this.source(this.query,e.proxy(this.process,this)):this.source,n?this.process(n):this)},process:function(t){var n=this;return t=e.grep(t,function(e){return n.matcher(e)}),t=this.sorter(t),t.length?this.render(t.slice(0,this.options.items)).show():this.shown?this.hide():this},matcher:function(e){return~e.toLowerCase().indexOf(this.query.toLowerCase())},sorter:function(e){var t=[],n=[],r=[],i;while(i=e.shift())i.toLowerCase().indexOf(this.query.toLowerCase())?~i.indexOf(this.query)?n.push(i):r.push(i):t.push(i);return t.concat(n,r)},highlighter:function(e){var t=this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");return e.replace(new RegExp("("+t+")","ig"),function(e,t){return"<strong>"+t+"</strong>"})},render:function(t){var n=this;return t=e(t).map(function(t,r){return t=e(n.options.item).attr("data-value",r),t.find("a").html(n.highlighter(r)),t[0]}),t.first().addClass("active"),this.$menu.html(t),this},next:function(t){var n=this.$menu.find(".active").removeClass("active"),r=n.next();r.length||(r=e(this.$menu.find("li")[0])),r.addClass("active")},prev:function(e){var t=this.$menu.find(".active").removeClass("active"),n=t.prev();n.length||(n=this.$menu.find("li").last()),n.addClass("active")},listen:function(){this.$element.on("blur",e.proxy(this.blur,this)).on("keypress",e.proxy(this.keypress,this)).on("keyup",e.proxy(this.keyup,this)),(e.browser.chrome||e.browser.webkit||e.browser.msie)&&this.$element.on("keydown",e.proxy(this.keydown,this)),this.$menu.on("click",e.proxy(this.click,this)).on("mouseenter","li",e.proxy(this.mouseenter,this))},move:function(e){if(!this.shown)return;switch(e.keyCode){case 9:case 13:case 27:e.preventDefault();break;case 38:e.preventDefault(),this.prev();break;case 40:e.preventDefault(),this.next()}e.stopPropagation()},keydown:function(t){this.suppressKeyPressRepeat=!~e.inArray(t.keyCode,[40,38,9,13,27]),this.move(t)},keypress:function(e){if(this.suppressKeyPressRepeat)return;this.move(e)},keyup:function(e){switch(e.keyCode){case 40:case 38:break;case 9:case 13:if(!this.shown)return;this.select();break;case 27:if(!this.shown)return;this.hide();break;default:this.lookup()}e.stopPropagation(),e.preventDefault()},blur:function(e){var t=this;setTimeout(function(){t.hide()},150)},click:function(e){e.stopPropagation(),e.preventDefault(),this.select()},mouseenter:function(t){this.$menu.find(".active").removeClass("active"),e(t.currentTarget).addClass("active")}},e.fn.typeahead=function(n){return this.each(function(){var r=e(this),i=r.data("typeahead"),s=typeof n=="object"&&n;i||r.data("typeahead",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.typeahead.defaults={source:[],items:8,menu:'<ul class="typeahead dropdown-menu"></ul>',item:'<li><a href="#"></a></li>',minLength:1},e.fn.typeahead.Constructor=t,e(function(){e("body").on("focus.typeahead.data-api",'[data-provide="typeahead"]',function(t){var n=e(this);if(n.data("typeahead"))return;t.preventDefault(),n.typeahead(n.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=e.extend({},e.fn.affix.defaults,n),this.$window=e(window).on("scroll.affix.data-api",e.proxy(this.checkPosition,this)),this.$element=e(t),this.checkPosition()};t.prototype.checkPosition=function(){if(!this.$element.is(":visible"))return;var t=e(document).height(),n=this.$window.scrollTop(),r=this.$element.offset(),i=this.options.offset,s=i.bottom,o=i.top,u="affix affix-top affix-bottom",a;typeof i!="object"&&(s=o=i),typeof o=="function"&&(o=i.top()),typeof s=="function"&&(s=i.bottom()),a=this.unpin!=null&&n+this.unpin<=r.top?!1:s!=null&&r.top+this.$element.height()>=t-s?"bottom":o!=null&&n<=o?"top":!1;if(this.affixed===a)return;this.affixed=a,this.unpin=a=="bottom"?r.top-n:null,this.$element.removeClass(u).addClass("affix"+(a?"-"+a:""))},e.fn.affix=function(n){return this.each(function(){var r=e(this),i=r.data("affix"),s=typeof n=="object"&&n;i||r.data("affix",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.affix.Constructor=t,e.fn.affix.defaults={offset:0},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var t=e(this),n=t.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),t.affix(n)})})}(window.jQuery);
diff --git a/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/d3.v3.js b/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/d3.v3.js
deleted file mode 100644
index 80640aded91..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/d3.v3.js
+++ /dev/null
@@ -1,8823 +0,0 @@
-/*!
-* Copyright (c) 2013, Michael Bostock
-  All rights reserved.
-
-  Redistribution and use in source and binary forms, with or without
-  modification, are permitted provided that the following conditions are met:
-
-  * Redistributions of source code must retain the above copyright notice, this
-    list of conditions and the following disclaimer.
-
-  * Redistributions in binary form must reproduce the above copyright notice,
-    this list of conditions and the following disclaimer in the documentation
-    and/or other materials provided with the distribution.
-
-  * The name Michael Bostock may not be used to endorse or promote products
-    derived from this software without specific prior written permission.
-
-  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-  DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,
-  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
-  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
-  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*/
-d3 = function() {
-  var d3 = {
-    version: "3.2.7"
-  };
-  if (!Date.now) Date.now = function() {
-    return +new Date();
-  };
-  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;
-  try {
-    d3_document.createElement("div").style.setProperty("opacity", 0, "");
-  } catch (error) {
-    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
-    d3_element_prototype.setAttribute = function(name, value) {
-      d3_element_setAttribute.call(this, name, value + "");
-    };
-    d3_element_prototype.setAttributeNS = function(space, local, value) {
-      d3_element_setAttributeNS.call(this, space, local, value + "");
-    };
-    d3_style_prototype.setProperty = function(name, value, priority) {
-      d3_style_setProperty.call(this, name, value + "", priority);
-    };
-  }
-  d3.ascending = function(a, b) {
-    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
-  };
-  d3.descending = function(a, b) {
-    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
-  };
-  d3.min = function(array, f) {
-    var i = -1, n = array.length, a, b;
-    if (arguments.length === 1) {
-      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
-      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
-    } else {
-      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
-      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
-    }
-    return a;
-  };
-  d3.max = function(array, f) {
-    var i = -1, n = array.length, a, b;
-    if (arguments.length === 1) {
-      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
-      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
-    } else {
-      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
-      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
-    }
-    return a;
-  };
-  d3.extent = function(array, f) {
-    var i = -1, n = array.length, a, b, c;
-    if (arguments.length === 1) {
-      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;
-      while (++i < n) if ((b = array[i]) != null) {
-        if (a > b) a = b;
-        if (c < b) c = b;
-      }
-    } else {
-      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
-      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
-        if (a > b) a = b;
-        if (c < b) c = b;
-      }
-    }
-    return [ a, c ];
-  };
-  d3.sum = function(array, f) {
-    var s = 0, n = array.length, a, i = -1;
-    if (arguments.length === 1) {
-      while (++i < n) if (!isNaN(a = +array[i])) s += a;
-    } else {
-      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;
-    }
-    return s;
-  };
-  function d3_number(x) {
-    return x != null && !isNaN(x);
-  }
-  d3.mean = function(array, f) {
-    var n = array.length, a, m = 0, i = -1, j = 0;
-    if (arguments.length === 1) {
-      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;
-    } else {
-      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;
-    }
-    return j ? m : undefined;
-  };
-  d3.quantile = function(values, p) {
-    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
-    return e ? v + e * (values[h] - v) : v;
-  };
-  d3.median = function(array, f) {
-    if (arguments.length > 1) array = array.map(f);
-    array = array.filter(d3_number);
-    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;
-  };
-  d3.bisector = function(f) {
-    return {
-      left: function(a, x, lo, hi) {
-        if (arguments.length < 3) lo = 0;
-        if (arguments.length < 4) hi = a.length;
-        while (lo < hi) {
-          var mid = lo + hi >>> 1;
-          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;
-        }
-        return lo;
-      },
-      right: function(a, x, lo, hi) {
-        if (arguments.length < 3) lo = 0;
-        if (arguments.length < 4) hi = a.length;
-        while (lo < hi) {
-          var mid = lo + hi >>> 1;
-          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;
-        }
-        return lo;
-      }
-    };
-  };
-  var d3_bisector = d3.bisector(function(d) {
-    return d;
-  });
-  d3.bisectLeft = d3_bisector.left;
-  d3.bisect = d3.bisectRight = d3_bisector.right;
-  d3.shuffle = function(array) {
-    var m = array.length, t, i;
-    while (m) {
-      i = Math.random() * m-- | 0;
-      t = array[m], array[m] = array[i], array[i] = t;
-    }
-    return array;
-  };
-  d3.permute = function(array, indexes) {
-    var permutes = [], i = -1, n = indexes.length;
-    while (++i < n) permutes[i] = array[indexes[i]];
-    return permutes;
-  };
-  d3.zip = function() {
-    if (!(n = arguments.length)) return [];
-    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
-      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
-        zip[j] = arguments[j][i];
-      }
-    }
-    return zips;
-  };
-  function d3_zipLength(d) {
-    return d.length;
-  }
-  d3.transpose = function(matrix) {
-    return d3.zip.apply(d3, matrix);
-  };
-  d3.keys = function(map) {
-    var keys = [];
-    for (var key in map) keys.push(key);
-    return keys;
-  };
-  d3.values = function(map) {
-    var values = [];
-    for (var key in map) values.push(map[key]);
-    return values;
-  };
-  d3.entries = function(map) {
-    var entries = [];
-    for (var key in map) entries.push({
-      key: key,
-      value: map[key]
-    });
-    return entries;
-  };
-  d3.merge = function(arrays) {
-    return Array.prototype.concat.apply([], arrays);
-  };
-  d3.range = function(start, stop, step) {
-    if (arguments.length < 3) {
-      step = 1;
-      if (arguments.length < 2) {
-        stop = start;
-        start = 0;
-      }
-    }
-    if ((stop - start) / step === Infinity) throw new Error("infinite range");
-    var range = [], k = d3_range_integerScale(Math.abs(step)), i = -1, j;
-    start *= k, stop *= k, step *= k;
-    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
-    return range;
-  };
-  function d3_range_integerScale(x) {
-    var k = 1;
-    while (x * k % 1) k *= 10;
-    return k;
-  }
-  function d3_class(ctor, properties) {
-    try {
-      for (var key in properties) {
-        Object.defineProperty(ctor.prototype, key, {
-          value: properties[key],
-          enumerable: false
-        });
-      }
-    } catch (e) {
-      ctor.prototype = properties;
-    }
-  }
-  d3.map = function(object) {
-    var map = new d3_Map();
-    for (var key in object) map.set(key, object[key]);
-    return map;
-  };
-  function d3_Map() {}
-  d3_class(d3_Map, {
-    has: function(key) {
-      return d3_map_prefix + key in this;
-    },
-    get: function(key) {
-      return this[d3_map_prefix + key];
-    },
-    set: function(key, value) {
-      return this[d3_map_prefix + key] = value;
-    },
-    remove: function(key) {
-      key = d3_map_prefix + key;
-      return key in this && delete this[key];
-    },
-    keys: function() {
-      var keys = [];
-      this.forEach(function(key) {
-        keys.push(key);
-      });
-      return keys;
-    },
-    values: function() {
-      var values = [];
-      this.forEach(function(key, value) {
-        values.push(value);
-      });
-      return values;
-    },
-    entries: function() {
-      var entries = [];
-      this.forEach(function(key, value) {
-        entries.push({
-          key: key,
-          value: value
-        });
-      });
-      return entries;
-    },
-    forEach: function(f) {
-      for (var key in this) {
-        if (key.charCodeAt(0) === d3_map_prefixCode) {
-          f.call(this, key.substring(1), this[key]);
-        }
-      }
-    }
-  });
-  var d3_map_prefix = "\0", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);
-  d3.nest = function() {
-    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
-    function map(mapType, array, depth) {
-      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
-      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
-      while (++i < n) {
-        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
-          values.push(object);
-        } else {
-          valuesByKey.set(keyValue, [ object ]);
-        }
-      }
-      if (mapType) {
-        object = mapType();
-        setter = function(keyValue, values) {
-          object.set(keyValue, map(mapType, values, depth));
-        };
-      } else {
-        object = {};
-        setter = function(keyValue, values) {
-          object[keyValue] = map(mapType, values, depth);
-        };
-      }
-      valuesByKey.forEach(setter);
-      return object;
-    }
-    function entries(map, depth) {
-      if (depth >= keys.length) return map;
-      var array = [], sortKey = sortKeys[depth++];
-      map.forEach(function(key, keyMap) {
-        array.push({
-          key: key,
-          values: entries(keyMap, depth)
-        });
-      });
-      return sortKey ? array.sort(function(a, b) {
-        return sortKey(a.key, b.key);
-      }) : array;
-    }
-    nest.map = function(array, mapType) {
-      return map(mapType, array, 0);
-    };
-    nest.entries = function(array) {
-      return entries(map(d3.map, array, 0), 0);
-    };
-    nest.key = function(d) {
-      keys.push(d);
-      return nest;
-    };
-    nest.sortKeys = function(order) {
-      sortKeys[keys.length - 1] = order;
-      return nest;
-    };
-    nest.sortValues = function(order) {
-      sortValues = order;
-      return nest;
-    };
-    nest.rollup = function(f) {
-      rollup = f;
-      return nest;
-    };
-    return nest;
-  };
-  d3.set = function(array) {
-    var set = new d3_Set();
-    if (array) for (var i = 0; i < array.length; i++) set.add(array[i]);
-    return set;
-  };
-  function d3_Set() {}
-  d3_class(d3_Set, {
-    has: function(value) {
-      return d3_map_prefix + value in this;
-    },
-    add: function(value) {
-      this[d3_map_prefix + value] = true;
-      return value;
-    },
-    remove: function(value) {
-      value = d3_map_prefix + value;
-      return value in this && delete this[value];
-    },
-    values: function() {
-      var values = [];
-      this.forEach(function(value) {
-        values.push(value);
-      });
-      return values;
-    },
-    forEach: function(f) {
-      for (var value in this) {
-        if (value.charCodeAt(0) === d3_map_prefixCode) {
-          f.call(this, value.substring(1));
-        }
-      }
-    }
-  });
-  d3.behavior = {};
-  d3.rebind = function(target, source) {
-    var i = 1, n = arguments.length, method;
-    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
-    return target;
-  };
-  function d3_rebind(target, source, method) {
-    return function() {
-      var value = method.apply(source, arguments);
-      return value === source ? target : value;
-    };
-  }
-  function d3_vendorSymbol(object, name) {
-    if (name in object) return name;
-    name = name.charAt(0).toUpperCase() + name.substring(1);
-    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
-      var prefixName = d3_vendorPrefixes[i] + name;
-      if (prefixName in object) return prefixName;
-    }
-  }
-  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
-  var d3_array = d3_arraySlice;
-  function d3_arrayCopy(pseudoarray) {
-    var i = -1, n = pseudoarray.length, array = [];
-    while (++i < n) array.push(pseudoarray[i]);
-    return array;
-  }
-  function d3_arraySlice(pseudoarray) {
-    return Array.prototype.slice.call(pseudoarray);
-  }
-  try {
-    d3_array(d3_documentElement.childNodes)[0].nodeType;
-  } catch (e) {
-    d3_array = d3_arrayCopy;
-  }
-  function d3_noop() {}
-  d3.dispatch = function() {
-    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
-    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
-    return dispatch;
-  };
-  function d3_dispatch() {}
-  d3_dispatch.prototype.on = function(type, listener) {
-    var i = type.indexOf("."), name = "";
-    if (i >= 0) {
-      name = type.substring(i + 1);
-      type = type.substring(0, i);
-    }
-    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
-    if (arguments.length === 2) {
-      if (listener == null) for (type in this) {
-        if (this.hasOwnProperty(type)) this[type].on(name, null);
-      }
-      return this;
-    }
-  };
-  function d3_dispatch_event(dispatch) {
-    var listeners = [], listenerByName = new d3_Map();
-    function event() {
-      var z = listeners, i = -1, n = z.length, l;
-      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
-      return dispatch;
-    }
-    event.on = function(name, listener) {
-      var l = listenerByName.get(name), i;
-      if (arguments.length < 2) return l && l.on;
-      if (l) {
-        l.on = null;
-        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
-        listenerByName.remove(name);
-      }
-      if (listener) listeners.push(listenerByName.set(name, {
-        on: listener
-      }));
-      return dispatch;
-    };
-    return event;
-  }
-  d3.event = null;
-  function d3_eventPreventDefault() {
-    d3.event.preventDefault();
-  }
-  function d3_eventSource() {
-    var e = d3.event, s;
-    while (s = e.sourceEvent) e = s;
-    return e;
-  }
-  function d3_eventDispatch(target) {
-    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
-    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
-    dispatch.of = function(thiz, argumentz) {
-      return function(e1) {
-        try {
-          var e0 = e1.sourceEvent = d3.event;
-          e1.target = target;
-          d3.event = e1;
-          dispatch[e1.type].apply(thiz, argumentz);
-        } finally {
-          d3.event = e0;
-        }
-      };
-    };
-    return dispatch;
-  }
-  d3.requote = function(s) {
-    return s.replace(d3_requote_re, "\\$&");
-  };
-  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
-  var d3_subclass = {}.__proto__ ? function(object, prototype) {
-    object.__proto__ = prototype;
-  } : function(object, prototype) {
-    for (var property in prototype) object[property] = prototype[property];
-  };
-  function d3_selection(groups) {
-    d3_subclass(groups, d3_selectionPrototype);
-    return groups;
-  }
-  var d3_select = function(s, n) {
-    return n.querySelector(s);
-  }, d3_selectAll = function(s, n) {
-    return n.querySelectorAll(s);
-  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, "matchesSelector")], d3_selectMatches = function(n, s) {
-    return d3_selectMatcher.call(n, s);
-  };
-  if (typeof Sizzle === "function") {
-    d3_select = function(s, n) {
-      return Sizzle(s, n)[0] || null;
-    };
-    d3_selectAll = function(s, n) {
-      return Sizzle.uniqueSort(Sizzle(s, n));
-    };
-    d3_selectMatches = Sizzle.matchesSelector;
-  }
-  d3.selection = function() {
-    return d3_selectionRoot;
-  };
-  var d3_selectionPrototype = d3.selection.prototype = [];
-  d3_selectionPrototype.select = function(selector) {
-    var subgroups = [], subgroup, subnode, group, node;
-    selector = d3_selection_selector(selector);
-    for (var j = -1, m = this.length; ++j < m; ) {
-      subgroups.push(subgroup = []);
-      subgroup.parentNode = (group = this[j]).parentNode;
-      for (var i = -1, n = group.length; ++i < n; ) {
-        if (node = group[i]) {
-          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
-          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
-        } else {
-          subgroup.push(null);
-        }
-      }
-    }
-    return d3_selection(subgroups);
-  };
-  function d3_selection_selector(selector) {
-    return typeof selector === "function" ? selector : function() {
-      return d3_select(selector, this);
-    };
-  }
-  d3_selectionPrototype.selectAll = function(selector) {
-    var subgroups = [], subgroup, node;
-    selector = d3_selection_selectorAll(selector);
-    for (var j = -1, m = this.length; ++j < m; ) {
-      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
-        if (node = group[i]) {
-          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
-          subgroup.parentNode = node;
-        }
-      }
-    }
-    return d3_selection(subgroups);
-  };
-  function d3_selection_selectorAll(selector) {
-    return typeof selector === "function" ? selector : function() {
-      return d3_selectAll(selector, this);
-    };
-  }
-  var d3_nsPrefix = {
-    svg: "http://www.w3.org/2000/svg",
-    xhtml: "http://www.w3.org/1999/xhtml",
-    xlink: "http://www.w3.org/1999/xlink",
-    xml: "http://www.w3.org/XML/1998/namespace",
-    xmlns: "http://www.w3.org/2000/xmlns/"
-  };
-  d3.ns = {
-    prefix: d3_nsPrefix,
-    qualify: function(name) {
-      var i = name.indexOf(":"), prefix = name;
-      if (i >= 0) {
-        prefix = name.substring(0, i);
-        name = name.substring(i + 1);
-      }
-      return d3_nsPrefix.hasOwnProperty(prefix) ? {
-        space: d3_nsPrefix[prefix],
-        local: name
-      } : name;
-    }
-  };
-  d3_selectionPrototype.attr = function(name, value) {
-    if (arguments.length < 2) {
-      if (typeof name === "string") {
-        var node = this.node();
-        name = d3.ns.qualify(name);
-        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
-      }
-      for (value in name) this.each(d3_selection_attr(value, name[value]));
-      return this;
-    }
-    return this.each(d3_selection_attr(name, value));
-  };
-  function d3_selection_attr(name, value) {
-    name = d3.ns.qualify(name);
-    function attrNull() {
-      this.removeAttribute(name);
-    }
-    function attrNullNS() {
-      this.removeAttributeNS(name.space, name.local);
-    }
-    function attrConstant() {
-      this.setAttribute(name, value);
-    }
-    function attrConstantNS() {
-      this.setAttributeNS(name.space, name.local, value);
-    }
-    function attrFunction() {
-      var x = value.apply(this, arguments);
-      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
-    }
-    function attrFunctionNS() {
-      var x = value.apply(this, arguments);
-      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
-    }
-    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
-  }
-  function d3_collapse(s) {
-    return s.trim().replace(/\s+/g, " ");
-  }
-  d3_selectionPrototype.classed = function(name, value) {
-    if (arguments.length < 2) {
-      if (typeof name === "string") {
-        var node = this.node(), n = (name = name.trim().split(/^|\s+/g)).length, i = -1;
-        if (value = node.classList) {
-          while (++i < n) if (!value.contains(name[i])) return false;
-        } else {
-          value = node.getAttribute("class");
-          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
-        }
-        return true;
-      }
-      for (value in name) this.each(d3_selection_classed(value, name[value]));
-      return this;
-    }
-    return this.each(d3_selection_classed(name, value));
-  };
-  function d3_selection_classedRe(name) {
-    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
-  }
-  function d3_selection_classed(name, value) {
-    name = name.trim().split(/\s+/).map(d3_selection_classedName);
-    var n = name.length;
-    function classedConstant() {
-      var i = -1;
-      while (++i < n) name[i](this, value);
-    }
-    function classedFunction() {
-      var i = -1, x = value.apply(this, arguments);
-      while (++i < n) name[i](this, x);
-    }
-    return typeof value === "function" ? classedFunction : classedConstant;
-  }
-  function d3_selection_classedName(name) {
-    var re = d3_selection_classedRe(name);
-    return function(node, value) {
-      if (c = node.classList) return value ? c.add(name) : c.remove(name);
-      var c = node.getAttribute("class") || "";
-      if (value) {
-        re.lastIndex = 0;
-        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
-      } else {
-        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
-      }
-    };
-  }
-  d3_selectionPrototype.style = function(name, value, priority) {
-    var n = arguments.length;
-    if (n < 3) {
-      if (typeof name !== "string") {
-        if (n < 2) value = "";
-        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
-        return this;
-      }
-      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);
-      priority = "";
-    }
-    return this.each(d3_selection_style(name, value, priority));
-  };
-  function d3_selection_style(name, value, priority) {
-    function styleNull() {
-      this.style.removeProperty(name);
-    }
-    function styleConstant() {
-      this.style.setProperty(name, value, priority);
-    }
-    function styleFunction() {
-      var x = value.apply(this, arguments);
-      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
-    }
-    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
-  }
-  d3_selectionPrototype.property = function(name, value) {
-    if (arguments.length < 2) {
-      if (typeof name === "string") return this.node()[name];
-      for (value in name) this.each(d3_selection_property(value, name[value]));
-      return this;
-    }
-    return this.each(d3_selection_property(name, value));
-  };
-  function d3_selection_property(name, value) {
-    function propertyNull() {
-      delete this[name];
-    }
-    function propertyConstant() {
-      this[name] = value;
-    }
-    function propertyFunction() {
-      var x = value.apply(this, arguments);
-      if (x == null) delete this[name]; else this[name] = x;
-    }
-    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
-  }
-  d3_selectionPrototype.text = function(value) {
-    return arguments.length ? this.each(typeof value === "function" ? function() {
-      var v = value.apply(this, arguments);
-      this.textContent = v == null ? "" : v;
-    } : value == null ? function() {
-      this.textContent = "";
-    } : function() {
-      this.textContent = value;
-    }) : this.node().textContent;
-  };
-  d3_selectionPrototype.html = function(value) {
-    return arguments.length ? this.each(typeof value === "function" ? function() {
-      var v = value.apply(this, arguments);
-      this.innerHTML = v == null ? "" : v;
-    } : value == null ? function() {
-      this.innerHTML = "";
-    } : function() {
-      this.innerHTML = value;
-    }) : this.node().innerHTML;
-  };
-  d3_selectionPrototype.append = function(name) {
-    name = d3_selection_creator(name);
-    return this.select(function() {
-      return this.appendChild(name.apply(this, arguments));
-    });
-  };
-  function d3_selection_creator(name) {
-    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? function() {
-      return d3_document.createElementNS(name.space, name.local);
-    } : function() {
-      return d3_document.createElementNS(this.namespaceURI, name);
-    };
-  }
-  d3_selectionPrototype.insert = function(name, before) {
-    name = d3_selection_creator(name);
-    before = d3_selection_selector(before);
-    return this.select(function() {
-      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments));
-    });
-  };
-  d3_selectionPrototype.remove = function() {
-    return this.each(function() {
-      var parent = this.parentNode;
-      if (parent) parent.removeChild(this);
-    });
-  };
-  d3_selectionPrototype.data = function(value, key) {
-    var i = -1, n = this.length, group, node;
-    if (!arguments.length) {
-      value = new Array(n = (group = this[0]).length);
-      while (++i < n) {
-        if (node = group[i]) {
-          value[i] = node.__data__;
-        }
-      }
-      return value;
-    }
-    function bind(group, groupData) {
-      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
-      if (key) {
-        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;
-        for (i = -1; ++i < n; ) {
-          keyValue = key.call(node = group[i], node.__data__, i);
-          if (nodeByKeyValue.has(keyValue)) {
-            exitNodes[i] = node;
-          } else {
-            nodeByKeyValue.set(keyValue, node);
-          }
-          keyValues.push(keyValue);
-        }
-        for (i = -1; ++i < m; ) {
-          keyValue = key.call(groupData, nodeData = groupData[i], i);
-          if (node = nodeByKeyValue.get(keyValue)) {
-            updateNodes[i] = node;
-            node.__data__ = nodeData;
-          } else if (!dataByKeyValue.has(keyValue)) {
-            enterNodes[i] = d3_selection_dataNode(nodeData);
-          }
-          dataByKeyValue.set(keyValue, nodeData);
-          nodeByKeyValue.remove(keyValue);
-        }
-        for (i = -1; ++i < n; ) {
-          if (nodeByKeyValue.has(keyValues[i])) {
-            exitNodes[i] = group[i];
-          }
-        }
-      } else {
-        for (i = -1; ++i < n0; ) {
-          node = group[i];
-          nodeData = groupData[i];
-          if (node) {
-            node.__data__ = nodeData;
-            updateNodes[i] = node;
-          } else {
-            enterNodes[i] = d3_selection_dataNode(nodeData);
-          }
-        }
-        for (;i < m; ++i) {
-          enterNodes[i] = d3_selection_dataNode(groupData[i]);
-        }
-        for (;i < n; ++i) {
-          exitNodes[i] = group[i];
-        }
-      }
-      enterNodes.update = updateNodes;
-      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
-      enter.push(enterNodes);
-      update.push(updateNodes);
-      exit.push(exitNodes);
-    }
-    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
-    if (typeof value === "function") {
-      while (++i < n) {
-        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
-      }
-    } else {
-      while (++i < n) {
-        bind(group = this[i], value);
-      }
-    }
-    update.enter = function() {
-      return enter;
-    };
-    update.exit = function() {
-      return exit;
-    };
-    return update;
-  };
-  function d3_selection_dataNode(data) {
-    return {
-      __data__: data
-    };
-  }
-  d3_selectionPrototype.datum = function(value) {
-    return arguments.length ? this.property("__data__", value) : this.property("__data__");
-  };
-  d3_selectionPrototype.filter = function(filter) {
-    var subgroups = [], subgroup, group, node;
-    if (typeof filter !== "function") filter = d3_selection_filter(filter);
-    for (var j = 0, m = this.length; j < m; j++) {
-      subgroups.push(subgroup = []);
-      subgroup.parentNode = (group = this[j]).parentNode;
-      for (var i = 0, n = group.length; i < n; i++) {
-        if ((node = group[i]) && filter.call(node, node.__data__, i)) {
-          subgroup.push(node);
-        }
-      }
-    }
-    return d3_selection(subgroups);
-  };
-  function d3_selection_filter(selector) {
-    return function() {
-      return d3_selectMatches(this, selector);
-    };
-  }
-  d3_selectionPrototype.order = function() {
-    for (var j = -1, m = this.length; ++j < m; ) {
-      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
-        if (node = group[i]) {
-          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
-          next = node;
-        }
-      }
-    }
-    return this;
-  };
-  d3_selectionPrototype.sort = function(comparator) {
-    comparator = d3_selection_sortComparator.apply(this, arguments);
-    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
-    return this.order();
-  };
-  function d3_selection_sortComparator(comparator) {
-    if (!arguments.length) comparator = d3.ascending;
-    return function(a, b) {
-      return !a - !b || comparator(a.__data__, b.__data__);
-    };
-  }
-  d3_selectionPrototype.each = function(callback) {
-    return d3_selection_each(this, function(node, i, j) {
-      callback.call(node, node.__data__, i, j);
-    });
-  };
-  function d3_selection_each(groups, callback) {
-    for (var j = 0, m = groups.length; j < m; j++) {
-      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
-        if (node = group[i]) callback(node, i, j);
-      }
-    }
-    return groups;
-  }
-  d3_selectionPrototype.call = function(callback) {
-    var args = d3_array(arguments);
-    callback.apply(args[0] = this, args);
-    return this;
-  };
-  d3_selectionPrototype.empty = function() {
-    return !this.node();
-  };
-  d3_selectionPrototype.node = function() {
-    for (var j = 0, m = this.length; j < m; j++) {
-      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
-        var node = group[i];
-        if (node) return node;
-      }
-    }
-    return null;
-  };
-  d3_selectionPrototype.size = function() {
-    var n = 0;
-    this.each(function() {
-      ++n;
-    });
-    return n;
-  };
-  function d3_selection_enter(selection) {
-    d3_subclass(selection, d3_selection_enterPrototype);
-    return selection;
-  }
-  var d3_selection_enterPrototype = [];
-  d3.selection.enter = d3_selection_enter;
-  d3.selection.enter.prototype = d3_selection_enterPrototype;
-  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
-  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
-  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
-  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
-  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
-  d3_selection_enterPrototype.select = function(selector) {
-    var subgroups = [], subgroup, subnode, upgroup, group, node;
-    for (var j = -1, m = this.length; ++j < m; ) {
-      upgroup = (group = this[j]).update;
-      subgroups.push(subgroup = []);
-      subgroup.parentNode = group.parentNode;
-      for (var i = -1, n = group.length; ++i < n; ) {
-        if (node = group[i]) {
-          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
-          subnode.__data__ = node.__data__;
-        } else {
-          subgroup.push(null);
-        }
-      }
-    }
-    return d3_selection(subgroups);
-  };
-  d3_selection_enterPrototype.insert = function(name, before) {
-    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
-    return d3_selectionPrototype.insert.call(this, name, before);
-  };
-  function d3_selection_enterInsertBefore(enter) {
-    var i0, j0;
-    return function(d, i, j) {
-      var group = enter[j].update, n = group.length, node;
-      if (j != j0) j0 = j, i0 = 0;
-      if (i >= i0) i0 = i + 1;
-      while (!(node = group[i0]) && ++i0 < n) ;
-      return node;
-    };
-  }
-  d3_selectionPrototype.transition = function() {
-    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {
-      time: Date.now(),
-      ease: d3_ease_cubicInOut,
-      delay: 0,
-      duration: 250
-    };
-    for (var j = -1, m = this.length; ++j < m; ) {
-      subgroups.push(subgroup = []);
-      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
-        if (node = group[i]) d3_transitionNode(node, i, id, transition);
-        subgroup.push(node);
-      }
-    }
-    return d3_transition(subgroups, id);
-  };
-  d3.select = function(node) {
-    var group = [ typeof node === "string" ? d3_select(node, d3_document) : node ];
-    group.parentNode = d3_documentElement;
-    return d3_selection([ group ]);
-  };
-  d3.selectAll = function(nodes) {
-    var group = d3_array(typeof nodes === "string" ? d3_selectAll(nodes, d3_document) : nodes);
-    group.parentNode = d3_documentElement;
-    return d3_selection([ group ]);
-  };
-  var d3_selectionRoot = d3.select(d3_documentElement);
-  d3_selectionPrototype.on = function(type, listener, capture) {
-    var n = arguments.length;
-    if (n < 3) {
-      if (typeof type !== "string") {
-        if (n < 2) listener = false;
-        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
-        return this;
-      }
-      if (n < 2) return (n = this.node()["__on" + type]) && n._;
-      capture = false;
-    }
-    return this.each(d3_selection_on(type, listener, capture));
-  };
-  function d3_selection_on(type, listener, capture) {
-    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
-    if (i > 0) type = type.substring(0, i);
-    var filter = d3_selection_onFilters.get(type);
-    if (filter) type = filter, wrap = d3_selection_onFilter;
-    function onRemove() {
-      var l = this[name];
-      if (l) {
-        this.removeEventListener(type, l, l.$);
-        delete this[name];
-      }
-    }
-    function onAdd() {
-      var l = wrap(listener, d3_array(arguments));
-      onRemove.call(this);
-      this.addEventListener(type, this[name] = l, l.$ = capture);
-      l._ = listener;
-    }
-    function removeAll() {
-      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
-      for (var name in this) {
-        if (match = name.match(re)) {
-          var l = this[name];
-          this.removeEventListener(match[1], l, l.$);
-          delete this[name];
-        }
-      }
-    }
-    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
-  }
-  var d3_selection_onFilters = d3.map({
-    mouseenter: "mouseover",
-    mouseleave: "mouseout"
-  });
-  d3_selection_onFilters.forEach(function(k) {
-    if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
-  });
-  function d3_selection_onListener(listener, argumentz) {
-    return function(e) {
-      var o = d3.event;
-      d3.event = e;
-      argumentz[0] = this.__data__;
-      try {
-        listener.apply(this, argumentz);
-      } finally {
-        d3.event = o;
-      }
-    };
-  }
-  function d3_selection_onFilter(listener, argumentz) {
-    var l = d3_selection_onListener(listener, argumentz);
-    return function(e) {
-      var target = this, related = e.relatedTarget;
-      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
-        l.call(target, e);
-      }
-    };
-  }
-  var d3_event_dragSelect = d3_vendorSymbol(d3_documentElement.style, "userSelect"), d3_event_dragId = 0;
-  function d3_event_dragSuppress() {
-    var name = ".dragsuppress-" + ++d3_event_dragId, touchmove = "touchmove" + name, selectstart = "selectstart" + name, dragstart = "dragstart" + name, click = "click" + name, w = d3.select(d3_window).on(touchmove, d3_eventPreventDefault).on(selectstart, d3_eventPreventDefault).on(dragstart, d3_eventPreventDefault), style = d3_documentElement.style, select = style[d3_event_dragSelect];
-    style[d3_event_dragSelect] = "none";
-    return function(suppressClick) {
-      w.on(name, null);
-      style[d3_event_dragSelect] = select;
-      if (suppressClick) {
-        function off() {
-          w.on(click, null);
-        }
-        w.on(click, function() {
-          d3_eventPreventDefault();
-          off();
-        }, true);
-        setTimeout(off, 0);
-      }
-    };
-  }
-  d3.mouse = function(container) {
-    return d3_mousePoint(container, d3_eventSource());
-  };
-  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;
-  function d3_mousePoint(container, e) {
-    var svg = container.ownerSVGElement || container;
-    if (svg.createSVGPoint) {
-      var point = svg.createSVGPoint();
-      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {
-        svg = d3.select("body").append("svg").style({
-          position: "absolute",
-          top: 0,
-          left: 0,
-          margin: 0,
-          padding: 0,
-          border: "none"
-        }, "important");
-        var ctm = svg[0][0].getScreenCTM();
-        d3_mouse_bug44083 = !(ctm.f || ctm.e);
-        svg.remove();
-      }
-      if (d3_mouse_bug44083) {
-        point.x = e.pageX;
-        point.y = e.pageY;
-      } else {
-        point.x = e.clientX;
-        point.y = e.clientY;
-      }
-      point = point.matrixTransform(container.getScreenCTM().inverse());
-      return [ point.x, point.y ];
-    }
-    var rect = container.getBoundingClientRect();
-    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
-  }
-  d3.touches = function(container, touches) {
-    if (arguments.length < 2) touches = d3_eventSource().touches;
-    return touches ? d3_array(touches).map(function(touch) {
-      var point = d3_mousePoint(container, touch);
-      point.identifier = touch.identifier;
-      return point;
-    }) : [];
-  };
-  d3.behavior.drag = function() {
-    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, "mousemove", "mouseup"), touchstart = dragstart(touchid, touchposition, "touchmove", "touchend");
-    function drag() {
-      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
-    }
-    function touchid() {
-      return d3.event.changedTouches[0].identifier;
-    }
-    function touchposition(parent, id) {
-      return d3.touches(parent).filter(function(p) {
-        return p.identifier === id;
-      })[0];
-    }
-    function dragstart(id, position, move, end) {
-      return function() {
-        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? "drag" : "drag-" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + "." + drag, moved).on(end + "." + drag, ended), dragRestore = d3_event_dragSuppress();
-        if (origin) {
-          offset = origin.apply(target, arguments);
-          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];
-        } else {
-          offset = [ 0, 0 ];
-        }
-        event_({
-          type: "dragstart"
-        });
-        function moved() {
-          if (!parent) return ended();
-          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];
-          dragged |= dx | dy;
-          origin_ = p;
-          event_({
-            type: "drag",
-            x: p[0] + offset[0],
-            y: p[1] + offset[1],
-            dx: dx,
-            dy: dy
-          });
-        }
-        function ended() {
-          w.on(move + "." + drag, null).on(end + "." + drag, null);
-          dragRestore(dragged && d3.event.target === eventTarget);
-          event_({
-            type: "dragend"
-          });
-        }
-      };
-    }
-    drag.origin = function(x) {
-      if (!arguments.length) return origin;
-      origin = x;
-      return drag;
-    };
-    return d3.rebind(drag, event, "on");
-  };
-  d3.behavior.zoom = function() {
-    var translate = [ 0, 0 ], translate0, scale = 1, scaleExtent = d3_behavior_zoomInfinity, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", event = d3_eventDispatch(zoom, "zoom"), x0, x1, y0, y1, touchtime;
-    function zoom() {
-      this.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on(mousemove, mousewheelreset).on("dblclick.zoom", dblclicked).on("touchstart.zoom", touchstarted);
-    }
-    zoom.translate = function(x) {
-      if (!arguments.length) return translate;
-      translate = x.map(Number);
-      rescale();
-      return zoom;
-    };
-    zoom.scale = function(x) {
-      if (!arguments.length) return scale;
-      scale = +x;
-      rescale();
-      return zoom;
-    };
-    zoom.scaleExtent = function(x) {
-      if (!arguments.length) return scaleExtent;
-      scaleExtent = x == null ? d3_behavior_zoomInfinity : x.map(Number);
-      return zoom;
-    };
-    zoom.x = function(z) {
-      if (!arguments.length) return x1;
-      x1 = z;
-      x0 = z.copy();
-      translate = [ 0, 0 ];
-      scale = 1;
-      return zoom;
-    };
-    zoom.y = function(z) {
-      if (!arguments.length) return y1;
-      y1 = z;
-      y0 = z.copy();
-      translate = [ 0, 0 ];
-      scale = 1;
-      return zoom;
-    };
-    function location(p) {
-      return [ (p[0] - translate[0]) / scale, (p[1] - translate[1]) / scale ];
-    }
-    function point(l) {
-      return [ l[0] * scale + translate[0], l[1] * scale + translate[1] ];
-    }
-    function scaleTo(s) {
-      scale = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
-    }
-    function translateTo(p, l) {
-      l = point(l);
-      translate[0] += p[0] - l[0];
-      translate[1] += p[1] - l[1];
-    }
-    function rescale() {
-      if (x1) x1.domain(x0.range().map(function(x) {
-        return (x - translate[0]) / scale;
-      }).map(x0.invert));
-      if (y1) y1.domain(y0.range().map(function(y) {
-        return (y - translate[1]) / scale;
-      }).map(y0.invert));
-    }
-    function dispatch(event) {
-      rescale();
-      event({
-        type: "zoom",
-        scale: scale,
-        translate: translate
-      });
-    }
-    function mousedowned() {
-      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();
-      function moved() {
-        dragged = 1;
-        translateTo(d3.mouse(target), l);
-        dispatch(event_);
-      }
-      function ended() {
-        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);
-        dragRestore(dragged && d3.event.target === eventTarget);
-      }
-    }
-    function touchstarted() {
-      var target = this, event_ = event.of(target, arguments), touches = d3.touches(target), locations = {}, distance0 = 0, scale0 = scale, now = Date.now(), name = "zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove." + name, touchend = "touchend." + name, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null), dragRestore = d3_event_dragSuppress();
-      touches.forEach(function(t) {
-        locations[t.identifier] = location(t);
-      });
-      if (touches.length === 1) {
-        if (now - touchtime < 500) {
-          var p = touches[0], l = location(touches[0]);
-          scaleTo(scale * 2);
-          translateTo(p, l);
-          d3_eventPreventDefault();
-          dispatch(event_);
-        }
-        touchtime = now;
-      } else if (touches.length > 1) {
-        var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
-        distance0 = dx * dx + dy * dy;
-      }
-      function moved() {
-        var touches = d3.touches(target), p0 = touches[0], l0 = locations[p0.identifier];
-        if (p1 = touches[1]) {
-          var p1, l1 = locations[p1.identifier], scale1 = d3.event.scale;
-          if (scale1 == null) {
-            var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1;
-            scale1 = distance0 && Math.sqrt(distance1 / distance0);
-          }
-          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
-          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
-          scaleTo(scale1 * scale0);
-        }
-        touchtime = null;
-        translateTo(p0, l0);
-        dispatch(event_);
-      }
-      function ended() {
-        w.on(touchmove, null).on(touchend, null);
-        t.on(mousedown, mousedowned);
-        dragRestore();
-      }
-    }
-    function mousewheeled() {
-      d3_eventPreventDefault();
-      if (!translate0) translate0 = location(d3.mouse(this));
-      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * scale);
-      translateTo(d3.mouse(this), translate0);
-      dispatch(event.of(this, arguments));
-    }
-    function mousewheelreset() {
-      translate0 = null;
-    }
-    function dblclicked() {
-      var p = d3.mouse(this), l = location(p), k = Math.log(scale) / Math.LN2;
-      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));
-      translateTo(p, l);
-      dispatch(event.of(this, arguments));
-    }
-    return d3.rebind(zoom, event, "on");
-  };
-  var d3_behavior_zoomInfinity = [ 0, Infinity ];
-  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
-    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
-  }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
-    return d3.event.wheelDelta;
-  }, "mousewheel") : (d3_behavior_zoomDelta = function() {
-    return -d3.event.detail;
-  }, "MozMousePixelScroll");
-  function d3_Color() {}
-  d3_Color.prototype.toString = function() {
-    return this.rgb() + "";
-  };
-  d3.hsl = function(h, s, l) {
-    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);
-  };
-  function d3_hsl(h, s, l) {
-    return new d3_Hsl(h, s, l);
-  }
-  function d3_Hsl(h, s, l) {
-    this.h = h;
-    this.s = s;
-    this.l = l;
-  }
-  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();
-  d3_hslPrototype.brighter = function(k) {
-    k = Math.pow(.7, arguments.length ? k : 1);
-    return d3_hsl(this.h, this.s, this.l / k);
-  };
-  d3_hslPrototype.darker = function(k) {
-    k = Math.pow(.7, arguments.length ? k : 1);
-    return d3_hsl(this.h, this.s, k * this.l);
-  };
-  d3_hslPrototype.rgb = function() {
-    return d3_hsl_rgb(this.h, this.s, this.l);
-  };
-  function d3_hsl_rgb(h, s, l) {
-    var m1, m2;
-    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
-    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
-    l = l < 0 ? 0 : l > 1 ? 1 : l;
-    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
-    m1 = 2 * l - m2;
-    function v(h) {
-      if (h > 360) h -= 360; else if (h < 0) h += 360;
-      if (h < 60) return m1 + (m2 - m1) * h / 60;
-      if (h < 180) return m2;
-      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
-      return m1;
-    }
-    function vv(h) {
-      return Math.round(v(h) * 255);
-    }
-    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));
-  }
-  var π = Math.PI, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;
-  function d3_sgn(x) {
-    return x > 0 ? 1 : x < 0 ? -1 : 0;
-  }
-  function d3_acos(x) {
-    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
-  }
-  function d3_asin(x) {
-    return x > 1 ? π / 2 : x < -1 ? -π / 2 : Math.asin(x);
-  }
-  function d3_sinh(x) {
-    return (Math.exp(x) - Math.exp(-x)) / 2;
-  }
-  function d3_cosh(x) {
-    return (Math.exp(x) + Math.exp(-x)) / 2;
-  }
-  function d3_haversin(x) {
-    return (x = Math.sin(x / 2)) * x;
-  }
-  d3.hcl = function(h, c, l) {
-    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);
-  };
-  function d3_hcl(h, c, l) {
-    return new d3_Hcl(h, c, l);
-  }
-  function d3_Hcl(h, c, l) {
-    this.h = h;
-    this.c = c;
-    this.l = l;
-  }
-  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();
-  d3_hclPrototype.brighter = function(k) {
-    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
-  };
-  d3_hclPrototype.darker = function(k) {
-    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
-  };
-  d3_hclPrototype.rgb = function() {
-    return d3_hcl_lab(this.h, this.c, this.l).rgb();
-  };
-  function d3_hcl_lab(h, c, l) {
-    if (isNaN(h)) h = 0;
-    if (isNaN(c)) c = 0;
-    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
-  }
-  d3.lab = function(l, a, b) {
-    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);
-  };
-  function d3_lab(l, a, b) {
-    return new d3_Lab(l, a, b);
-  }
-  function d3_Lab(l, a, b) {
-    this.l = l;
-    this.a = a;
-    this.b = b;
-  }
-  var d3_lab_K = 18;
-  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
-  var d3_labPrototype = d3_Lab.prototype = new d3_Color();
-  d3_labPrototype.brighter = function(k) {
-    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
-  };
-  d3_labPrototype.darker = function(k) {
-    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
-  };
-  d3_labPrototype.rgb = function() {
-    return d3_lab_rgb(this.l, this.a, this.b);
-  };
-  function d3_lab_rgb(l, a, b) {
-    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
-    x = d3_lab_xyz(x) * d3_lab_X;
-    y = d3_lab_xyz(y) * d3_lab_Y;
-    z = d3_lab_xyz(z) * d3_lab_Z;
-    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
-  }
-  function d3_lab_hcl(l, a, b) {
-    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);
-  }
-  function d3_lab_xyz(x) {
-    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
-  }
-  function d3_xyz_lab(x) {
-    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
-  }
-  function d3_xyz_rgb(r) {
-    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
-  }
-  d3.rgb = function(r, g, b) {
-    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);
-  };
-  function d3_rgbNumber(value) {
-    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);
-  }
-  function d3_rgbString(value) {
-    return d3_rgbNumber(value) + "";
-  }
-  function d3_rgb(r, g, b) {
-    return new d3_Rgb(r, g, b);
-  }
-  function d3_Rgb(r, g, b) {
-    this.r = r;
-    this.g = g;
-    this.b = b;
-  }
-  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();
-  d3_rgbPrototype.brighter = function(k) {
-    k = Math.pow(.7, arguments.length ? k : 1);
-    var r = this.r, g = this.g, b = this.b, i = 30;
-    if (!r && !g && !b) return d3_rgb(i, i, i);
-    if (r && r < i) r = i;
-    if (g && g < i) g = i;
-    if (b && b < i) b = i;
-    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));
-  };
-  d3_rgbPrototype.darker = function(k) {
-    k = Math.pow(.7, arguments.length ? k : 1);
-    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));
-  };
-  d3_rgbPrototype.hsl = function() {
-    return d3_rgb_hsl(this.r, this.g, this.b);
-  };
-  d3_rgbPrototype.toString = function() {
-    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
-  };
-  function d3_rgb_hex(v) {
-    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
-  }
-  function d3_rgb_parse(format, rgb, hsl) {
-    var r = 0, g = 0, b = 0, m1, m2, name;
-    m1 = /([a-z]+)\((.*)\)/i.exec(format);
-    if (m1) {
-      m2 = m1[2].split(",");
-      switch (m1[1]) {
-       case "hsl":
-        {
-          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
-        }
-
-       case "rgb":
-        {
-          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
-        }
-      }
-    }
-    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);
-    if (format != null && format.charAt(0) === "#") {
-      if (format.length === 4) {
-        r = format.charAt(1);
-        r += r;
-        g = format.charAt(2);
-        g += g;
-        b = format.charAt(3);
-        b += b;
-      } else if (format.length === 7) {
-        r = format.substring(1, 3);
-        g = format.substring(3, 5);
-        b = format.substring(5, 7);
-      }
-      r = parseInt(r, 16);
-      g = parseInt(g, 16);
-      b = parseInt(b, 16);
-    }
-    return rgb(r, g, b);
-  }
-  function d3_rgb_hsl(r, g, b) {
-    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
-    if (d) {
-      s = l < .5 ? d / (max + min) : d / (2 - max - min);
-      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
-      h *= 60;
-    } else {
-      h = NaN;
-      s = l > 0 && l < 1 ? 0 : h;
-    }
-    return d3_hsl(h, s, l);
-  }
-  function d3_rgb_lab(r, g, b) {
-    r = d3_rgb_xyz(r);
-    g = d3_rgb_xyz(g);
-    b = d3_rgb_xyz(b);
-    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
-    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
-  }
-  function d3_rgb_xyz(r) {
-    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
-  }
-  function d3_rgb_parseNumber(c) {
-    var f = parseFloat(c);
-    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
-  }
-  var d3_rgb_names = d3.map({
-    aliceblue: 15792383,
-    antiquewhite: 16444375,
-    aqua: 65535,
-    aquamarine: 8388564,
-    azure: 15794175,
-    beige: 16119260,
-    bisque: 16770244,
-    black: 0,
-    blanchedalmond: 16772045,
-    blue: 255,
-    blueviolet: 9055202,
-    brown: 10824234,
-    burlywood: 14596231,
-    cadetblue: 6266528,
-    chartreuse: 8388352,
-    chocolate: 13789470,
-    coral: 16744272,
-    cornflowerblue: 6591981,
-    cornsilk: 16775388,
-    crimson: 14423100,
-    cyan: 65535,
-    darkblue: 139,
-    darkcyan: 35723,
-    darkgoldenrod: 12092939,
-    darkgray: 11119017,
-    darkgreen: 25600,
-    darkgrey: 11119017,
-    darkkhaki: 12433259,
-    darkmagenta: 9109643,
-    darkolivegreen: 5597999,
-    darkorange: 16747520,
-    darkorchid: 10040012,
-    darkred: 9109504,
-    darksalmon: 15308410,
-    darkseagreen: 9419919,
-    darkslateblue: 4734347,
-    darkslategray: 3100495,
-    darkslategrey: 3100495,
-    darkturquoise: 52945,
-    darkviolet: 9699539,
-    deeppink: 16716947,
-    deepskyblue: 49151,
-    dimgray: 6908265,
-    dimgrey: 6908265,
-    dodgerblue: 2003199,
-    firebrick: 11674146,
-    floralwhite: 16775920,
-    forestgreen: 2263842,
-    fuchsia: 16711935,
-    gainsboro: 14474460,
-    ghostwhite: 16316671,
-    gold: 16766720,
-    goldenrod: 14329120,
-    gray: 8421504,
-    green: 32768,
-    greenyellow: 11403055,
-    grey: 8421504,
-    honeydew: 15794160,
-    hotpink: 16738740,
-    indianred: 13458524,
-    indigo: 4915330,
-    ivory: 16777200,
-    khaki: 15787660,
-    lavender: 15132410,
-    lavenderblush: 16773365,
-    lawngreen: 8190976,
-    lemonchiffon: 16775885,
-    lightblue: 11393254,
-    lightcoral: 15761536,
-    lightcyan: 14745599,
-    lightgoldenrodyellow: 16448210,
-    lightgray: 13882323,
-    lightgreen: 9498256,
-    lightgrey: 13882323,
-    lightpink: 16758465,
-    lightsalmon: 16752762,
-    lightseagreen: 2142890,
-    lightskyblue: 8900346,
-    lightslategray: 7833753,
-    lightslategrey: 7833753,
-    lightsteelblue: 11584734,
-    lightyellow: 16777184,
-    lime: 65280,
-    limegreen: 3329330,
-    linen: 16445670,
-    magenta: 16711935,
-    maroon: 8388608,
-    mediumaquamarine: 6737322,
-    mediumblue: 205,
-    mediumorchid: 12211667,
-    mediumpurple: 9662683,
-    mediumseagreen: 3978097,
-    mediumslateblue: 8087790,
-    mediumspringgreen: 64154,
-    mediumturquoise: 4772300,
-    mediumvioletred: 13047173,
-    midnightblue: 1644912,
-    mintcream: 16121850,
-    mistyrose: 16770273,
-    moccasin: 16770229,
-    navajowhite: 16768685,
-    navy: 128,
-    oldlace: 16643558,
-    olive: 8421376,
-    olivedrab: 7048739,
-    orange: 16753920,
-    orangered: 16729344,
-    orchid: 14315734,
-    palegoldenrod: 15657130,
-    palegreen: 10025880,
-    paleturquoise: 11529966,
-    palevioletred: 14381203,
-    papayawhip: 16773077,
-    peachpuff: 16767673,
-    peru: 13468991,
-    pink: 16761035,
-    plum: 14524637,
-    powderblue: 11591910,
-    purple: 8388736,
-    red: 16711680,
-    rosybrown: 12357519,
-    royalblue: 4286945,
-    saddlebrown: 9127187,
-    salmon: 16416882,
-    sandybrown: 16032864,
-    seagreen: 3050327,
-    seashell: 16774638,
-    sienna: 10506797,
-    silver: 12632256,
-    skyblue: 8900331,
-    slateblue: 6970061,
-    slategray: 7372944,
-    slategrey: 7372944,
-    snow: 16775930,
-    springgreen: 65407,
-    steelblue: 4620980,
-    tan: 13808780,
-    teal: 32896,
-    thistle: 14204888,
-    tomato: 16737095,
-    turquoise: 4251856,
-    violet: 15631086,
-    wheat: 16113331,
-    white: 16777215,
-    whitesmoke: 16119285,
-    yellow: 16776960,
-    yellowgreen: 10145074
-  });
-  d3_rgb_names.forEach(function(key, value) {
-    d3_rgb_names.set(key, d3_rgbNumber(value));
-  });
-  function d3_functor(v) {
-    return typeof v === "function" ? v : function() {
-      return v;
-    };
-  }
-  d3.functor = d3_functor;
-  function d3_identity(d) {
-    return d;
-  }
-  d3.xhr = d3_xhrType(d3_identity);
-  function d3_xhrType(response) {
-    return function(url, mimeType, callback) {
-      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType,
-      mimeType = null;
-      return d3_xhr(url, mimeType, response, callback);
-    };
-  }
-  function d3_xhr(url, mimeType, response, callback) {
-    var xhr = {}, dispatch = d3.dispatch("progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
-    if (d3_window.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
-    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
-      request.readyState > 3 && respond();
-    };
-    function respond() {
-      var status = request.status, result;
-      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {
-        try {
-          result = response.call(xhr, request);
-        } catch (e) {
-          dispatch.error.call(xhr, e);
-          return;
-        }
-        dispatch.load.call(xhr, result);
-      } else {
-        dispatch.error.call(xhr, request);
-      }
-    }
-    request.onprogress = function(event) {
-      var o = d3.event;
-      d3.event = event;
-      try {
-        dispatch.progress.call(xhr, request);
-      } finally {
-        d3.event = o;
-      }
-    };
-    xhr.header = function(name, value) {
-      name = (name + "").toLowerCase();
-      if (arguments.length < 2) return headers[name];
-      if (value == null) delete headers[name]; else headers[name] = value + "";
-      return xhr;
-    };
-    xhr.mimeType = function(value) {
-      if (!arguments.length) return mimeType;
-      mimeType = value == null ? null : value + "";
-      return xhr;
-    };
-    xhr.responseType = function(value) {
-      if (!arguments.length) return responseType;
-      responseType = value;
-      return xhr;
-    };
-    xhr.response = function(value) {
-      response = value;
-      return xhr;
-    };
-    [ "get", "post" ].forEach(function(method) {
-      xhr[method] = function() {
-        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
-      };
-    });
-    xhr.send = function(method, data, callback) {
-      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
-      request.open(method, url, true);
-      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
-      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
-      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
-      if (responseType != null) request.responseType = responseType;
-      if (callback != null) xhr.on("error", callback).on("load", function(request) {
-        callback(null, request);
-      });
-      request.send(data == null ? null : data);
-      return xhr;
-    };
-    xhr.abort = function() {
-      request.abort();
-      return xhr;
-    };
-    d3.rebind(xhr, dispatch, "on");
-    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
-  }
-  function d3_xhr_fixCallback(callback) {
-    return callback.length === 1 ? function(error, request) {
-      callback(error == null ? request : null);
-    } : callback;
-  }
-  d3.dsv = function(delimiter, mimeType) {
-    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
-    function dsv(url, row, callback) {
-      if (arguments.length < 3) callback = row, row = null;
-      var xhr = d3.xhr(url, mimeType, callback);
-      xhr.row = function(_) {
-        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
-      };
-      return xhr.row(row);
-    }
-    function response(request) {
-      return dsv.parse(request.responseText);
-    }
-    function typedResponse(f) {
-      return function(request) {
-        return dsv.parse(request.responseText, f);
-      };
-    }
-    dsv.parse = function(text, f) {
-      var o;
-      return dsv.parseRows(text, function(row, i) {
-        if (o) return o(row, i - 1);
-        var a = new Function("d", "return {" + row.map(function(name, i) {
-          return JSON.stringify(name) + ": d[" + i + "]";
-        }).join(",") + "}");
-        o = f ? function(row, i) {
-          return f(a(row), i);
-        } : a;
-      });
-    };
-    dsv.parseRows = function(text, f) {
-      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
-      function token() {
-        if (I >= N) return EOF;
-        if (eol) return eol = false, EOL;
-        var j = I;
-        if (text.charCodeAt(j) === 34) {
-          var i = j;
-          while (i++ < N) {
-            if (text.charCodeAt(i) === 34) {
-              if (text.charCodeAt(i + 1) !== 34) break;
-              ++i;
-            }
-          }
-          I = i + 2;
-          var c = text.charCodeAt(i + 1);
-          if (c === 13) {
-            eol = true;
-            if (text.charCodeAt(i + 2) === 10) ++I;
-          } else if (c === 10) {
-            eol = true;
-          }
-          return text.substring(j + 1, i).replace(/""/g, '"');
-        }
-        while (I < N) {
-          var c = text.charCodeAt(I++), k = 1;
-          if (c === 10) eol = true; else if (c === 13) {
-            eol = true;
-            if (text.charCodeAt(I) === 10) ++I, ++k;
-          } else if (c !== delimiterCode) continue;
-          return text.substring(j, I - k);
-        }
-        return text.substring(j);
-      }
-      while ((t = token()) !== EOF) {
-        var a = [];
-        while (t !== EOL && t !== EOF) {
-          a.push(t);
-          t = token();
-        }
-        if (f && !(a = f(a, n++))) continue;
-        rows.push(a);
-      }
-      return rows;
-    };
-    dsv.format = function(rows) {
-      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
-      var fieldSet = new d3_Set(), fields = [];
-      rows.forEach(function(row) {
-        for (var field in row) {
-          if (!fieldSet.has(field)) {
-            fields.push(fieldSet.add(field));
-          }
-        }
-      });
-      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
-        return fields.map(function(field) {
-          return formatValue(row[field]);
-        }).join(delimiter);
-      })).join("\n");
-    };
-    dsv.formatRows = function(rows) {
-      return rows.map(formatRow).join("\n");
-    };
-    function formatRow(row) {
-      return row.map(formatValue).join(delimiter);
-    }
-    function formatValue(text) {
-      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
-    }
-    return dsv;
-  };
-  d3.csv = d3.dsv(",", "text/csv");
-  d3.tsv = d3.dsv("	", "text/tab-separated-values");
-  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, "requestAnimationFrame")] || function(callback) {
-    setTimeout(callback, 17);
-  };
-  d3.timer = function(callback, delay, then) {
-    var n = arguments.length;
-    if (n < 2) delay = 0;
-    if (n < 3) then = Date.now();
-    var time = then + delay, timer = {
-      callback: callback,
-      time: time,
-      next: null
-    };
-    if (d3_timer_queueTail) d3_timer_queueTail.next = timer; else d3_timer_queueHead = timer;
-    d3_timer_queueTail = timer;
-    if (!d3_timer_interval) {
-      d3_timer_timeout = clearTimeout(d3_timer_timeout);
-      d3_timer_interval = 1;
-      d3_timer_frame(d3_timer_step);
-    }
-  };
-  function d3_timer_step() {
-    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
-    if (delay > 24) {
-      if (isFinite(delay)) {
-        clearTimeout(d3_timer_timeout);
-        d3_timer_timeout = setTimeout(d3_timer_step, delay);
-      }
-      d3_timer_interval = 0;
-    } else {
-      d3_timer_interval = 1;
-      d3_timer_frame(d3_timer_step);
-    }
-  }
-  d3.timer.flush = function() {
-    d3_timer_mark();
-    d3_timer_sweep();
-  };
-  function d3_timer_replace(callback, delay, then) {
-    var n = arguments.length;
-    if (n < 2) delay = 0;
-    if (n < 3) then = Date.now();
-    d3_timer_active.callback = callback;
-    d3_timer_active.time = then + delay;
-  }
-  function d3_timer_mark() {
-    var now = Date.now();
-    d3_timer_active = d3_timer_queueHead;
-    while (d3_timer_active) {
-      if (now >= d3_timer_active.time) d3_timer_active.flush = d3_timer_active.callback(now - d3_timer_active.time);
-      d3_timer_active = d3_timer_active.next;
-    }
-    return now;
-  }
-  function d3_timer_sweep() {
-    var t0, t1 = d3_timer_queueHead, time = Infinity;
-    while (t1) {
-      if (t1.flush) {
-        t1 = t0 ? t0.next = t1.next : d3_timer_queueHead = t1.next;
-      } else {
-        if (t1.time < time) time = t1.time;
-        t1 = (t0 = t1).next;
-      }
-    }
-    d3_timer_queueTail = t0;
-    return time;
-  }
-  var d3_format_decimalPoint = ".", d3_format_thousandsSeparator = ",", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = "$";
-  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
-  d3.formatPrefix = function(value, precision) {
-    var i = 0;
-    if (value) {
-      if (value < 0) value *= -1;
-      if (precision) value = d3.round(value, d3_format_precision(value, precision));
-      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
-      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));
-    }
-    return d3_formatPrefixes[8 + i / 3];
-  };
-  function d3_formatPrefix(d, i) {
-    var k = Math.pow(10, Math.abs(8 - i) * 3);
-    return {
-      scale: i > 8 ? function(d) {
-        return d / k;
-      } : function(d) {
-        return d * k;
-      },
-      symbol: d
-    };
-  }
-  d3.round = function(x, n) {
-    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
-  };
-  d3.format = function(specifier) {
-    var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = "", integer = false;
-    if (precision) precision = +precision.substring(1);
-    if (zfill || fill === "0" && align === "=") {
-      zfill = fill = "0";
-      align = "=";
-      if (comma) width -= Math.floor((width - 1) / 4);
-    }
-    switch (type) {
-     case "n":
-      comma = true;
-      type = "g";
-      break;
-
-     case "%":
-      scale = 100;
-      suffix = "%";
-      type = "f";
-      break;
-
-     case "p":
-      scale = 100;
-      suffix = "%";
-      type = "r";
-      break;
-
-     case "b":
-     case "o":
-     case "x":
-     case "X":
-      if (symbol === "#") symbol = "0" + type.toLowerCase();
-
-     case "c":
-     case "d":
-      integer = true;
-      precision = 0;
-      break;
-
-     case "s":
-      scale = -1;
-      type = "r";
-      break;
-    }
-    if (symbol === "#") symbol = ""; else if (symbol === "$") symbol = d3_format_currencySymbol;
-    if (type == "r" && !precision) type = "g";
-    if (precision != null) {
-      if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
-    }
-    type = d3_format_types.get(type) || d3_format_typeDefault;
-    var zcomma = zfill && comma;
-    return function(value) {
-      if (integer && value % 1) return "";
-      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign;
-      if (scale < 0) {
-        var prefix = d3.formatPrefix(value, precision);
-        value = prefix.scale(value);
-        suffix = prefix.symbol;
-      } else {
-        value *= scale;
-      }
-      value = type(value, precision);
-      var i = value.lastIndexOf("."), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? "" : d3_format_decimalPoint + value.substring(i + 1);
-      if (!zfill && comma) before = d3_format_group(before);
-      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
-      if (zcomma) before = d3_format_group(padding + before);
-      negative += symbol;
-      value = before + after;
-      return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;
-    };
-  };
-  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
-  var d3_format_types = d3.map({
-    b: function(x) {
-      return x.toString(2);
-    },
-    c: function(x) {
-      return String.fromCharCode(x);
-    },
-    o: function(x) {
-      return x.toString(8);
-    },
-    x: function(x) {
-      return x.toString(16);
-    },
-    X: function(x) {
-      return x.toString(16).toUpperCase();
-    },
-    g: function(x, p) {
-      return x.toPrecision(p);
-    },
-    e: function(x, p) {
-      return x.toExponential(p);
-    },
-    f: function(x, p) {
-      return x.toFixed(p);
-    },
-    r: function(x, p) {
-      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
-    }
-  });
-  function d3_format_precision(x, p) {
-    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
-  }
-  function d3_format_typeDefault(x) {
-    return x + "";
-  }
-  var d3_format_group = d3_identity;
-  if (d3_format_grouping) {
-    var d3_format_groupingLength = d3_format_grouping.length;
-    d3_format_group = function(value) {
-      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];
-      while (i > 0 && g > 0) {
-        t.push(value.substring(i -= g, i + g));
-        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];
-      }
-      return t.reverse().join(d3_format_thousandsSeparator);
-    };
-  }
-  d3.geo = {};
-  function d3_adder() {}
-  d3_adder.prototype = {
-    s: 0,
-    t: 0,
-    add: function(y) {
-      d3_adderSum(y, this.t, d3_adderTemp);
-      d3_adderSum(d3_adderTemp.s, this.s, this);
-      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
-    },
-    reset: function() {
-      this.s = this.t = 0;
-    },
-    valueOf: function() {
-      return this.s;
-    }
-  };
-  var d3_adderTemp = new d3_adder();
-  function d3_adderSum(a, b, o) {
-    var x = o.s = a + b, bv = x - a, av = x - bv;
-    o.t = a - av + (b - bv);
-  }
-  d3.geo.stream = function(object, listener) {
-    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
-      d3_geo_streamObjectType[object.type](object, listener);
-    } else {
-      d3_geo_streamGeometry(object, listener);
-    }
-  };
-  function d3_geo_streamGeometry(geometry, listener) {
-    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
-      d3_geo_streamGeometryType[geometry.type](geometry, listener);
-    }
-  }
-  var d3_geo_streamObjectType = {
-    Feature: function(feature, listener) {
-      d3_geo_streamGeometry(feature.geometry, listener);
-    },
-    FeatureCollection: function(object, listener) {
-      var features = object.features, i = -1, n = features.length;
-      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
-    }
-  };
-  var d3_geo_streamGeometryType = {
-    Sphere: function(object, listener) {
-      listener.sphere();
-    },
-    Point: function(object, listener) {
-      var coordinate = object.coordinates;
-      listener.point(coordinate[0], coordinate[1]);
-    },
-    MultiPoint: function(object, listener) {
-      var coordinates = object.coordinates, i = -1, n = coordinates.length, coordinate;
-      while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1]);
-    },
-    LineString: function(object, listener) {
-      d3_geo_streamLine(object.coordinates, listener, 0);
-    },
-    MultiLineString: function(object, listener) {
-      var coordinates = object.coordinates, i = -1, n = coordinates.length;
-      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
-    },
-    Polygon: function(object, listener) {
-      d3_geo_streamPolygon(object.coordinates, listener);
-    },
-    MultiPolygon: function(object, listener) {
-      var coordinates = object.coordinates, i = -1, n = coordinates.length;
-      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
-    },
-    GeometryCollection: function(object, listener) {
-      var geometries = object.geometries, i = -1, n = geometries.length;
-      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
-    }
-  };
-  function d3_geo_streamLine(coordinates, listener, closed) {
-    var i = -1, n = coordinates.length - closed, coordinate;
-    listener.lineStart();
-    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1]);
-    listener.lineEnd();
-  }
-  function d3_geo_streamPolygon(coordinates, listener) {
-    var i = -1, n = coordinates.length;
-    listener.polygonStart();
-    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
-    listener.polygonEnd();
-  }
-  d3.geo.area = function(object) {
-    d3_geo_areaSum = 0;
-    d3.geo.stream(object, d3_geo_area);
-    return d3_geo_areaSum;
-  };
-  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
-  var d3_geo_area = {
-    sphere: function() {
-      d3_geo_areaSum += 4 * π;
-    },
-    point: d3_noop,
-    lineStart: d3_noop,
-    lineEnd: d3_noop,
-    polygonStart: function() {
-      d3_geo_areaRingSum.reset();
-      d3_geo_area.lineStart = d3_geo_areaRingStart;
-    },
-    polygonEnd: function() {
-      var area = 2 * d3_geo_areaRingSum;
-      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
-      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
-    }
-  };
-  function d3_geo_areaRingStart() {
-    var λ00, φ00, λ0, cosφ0, sinφ0;
-    d3_geo_area.point = function(λ, φ) {
-      d3_geo_area.point = nextPoint;
-      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4),
-      sinφ0 = Math.sin(φ);
-    };
-    function nextPoint(λ, φ) {
-      λ *= d3_radians;
-      φ = φ * d3_radians / 2 + π / 4;
-      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);
-      d3_geo_areaRingSum.add(Math.atan2(v, u));
-      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
-    }
-    d3_geo_area.lineEnd = function() {
-      nextPoint(λ00, φ00);
-    };
-  }
-  function d3_geo_cartesian(spherical) {
-    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
-    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
-  }
-  function d3_geo_cartesianDot(a, b) {
-    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
-  }
-  function d3_geo_cartesianCross(a, b) {
-    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
-  }
-  function d3_geo_cartesianAdd(a, b) {
-    a[0] += b[0];
-    a[1] += b[1];
-    a[2] += b[2];
-  }
-  function d3_geo_cartesianScale(vector, k) {
-    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
-  }
-  function d3_geo_cartesianNormalize(d) {
-    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
-    d[0] /= l;
-    d[1] /= l;
-    d[2] /= l;
-  }
-  function d3_geo_spherical(cartesian) {
-    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
-  }
-  function d3_geo_sphericalEqual(a, b) {
-    return Math.abs(a[0] - b[0]) < ε && Math.abs(a[1] - b[1]) < ε;
-  }
-  d3.geo.bounds = function() {
-    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
-    var bound = {
-      point: point,
-      lineStart: lineStart,
-      lineEnd: lineEnd,
-      polygonStart: function() {
-        bound.point = ringPoint;
-        bound.lineStart = ringStart;
-        bound.lineEnd = ringEnd;
-        dλSum = 0;
-        d3_geo_area.polygonStart();
-      },
-      polygonEnd: function() {
-        d3_geo_area.polygonEnd();
-        bound.point = point;
-        bound.lineStart = lineStart;
-        bound.lineEnd = lineEnd;
-        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
-        range[0] = λ0, range[1] = λ1;
-      }
-    };
-    function point(λ, φ) {
-      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
-      if (φ < φ0) φ0 = φ;
-      if (φ > φ1) φ1 = φ;
-    }
-    function linePoint(λ, φ) {
-      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
-      if (p0) {
-        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
-        d3_geo_cartesianNormalize(inflection);
-        inflection = d3_geo_spherical(inflection);
-        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = Math.abs(dλ) > 180;
-        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
-          var φi = inflection[1] * d3_degrees;
-          if (φi > φ1) φ1 = φi;
-        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
-          var φi = -inflection[1] * d3_degrees;
-          if (φi < φ0) φ0 = φi;
-        } else {
-          if (φ < φ0) φ0 = φ;
-          if (φ > φ1) φ1 = φ;
-        }
-        if (antimeridian) {
-          if (λ < λ_) {
-            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
-          } else {
-            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
-          }
-        } else {
-          if (λ1 >= λ0) {
-            if (λ < λ0) λ0 = λ;
-            if (λ > λ1) λ1 = λ;
-          } else {
-            if (λ > λ_) {
-              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
-            } else {
-              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
-            }
-          }
-        }
-      } else {
-        point(λ, φ);
-      }
-      p0 = p, λ_ = λ;
-    }
-    function lineStart() {
-      bound.point = linePoint;
-    }
-    function lineEnd() {
-      range[0] = λ0, range[1] = λ1;
-      bound.point = point;
-      p0 = null;
-    }
-    function ringPoint(λ, φ) {
-      if (p0) {
-        var dλ = λ - λ_;
-        dλSum += Math.abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
-      } else λ__ = λ, φ__ = φ;
-      d3_geo_area.point(λ, φ);
-      linePoint(λ, φ);
-    }
-    function ringStart() {
-      d3_geo_area.lineStart();
-    }
-    function ringEnd() {
-      ringPoint(λ__, φ__);
-      d3_geo_area.lineEnd();
-      if (Math.abs(dλSum) > ε) λ0 = -(λ1 = 180);
-      range[0] = λ0, range[1] = λ1;
-      p0 = null;
-    }
-    function angle(λ0, λ1) {
-      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
-    }
-    function compareRanges(a, b) {
-      return a[0] - b[0];
-    }
-    function withinRange(x, range) {
-      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
-    }
-    return function(feature) {
-      φ1 = λ1 = -(λ0 = φ0 = Infinity);
-      ranges = [];
-      d3.geo.stream(feature, bound);
-      var n = ranges.length;
-      if (n) {
-        ranges.sort(compareRanges);
-        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
-          b = ranges[i];
-          if (withinRange(b[0], a) || withinRange(b[1], a)) {
-            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
-            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
-          } else {
-            merged.push(a = b);
-          }
-        }
-        var best = -Infinity, dλ;
-        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
-          b = merged[i];
-          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
-        }
-      }
-      ranges = range = null;
-      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
-    };
-  }();
-  d3.geo.centroid = function(object) {
-    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
-    d3.geo.stream(object, d3_geo_centroid);
-    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
-    if (m < ε2) {
-      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
-      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
-      m = x * x + y * y + z * z;
-      if (m < ε2) return [ NaN, NaN ];
-    }
-    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
-  };
-  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
-  var d3_geo_centroid = {
-    sphere: d3_noop,
-    point: d3_geo_centroidPoint,
-    lineStart: d3_geo_centroidLineStart,
-    lineEnd: d3_geo_centroidLineEnd,
-    polygonStart: function() {
-      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
-    },
-    polygonEnd: function() {
-      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
-    }
-  };
-  function d3_geo_centroidPoint(λ, φ) {
-    λ *= d3_radians;
-    var cosφ = Math.cos(φ *= d3_radians);
-    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
-  }
-  function d3_geo_centroidPointXYZ(x, y, z) {
-    ++d3_geo_centroidW0;
-    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
-    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
-    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
-  }
-  function d3_geo_centroidLineStart() {
-    var x0, y0, z0;
-    d3_geo_centroid.point = function(λ, φ) {
-      λ *= d3_radians;
-      var cosφ = Math.cos(φ *= d3_radians);
-      x0 = cosφ * Math.cos(λ);
-      y0 = cosφ * Math.sin(λ);
-      z0 = Math.sin(φ);
-      d3_geo_centroid.point = nextPoint;
-      d3_geo_centroidPointXYZ(x0, y0, z0);
-    };
-    function nextPoint(λ, φ) {
-      λ *= d3_radians;
-      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
-      d3_geo_centroidW1 += w;
-      d3_geo_centroidX1 += w * (x0 + (x0 = x));
-      d3_geo_centroidY1 += w * (y0 + (y0 = y));
-      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
-      d3_geo_centroidPointXYZ(x0, y0, z0);
-    }
-  }
-  function d3_geo_centroidLineEnd() {
-    d3_geo_centroid.point = d3_geo_centroidPoint;
-  }
-  function d3_geo_centroidRingStart() {
-    var λ00, φ00, x0, y0, z0;
-    d3_geo_centroid.point = function(λ, φ) {
-      λ00 = λ, φ00 = φ;
-      d3_geo_centroid.point = nextPoint;
-      λ *= d3_radians;
-      var cosφ = Math.cos(φ *= d3_radians);
-      x0 = cosφ * Math.cos(λ);
-      y0 = cosφ * Math.sin(λ);
-      z0 = Math.sin(φ);
-      d3_geo_centroidPointXYZ(x0, y0, z0);
-    };
-    d3_geo_centroid.lineEnd = function() {
-      nextPoint(λ00, φ00);
-      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
-      d3_geo_centroid.point = d3_geo_centroidPoint;
-    };
-    function nextPoint(λ, φ) {
-      λ *= d3_radians;
-      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
-      d3_geo_centroidX2 += v * cx;
-      d3_geo_centroidY2 += v * cy;
-      d3_geo_centroidZ2 += v * cz;
-      d3_geo_centroidW1 += w;
-      d3_geo_centroidX1 += w * (x0 + (x0 = x));
-      d3_geo_centroidY1 += w * (y0 + (y0 = y));
-      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
-      d3_geo_centroidPointXYZ(x0, y0, z0);
-    }
-  }
-  function d3_true() {
-    return true;
-  }
-  function d3_geo_clipPolygon(segments, compare, inside, interpolate, listener) {
-    var subject = [], clip = [];
-    segments.forEach(function(segment) {
-      if ((n = segment.length - 1) <= 0) return;
-      var n, p0 = segment[0], p1 = segment[n];
-      if (d3_geo_sphericalEqual(p0, p1)) {
-        listener.lineStart();
-        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
-        listener.lineEnd();
-        return;
-      }
-      var a = {
-        point: p0,
-        points: segment,
-        other: null,
-        visited: false,
-        entry: true,
-        subject: true
-      }, b = {
-        point: p0,
-        points: [ p0 ],
-        other: a,
-        visited: false,
-        entry: false,
-        subject: false
-      };
-      a.other = b;
-      subject.push(a);
-      clip.push(b);
-      a = {
-        point: p1,
-        points: [ p1 ],
-        other: null,
-        visited: false,
-        entry: false,
-        subject: true
-      };
-      b = {
-        point: p1,
-        points: [ p1 ],
-        other: a,
-        visited: false,
-        entry: true,
-        subject: false
-      };
-      a.other = b;
-      subject.push(a);
-      clip.push(b);
-    });
-    clip.sort(compare);
-    d3_geo_clipPolygonLinkCircular(subject);
-    d3_geo_clipPolygonLinkCircular(clip);
-    if (!subject.length) return;
-    if (inside) for (var i = 1, e = !inside(clip[0].point), n = clip.length; i < n; ++i) {
-      clip[i].entry = e = !e;
-    }
-    var start = subject[0], current, points, point;
-    while (1) {
-      current = start;
-      while (current.visited) if ((current = current.next) === start) return;
-      points = current.points;
-      listener.lineStart();
-      do {
-        current.visited = current.other.visited = true;
-        if (current.entry) {
-          if (current.subject) {
-            for (var i = 0; i < points.length; i++) listener.point((point = points[i])[0], point[1]);
-          } else {
-            interpolate(current.point, current.next.point, 1, listener);
-          }
-          current = current.next;
-        } else {
-          if (current.subject) {
-            points = current.prev.points;
-            for (var i = points.length; --i >= 0; ) listener.point((point = points[i])[0], point[1]);
-          } else {
-            interpolate(current.point, current.prev.point, -1, listener);
-          }
-          current = current.prev;
-        }
-        current = current.other;
-        points = current.points;
-      } while (!current.visited);
-      listener.lineEnd();
-    }
-  }
-  function d3_geo_clipPolygonLinkCircular(array) {
-    if (!(n = array.length)) return;
-    var n, i = 0, a = array[0], b;
-    while (++i < n) {
-      a.next = b = array[i];
-      b.prev = a;
-      a = b;
-    }
-    a.next = b = array[0];
-    b.prev = a;
-  }
-  function d3_geo_clip(pointVisible, clipLine, interpolate, polygonContains) {
-    return function(listener) {
-      var line = clipLine(listener);
-      var clip = {
-        point: point,
-        lineStart: lineStart,
-        lineEnd: lineEnd,
-        polygonStart: function() {
-          clip.point = pointRing;
-          clip.lineStart = ringStart;
-          clip.lineEnd = ringEnd;
-          segments = [];
-          polygon = [];
-          listener.polygonStart();
-        },
-        polygonEnd: function() {
-          clip.point = point;
-          clip.lineStart = lineStart;
-          clip.lineEnd = lineEnd;
-          segments = d3.merge(segments);
-          if (segments.length) {
-            d3_geo_clipPolygon(segments, d3_geo_clipSort, null, interpolate, listener);
-          } else if (polygonContains(polygon)) {
-            listener.lineStart();
-            interpolate(null, null, 1, listener);
-            listener.lineEnd();
-          }
-          listener.polygonEnd();
-          segments = polygon = null;
-        },
-        sphere: function() {
-          listener.polygonStart();
-          listener.lineStart();
-          interpolate(null, null, 1, listener);
-          listener.lineEnd();
-          listener.polygonEnd();
-        }
-      };
-      function point(λ, φ) {
-        if (pointVisible(λ, φ)) listener.point(λ, φ);
-      }
-      function pointLine(λ, φ) {
-        line.point(λ, φ);
-      }
-      function lineStart() {
-        clip.point = pointLine;
-        line.lineStart();
-      }
-      function lineEnd() {
-        clip.point = point;
-        line.lineEnd();
-      }
-      var segments;
-      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;
-      function pointRing(λ, φ) {
-        ringListener.point(λ, φ);
-        ring.push([ λ, φ ]);
-      }
-      function ringStart() {
-        ringListener.lineStart();
-        ring = [];
-      }
-      function ringEnd() {
-        pointRing(ring[0][0], ring[0][1]);
-        ringListener.lineEnd();
-        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
-        ring.pop();
-        polygon.push(ring);
-        ring = null;
-        if (!n) return;
-        if (clean & 1) {
-          segment = ringSegments[0];
-          var n = segment.length - 1, i = -1, point;
-          listener.lineStart();
-          while (++i < n) listener.point((point = segment[i])[0], point[1]);
-          listener.lineEnd();
-          return;
-        }
-        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
-        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
-      }
-      return clip;
-    };
-  }
-  function d3_geo_clipSegmentLength1(segment) {
-    return segment.length > 1;
-  }
-  function d3_geo_clipBufferListener() {
-    var lines = [], line;
-    return {
-      lineStart: function() {
-        lines.push(line = []);
-      },
-      point: function(λ, φ) {
-        line.push([ λ, φ ]);
-      },
-      lineEnd: d3_noop,
-      buffer: function() {
-        var buffer = lines;
-        lines = [];
-        line = null;
-        return buffer;
-      },
-      rejoin: function() {
-        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
-      }
-    };
-  }
-  function d3_geo_clipSort(a, b) {
-    return ((a = a.point)[0] < 0 ? a[1] - π / 2 - ε : π / 2 - a[1]) - ((b = b.point)[0] < 0 ? b[1] - π / 2 - ε : π / 2 - b[1]);
-  }
-  function d3_geo_pointInPolygon(point, polygon) {
-    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, polar = false, southPole = false, winding = 0;
-    d3_geo_areaRingSum.reset();
-    for (var i = 0, n = polygon.length; i < n; ++i) {
-      var ring = polygon[i], m = ring.length;
-      if (!m) continue;
-      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
-      while (true) {
-        if (j === m) j = 0;
-        point = ring[j];
-        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = Math.abs(dλ) > π, k = sinφ0 * sinφ;
-        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));
-        if (Math.abs(φ) < ε) southPole = true;
-        polarAngle += antimeridian ? dλ + (dλ >= 0 ? 2 : -2) * π : dλ;
-        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
-          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
-          d3_geo_cartesianNormalize(arc);
-          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
-          d3_geo_cartesianNormalize(intersection);
-          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
-          if (parallel > φarc) {
-            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
-          }
-        }
-        if (!j++) break;
-        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
-      }
-      if (Math.abs(polarAngle) > ε) polar = true;
-    }
-    return (!southPole && !polar && d3_geo_areaRingSum < 0 || polarAngle < -ε) ^ winding & 1;
-  }
-  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, d3_geo_clipAntimeridianPolygonContains);
-  function d3_geo_clipAntimeridianLine(listener) {
-    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
-    return {
-      lineStart: function() {
-        listener.lineStart();
-        clean = 1;
-      },
-      point: function(λ1, φ1) {
-        var sλ1 = λ1 > 0 ? π : -π, dλ = Math.abs(λ1 - λ0);
-        if (Math.abs(dλ - π) < ε) {
-          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? π / 2 : -π / 2);
-          listener.point(sλ0, φ0);
-          listener.lineEnd();
-          listener.lineStart();
-          listener.point(sλ1, φ0);
-          listener.point(λ1, φ0);
-          clean = 0;
-        } else if (sλ0 !== sλ1 && dλ >= π) {
-          if (Math.abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
-          if (Math.abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
-          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
-          listener.point(sλ0, φ0);
-          listener.lineEnd();
-          listener.lineStart();
-          listener.point(sλ1, φ0);
-          clean = 0;
-        }
-        listener.point(λ0 = λ1, φ0 = φ1);
-        sλ0 = sλ1;
-      },
-      lineEnd: function() {
-        listener.lineEnd();
-        λ0 = φ0 = NaN;
-      },
-      clean: function() {
-        return 2 - clean;
-      }
-    };
-  }
-  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
-    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
-    return Math.abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
-  }
-  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
-    var φ;
-    if (from == null) {
-      φ = direction * π / 2;
-      listener.point(-π, φ);
-      listener.point(0, φ);
-      listener.point(π, φ);
-      listener.point(π, 0);
-      listener.point(π, -φ);
-      listener.point(0, -φ);
-      listener.point(-π, -φ);
-      listener.point(-π, 0);
-      listener.point(-π, φ);
-    } else if (Math.abs(from[0] - to[0]) > ε) {
-      var s = (from[0] < to[0] ? 1 : -1) * π;
-      φ = direction * s / 2;
-      listener.point(-s, φ);
-      listener.point(0, φ);
-      listener.point(s, φ);
-    } else {
-      listener.point(to[0], to[1]);
-    }
-  }
-  var d3_geo_clipAntimeridianPoint = [ -π, 0 ];
-  function d3_geo_clipAntimeridianPolygonContains(polygon) {
-    return d3_geo_pointInPolygon(d3_geo_clipAntimeridianPoint, polygon);
-  }
-  function d3_geo_clipCircle(radius) {
-    var cr = Math.cos(radius), smallRadius = cr > 0, point = [ radius, 0 ], notHemisphere = Math.abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
-    return d3_geo_clip(visible, clipLine, interpolate, polygonContains);
-    function visible(λ, φ) {
-      return Math.cos(λ) * Math.cos(φ) > cr;
-    }
-    function clipLine(listener) {
-      var point0, c0, v0, v00, clean;
-      return {
-        lineStart: function() {
-          v00 = v0 = false;
-          clean = 1;
-        },
-        point: function(λ, φ) {
-          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
-          if (!point0 && (v00 = v0 = v)) listener.lineStart();
-          if (v !== v0) {
-            point2 = intersect(point0, point1);
-            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
-              point1[0] += ε;
-              point1[1] += ε;
-              v = visible(point1[0], point1[1]);
-            }
-          }
-          if (v !== v0) {
-            clean = 0;
-            if (v) {
-              listener.lineStart();
-              point2 = intersect(point1, point0);
-              listener.point(point2[0], point2[1]);
-            } else {
-              point2 = intersect(point0, point1);
-              listener.point(point2[0], point2[1]);
-              listener.lineEnd();
-            }
-            point0 = point2;
-          } else if (notHemisphere && point0 && smallRadius ^ v) {
-            var t;
-            if (!(c & c0) && (t = intersect(point1, point0, true))) {
-              clean = 0;
-              if (smallRadius) {
-                listener.lineStart();
-                listener.point(t[0][0], t[0][1]);
-                listener.point(t[1][0], t[1][1]);
-                listener.lineEnd();
-              } else {
-                listener.point(t[1][0], t[1][1]);
-                listener.lineEnd();
-                listener.lineStart();
-                listener.point(t[0][0], t[0][1]);
-              }
-            }
-          }
-          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
-            listener.point(point1[0], point1[1]);
-          }
-          point0 = point1, v0 = v, c0 = c;
-        },
-        lineEnd: function() {
-          if (v0) listener.lineEnd();
-          point0 = null;
-        },
-        clean: function() {
-          return clean | (v00 && v0) << 1;
-        }
-      };
-    }
-    function intersect(a, b, two) {
-      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
-      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
-      if (!determinant) return !two && a;
-      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
-      d3_geo_cartesianAdd(A, B);
-      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
-      if (t2 < 0) return;
-      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
-      d3_geo_cartesianAdd(q, A);
-      q = d3_geo_spherical(q);
-      if (!two) return q;
-      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
-      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
-      var δλ = λ1 - λ0, polar = Math.abs(δλ - π) < ε, meridian = polar || δλ < ε;
-      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
-      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (Math.abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
-        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
-        d3_geo_cartesianAdd(q1, A);
-        return [ q, d3_geo_spherical(q1) ];
-      }
-    }
-    function code(λ, φ) {
-      var r = smallRadius ? radius : π - radius, code = 0;
-      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
-      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
-      return code;
-    }
-    function polygonContains(polygon) {
-      return d3_geo_pointInPolygon(point, polygon);
-    }
-  }
-  var d3_geo_clipViewMAX = 1e9;
-  function d3_geo_clipView(x0, y0, x1, y1) {
-    return function(listener) {
-      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), segments, polygon, ring;
-      var clip = {
-        point: point,
-        lineStart: lineStart,
-        lineEnd: lineEnd,
-        polygonStart: function() {
-          listener = bufferListener;
-          segments = [];
-          polygon = [];
-        },
-        polygonEnd: function() {
-          listener = listener_;
-          if ((segments = d3.merge(segments)).length) {
-            listener.polygonStart();
-            d3_geo_clipPolygon(segments, compare, inside, interpolate, listener);
-            listener.polygonEnd();
-          } else if (insidePolygon([ x0, y0 ])) {
-            listener.polygonStart(), listener.lineStart();
-            interpolate(null, null, 1, listener);
-            listener.lineEnd(), listener.polygonEnd();
-          }
-          segments = polygon = ring = null;
-        }
-      };
-      function inside(point) {
-        var a = corner(point, -1), i = insidePolygon([ a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0 ]);
-        return i;
-      }
-      function insidePolygon(p) {
-        var wn = 0, n = polygon.length, y = p[1];
-        for (var i = 0; i < n; ++i) {
-          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
-            b = v[j];
-            if (a[1] <= y) {
-              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;
-            } else {
-              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;
-            }
-            a = b;
-          }
-        }
-        return wn !== 0;
-      }
-      function isLeft(a, b, c) {
-        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);
-      }
-      function interpolate(from, to, direction, listener) {
-        var a = 0, a1 = 0;
-        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
-          do {
-            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
-          } while ((a = (a + direction + 4) % 4) !== a1);
-        } else {
-          listener.point(to[0], to[1]);
-        }
-      }
-      function visible(x, y) {
-        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
-      }
-      function point(x, y) {
-        if (visible(x, y)) listener.point(x, y);
-      }
-      var x__, y__, v__, x_, y_, v_, first;
-      function lineStart() {
-        clip.point = linePoint;
-        if (polygon) polygon.push(ring = []);
-        first = true;
-        v_ = false;
-        x_ = y_ = NaN;
-      }
-      function lineEnd() {
-        if (segments) {
-          linePoint(x__, y__);
-          if (v__ && v_) bufferListener.rejoin();
-          segments.push(bufferListener.buffer());
-        }
-        clip.point = point;
-        if (v_) listener.lineEnd();
-      }
-      function linePoint(x, y) {
-        x = Math.max(-d3_geo_clipViewMAX, Math.min(d3_geo_clipViewMAX, x));
-        y = Math.max(-d3_geo_clipViewMAX, Math.min(d3_geo_clipViewMAX, y));
-        var v = visible(x, y);
-        if (polygon) ring.push([ x, y ]);
-        if (first) {
-          x__ = x, y__ = y, v__ = v;
-          first = false;
-          if (v) {
-            listener.lineStart();
-            listener.point(x, y);
-          }
-        } else {
-          if (v && v_) listener.point(x, y); else {
-            var a = [ x_, y_ ], b = [ x, y ];
-            if (clipLine(a, b)) {
-              if (!v_) {
-                listener.lineStart();
-                listener.point(a[0], a[1]);
-              }
-              listener.point(b[0], b[1]);
-              if (!v) listener.lineEnd();
-            } else if (v) {
-              listener.lineStart();
-              listener.point(x, y);
-            }
-          }
-        }
-        x_ = x, y_ = y, v_ = v;
-      }
-      return clip;
-    };
-    function corner(p, direction) {
-      return Math.abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : Math.abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : Math.abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
-    }
-    function compare(a, b) {
-      return comparePoints(a.point, b.point);
-    }
-    function comparePoints(a, b) {
-      var ca = corner(a, 1), cb = corner(b, 1);
-      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
-    }
-    function clipLine(a, b) {
-      var dx = b[0] - a[0], dy = b[1] - a[1], t = [ 0, 1 ];
-      if (Math.abs(dx) < ε && Math.abs(dy) < ε) return x0 <= a[0] && a[0] <= x1 && y0 <= a[1] && a[1] <= y1;
-      if (d3_geo_clipViewT(x0 - a[0], dx, t) && d3_geo_clipViewT(a[0] - x1, -dx, t) && d3_geo_clipViewT(y0 - a[1], dy, t) && d3_geo_clipViewT(a[1] - y1, -dy, t)) {
-        if (t[1] < 1) {
-          b[0] = a[0] + t[1] * dx;
-          b[1] = a[1] + t[1] * dy;
-        }
-        if (t[0] > 0) {
-          a[0] += t[0] * dx;
-          a[1] += t[0] * dy;
-        }
-        return true;
-      }
-      return false;
-    }
-  }
-  function d3_geo_clipViewT(num, denominator, t) {
-    if (Math.abs(denominator) < ε) return num <= 0;
-    var u = num / denominator;
-    if (denominator > 0) {
-      if (u > t[1]) return false;
-      if (u > t[0]) t[0] = u;
-    } else {
-      if (u < t[0]) return false;
-      if (u < t[1]) t[1] = u;
-    }
-    return true;
-  }
-  function d3_geo_compose(a, b) {
-    function compose(x, y) {
-      return x = a(x, y), b(x[0], x[1]);
-    }
-    if (a.invert && b.invert) compose.invert = function(x, y) {
-      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
-    };
-    return compose;
-  }
-  function d3_geo_conic(projectAt) {
-    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
-    p.parallels = function(_) {
-      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
-      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
-    };
-    return p;
-  }
-  function d3_geo_conicEqualArea(φ0, φ1) {
-    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
-    function forward(λ, φ) {
-      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
-      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
-    }
-    forward.invert = function(x, y) {
-      var ρ0_y = ρ0 - y;
-      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
-    };
-    return forward;
-  }
-  (d3.geo.conicEqualArea = function() {
-    return d3_geo_conic(d3_geo_conicEqualArea);
-  }).raw = d3_geo_conicEqualArea;
-  d3.geo.albers = function() {
-    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
-  };
-  d3.geo.albersUsa = function() {
-    var lower48 = d3.geo.albers();
-    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
-    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
-    var point, pointStream = {
-      point: function(x, y) {
-        point = [ x, y ];
-      }
-    }, lower48Point, alaskaPoint, hawaiiPoint;
-    function albersUsa(coordinates) {
-      var x = coordinates[0], y = coordinates[1];
-      point = null;
-      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
-      return point;
-    }
-    albersUsa.invert = function(coordinates) {
-      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
-      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
-    };
-    albersUsa.stream = function(stream) {
-      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
-      return {
-        point: function(x, y) {
-          lower48Stream.point(x, y);
-          alaskaStream.point(x, y);
-          hawaiiStream.point(x, y);
-        },
-        sphere: function() {
-          lower48Stream.sphere();
-          alaskaStream.sphere();
-          hawaiiStream.sphere();
-        },
-        lineStart: function() {
-          lower48Stream.lineStart();
-          alaskaStream.lineStart();
-          hawaiiStream.lineStart();
-        },
-        lineEnd: function() {
-          lower48Stream.lineEnd();
-          alaskaStream.lineEnd();
-          hawaiiStream.lineEnd();
-        },
-        polygonStart: function() {
-          lower48Stream.polygonStart();
-          alaskaStream.polygonStart();
-          hawaiiStream.polygonStart();
-        },
-        polygonEnd: function() {
-          lower48Stream.polygonEnd();
-          alaskaStream.polygonEnd();
-          hawaiiStream.polygonEnd();
-        }
-      };
-    };
-    albersUsa.precision = function(_) {
-      if (!arguments.length) return lower48.precision();
-      lower48.precision(_);
-      alaska.precision(_);
-      hawaii.precision(_);
-      return albersUsa;
-    };
-    albersUsa.scale = function(_) {
-      if (!arguments.length) return lower48.scale();
-      lower48.scale(_);
-      alaska.scale(_ * .35);
-      hawaii.scale(_);
-      return albersUsa.translate(lower48.translate());
-    };
-    albersUsa.translate = function(_) {
-      if (!arguments.length) return lower48.translate();
-      var k = lower48.scale(), x = +_[0], y = +_[1];
-      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
-      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
-      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
-      return albersUsa;
-    };
-    return albersUsa.scale(1070);
-  };
-  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
-    point: d3_noop,
-    lineStart: d3_noop,
-    lineEnd: d3_noop,
-    polygonStart: function() {
-      d3_geo_pathAreaPolygon = 0;
-      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
-    },
-    polygonEnd: function() {
-      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
-      d3_geo_pathAreaSum += Math.abs(d3_geo_pathAreaPolygon / 2);
-    }
-  };
-  function d3_geo_pathAreaRingStart() {
-    var x00, y00, x0, y0;
-    d3_geo_pathArea.point = function(x, y) {
-      d3_geo_pathArea.point = nextPoint;
-      x00 = x0 = x, y00 = y0 = y;
-    };
-    function nextPoint(x, y) {
-      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
-      x0 = x, y0 = y;
-    }
-    d3_geo_pathArea.lineEnd = function() {
-      nextPoint(x00, y00);
-    };
-  }
-  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
-  var d3_geo_pathBounds = {
-    point: d3_geo_pathBoundsPoint,
-    lineStart: d3_noop,
-    lineEnd: d3_noop,
-    polygonStart: d3_noop,
-    polygonEnd: d3_noop
-  };
-  function d3_geo_pathBoundsPoint(x, y) {
-    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
-    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
-    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
-    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
-  }
-  function d3_geo_pathBuffer() {
-    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
-    var stream = {
-      point: point,
-      lineStart: function() {
-        stream.point = pointLineStart;
-      },
-      lineEnd: lineEnd,
-      polygonStart: function() {
-        stream.lineEnd = lineEndPolygon;
-      },
-      polygonEnd: function() {
-        stream.lineEnd = lineEnd;
-        stream.point = point;
-      },
-      pointRadius: function(_) {
-        pointCircle = d3_geo_pathBufferCircle(_);
-        return stream;
-      },
-      result: function() {
-        if (buffer.length) {
-          var result = buffer.join("");
-          buffer = [];
-          return result;
-        }
-      }
-    };
-    function point(x, y) {
-      buffer.push("M", x, ",", y, pointCircle);
-    }
-    function pointLineStart(x, y) {
-      buffer.push("M", x, ",", y);
-      stream.point = pointLine;
-    }
-    function pointLine(x, y) {
-      buffer.push("L", x, ",", y);
-    }
-    function lineEnd() {
-      stream.point = point;
-    }
-    function lineEndPolygon() {
-      buffer.push("Z");
-    }
-    return stream;
-  }
-  function d3_geo_pathBufferCircle(radius) {
-    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
-  }
-  var d3_geo_pathCentroid = {
-    point: d3_geo_pathCentroidPoint,
-    lineStart: d3_geo_pathCentroidLineStart,
-    lineEnd: d3_geo_pathCentroidLineEnd,
-    polygonStart: function() {
-      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
-    },
-    polygonEnd: function() {
-      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
-      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
-      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
-    }
-  };
-  function d3_geo_pathCentroidPoint(x, y) {
-    d3_geo_centroidX0 += x;
-    d3_geo_centroidY0 += y;
-    ++d3_geo_centroidZ0;
-  }
-  function d3_geo_pathCentroidLineStart() {
-    var x0, y0;
-    d3_geo_pathCentroid.point = function(x, y) {
-      d3_geo_pathCentroid.point = nextPoint;
-      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
-    };
-    function nextPoint(x, y) {
-      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
-      d3_geo_centroidX1 += z * (x0 + x) / 2;
-      d3_geo_centroidY1 += z * (y0 + y) / 2;
-      d3_geo_centroidZ1 += z;
-      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
-    }
-  }
-  function d3_geo_pathCentroidLineEnd() {
-    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
-  }
-  function d3_geo_pathCentroidRingStart() {
-    var x00, y00, x0, y0;
-    d3_geo_pathCentroid.point = function(x, y) {
-      d3_geo_pathCentroid.point = nextPoint;
-      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
-    };
-    function nextPoint(x, y) {
-      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
-      d3_geo_centroidX1 += z * (x0 + x) / 2;
-      d3_geo_centroidY1 += z * (y0 + y) / 2;
-      d3_geo_centroidZ1 += z;
-      z = y0 * x - x0 * y;
-      d3_geo_centroidX2 += z * (x0 + x);
-      d3_geo_centroidY2 += z * (y0 + y);
-      d3_geo_centroidZ2 += z * 3;
-      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
-    }
-    d3_geo_pathCentroid.lineEnd = function() {
-      nextPoint(x00, y00);
-    };
-  }
-  function d3_geo_pathContext(context) {
-    var pointRadius = 4.5;
-    var stream = {
-      point: point,
-      lineStart: function() {
-        stream.point = pointLineStart;
-      },
-      lineEnd: lineEnd,
-      polygonStart: function() {
-        stream.lineEnd = lineEndPolygon;
-      },
-      polygonEnd: function() {
-        stream.lineEnd = lineEnd;
-        stream.point = point;
-      },
-      pointRadius: function(_) {
-        pointRadius = _;
-        return stream;
-      },
-      result: d3_noop
-    };
-    function point(x, y) {
-      context.moveTo(x, y);
-      context.arc(x, y, pointRadius, 0, 2 * π);
-    }
-    function pointLineStart(x, y) {
-      context.moveTo(x, y);
-      stream.point = pointLine;
-    }
-    function pointLine(x, y) {
-      context.lineTo(x, y);
-    }
-    function lineEnd() {
-      stream.point = point;
-    }
-    function lineEndPolygon() {
-      context.closePath();
-    }
-    return stream;
-  }
-  function d3_geo_resample(project) {
-    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
-    function resample(stream) {
-      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
-      var resample = {
-        point: point,
-        lineStart: lineStart,
-        lineEnd: lineEnd,
-        polygonStart: function() {
-          stream.polygonStart();
-          resample.lineStart = ringStart;
-        },
-        polygonEnd: function() {
-          stream.polygonEnd();
-          resample.lineStart = lineStart;
-        }
-      };
-      function point(x, y) {
-        x = project(x, y);
-        stream.point(x[0], x[1]);
-      }
-      function lineStart() {
-        x0 = NaN;
-        resample.point = linePoint;
-        stream.lineStart();
-      }
-      function linePoint(λ, φ) {
-        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
-        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
-        stream.point(x0, y0);
-      }
-      function lineEnd() {
-        resample.point = point;
-        stream.lineEnd();
-      }
-      function ringStart() {
-        lineStart();
-        resample.point = ringPoint;
-        resample.lineEnd = ringEnd;
-      }
-      function ringPoint(λ, φ) {
-        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
-        resample.point = linePoint;
-      }
-      function ringEnd() {
-        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
-        resample.lineEnd = lineEnd;
-        lineEnd();
-      }
-      return resample;
-    }
-    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
-      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
-      if (d2 > 4 * δ2 && depth--) {
-        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = Math.abs(Math.abs(c) - 1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
-        if (dz * dz / d2 > δ2 || Math.abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
-          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
-          stream.point(x2, y2);
-          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
-        }
-      }
-    }
-    resample.precision = function(_) {
-      if (!arguments.length) return Math.sqrt(δ2);
-      maxDepth = (δ2 = _ * _) > 0 && 16;
-      return resample;
-    };
-    return resample;
-  }
-  d3.geo.path = function() {
-    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
-    function path(object) {
-      if (object) {
-        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
-        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
-        d3.geo.stream(object, cacheStream);
-      }
-      return contextStream.result();
-    }
-    path.area = function(object) {
-      d3_geo_pathAreaSum = 0;
-      d3.geo.stream(object, projectStream(d3_geo_pathArea));
-      return d3_geo_pathAreaSum;
-    };
-    path.centroid = function(object) {
-      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
-      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
-      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
-    };
-    path.bounds = function(object) {
-      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
-      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
-      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
-    };
-    path.projection = function(_) {
-      if (!arguments.length) return projection;
-      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
-      return reset();
-    };
-    path.context = function(_) {
-      if (!arguments.length) return context;
-      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
-      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
-      return reset();
-    };
-    path.pointRadius = function(_) {
-      if (!arguments.length) return pointRadius;
-      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
-      return path;
-    };
-    function reset() {
-      cacheStream = null;
-      return path;
-    }
-    return path.projection(d3.geo.albersUsa()).context(null);
-  };
-  function d3_geo_pathProjectStream(project) {
-    var resample = d3_geo_resample(function(λ, φ) {
-      return project([ λ * d3_degrees, φ * d3_degrees ]);
-    });
-    return function(stream) {
-      stream = resample(stream);
-      return {
-        point: function(λ, φ) {
-          stream.point(λ * d3_radians, φ * d3_radians);
-        },
-        sphere: function() {
-          stream.sphere();
-        },
-        lineStart: function() {
-          stream.lineStart();
-        },
-        lineEnd: function() {
-          stream.lineEnd();
-        },
-        polygonStart: function() {
-          stream.polygonStart();
-        },
-        polygonEnd: function() {
-          stream.polygonEnd();
-        }
-      };
-    };
-  }
-  d3.geo.projection = d3_geo_projection;
-  d3.geo.projectionMutator = d3_geo_projectionMutator;
-  function d3_geo_projection(project) {
-    return d3_geo_projectionMutator(function() {
-      return project;
-    })();
-  }
-  function d3_geo_projectionMutator(projectAt) {
-    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
-      x = project(x, y);
-      return [ x[0] * k + δx, δy - x[1] * k ];
-    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
-    function projection(point) {
-      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
-      return [ point[0] * k + δx, δy - point[1] * k ];
-    }
-    function invert(point) {
-      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
-      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
-    }
-    projection.stream = function(output) {
-      if (stream) stream.valid = false;
-      stream = d3_geo_projectionRadiansRotate(rotate, preclip(projectResample(postclip(output))));
-      stream.valid = true;
-      return stream;
-    };
-    projection.clipAngle = function(_) {
-      if (!arguments.length) return clipAngle;
-      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
-      return invalidate();
-    };
-    projection.clipExtent = function(_) {
-      if (!arguments.length) return clipExtent;
-      clipExtent = _;
-      postclip = _ == null ? d3_identity : d3_geo_clipView(_[0][0], _[0][1], _[1][0], _[1][1]);
-      return invalidate();
-    };
-    projection.scale = function(_) {
-      if (!arguments.length) return k;
-      k = +_;
-      return reset();
-    };
-    projection.translate = function(_) {
-      if (!arguments.length) return [ x, y ];
-      x = +_[0];
-      y = +_[1];
-      return reset();
-    };
-    projection.center = function(_) {
-      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
-      λ = _[0] % 360 * d3_radians;
-      φ = _[1] % 360 * d3_radians;
-      return reset();
-    };
-    projection.rotate = function(_) {
-      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
-      δλ = _[0] % 360 * d3_radians;
-      δφ = _[1] % 360 * d3_radians;
-      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
-      return reset();
-    };
-    d3.rebind(projection, projectResample, "precision");
-    function reset() {
-      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
-      var center = project(λ, φ);
-      δx = x - center[0] * k;
-      δy = y + center[1] * k;
-      return invalidate();
-    }
-    function invalidate() {
-      if (stream) {
-        stream.valid = false;
-        stream = null;
-      }
-      return projection;
-    }
-    return function() {
-      project = projectAt.apply(this, arguments);
-      projection.invert = project.invert && invert;
-      return reset();
-    };
-  }
-  function d3_geo_projectionRadiansRotate(rotate, stream) {
-    return {
-      point: function(x, y) {
-        y = rotate(x * d3_radians, y * d3_radians), x = y[0];
-        stream.point(x > π ? x - 2 * π : x < -π ? x + 2 * π : x, y[1]);
-      },
-      sphere: function() {
-        stream.sphere();
-      },
-      lineStart: function() {
-        stream.lineStart();
-      },
-      lineEnd: function() {
-        stream.lineEnd();
-      },
-      polygonStart: function() {
-        stream.polygonStart();
-      },
-      polygonEnd: function() {
-        stream.polygonEnd();
-      }
-    };
-  }
-  function d3_geo_equirectangular(λ, φ) {
-    return [ λ, φ ];
-  }
-  (d3.geo.equirectangular = function() {
-    return d3_geo_projection(d3_geo_equirectangular);
-  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
-  d3.geo.rotation = function(rotate) {
-    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
-    function forward(coordinates) {
-      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
-      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
-    }
-    forward.invert = function(coordinates) {
-      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
-      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
-    };
-    return forward;
-  };
-  function d3_geo_rotation(δλ, δφ, δγ) {
-    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_equirectangular;
-  }
-  function d3_geo_forwardRotationλ(δλ) {
-    return function(λ, φ) {
-      return λ += δλ, [ λ > π ? λ - 2 * π : λ < -π ? λ + 2 * π : λ, φ ];
-    };
-  }
-  function d3_geo_rotationλ(δλ) {
-    var rotation = d3_geo_forwardRotationλ(δλ);
-    rotation.invert = d3_geo_forwardRotationλ(-δλ);
-    return rotation;
-  }
-  function d3_geo_rotationφγ(δφ, δγ) {
-    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
-    function rotation(λ, φ) {
-      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
-      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
-    }
-    rotation.invert = function(λ, φ) {
-      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
-      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
-    };
-    return rotation;
-  }
-  d3.geo.circle = function() {
-    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
-    function circle() {
-      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
-      interpolate(null, null, 1, {
-        point: function(x, y) {
-          ring.push(x = rotate(x, y));
-          x[0] *= d3_degrees, x[1] *= d3_degrees;
-        }
-      });
-      return {
-        type: "Polygon",
-        coordinates: [ ring ]
-      };
-    }
-    circle.origin = function(x) {
-      if (!arguments.length) return origin;
-      origin = x;
-      return circle;
-    };
-    circle.angle = function(x) {
-      if (!arguments.length) return angle;
-      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
-      return circle;
-    };
-    circle.precision = function(_) {
-      if (!arguments.length) return precision;
-      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
-      return circle;
-    };
-    return circle.angle(90);
-  };
-  function d3_geo_circleInterpolate(radius, precision) {
-    var cr = Math.cos(radius), sr = Math.sin(radius);
-    return function(from, to, direction, listener) {
-      if (from != null) {
-        from = d3_geo_circleAngle(cr, from);
-        to = d3_geo_circleAngle(cr, to);
-        if (direction > 0 ? from < to : from > to) from += direction * 2 * π;
-      } else {
-        from = radius + direction * 2 * π;
-        to = radius;
-      }
-      var point;
-      for (var step = direction * precision, t = from; direction > 0 ? t > to : t < to; t -= step) {
-        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
-      }
-    };
-  }
-  function d3_geo_circleAngle(cr, point) {
-    var a = d3_geo_cartesian(point);
-    a[0] -= cr;
-    d3_geo_cartesianNormalize(a);
-    var angle = d3_acos(-a[1]);
-    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
-  }
-  d3.geo.distance = function(a, b) {
-    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
-    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
-  };
-  d3.geo.graticule = function() {
-    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
-    function graticule() {
-      return {
-        type: "MultiLineString",
-        coordinates: lines()
-      };
-    }
-    function lines() {
-      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
-        return Math.abs(x % DX) > ε;
-      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
-        return Math.abs(y % DY) > ε;
-      }).map(y));
-    }
-    graticule.lines = function() {
-      return lines().map(function(coordinates) {
-        return {
-          type: "LineString",
-          coordinates: coordinates
-        };
-      });
-    };
-    graticule.outline = function() {
-      return {
-        type: "Polygon",
-        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
-      };
-    };
-    graticule.extent = function(_) {
-      if (!arguments.length) return graticule.minorExtent();
-      return graticule.majorExtent(_).minorExtent(_);
-    };
-    graticule.majorExtent = function(_) {
-      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
-      X0 = +_[0][0], X1 = +_[1][0];
-      Y0 = +_[0][1], Y1 = +_[1][1];
-      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
-      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
-      return graticule.precision(precision);
-    };
-    graticule.minorExtent = function(_) {
-      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
-      x0 = +_[0][0], x1 = +_[1][0];
-      y0 = +_[0][1], y1 = +_[1][1];
-      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
-      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
-      return graticule.precision(precision);
-    };
-    graticule.step = function(_) {
-      if (!arguments.length) return graticule.minorStep();
-      return graticule.majorStep(_).minorStep(_);
-    };
-    graticule.majorStep = function(_) {
-      if (!arguments.length) return [ DX, DY ];
-      DX = +_[0], DY = +_[1];
-      return graticule;
-    };
-    graticule.minorStep = function(_) {
-      if (!arguments.length) return [ dx, dy ];
-      dx = +_[0], dy = +_[1];
-      return graticule;
-    };
-    graticule.precision = function(_) {
-      if (!arguments.length) return precision;
-      precision = +_;
-      x = d3_geo_graticuleX(y0, y1, 90);
-      y = d3_geo_graticuleY(x0, x1, precision);
-      X = d3_geo_graticuleX(Y0, Y1, 90);
-      Y = d3_geo_graticuleY(X0, X1, precision);
-      return graticule;
-    };
-    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
-  };
-  function d3_geo_graticuleX(y0, y1, dy) {
-    var y = d3.range(y0, y1 - ε, dy).concat(y1);
-    return function(x) {
-      return y.map(function(y) {
-        return [ x, y ];
-      });
-    };
-  }
-  function d3_geo_graticuleY(x0, x1, dx) {
-    var x = d3.range(x0, x1 - ε, dx).concat(x1);
-    return function(y) {
-      return x.map(function(x) {
-        return [ x, y ];
-      });
-    };
-  }
-  function d3_source(d) {
-    return d.source;
-  }
-  function d3_target(d) {
-    return d.target;
-  }
-  d3.geo.greatArc = function() {
-    var source = d3_source, source_, target = d3_target, target_;
-    function greatArc() {
-      return {
-        type: "LineString",
-        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
-      };
-    }
-    greatArc.distance = function() {
-      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
-    };
-    greatArc.source = function(_) {
-      if (!arguments.length) return source;
-      source = _, source_ = typeof _ === "function" ? null : _;
-      return greatArc;
-    };
-    greatArc.target = function(_) {
-      if (!arguments.length) return target;
-      target = _, target_ = typeof _ === "function" ? null : _;
-      return greatArc;
-    };
-    greatArc.precision = function() {
-      return arguments.length ? greatArc : 0;
-    };
-    return greatArc;
-  };
-  d3.geo.interpolate = function(source, target) {
-    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
-  };
-  function d3_geo_interpolate(x0, y0, x1, y1) {
-    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
-    var interpolate = d ? function(t) {
-      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
-      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
-    } : function() {
-      return [ x0 * d3_degrees, y0 * d3_degrees ];
-    };
-    interpolate.distance = d;
-    return interpolate;
-  }
-  d3.geo.length = function(object) {
-    d3_geo_lengthSum = 0;
-    d3.geo.stream(object, d3_geo_length);
-    return d3_geo_lengthSum;
-  };
-  var d3_geo_lengthSum;
-  var d3_geo_length = {
-    sphere: d3_noop,
-    point: d3_noop,
-    lineStart: d3_geo_lengthLineStart,
-    lineEnd: d3_noop,
-    polygonStart: d3_noop,
-    polygonEnd: d3_noop
-  };
-  function d3_geo_lengthLineStart() {
-    var λ0, sinφ0, cosφ0;
-    d3_geo_length.point = function(λ, φ) {
-      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
-      d3_geo_length.point = nextPoint;
-    };
-    d3_geo_length.lineEnd = function() {
-      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
-    };
-    function nextPoint(λ, φ) {
-      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = Math.abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
-      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
-      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
-    }
-  }
-  function d3_geo_azimuthal(scale, angle) {
-    function azimuthal(λ, φ) {
-      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
-      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
-    }
-    azimuthal.invert = function(x, y) {
-      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
-      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
-    };
-    return azimuthal;
-  }
-  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
-    return Math.sqrt(2 / (1 + cosλcosφ));
-  }, function(ρ) {
-    return 2 * Math.asin(ρ / 2);
-  });
-  (d3.geo.azimuthalEqualArea = function() {
-    return d3_geo_projection(d3_geo_azimuthalEqualArea);
-  }).raw = d3_geo_azimuthalEqualArea;
-  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
-    var c = Math.acos(cosλcosφ);
-    return c && c / Math.sin(c);
-  }, d3_identity);
-  (d3.geo.azimuthalEquidistant = function() {
-    return d3_geo_projection(d3_geo_azimuthalEquidistant);
-  }).raw = d3_geo_azimuthalEquidistant;
-  function d3_geo_conicConformal(φ0, φ1) {
-    var cosφ0 = Math.cos(φ0), t = function(φ) {
-      return Math.tan(π / 4 + φ / 2);
-    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
-    if (!n) return d3_geo_mercator;
-    function forward(λ, φ) {
-      var ρ = Math.abs(Math.abs(φ) - π / 2) < ε ? 0 : F / Math.pow(t(φ), n);
-      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
-    }
-    forward.invert = function(x, y) {
-      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
-      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - π / 2 ];
-    };
-    return forward;
-  }
-  (d3.geo.conicConformal = function() {
-    return d3_geo_conic(d3_geo_conicConformal);
-  }).raw = d3_geo_conicConformal;
-  function d3_geo_conicEquidistant(φ0, φ1) {
-    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
-    if (Math.abs(n) < ε) return d3_geo_equirectangular;
-    function forward(λ, φ) {
-      var ρ = G - φ;
-      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
-    }
-    forward.invert = function(x, y) {
-      var ρ0_y = G - y;
-      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
-    };
-    return forward;
-  }
-  (d3.geo.conicEquidistant = function() {
-    return d3_geo_conic(d3_geo_conicEquidistant);
-  }).raw = d3_geo_conicEquidistant;
-  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
-    return 1 / cosλcosφ;
-  }, Math.atan);
-  (d3.geo.gnomonic = function() {
-    return d3_geo_projection(d3_geo_gnomonic);
-  }).raw = d3_geo_gnomonic;
-  function d3_geo_mercator(λ, φ) {
-    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
-  }
-  d3_geo_mercator.invert = function(x, y) {
-    return [ x, 2 * Math.atan(Math.exp(y)) - π / 2 ];
-  };
-  function d3_geo_mercatorProjection(project) {
-    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
-    m.scale = function() {
-      var v = scale.apply(m, arguments);
-      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
-    };
-    m.translate = function() {
-      var v = translate.apply(m, arguments);
-      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
-    };
-    m.clipExtent = function(_) {
-      var v = clipExtent.apply(m, arguments);
-      if (v === m) {
-        if (clipAuto = _ == null) {
-          var k = π * scale(), t = translate();
-          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
-        }
-      } else if (clipAuto) {
-        v = null;
-      }
-      return v;
-    };
-    return m.clipExtent(null);
-  }
-  (d3.geo.mercator = function() {
-    return d3_geo_mercatorProjection(d3_geo_mercator);
-  }).raw = d3_geo_mercator;
-  var d3_geo_orthographic = d3_geo_azimuthal(function() {
-    return 1;
-  }, Math.asin);
-  (d3.geo.orthographic = function() {
-    return d3_geo_projection(d3_geo_orthographic);
-  }).raw = d3_geo_orthographic;
-  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
-    return 1 / (1 + cosλcosφ);
-  }, function(ρ) {
-    return 2 * Math.atan(ρ);
-  });
-  (d3.geo.stereographic = function() {
-    return d3_geo_projection(d3_geo_stereographic);
-  }).raw = d3_geo_stereographic;
-  function d3_geo_transverseMercator(λ, φ) {
-    var B = Math.cos(φ) * Math.sin(λ);
-    return [ Math.log((1 + B) / (1 - B)) / 2, Math.atan2(Math.tan(φ), Math.cos(λ)) ];
-  }
-  d3_geo_transverseMercator.invert = function(x, y) {
-    return [ Math.atan2(d3_sinh(x), Math.cos(y)), d3_asin(Math.sin(y) / d3_cosh(x)) ];
-  };
-  (d3.geo.transverseMercator = function() {
-    return d3_geo_mercatorProjection(d3_geo_transverseMercator);
-  }).raw = d3_geo_transverseMercator;
-  d3.geom = {};
-  d3.svg = {};
-  function d3_svg_line(projection) {
-    var x = d3_svg_lineX, y = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
-    function line(data) {
-      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
-      function segment() {
-        segments.push("M", interpolate(projection(points), tension));
-      }
-      while (++i < n) {
-        if (defined.call(this, d = data[i], i)) {
-          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
-        } else if (points.length) {
-          segment();
-          points = [];
-        }
-      }
-      if (points.length) segment();
-      return segments.length ? segments.join("") : null;
-    }
-    line.x = function(_) {
-      if (!arguments.length) return x;
-      x = _;
-      return line;
-    };
-    line.y = function(_) {
-      if (!arguments.length) return y;
-      y = _;
-      return line;
-    };
-    line.defined = function(_) {
-      if (!arguments.length) return defined;
-      defined = _;
-      return line;
-    };
-    line.interpolate = function(_) {
-      if (!arguments.length) return interpolateKey;
-      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
-      return line;
-    };
-    line.tension = function(_) {
-      if (!arguments.length) return tension;
-      tension = _;
-      return line;
-    };
-    return line;
-  }
-  d3.svg.line = function() {
-    return d3_svg_line(d3_identity);
-  };
-  function d3_svg_lineX(d) {
-    return d[0];
-  }
-  function d3_svg_lineY(d) {
-    return d[1];
-  }
-  var d3_svg_lineInterpolators = d3.map({
-    linear: d3_svg_lineLinear,
-    "linear-closed": d3_svg_lineLinearClosed,
-    step: d3_svg_lineStep,
-    "step-before": d3_svg_lineStepBefore,
-    "step-after": d3_svg_lineStepAfter,
-    basis: d3_svg_lineBasis,
-    "basis-open": d3_svg_lineBasisOpen,
-    "basis-closed": d3_svg_lineBasisClosed,
-    bundle: d3_svg_lineBundle,
-    cardinal: d3_svg_lineCardinal,
-    "cardinal-open": d3_svg_lineCardinalOpen,
-    "cardinal-closed": d3_svg_lineCardinalClosed,
-    monotone: d3_svg_lineMonotone
-  });
-  d3_svg_lineInterpolators.forEach(function(key, value) {
-    value.key = key;
-    value.closed = /-closed$/.test(key);
-  });
-  function d3_svg_lineLinear(points) {
-    return points.join("L");
-  }
-  function d3_svg_lineLinearClosed(points) {
-    return d3_svg_lineLinear(points) + "Z";
-  }
-  function d3_svg_lineStep(points) {
-    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
-    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
-    if (n > 1) path.push("H", p[0]);
-    return path.join("");
-  }
-  function d3_svg_lineStepBefore(points) {
-    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
-    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
-    return path.join("");
-  }
-  function d3_svg_lineStepAfter(points) {
-    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
-    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
-    return path.join("");
-  }
-  function d3_svg_lineCardinalOpen(points, tension) {
-    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));
-  }
-  function d3_svg_lineCardinalClosed(points, tension) {
-    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]),
-    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
-  }
-  function d3_svg_lineCardinal(points, tension) {
-    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
-  }
-  function d3_svg_lineHermite(points, tangents) {
-    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
-      return d3_svg_lineLinear(points);
-    }
-    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
-    if (quad) {
-      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
-      p0 = points[1];
-      pi = 2;
-    }
-    if (tangents.length > 1) {
-      t = tangents[1];
-      p = points[pi];
-      pi++;
-      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
-      for (var i = 2; i < tangents.length; i++, pi++) {
-        p = points[pi];
-        t = tangents[i];
-        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
-      }
-    }
-    if (quad) {
-      var lp = points[pi];
-      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
-    }
-    return path;
-  }
-  function d3_svg_lineCardinalTangents(points, tension) {
-    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
-    while (++i < n) {
-      p0 = p1;
-      p1 = p2;
-      p2 = points[i];
-      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
-    }
-    return tangents;
-  }
-  function d3_svg_lineBasis(points) {
-    if (points.length < 3) return d3_svg_lineLinear(points);
-    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
-    points.push(points[n - 1]);
-    while (++i <= n) {
-      pi = points[i];
-      px.shift();
-      px.push(pi[0]);
-      py.shift();
-      py.push(pi[1]);
-      d3_svg_lineBasisBezier(path, px, py);
-    }
-    points.pop();
-    path.push("L", pi);
-    return path.join("");
-  }
-  function d3_svg_lineBasisOpen(points) {
-    if (points.length < 4) return d3_svg_lineLinear(points);
-    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
-    while (++i < 3) {
-      pi = points[i];
-      px.push(pi[0]);
-      py.push(pi[1]);
-    }
-    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
-    --i;
-    while (++i < n) {
-      pi = points[i];
-      px.shift();
-      px.push(pi[0]);
-      py.shift();
-      py.push(pi[1]);
-      d3_svg_lineBasisBezier(path, px, py);
-    }
-    return path.join("");
-  }
-  function d3_svg_lineBasisClosed(points) {
-    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
-    while (++i < 4) {
-      pi = points[i % n];
-      px.push(pi[0]);
-      py.push(pi[1]);
-    }
-    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
-    --i;
-    while (++i < m) {
-      pi = points[i % n];
-      px.shift();
-      px.push(pi[0]);
-      py.shift();
-      py.push(pi[1]);
-      d3_svg_lineBasisBezier(path, px, py);
-    }
-    return path.join("");
-  }
-  function d3_svg_lineBundle(points, tension) {
-    var n = points.length - 1;
-    if (n) {
-      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
-      while (++i <= n) {
-        p = points[i];
-        t = i / n;
-        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
-        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
-      }
-    }
-    return d3_svg_lineBasis(points);
-  }
-  function d3_svg_lineDot4(a, b) {
-    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
-  }
-  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
-  function d3_svg_lineBasisBezier(path, x, y) {
-    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
-  }
-  function d3_svg_lineSlope(p0, p1) {
-    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
-  }
-  function d3_svg_lineFiniteDifferences(points) {
-    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
-    while (++i < j) {
-      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
-    }
-    m[i] = d;
-    return m;
-  }
-  function d3_svg_lineMonotoneTangents(points) {
-    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
-    while (++i < j) {
-      d = d3_svg_lineSlope(points[i], points[i + 1]);
-      if (Math.abs(d) < 1e-6) {
-        m[i] = m[i + 1] = 0;
-      } else {
-        a = m[i] / d;
-        b = m[i + 1] / d;
-        s = a * a + b * b;
-        if (s > 9) {
-          s = d * 3 / Math.sqrt(s);
-          m[i] = s * a;
-          m[i + 1] = s * b;
-        }
-      }
-    }
-    i = -1;
-    while (++i <= j) {
-      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
-      tangents.push([ s || 0, m[i] * s || 0 ]);
-    }
-    return tangents;
-  }
-  function d3_svg_lineMonotone(points) {
-    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
-  }
-  d3.geom.hull = function(vertices) {
-    var x = d3_svg_lineX, y = d3_svg_lineY;
-    if (arguments.length) return hull(vertices);
-    function hull(data) {
-      if (data.length < 3) return [];
-      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;
-      if (fx === d3_svg_lineX && y === d3_svg_lineY) vertices = data; else for (i = 0,
-      vertices = []; i < n; ++i) {
-        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);
-      }
-      for (i = 1; i < n; ++i) {
-        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;
-      }
-      for (i = 0; i < n; ++i) {
-        if (i === h) continue;
-        y1 = vertices[i][1] - vertices[h][1];
-        x1 = vertices[i][0] - vertices[h][0];
-        points.push({
-          angle: Math.atan2(y1, x1),
-          index: i
-        });
-      }
-      points.sort(function(a, b) {
-        return a.angle - b.angle;
-      });
-      a = points[0].angle;
-      v = points[0].index;
-      u = 0;
-      for (i = 1; i < plen; ++i) {
-        j = points[i].index;
-        if (a == points[i].angle) {
-          x1 = vertices[v][0] - vertices[h][0];
-          y1 = vertices[v][1] - vertices[h][1];
-          x2 = vertices[j][0] - vertices[h][0];
-          y2 = vertices[j][1] - vertices[h][1];
-          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {
-            points[i].index = -1;
-            continue;
-          } else {
-            points[u].index = -1;
-          }
-        }
-        a = points[i].angle;
-        u = i;
-        v = j;
-      }
-      stack.push(h);
-      for (i = 0, j = 0; i < 2; ++j) {
-        if (points[j].index > -1) {
-          stack.push(points[j].index);
-          i++;
-        }
-      }
-      sp = stack.length;
-      for (;j < plen; ++j) {
-        if (points[j].index < 0) continue;
-        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {
-          --sp;
-        }
-        stack[sp++] = points[j].index;
-      }
-      var poly = [];
-      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);
-      return poly;
-    }
-    hull.x = function(_) {
-      return arguments.length ? (x = _, hull) : x;
-    };
-    hull.y = function(_) {
-      return arguments.length ? (y = _, hull) : y;
-    };
-    return hull;
-  };
-  function d3_geom_hullCCW(i1, i2, i3, v) {
-    var t, a, b, c, d, e, f;
-    t = v[i1];
-    a = t[0];
-    b = t[1];
-    t = v[i2];
-    c = t[0];
-    d = t[1];
-    t = v[i3];
-    e = t[0];
-    f = t[1];
-    return (f - b) * (c - a) - (d - b) * (e - a) > 0;
-  }
-  d3.geom.polygon = function(coordinates) {
-    d3_subclass(coordinates, d3_geom_polygonPrototype);
-    return coordinates;
-  };
-  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
-  d3_geom_polygonPrototype.area = function() {
-    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
-    while (++i < n) {
-      a = b;
-      b = this[i];
-      area += a[1] * b[0] - a[0] * b[1];
-    }
-    return area * .5;
-  };
-  d3_geom_polygonPrototype.centroid = function(k) {
-    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
-    if (!arguments.length) k = -1 / (6 * this.area());
-    while (++i < n) {
-      a = b;
-      b = this[i];
-      c = a[0] * b[1] - b[0] * a[1];
-      x += (a[0] + b[0]) * c;
-      y += (a[1] + b[1]) * c;
-    }
-    return [ x * k, y * k ];
-  };
-  d3_geom_polygonPrototype.clip = function(subject) {
-    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
-    while (++i < n) {
-      input = subject.slice();
-      subject.length = 0;
-      b = this[i];
-      c = input[(m = input.length - closed) - 1];
-      j = -1;
-      while (++j < m) {
-        d = input[j];
-        if (d3_geom_polygonInside(d, a, b)) {
-          if (!d3_geom_polygonInside(c, a, b)) {
-            subject.push(d3_geom_polygonIntersect(c, d, a, b));
-          }
-          subject.push(d);
-        } else if (d3_geom_polygonInside(c, a, b)) {
-          subject.push(d3_geom_polygonIntersect(c, d, a, b));
-        }
-        c = d;
-      }
-      if (closed) subject.push(subject[0]);
-      a = b;
-    }
-    return subject;
-  };
-  function d3_geom_polygonInside(p, a, b) {
-    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
-  }
-  function d3_geom_polygonIntersect(c, d, a, b) {
-    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
-    return [ x1 + ua * x21, y1 + ua * y21 ];
-  }
-  function d3_geom_polygonClosed(coordinates) {
-    var a = coordinates[0], b = coordinates[coordinates.length - 1];
-    return !(a[0] - b[0] || a[1] - b[1]);
-  }
-  d3.geom.delaunay = function(vertices) {
-    var edges = vertices.map(function() {
-      return [];
-    }), triangles = [];
-    d3_geom_voronoiTessellate(vertices, function(e) {
-      edges[e.region.l.index].push(vertices[e.region.r.index]);
-    });
-    edges.forEach(function(edge, i) {
-      var v = vertices[i], cx = v[0], cy = v[1];
-      edge.forEach(function(v) {
-        v.angle = Math.atan2(v[0] - cx, v[1] - cy);
-      });
-      edge.sort(function(a, b) {
-        return a.angle - b.angle;
-      });
-      for (var j = 0, m = edge.length - 1; j < m; j++) {
-        triangles.push([ v, edge[j], edge[j + 1] ]);
-      }
-    });
-    return triangles;
-  };
-  d3.geom.voronoi = function(points) {
-    var x = d3_svg_lineX, y = d3_svg_lineY, clipPolygon = null;
-    if (arguments.length) return voronoi(points);
-    function voronoi(data) {
-      var points, polygons = data.map(function() {
-        return [];
-      }), fx = d3_functor(x), fy = d3_functor(y), d, i, n = data.length, Z = 1e6;
-      if (fx === d3_svg_lineX && fy === d3_svg_lineY) points = data; else for (points = new Array(n),
-      i = 0; i < n; ++i) {
-        points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ];
-      }
-      d3_geom_voronoiTessellate(points, function(e) {
-        var s1, s2, x1, x2, y1, y2;
-        if (e.a === 1 && e.b >= 0) {
-          s1 = e.ep.r;
-          s2 = e.ep.l;
-        } else {
-          s1 = e.ep.l;
-          s2 = e.ep.r;
-        }
-        if (e.a === 1) {
-          y1 = s1 ? s1.y : -Z;
-          x1 = e.c - e.b * y1;
-          y2 = s2 ? s2.y : Z;
-          x2 = e.c - e.b * y2;
-        } else {
-          x1 = s1 ? s1.x : -Z;
-          y1 = e.c - e.a * x1;
-          x2 = s2 ? s2.x : Z;
-          y2 = e.c - e.a * x2;
-        }
-        var v1 = [ x1, y1 ], v2 = [ x2, y2 ];
-        polygons[e.region.l.index].push(v1, v2);
-        polygons[e.region.r.index].push(v1, v2);
-      });
-      polygons = polygons.map(function(polygon, i) {
-        var cx = points[i][0], cy = points[i][1], angle = polygon.map(function(v) {
-          return Math.atan2(v[0] - cx, v[1] - cy);
-        }), order = d3.range(polygon.length).sort(function(a, b) {
-          return angle[a] - angle[b];
-        });
-        return order.filter(function(d, i) {
-          return !i || angle[d] - angle[order[i - 1]] > ε;
-        }).map(function(d) {
-          return polygon[d];
-        });
-      });
-      polygons.forEach(function(polygon, i) {
-        var n = polygon.length;
-        if (!n) return polygon.push([ -Z, -Z ], [ -Z, Z ], [ Z, Z ], [ Z, -Z ]);
-        if (n > 2) return;
-        var p0 = points[i], p1 = polygon[0], p2 = polygon[1], x0 = p0[0], y0 = p0[1], x1 = p1[0], y1 = p1[1], x2 = p2[0], y2 = p2[1], dx = Math.abs(x2 - x1), dy = y2 - y1;
-        if (Math.abs(dy) < ε) {
-          var y = y0 < y1 ? -Z : Z;
-          polygon.push([ -Z, y ], [ Z, y ]);
-        } else if (dx < ε) {
-          var x = x0 < x1 ? -Z : Z;
-          polygon.push([ x, -Z ], [ x, Z ]);
-        } else {
-          var y = (x2 - x1) * (y1 - y0) < (x1 - x0) * (y2 - y1) ? Z : -Z, z = Math.abs(dy) - dx;
-          if (Math.abs(z) < ε) {
-            polygon.push([ dy < 0 ? y : -y, y ]);
-          } else {
-            if (z > 0) y *= -1;
-            polygon.push([ -Z, y ], [ Z, y ]);
-          }
-        }
-      });
-      if (clipPolygon) for (i = 0; i < n; ++i) clipPolygon.clip(polygons[i]);
-      for (i = 0; i < n; ++i) polygons[i].point = data[i];
-      return polygons;
-    }
-    voronoi.x = function(_) {
-      return arguments.length ? (x = _, voronoi) : x;
-    };
-    voronoi.y = function(_) {
-      return arguments.length ? (y = _, voronoi) : y;
-    };
-    voronoi.clipExtent = function(_) {
-      if (!arguments.length) return clipPolygon && [ clipPolygon[0], clipPolygon[2] ];
-      if (_ == null) clipPolygon = null; else {
-        var x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];
-        clipPolygon = d3.geom.polygon([ [ x1, y1 ], [ x1, y2 ], [ x2, y2 ], [ x2, y1 ] ]);
-      }
-      return voronoi;
-    };
-    voronoi.size = function(_) {
-      if (!arguments.length) return clipPolygon && clipPolygon[2];
-      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
-    };
-    voronoi.links = function(data) {
-      var points, graph = data.map(function() {
-        return [];
-      }), links = [], fx = d3_functor(x), fy = d3_functor(y), d, i, n = data.length;
-      if (fx === d3_svg_lineX && fy === d3_svg_lineY) points = data; else for (points = new Array(n),
-      i = 0; i < n; ++i) {
-        points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ];
-      }
-      d3_geom_voronoiTessellate(points, function(e) {
-        var l = e.region.l.index, r = e.region.r.index;
-        if (graph[l][r]) return;
-        graph[l][r] = graph[r][l] = true;
-        links.push({
-          source: data[l],
-          target: data[r]
-        });
-      });
-      return links;
-    };
-    voronoi.triangles = function(data) {
-      if (x === d3_svg_lineX && y === d3_svg_lineY) return d3.geom.delaunay(data);
-      var points = new Array(n), fx = d3_functor(x), fy = d3_functor(y), d, i = -1, n = data.length;
-      while (++i < n) {
-        (points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]).data = d;
-      }
-      return d3.geom.delaunay(points).map(function(triangle) {
-        return triangle.map(function(point) {
-          return point.data;
-        });
-      });
-    };
-    return voronoi;
-  };
-  var d3_geom_voronoiOpposite = {
-    l: "r",
-    r: "l"
-  };
-  function d3_geom_voronoiTessellate(points, callback) {
-    var Sites = {
-      list: points.map(function(v, i) {
-        return {
-          index: i,
-          x: v[0],
-          y: v[1]
-        };
-      }).sort(function(a, b) {
-        return a.y < b.y ? -1 : a.y > b.y ? 1 : a.x < b.x ? -1 : a.x > b.x ? 1 : 0;
-      }),
-      bottomSite: null
-    };
-    var EdgeList = {
-      list: [],
-      leftEnd: null,
-      rightEnd: null,
-      init: function() {
-        EdgeList.leftEnd = EdgeList.createHalfEdge(null, "l");
-        EdgeList.rightEnd = EdgeList.createHalfEdge(null, "l");
-        EdgeList.leftEnd.r = EdgeList.rightEnd;
-        EdgeList.rightEnd.l = EdgeList.leftEnd;
-        EdgeList.list.unshift(EdgeList.leftEnd, EdgeList.rightEnd);
-      },
-      createHalfEdge: function(edge, side) {
-        return {
-          edge: edge,
-          side: side,
-          vertex: null,
-          l: null,
-          r: null
-        };
-      },
-      insert: function(lb, he) {
-        he.l = lb;
-        he.r = lb.r;
-        lb.r.l = he;
-        lb.r = he;
-      },
-      leftBound: function(p) {
-        var he = EdgeList.leftEnd;
-        do {
-          he = he.r;
-        } while (he != EdgeList.rightEnd && Geom.rightOf(he, p));
-        he = he.l;
-        return he;
-      },
-      del: function(he) {
-        he.l.r = he.r;
-        he.r.l = he.l;
-        he.edge = null;
-      },
-      right: function(he) {
-        return he.r;
-      },
-      left: function(he) {
-        return he.l;
-      },
-      leftRegion: function(he) {
-        return he.edge == null ? Sites.bottomSite : he.edge.region[he.side];
-      },
-      rightRegion: function(he) {
-        return he.edge == null ? Sites.bottomSite : he.edge.region[d3_geom_voronoiOpposite[he.side]];
-      }
-    };
-    var Geom = {
-      bisect: function(s1, s2) {
-        var newEdge = {
-          region: {
-            l: s1,
-            r: s2
-          },
-          ep: {
-            l: null,
-            r: null
-          }
-        };
-        var dx = s2.x - s1.x, dy = s2.y - s1.y, adx = dx > 0 ? dx : -dx, ady = dy > 0 ? dy : -dy;
-        newEdge.c = s1.x * dx + s1.y * dy + (dx * dx + dy * dy) * .5;
-        if (adx > ady) {
-          newEdge.a = 1;
-          newEdge.b = dy / dx;
-          newEdge.c /= dx;
-        } else {
-          newEdge.b = 1;
-          newEdge.a = dx / dy;
-          newEdge.c /= dy;
-        }
-        return newEdge;
-      },
-      intersect: function(el1, el2) {
-        var e1 = el1.edge, e2 = el2.edge;
-        if (!e1 || !e2 || e1.region.r == e2.region.r) {
-          return null;
-        }
-        var d = e1.a * e2.b - e1.b * e2.a;
-        if (Math.abs(d) < 1e-10) {
-          return null;
-        }
-        var xint = (e1.c * e2.b - e2.c * e1.b) / d, yint = (e2.c * e1.a - e1.c * e2.a) / d, e1r = e1.region.r, e2r = e2.region.r, el, e;
-        if (e1r.y < e2r.y || e1r.y == e2r.y && e1r.x < e2r.x) {
-          el = el1;
-          e = e1;
-        } else {
-          el = el2;
-          e = e2;
-        }
-        var rightOfSite = xint >= e.region.r.x;
-        if (rightOfSite && el.side === "l" || !rightOfSite && el.side === "r") {
-          return null;
-        }
-        return {
-          x: xint,
-          y: yint
-        };
-      },
-      rightOf: function(he, p) {
-        var e = he.edge, topsite = e.region.r, rightOfSite = p.x > topsite.x;
-        if (rightOfSite && he.side === "l") {
-          return 1;
-        }
-        if (!rightOfSite && he.side === "r") {
-          return 0;
-        }
-        if (e.a === 1) {
-          var dyp = p.y - topsite.y, dxp = p.x - topsite.x, fast = 0, above = 0;
-          if (!rightOfSite && e.b < 0 || rightOfSite && e.b >= 0) {
-            above = fast = dyp >= e.b * dxp;
-          } else {
-            above = p.x + p.y * e.b > e.c;
-            if (e.b < 0) {
-              above = !above;
-            }
-            if (!above) {
-              fast = 1;
-            }
-          }
-          if (!fast) {
-            var dxs = topsite.x - e.region.l.x;
-            above = e.b * (dxp * dxp - dyp * dyp) < dxs * dyp * (1 + 2 * dxp / dxs + e.b * e.b);
-            if (e.b < 0) {
-              above = !above;
-            }
-          }
-        } else {
-          var yl = e.c - e.a * p.x, t1 = p.y - yl, t2 = p.x - topsite.x, t3 = yl - topsite.y;
-          above = t1 * t1 > t2 * t2 + t3 * t3;
-        }
-        return he.side === "l" ? above : !above;
-      },
-      endPoint: function(edge, side, site) {
-        edge.ep[side] = site;
-        if (!edge.ep[d3_geom_voronoiOpposite[side]]) return;
-        callback(edge);
-      },
-      distance: function(s, t) {
-        var dx = s.x - t.x, dy = s.y - t.y;
-        return Math.sqrt(dx * dx + dy * dy);
-      }
-    };
-    var EventQueue = {
-      list: [],
-      insert: function(he, site, offset) {
-        he.vertex = site;
-        he.ystar = site.y + offset;
-        for (var i = 0, list = EventQueue.list, l = list.length; i < l; i++) {
-          var next = list[i];
-          if (he.ystar > next.ystar || he.ystar == next.ystar && site.x > next.vertex.x) {
-            continue;
-          } else {
-            break;
-          }
-        }
-        list.splice(i, 0, he);
-      },
-      del: function(he) {
-        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l && ls[i] != he; ++i) {}
-        ls.splice(i, 1);
-      },
-      empty: function() {
-        return EventQueue.list.length === 0;
-      },
-      nextEvent: function(he) {
-        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l; ++i) {
-          if (ls[i] == he) return ls[i + 1];
-        }
-        return null;
-      },
-      min: function() {
-        var elem = EventQueue.list[0];
-        return {
-          x: elem.vertex.x,
-          y: elem.ystar
-        };
-      },
-      extractMin: function() {
-        return EventQueue.list.shift();
-      }
-    };
-    EdgeList.init();
-    Sites.bottomSite = Sites.list.shift();
-    var newSite = Sites.list.shift(), newIntStar;
-    var lbnd, rbnd, llbnd, rrbnd, bisector;
-    var bot, top, temp, p, v;
-    var e, pm;
-    while (true) {
-      if (!EventQueue.empty()) {
-        newIntStar = EventQueue.min();
-      }
-      if (newSite && (EventQueue.empty() || newSite.y < newIntStar.y || newSite.y == newIntStar.y && newSite.x < newIntStar.x)) {
-        lbnd = EdgeList.leftBound(newSite);
-        rbnd = EdgeList.right(lbnd);
-        bot = EdgeList.rightRegion(lbnd);
-        e = Geom.bisect(bot, newSite);
-        bisector = EdgeList.createHalfEdge(e, "l");
-        EdgeList.insert(lbnd, bisector);
-        p = Geom.intersect(lbnd, bisector);
-        if (p) {
-          EventQueue.del(lbnd);
-          EventQueue.insert(lbnd, p, Geom.distance(p, newSite));
-        }
-        lbnd = bisector;
-        bisector = EdgeList.createHalfEdge(e, "r");
-        EdgeList.insert(lbnd, bisector);
-        p = Geom.intersect(bisector, rbnd);
-        if (p) {
-          EventQueue.insert(bisector, p, Geom.distance(p, newSite));
-        }
-        newSite = Sites.list.shift();
-      } else if (!EventQueue.empty()) {
-        lbnd = EventQueue.extractMin();
-        llbnd = EdgeList.left(lbnd);
-        rbnd = EdgeList.right(lbnd);
-        rrbnd = EdgeList.right(rbnd);
-        bot = EdgeList.leftRegion(lbnd);
-        top = EdgeList.rightRegion(rbnd);
-        v = lbnd.vertex;
-        Geom.endPoint(lbnd.edge, lbnd.side, v);
-        Geom.endPoint(rbnd.edge, rbnd.side, v);
-        EdgeList.del(lbnd);
-        EventQueue.del(rbnd);
-        EdgeList.del(rbnd);
-        pm = "l";
-        if (bot.y > top.y) {
-          temp = bot;
-          bot = top;
-          top = temp;
-          pm = "r";
-        }
-        e = Geom.bisect(bot, top);
-        bisector = EdgeList.createHalfEdge(e, pm);
-        EdgeList.insert(llbnd, bisector);
-        Geom.endPoint(e, d3_geom_voronoiOpposite[pm], v);
-        p = Geom.intersect(llbnd, bisector);
-        if (p) {
-          EventQueue.del(llbnd);
-          EventQueue.insert(llbnd, p, Geom.distance(p, bot));
-        }
-        p = Geom.intersect(bisector, rrbnd);
-        if (p) {
-          EventQueue.insert(bisector, p, Geom.distance(p, bot));
-        }
-      } else {
-        break;
-      }
-    }
-    for (lbnd = EdgeList.right(EdgeList.leftEnd); lbnd != EdgeList.rightEnd; lbnd = EdgeList.right(lbnd)) {
-      callback(lbnd.edge);
-    }
-  }
-  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
-    var x = d3_svg_lineX, y = d3_svg_lineY, compat;
-    if (compat = arguments.length) {
-      x = d3_geom_quadtreeCompatX;
-      y = d3_geom_quadtreeCompatY;
-      if (compat === 3) {
-        y2 = y1;
-        x2 = x1;
-        y1 = x1 = 0;
-      }
-      return quadtree(points);
-    }
-    function quadtree(data) {
-      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
-      if (x1 != null) {
-        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
-      } else {
-        x2_ = y2_ = -(x1_ = y1_ = Infinity);
-        xs = [], ys = [];
-        n = data.length;
-        if (compat) for (i = 0; i < n; ++i) {
-          d = data[i];
-          if (d.x < x1_) x1_ = d.x;
-          if (d.y < y1_) y1_ = d.y;
-          if (d.x > x2_) x2_ = d.x;
-          if (d.y > y2_) y2_ = d.y;
-          xs.push(d.x);
-          ys.push(d.y);
-        } else for (i = 0; i < n; ++i) {
-          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
-          if (x_ < x1_) x1_ = x_;
-          if (y_ < y1_) y1_ = y_;
-          if (x_ > x2_) x2_ = x_;
-          if (y_ > y2_) y2_ = y_;
-          xs.push(x_);
-          ys.push(y_);
-        }
-      }
-      var dx = x2_ - x1_, dy = y2_ - y1_;
-      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
-      function insert(n, d, x, y, x1, y1, x2, y2) {
-        if (isNaN(x) || isNaN(y)) return;
-        if (n.leaf) {
-          var nx = n.x, ny = n.y;
-          if (nx != null) {
-            if (Math.abs(nx - x) + Math.abs(ny - y) < .01) {
-              insertChild(n, d, x, y, x1, y1, x2, y2);
-            } else {
-              var nPoint = n.point;
-              n.x = n.y = n.point = null;
-              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
-              insertChild(n, d, x, y, x1, y1, x2, y2);
-            }
-          } else {
-            n.x = x, n.y = y, n.point = d;
-          }
-        } else {
-          insertChild(n, d, x, y, x1, y1, x2, y2);
-        }
-      }
-      function insertChild(n, d, x, y, x1, y1, x2, y2) {
-        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;
-        n.leaf = false;
-        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
-        if (right) x1 = sx; else x2 = sx;
-        if (bottom) y1 = sy; else y2 = sy;
-        insert(n, d, x, y, x1, y1, x2, y2);
-      }
-      var root = d3_geom_quadtreeNode();
-      root.add = function(d) {
-        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
-      };
-      root.visit = function(f) {
-        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
-      };
-      i = -1;
-      if (x1 == null) {
-        while (++i < n) {
-          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
-        }
-        --i;
-      } else data.forEach(root.add);
-      xs = ys = data = d = null;
-      return root;
-    }
-    quadtree.x = function(_) {
-      return arguments.length ? (x = _, quadtree) : x;
-    };
-    quadtree.y = function(_) {
-      return arguments.length ? (y = _, quadtree) : y;
-    };
-    quadtree.extent = function(_) {
-      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
-      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0],
-      y2 = +_[1][1];
-      return quadtree;
-    };
-    quadtree.size = function(_) {
-      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
-      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
-      return quadtree;
-    };
-    return quadtree;
-  };
-  function d3_geom_quadtreeCompatX(d) {
-    return d.x;
-  }
-  function d3_geom_quadtreeCompatY(d) {
-    return d.y;
-  }
-  function d3_geom_quadtreeNode() {
-    return {
-      leaf: true,
-      nodes: [],
-      point: null,
-      x: null,
-      y: null
-    };
-  }
-  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
-    if (!f(node, x1, y1, x2, y2)) {
-      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
-      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
-      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
-      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
-      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
-    }
-  }
-  d3.interpolateRgb = d3_interpolateRgb;
-  function d3_interpolateRgb(a, b) {
-    a = d3.rgb(a);
-    b = d3.rgb(b);
-    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
-    return function(t) {
-      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
-    };
-  }
-  d3.interpolateObject = d3_interpolateObject;
-  function d3_interpolateObject(a, b) {
-    var i = {}, c = {}, k;
-    for (k in a) {
-      if (k in b) {
-        i[k] = d3_interpolate(a[k], b[k]);
-      } else {
-        c[k] = a[k];
-      }
-    }
-    for (k in b) {
-      if (!(k in a)) {
-        c[k] = b[k];
-      }
-    }
-    return function(t) {
-      for (k in i) c[k] = i[k](t);
-      return c;
-    };
-  }
-  d3.interpolateNumber = d3_interpolateNumber;
-  function d3_interpolateNumber(a, b) {
-    b -= a = +a;
-    return function(t) {
-      return a + b * t;
-    };
-  }
-  d3.interpolateString = d3_interpolateString;
-  function d3_interpolateString(a, b) {
-    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;
-    a = a + "", b = b + "";
-    d3_interpolate_number.lastIndex = 0;
-    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {
-      if (m.index) s.push(b.substring(s0, s1 = m.index));
-      q.push({
-        i: s.length,
-        x: m[0]
-      });
-      s.push(null);
-      s0 = d3_interpolate_number.lastIndex;
-    }
-    if (s0 < b.length) s.push(b.substring(s0));
-    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {
-      o = q[i];
-      if (o.x == m[0]) {
-        if (o.i) {
-          if (s[o.i + 1] == null) {
-            s[o.i - 1] += o.x;
-            s.splice(o.i, 1);
-            for (j = i + 1; j < n; ++j) q[j].i--;
-          } else {
-            s[o.i - 1] += o.x + s[o.i + 1];
-            s.splice(o.i, 2);
-            for (j = i + 1; j < n; ++j) q[j].i -= 2;
-          }
-        } else {
-          if (s[o.i + 1] == null) {
-            s[o.i] = o.x;
-          } else {
-            s[o.i] = o.x + s[o.i + 1];
-            s.splice(o.i + 1, 1);
-            for (j = i + 1; j < n; ++j) q[j].i--;
-          }
-        }
-        q.splice(i, 1);
-        n--;
-        i--;
-      } else {
-        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));
-      }
-    }
-    while (i < n) {
-      o = q.pop();
-      if (s[o.i + 1] == null) {
-        s[o.i] = o.x;
-      } else {
-        s[o.i] = o.x + s[o.i + 1];
-        s.splice(o.i + 1, 1);
-      }
-      n--;
-    }
-    if (s.length === 1) {
-      return s[0] == null ? (o = q[0].x, function(t) {
-        return o(t) + "";
-      }) : function() {
-        return b;
-      };
-    }
-    return function(t) {
-      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);
-      return s.join("");
-    };
-  }
-  var d3_interpolate_number = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
-  d3.interpolate = d3_interpolate;
-  function d3_interpolate(a, b) {
-    var i = d3.interpolators.length, f;
-    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
-    return f;
-  }
-  d3.interpolators = [ function(a, b) {
-    var t = typeof b;
-    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === "object" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);
-  } ];
-  d3.interpolateArray = d3_interpolateArray;
-  function d3_interpolateArray(a, b) {
-    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
-    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
-    for (;i < na; ++i) c[i] = a[i];
-    for (;i < nb; ++i) c[i] = b[i];
-    return function(t) {
-      for (i = 0; i < n0; ++i) c[i] = x[i](t);
-      return c;
-    };
-  }
-  var d3_ease_default = function() {
-    return d3_identity;
-  };
-  var d3_ease = d3.map({
-    linear: d3_ease_default,
-    poly: d3_ease_poly,
-    quad: function() {
-      return d3_ease_quad;
-    },
-    cubic: function() {
-      return d3_ease_cubic;
-    },
-    sin: function() {
-      return d3_ease_sin;
-    },
-    exp: function() {
-      return d3_ease_exp;
-    },
-    circle: function() {
-      return d3_ease_circle;
-    },
-    elastic: d3_ease_elastic,
-    back: d3_ease_back,
-    bounce: function() {
-      return d3_ease_bounce;
-    }
-  });
-  var d3_ease_mode = d3.map({
-    "in": d3_identity,
-    out: d3_ease_reverse,
-    "in-out": d3_ease_reflect,
-    "out-in": function(f) {
-      return d3_ease_reflect(d3_ease_reverse(f));
-    }
-  });
-  d3.ease = function(name) {
-    var i = name.indexOf("-"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : "in";
-    t = d3_ease.get(t) || d3_ease_default;
-    m = d3_ease_mode.get(m) || d3_identity;
-    return d3_ease_clamp(m(t.apply(null, Array.prototype.slice.call(arguments, 1))));
-  };
-  function d3_ease_clamp(f) {
-    return function(t) {
-      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
-    };
-  }
-  function d3_ease_reverse(f) {
-    return function(t) {
-      return 1 - f(1 - t);
-    };
-  }
-  function d3_ease_reflect(f) {
-    return function(t) {
-      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
-    };
-  }
-  function d3_ease_quad(t) {
-    return t * t;
-  }
-  function d3_ease_cubic(t) {
-    return t * t * t;
-  }
-  function d3_ease_cubicInOut(t) {
-    if (t <= 0) return 0;
-    if (t >= 1) return 1;
-    var t2 = t * t, t3 = t2 * t;
-    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
-  }
-  function d3_ease_poly(e) {
-    return function(t) {
-      return Math.pow(t, e);
-    };
-  }
-  function d3_ease_sin(t) {
-    return 1 - Math.cos(t * π / 2);
-  }
-  function d3_ease_exp(t) {
-    return Math.pow(2, 10 * (t - 1));
-  }
-  function d3_ease_circle(t) {
-    return 1 - Math.sqrt(1 - t * t);
-  }
-  function d3_ease_elastic(a, p) {
-    var s;
-    if (arguments.length < 2) p = .45;
-    if (arguments.length) s = p / (2 * π) * Math.asin(1 / a); else a = 1, s = p / 4;
-    return function(t) {
-      return 1 + a * Math.pow(2, 10 * -t) * Math.sin((t - s) * 2 * π / p);
-    };
-  }
-  function d3_ease_back(s) {
-    if (!s) s = 1.70158;
-    return function(t) {
-      return t * t * ((s + 1) * t - s);
-    };
-  }
-  function d3_ease_bounce(t) {
-    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
-  }
-  d3.interpolateHcl = d3_interpolateHcl;
-  function d3_interpolateHcl(a, b) {
-    a = d3.hcl(a);
-    b = d3.hcl(b);
-    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
-    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
-    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
-    return function(t) {
-      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
-    };
-  }
-  d3.interpolateHsl = d3_interpolateHsl;
-  function d3_interpolateHsl(a, b) {
-    a = d3.hsl(a);
-    b = d3.hsl(b);
-    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
-    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
-    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
-    return function(t) {
-      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
-    };
-  }
-  d3.interpolateLab = d3_interpolateLab;
-  function d3_interpolateLab(a, b) {
-    a = d3.lab(a);
-    b = d3.lab(b);
-    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
-    return function(t) {
-      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
-    };
-  }
-  d3.interpolateRound = d3_interpolateRound;
-  function d3_interpolateRound(a, b) {
-    b -= a;
-    return function(t) {
-      return Math.round(a + b * t);
-    };
-  }
-  d3.transform = function(string) {
-    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
-    return (d3.transform = function(string) {
-      if (string != null) {
-        g.setAttribute("transform", string);
-        var t = g.transform.baseVal.consolidate();
-      }
-      return new d3_transform(t ? t.matrix : d3_transformIdentity);
-    })(string);
-  };
-  function d3_transform(m) {
-    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
-    if (r0[0] * r1[1] < r1[0] * r0[1]) {
-      r0[0] *= -1;
-      r0[1] *= -1;
-      kx *= -1;
-      kz *= -1;
-    }
-    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
-    this.translate = [ m.e, m.f ];
-    this.scale = [ kx, ky ];
-    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
-  }
-  d3_transform.prototype.toString = function() {
-    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
-  };
-  function d3_transformDot(a, b) {
-    return a[0] * b[0] + a[1] * b[1];
-  }
-  function d3_transformNormalize(a) {
-    var k = Math.sqrt(d3_transformDot(a, a));
-    if (k) {
-      a[0] /= k;
-      a[1] /= k;
-    }
-    return k;
-  }
-  function d3_transformCombine(a, b, k) {
-    a[0] += k * b[0];
-    a[1] += k * b[1];
-    return a;
-  }
-  var d3_transformIdentity = {
-    a: 1,
-    b: 0,
-    c: 0,
-    d: 1,
-    e: 0,
-    f: 0
-  };
-  d3.interpolateTransform = d3_interpolateTransform;
-  function d3_interpolateTransform(a, b) {
-    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
-    if (ta[0] != tb[0] || ta[1] != tb[1]) {
-      s.push("translate(", null, ",", null, ")");
-      q.push({
-        i: 1,
-        x: d3_interpolateNumber(ta[0], tb[0])
-      }, {
-        i: 3,
-        x: d3_interpolateNumber(ta[1], tb[1])
-      });
-    } else if (tb[0] || tb[1]) {
-      s.push("translate(" + tb + ")");
-    } else {
-      s.push("");
-    }
-    if (ra != rb) {
-      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
-      q.push({
-        i: s.push(s.pop() + "rotate(", null, ")") - 2,
-        x: d3_interpolateNumber(ra, rb)
-      });
-    } else if (rb) {
-      s.push(s.pop() + "rotate(" + rb + ")");
-    }
-    if (wa != wb) {
-      q.push({
-        i: s.push(s.pop() + "skewX(", null, ")") - 2,
-        x: d3_interpolateNumber(wa, wb)
-      });
-    } else if (wb) {
-      s.push(s.pop() + "skewX(" + wb + ")");
-    }
-    if (ka[0] != kb[0] || ka[1] != kb[1]) {
-      n = s.push(s.pop() + "scale(", null, ",", null, ")");
-      q.push({
-        i: n - 4,
-        x: d3_interpolateNumber(ka[0], kb[0])
-      }, {
-        i: n - 2,
-        x: d3_interpolateNumber(ka[1], kb[1])
-      });
-    } else if (kb[0] != 1 || kb[1] != 1) {
-      s.push(s.pop() + "scale(" + kb + ")");
-    }
-    n = q.length;
-    return function(t) {
-      var i = -1, o;
-      while (++i < n) s[(o = q[i]).i] = o.x(t);
-      return s.join("");
-    };
-  }
-  function d3_uninterpolateNumber(a, b) {
-    b = b - (a = +a) ? 1 / (b - a) : 0;
-    return function(x) {
-      return (x - a) * b;
-    };
-  }
-  function d3_uninterpolateClamp(a, b) {
-    b = b - (a = +a) ? 1 / (b - a) : 0;
-    return function(x) {
-      return Math.max(0, Math.min(1, (x - a) * b));
-    };
-  }
-  d3.layout = {};
-  d3.layout.bundle = function() {
-    return function(links) {
-      var paths = [], i = -1, n = links.length;
-      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
-      return paths;
-    };
-  };
-  function d3_layout_bundlePath(link) {
-    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
-    while (start !== lca) {
-      start = start.parent;
-      points.push(start);
-    }
-    var k = points.length;
-    while (end !== lca) {
-      points.splice(k, 0, end);
-      end = end.parent;
-    }
-    return points;
-  }
-  function d3_layout_bundleAncestors(node) {
-    var ancestors = [], parent = node.parent;
-    while (parent != null) {
-      ancestors.push(node);
-      node = parent;
-      parent = parent.parent;
-    }
-    ancestors.push(node);
-    return ancestors;
-  }
-  function d3_layout_bundleLeastCommonAncestor(a, b) {
-    if (a === b) return a;
-    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
-    while (aNode === bNode) {
-      sharedNode = aNode;
-      aNode = aNodes.pop();
-      bNode = bNodes.pop();
-    }
-    return sharedNode;
-  }
-  d3.layout.chord = function() {
-    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
-    function relayout() {
-      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
-      chords = [];
-      groups = [];
-      k = 0, i = -1;
-      while (++i < n) {
-        x = 0, j = -1;
-        while (++j < n) {
-          x += matrix[i][j];
-        }
-        groupSums.push(x);
-        subgroupIndex.push(d3.range(n));
-        k += x;
-      }
-      if (sortGroups) {
-        groupIndex.sort(function(a, b) {
-          return sortGroups(groupSums[a], groupSums[b]);
-        });
-      }
-      if (sortSubgroups) {
-        subgroupIndex.forEach(function(d, i) {
-          d.sort(function(a, b) {
-            return sortSubgroups(matrix[i][a], matrix[i][b]);
-          });
-        });
-      }
-      k = (2 * π - padding * n) / k;
-      x = 0, i = -1;
-      while (++i < n) {
-        x0 = x, j = -1;
-        while (++j < n) {
-          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
-          subgroups[di + "-" + dj] = {
-            index: di,
-            subindex: dj,
-            startAngle: a0,
-            endAngle: a1,
-            value: v
-          };
-        }
-        groups[di] = {
-          index: di,
-          startAngle: x0,
-          endAngle: x,
-          value: (x - x0) / k
-        };
-        x += padding;
-      }
-      i = -1;
-      while (++i < n) {
-        j = i - 1;
-        while (++j < n) {
-          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
-          if (source.value || target.value) {
-            chords.push(source.value < target.value ? {
-              source: target,
-              target: source
-            } : {
-              source: source,
-              target: target
-            });
-          }
-        }
-      }
-      if (sortChords) resort();
-    }
-    function resort() {
-      chords.sort(function(a, b) {
-        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
-      });
-    }
-    chord.matrix = function(x) {
-      if (!arguments.length) return matrix;
-      n = (matrix = x) && matrix.length;
-      chords = groups = null;
-      return chord;
-    };
-    chord.padding = function(x) {
-      if (!arguments.length) return padding;
-      padding = x;
-      chords = groups = null;
-      return chord;
-    };
-    chord.sortGroups = function(x) {
-      if (!arguments.length) return sortGroups;
-      sortGroups = x;
-      chords = groups = null;
-      return chord;
-    };
-    chord.sortSubgroups = function(x) {
-      if (!arguments.length) return sortSubgroups;
-      sortSubgroups = x;
-      chords = null;
-      return chord;
-    };
-    chord.sortChords = function(x) {
-      if (!arguments.length) return sortChords;
-      sortChords = x;
-      if (chords) resort();
-      return chord;
-    };
-    chord.chords = function() {
-      if (!chords) relayout();
-      return chords;
-    };
-    chord.groups = function() {
-      if (!groups) relayout();
-      return groups;
-    };
-    return chord;
-  };
-  d3.layout.force = function() {
-    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;
-    function repulse(node) {
-      return function(quad, x1, _, x2) {
-        if (quad.point !== node) {
-          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);
-          if ((x2 - x1) * dn < theta) {
-            var k = quad.charge * dn * dn;
-            node.px -= dx * k;
-            node.py -= dy * k;
-            return true;
-          }
-          if (quad.point && isFinite(dn)) {
-            var k = quad.pointCharge * dn * dn;
-            node.px -= dx * k;
-            node.py -= dy * k;
-          }
-        }
-        return !quad.charge;
-      };
-    }
-    force.tick = function() {
-      if ((alpha *= .99) < .005) {
-        event.end({
-          type: "end",
-          alpha: alpha = 0
-        });
-        return true;
-      }
-      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
-      for (i = 0; i < m; ++i) {
-        o = links[i];
-        s = o.source;
-        t = o.target;
-        x = t.x - s.x;
-        y = t.y - s.y;
-        if (l = x * x + y * y) {
-          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
-          x *= l;
-          y *= l;
-          t.x -= x * (k = s.weight / (t.weight + s.weight));
-          t.y -= y * k;
-          s.x += x * (k = 1 - k);
-          s.y += y * k;
-        }
-      }
-      if (k = alpha * gravity) {
-        x = size[0] / 2;
-        y = size[1] / 2;
-        i = -1;
-        if (k) while (++i < n) {
-          o = nodes[i];
-          o.x += (x - o.x) * k;
-          o.y += (y - o.y) * k;
-        }
-      }
-      if (charge) {
-        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
-        i = -1;
-        while (++i < n) {
-          if (!(o = nodes[i]).fixed) {
-            q.visit(repulse(o));
-          }
-        }
-      }
-      i = -1;
-      while (++i < n) {
-        o = nodes[i];
-        if (o.fixed) {
-          o.x = o.px;
-          o.y = o.py;
-        } else {
-          o.x -= (o.px - (o.px = o.x)) * friction;
-          o.y -= (o.py - (o.py = o.y)) * friction;
-        }
-      }
-      event.tick({
-        type: "tick",
-        alpha: alpha
-      });
-    };
-    force.nodes = function(x) {
-      if (!arguments.length) return nodes;
-      nodes = x;
-      return force;
-    };
-    force.links = function(x) {
-      if (!arguments.length) return links;
-      links = x;
-      return force;
-    };
-    force.size = function(x) {
-      if (!arguments.length) return size;
-      size = x;
-      return force;
-    };
-    force.linkDistance = function(x) {
-      if (!arguments.length) return linkDistance;
-      linkDistance = typeof x === "function" ? x : +x;
-      return force;
-    };
-    force.distance = force.linkDistance;
-    force.linkStrength = function(x) {
-      if (!arguments.length) return linkStrength;
-      linkStrength = typeof x === "function" ? x : +x;
-      return force;
-    };
-    force.friction = function(x) {
-      if (!arguments.length) return friction;
-      friction = +x;
-      return force;
-    };
-    force.charge = function(x) {
-      if (!arguments.length) return charge;
-      charge = typeof x === "function" ? x : +x;
-      return force;
-    };
-    force.gravity = function(x) {
-      if (!arguments.length) return gravity;
-      gravity = +x;
-      return force;
-    };
-    force.theta = function(x) {
-      if (!arguments.length) return theta;
-      theta = +x;
-      return force;
-    };
-    force.alpha = function(x) {
-      if (!arguments.length) return alpha;
-      x = +x;
-      if (alpha) {
-        if (x > 0) alpha = x; else alpha = 0;
-      } else if (x > 0) {
-        event.start({
-          type: "start",
-          alpha: alpha = x
-        });
-        d3.timer(force.tick);
-      }
-      return force;
-    };
-    force.start = function() {
-      var i, j, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
-      for (i = 0; i < n; ++i) {
-        (o = nodes[i]).index = i;
-        o.weight = 0;
-      }
-      for (i = 0; i < m; ++i) {
-        o = links[i];
-        if (typeof o.source == "number") o.source = nodes[o.source];
-        if (typeof o.target == "number") o.target = nodes[o.target];
-        ++o.source.weight;
-        ++o.target.weight;
-      }
-      for (i = 0; i < n; ++i) {
-        o = nodes[i];
-        if (isNaN(o.x)) o.x = position("x", w);
-        if (isNaN(o.y)) o.y = position("y", h);
-        if (isNaN(o.px)) o.px = o.x;
-        if (isNaN(o.py)) o.py = o.y;
-      }
-      distances = [];
-      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
-      strengths = [];
-      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
-      charges = [];
-      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
-      function position(dimension, size) {
-        var neighbors = neighbor(i), j = -1, m = neighbors.length, x;
-        while (++j < m) if (!isNaN(x = neighbors[j][dimension])) return x;
-        return Math.random() * size;
-      }
-      function neighbor() {
-        if (!neighbors) {
-          neighbors = [];
-          for (j = 0; j < n; ++j) {
-            neighbors[j] = [];
-          }
-          for (j = 0; j < m; ++j) {
-            var o = links[j];
-            neighbors[o.source.index].push(o.target);
-            neighbors[o.target.index].push(o.source);
-          }
-        }
-        return neighbors[i];
-      }
-      return force.resume();
-    };
-    force.resume = function() {
-      return force.alpha(.1);
-    };
-    force.stop = function() {
-      return force.alpha(0);
-    };
-    force.drag = function() {
-      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
-      if (!arguments.length) return drag;
-      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
-    };
-    function dragmove(d) {
-      d.px = d3.event.x, d.py = d3.event.y;
-      force.resume();
-    }
-    return d3.rebind(force, event, "on");
-  };
-  function d3_layout_forceDragstart(d) {
-    d.fixed |= 2;
-  }
-  function d3_layout_forceDragend(d) {
-    d.fixed &= ~6;
-  }
-  function d3_layout_forceMouseover(d) {
-    d.fixed |= 4;
-    d.px = d.x, d.py = d.y;
-  }
-  function d3_layout_forceMouseout(d) {
-    d.fixed &= ~4;
-  }
-  function d3_layout_forceAccumulate(quad, alpha, charges) {
-    var cx = 0, cy = 0;
-    quad.charge = 0;
-    if (!quad.leaf) {
-      var nodes = quad.nodes, n = nodes.length, i = -1, c;
-      while (++i < n) {
-        c = nodes[i];
-        if (c == null) continue;
-        d3_layout_forceAccumulate(c, alpha, charges);
-        quad.charge += c.charge;
-        cx += c.charge * c.cx;
-        cy += c.charge * c.cy;
-      }
-    }
-    if (quad.point) {
-      if (!quad.leaf) {
-        quad.point.x += Math.random() - .5;
-        quad.point.y += Math.random() - .5;
-      }
-      var k = alpha * charges[quad.point.index];
-      quad.charge += quad.pointCharge = k;
-      cx += k * quad.point.x;
-      cy += k * quad.point.y;
-    }
-    quad.cx = cx / quad.charge;
-    quad.cy = cy / quad.charge;
-  }
-  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;
-  d3.layout.hierarchy = function() {
-    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
-    function recurse(node, depth, nodes) {
-      var childs = children.call(hierarchy, node, depth);
-      node.depth = depth;
-      nodes.push(node);
-      if (childs && (n = childs.length)) {
-        var i = -1, n, c = node.children = [], v = 0, j = depth + 1, d;
-        while (++i < n) {
-          d = recurse(childs[i], j, nodes);
-          d.parent = node;
-          c.push(d);
-          v += d.value;
-        }
-        if (sort) c.sort(sort);
-        if (value) node.value = v;
-      } else if (value) {
-        node.value = +value.call(hierarchy, node, depth) || 0;
-      }
-      return node;
-    }
-    function revalue(node, depth) {
-      var children = node.children, v = 0;
-      if (children && (n = children.length)) {
-        var i = -1, n, j = depth + 1;
-        while (++i < n) v += revalue(children[i], j);
-      } else if (value) {
-        v = +value.call(hierarchy, node, depth) || 0;
-      }
-      if (value) node.value = v;
-      return v;
-    }
-    function hierarchy(d) {
-      var nodes = [];
-      recurse(d, 0, nodes);
-      return nodes;
-    }
-    hierarchy.sort = function(x) {
-      if (!arguments.length) return sort;
-      sort = x;
-      return hierarchy;
-    };
-    hierarchy.children = function(x) {
-      if (!arguments.length) return children;
-      children = x;
-      return hierarchy;
-    };
-    hierarchy.value = function(x) {
-      if (!arguments.length) return value;
-      value = x;
-      return hierarchy;
-    };
-    hierarchy.revalue = function(root) {
-      revalue(root, 0);
-      return root;
-    };
-    return hierarchy;
-  };
-  function d3_layout_hierarchyRebind(object, hierarchy) {
-    d3.rebind(object, hierarchy, "sort", "children", "value");
-    object.nodes = object;
-    object.links = d3_layout_hierarchyLinks;
-    return object;
-  }
-  function d3_layout_hierarchyChildren(d) {
-    return d.children;
-  }
-  function d3_layout_hierarchyValue(d) {
-    return d.value;
-  }
-  function d3_layout_hierarchySort(a, b) {
-    return b.value - a.value;
-  }
-  function d3_layout_hierarchyLinks(nodes) {
-    return d3.merge(nodes.map(function(parent) {
-      return (parent.children || []).map(function(child) {
-        return {
-          source: parent,
-          target: child
-        };
-      });
-    }));
-  }
-  d3.layout.partition = function() {
-    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
-    function position(node, x, dx, dy) {
-      var children = node.children;
-      node.x = x;
-      node.y = node.depth * dy;
-      node.dx = dx;
-      node.dy = dy;
-      if (children && (n = children.length)) {
-        var i = -1, n, c, d;
-        dx = node.value ? dx / node.value : 0;
-        while (++i < n) {
-          position(c = children[i], x, d = c.value * dx, dy);
-          x += d;
-        }
-      }
-    }
-    function depth(node) {
-      var children = node.children, d = 0;
-      if (children && (n = children.length)) {
-        var i = -1, n;
-        while (++i < n) d = Math.max(d, depth(children[i]));
-      }
-      return 1 + d;
-    }
-    function partition(d, i) {
-      var nodes = hierarchy.call(this, d, i);
-      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
-      return nodes;
-    }
-    partition.size = function(x) {
-      if (!arguments.length) return size;
-      size = x;
-      return partition;
-    };
-    return d3_layout_hierarchyRebind(partition, hierarchy);
-  };
-  d3.layout.pie = function() {
-    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = 2 * π;
-    function pie(data) {
-      var values = data.map(function(d, i) {
-        return +value.call(pie, d, i);
-      });
-      var a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle);
-      var k = ((typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);
-      var index = d3.range(data.length);
-      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
-        return values[j] - values[i];
-      } : function(i, j) {
-        return sort(data[i], data[j]);
-      });
-      var arcs = [];
-      index.forEach(function(i) {
-        var d;
-        arcs[i] = {
-          data: data[i],
-          value: d = values[i],
-          startAngle: a,
-          endAngle: a += d * k
-        };
-      });
-      return arcs;
-    }
-    pie.value = function(x) {
-      if (!arguments.length) return value;
-      value = x;
-      return pie;
-    };
-    pie.sort = function(x) {
-      if (!arguments.length) return sort;
-      sort = x;
-      return pie;
-    };
-    pie.startAngle = function(x) {
-      if (!arguments.length) return startAngle;
-      startAngle = x;
-      return pie;
-    };
-    pie.endAngle = function(x) {
-      if (!arguments.length) return endAngle;
-      endAngle = x;
-      return pie;
-    };
-    return pie;
-  };
-  var d3_layout_pieSortByValue = {};
-  d3.layout.stack = function() {
-    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
-    function stack(data, index) {
-      var series = data.map(function(d, i) {
-        return values.call(stack, d, i);
-      });
-      var points = series.map(function(d) {
-        return d.map(function(v, i) {
-          return [ x.call(stack, v, i), y.call(stack, v, i) ];
-        });
-      });
-      var orders = order.call(stack, points, index);
-      series = d3.permute(series, orders);
-      points = d3.permute(points, orders);
-      var offsets = offset.call(stack, points, index);
-      var n = series.length, m = series[0].length, i, j, o;
-      for (j = 0; j < m; ++j) {
-        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
-        for (i = 1; i < n; ++i) {
-          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
-        }
-      }
-      return data;
-    }
-    stack.values = function(x) {
-      if (!arguments.length) return values;
-      values = x;
-      return stack;
-    };
-    stack.order = function(x) {
-      if (!arguments.length) return order;
-      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
-      return stack;
-    };
-    stack.offset = function(x) {
-      if (!arguments.length) return offset;
-      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
-      return stack;
-    };
-    stack.x = function(z) {
-      if (!arguments.length) return x;
-      x = z;
-      return stack;
-    };
-    stack.y = function(z) {
-      if (!arguments.length) return y;
-      y = z;
-      return stack;
-    };
-    stack.out = function(z) {
-      if (!arguments.length) return out;
-      out = z;
-      return stack;
-    };
-    return stack;
-  };
-  function d3_layout_stackX(d) {
-    return d.x;
-  }
-  function d3_layout_stackY(d) {
-    return d.y;
-  }
-  function d3_layout_stackOut(d, y0, y) {
-    d.y0 = y0;
-    d.y = y;
-  }
-  var d3_layout_stackOrders = d3.map({
-    "inside-out": function(data) {
-      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
-        return max[a] - max[b];
-      }), top = 0, bottom = 0, tops = [], bottoms = [];
-      for (i = 0; i < n; ++i) {
-        j = index[i];
-        if (top < bottom) {
-          top += sums[j];
-          tops.push(j);
-        } else {
-          bottom += sums[j];
-          bottoms.push(j);
-        }
-      }
-      return bottoms.reverse().concat(tops);
-    },
-    reverse: function(data) {
-      return d3.range(data.length).reverse();
-    },
-    "default": d3_layout_stackOrderDefault
-  });
-  var d3_layout_stackOffsets = d3.map({
-    silhouette: function(data) {
-      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
-      for (j = 0; j < m; ++j) {
-        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
-        if (o > max) max = o;
-        sums.push(o);
-      }
-      for (j = 0; j < m; ++j) {
-        y0[j] = (max - sums[j]) / 2;
-      }
-      return y0;
-    },
-    wiggle: function(data) {
-      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
-      y0[0] = o = o0 = 0;
-      for (j = 1; j < m; ++j) {
-        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
-        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
-          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
-            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
-          }
-          s2 += s3 * data[i][j][1];
-        }
-        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
-        if (o < o0) o0 = o;
-      }
-      for (j = 0; j < m; ++j) y0[j] -= o0;
-      return y0;
-    },
-    expand: function(data) {
-      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
-      for (j = 0; j < m; ++j) {
-        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
-        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
-      }
-      for (j = 0; j < m; ++j) y0[j] = 0;
-      return y0;
-    },
-    zero: d3_layout_stackOffsetZero
-  });
-  function d3_layout_stackOrderDefault(data) {
-    return d3.range(data.length);
-  }
-  function d3_layout_stackOffsetZero(data) {
-    var j = -1, m = data[0].length, y0 = [];
-    while (++j < m) y0[j] = 0;
-    return y0;
-  }
-  function d3_layout_stackMaxIndex(array) {
-    var i = 1, j = 0, v = array[0][1], k, n = array.length;
-    for (;i < n; ++i) {
-      if ((k = array[i][1]) > v) {
-        j = i;
-        v = k;
-      }
-    }
-    return j;
-  }
-  function d3_layout_stackReduceSum(d) {
-    return d.reduce(d3_layout_stackSum, 0);
-  }
-  function d3_layout_stackSum(p, d) {
-    return p + d[1];
-  }
-  d3.layout.histogram = function() {
-    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
-    function histogram(data, i) {
-      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
-      while (++i < m) {
-        bin = bins[i] = [];
-        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
-        bin.y = 0;
-      }
-      if (m > 0) {
-        i = -1;
-        while (++i < n) {
-          x = values[i];
-          if (x >= range[0] && x <= range[1]) {
-            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
-            bin.y += k;
-            bin.push(data[i]);
-          }
-        }
-      }
-      return bins;
-    }
-    histogram.value = function(x) {
-      if (!arguments.length) return valuer;
-      valuer = x;
-      return histogram;
-    };
-    histogram.range = function(x) {
-      if (!arguments.length) return ranger;
-      ranger = d3_functor(x);
-      return histogram;
-    };
-    histogram.bins = function(x) {
-      if (!arguments.length) return binner;
-      binner = typeof x === "number" ? function(range) {
-        return d3_layout_histogramBinFixed(range, x);
-      } : d3_functor(x);
-      return histogram;
-    };
-    histogram.frequency = function(x) {
-      if (!arguments.length) return frequency;
-      frequency = !!x;
-      return histogram;
-    };
-    return histogram;
-  };
-  function d3_layout_histogramBinSturges(range, values) {
-    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
-  }
-  function d3_layout_histogramBinFixed(range, n) {
-    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
-    while (++x <= n) f[x] = m * x + b;
-    return f;
-  }
-  function d3_layout_histogramRange(values) {
-    return [ d3.min(values), d3.max(values) ];
-  }
-  d3.layout.tree = function() {
-    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
-    function tree(d, i) {
-      var nodes = hierarchy.call(this, d, i), root = nodes[0];
-      function firstWalk(node, previousSibling) {
-        var children = node.children, layout = node._tree;
-        if (children && (n = children.length)) {
-          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;
-          while (++i < n) {
-            child = children[i];
-            firstWalk(child, previousChild);
-            ancestor = apportion(child, previousChild, ancestor);
-            previousChild = child;
-          }
-          d3_layout_treeShift(node);
-          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);
-          if (previousSibling) {
-            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);
-            layout.mod = layout.prelim - midpoint;
-          } else {
-            layout.prelim = midpoint;
-          }
-        } else {
-          if (previousSibling) {
-            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);
-          }
-        }
-      }
-      function secondWalk(node, x) {
-        node.x = node._tree.prelim + x;
-        var children = node.children;
-        if (children && (n = children.length)) {
-          var i = -1, n;
-          x += node._tree.mod;
-          while (++i < n) {
-            secondWalk(children[i], x);
-          }
-        }
-      }
-      function apportion(node, previousSibling, ancestor) {
-        if (previousSibling) {
-          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;
-          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
-            vom = d3_layout_treeLeft(vom);
-            vop = d3_layout_treeRight(vop);
-            vop._tree.ancestor = node;
-            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);
-            if (shift > 0) {
-              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);
-              sip += shift;
-              sop += shift;
-            }
-            sim += vim._tree.mod;
-            sip += vip._tree.mod;
-            som += vom._tree.mod;
-            sop += vop._tree.mod;
-          }
-          if (vim && !d3_layout_treeRight(vop)) {
-            vop._tree.thread = vim;
-            vop._tree.mod += sim - sop;
-          }
-          if (vip && !d3_layout_treeLeft(vom)) {
-            vom._tree.thread = vip;
-            vom._tree.mod += sip - som;
-            ancestor = node;
-          }
-        }
-        return ancestor;
-      }
-      d3_layout_treeVisitAfter(root, function(node, previousSibling) {
-        node._tree = {
-          ancestor: node,
-          prelim: 0,
-          mod: 0,
-          change: 0,
-          shift: 0,
-          number: previousSibling ? previousSibling._tree.number + 1 : 0
-        };
-      });
-      firstWalk(root);
-      secondWalk(root, -root._tree.prelim);
-      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;
-      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {
-        node.x *= size[0];
-        node.y = node.depth * size[1];
-        delete node._tree;
-      } : function(node) {
-        node.x = (node.x - x0) / (x1 - x0) * size[0];
-        node.y = node.depth / y1 * size[1];
-        delete node._tree;
-      });
-      return nodes;
-    }
-    tree.separation = function(x) {
-      if (!arguments.length) return separation;
-      separation = x;
-      return tree;
-    };
-    tree.size = function(x) {
-      if (!arguments.length) return nodeSize ? null : size;
-      nodeSize = (size = x) == null;
-      return tree;
-    };
-    tree.nodeSize = function(x) {
-      if (!arguments.length) return nodeSize ? size : null;
-      nodeSize = (size = x) != null;
-      return tree;
-    };
-    return d3_layout_hierarchyRebind(tree, hierarchy);
-  };
-  function d3_layout_treeSeparation(a, b) {
-    return a.parent == b.parent ? 1 : 2;
-  }
-  function d3_layout_treeLeft(node) {
-    var children = node.children;
-    return children && children.length ? children[0] : node._tree.thread;
-  }
-  function d3_layout_treeRight(node) {
-    var children = node.children, n;
-    return children && (n = children.length) ? children[n - 1] : node._tree.thread;
-  }
-  function d3_layout_treeSearch(node, compare) {
-    var children = node.children;
-    if (children && (n = children.length)) {
-      var child, n, i = -1;
-      while (++i < n) {
-        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {
-          node = child;
-        }
-      }
-    }
-    return node;
-  }
-  function d3_layout_treeRightmost(a, b) {
-    return a.x - b.x;
-  }
-  function d3_layout_treeLeftmost(a, b) {
-    return b.x - a.x;
-  }
-  function d3_layout_treeDeepest(a, b) {
-    return a.depth - b.depth;
-  }
-  function d3_layout_treeVisitAfter(node, callback) {
-    function visit(node, previousSibling) {
-      var children = node.children;
-      if (children && (n = children.length)) {
-        var child, previousChild = null, i = -1, n;
-        while (++i < n) {
-          child = children[i];
-          visit(child, previousChild);
-          previousChild = child;
-        }
-      }
-      callback(node, previousSibling);
-    }
-    visit(node, null);
-  }
-  function d3_layout_treeShift(node) {
-    var shift = 0, change = 0, children = node.children, i = children.length, child;
-    while (--i >= 0) {
-      child = children[i]._tree;
-      child.prelim += shift;
-      child.mod += shift;
-      shift += child.shift + (change += child.change);
-    }
-  }
-  function d3_layout_treeMove(ancestor, node, shift) {
-    ancestor = ancestor._tree;
-    node = node._tree;
-    var change = shift / (node.number - ancestor.number);
-    ancestor.change += change;
-    node.change -= change;
-    node.shift += shift;
-    node.prelim += shift;
-    node.mod += shift;
-  }
-  function d3_layout_treeAncestor(vim, node, ancestor) {
-    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;
-  }
-  d3.layout.pack = function() {
-    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
-    function pack(d, i) {
-      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
-        return radius;
-      };
-      root.x = root.y = 0;
-      d3_layout_treeVisitAfter(root, function(d) {
-        d.r = +r(d.value);
-      });
-      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);
-      if (padding) {
-        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
-        d3_layout_treeVisitAfter(root, function(d) {
-          d.r += dr;
-        });
-        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);
-        d3_layout_treeVisitAfter(root, function(d) {
-          d.r -= dr;
-        });
-      }
-      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
-      return nodes;
-    }
-    pack.size = function(_) {
-      if (!arguments.length) return size;
-      size = _;
-      return pack;
-    };
-    pack.radius = function(_) {
-      if (!arguments.length) return radius;
-      radius = _ == null || typeof _ === "function" ? _ : +_;
-      return pack;
-    };
-    pack.padding = function(_) {
-      if (!arguments.length) return padding;
-      padding = +_;
-      return pack;
-    };
-    return d3_layout_hierarchyRebind(pack, hierarchy);
-  };
-  function d3_layout_packSort(a, b) {
-    return a.value - b.value;
-  }
-  function d3_layout_packInsert(a, b) {
-    var c = a._pack_next;
-    a._pack_next = b;
-    b._pack_prev = a;
-    b._pack_next = c;
-    c._pack_prev = b;
-  }
-  function d3_layout_packSplice(a, b) {
-    a._pack_next = b;
-    b._pack_prev = a;
-  }
-  function d3_layout_packIntersects(a, b) {
-    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
-    return .999 * dr * dr > dx * dx + dy * dy;
-  }
-  function d3_layout_packSiblings(node) {
-    if (!(nodes = node.children) || !(n = nodes.length)) return;
-    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
-    function bound(node) {
-      xMin = Math.min(node.x - node.r, xMin);
-      xMax = Math.max(node.x + node.r, xMax);
-      yMin = Math.min(node.y - node.r, yMin);
-      yMax = Math.max(node.y + node.r, yMax);
-    }
-    nodes.forEach(d3_layout_packLink);
-    a = nodes[0];
-    a.x = -a.r;
-    a.y = 0;
-    bound(a);
-    if (n > 1) {
-      b = nodes[1];
-      b.x = b.r;
-      b.y = 0;
-      bound(b);
-      if (n > 2) {
-        c = nodes[2];
-        d3_layout_packPlace(a, b, c);
-        bound(c);
-        d3_layout_packInsert(a, c);
-        a._pack_prev = c;
-        d3_layout_packInsert(c, b);
-        b = a._pack_next;
-        for (i = 3; i < n; i++) {
-          d3_layout_packPlace(a, b, c = nodes[i]);
-          var isect = 0, s1 = 1, s2 = 1;
-          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
-            if (d3_layout_packIntersects(j, c)) {
-              isect = 1;
-              break;
-            }
-          }
-          if (isect == 1) {
-            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
-              if (d3_layout_packIntersects(k, c)) {
-                break;
-              }
-            }
-          }
-          if (isect) {
-            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
-            i--;
-          } else {
-            d3_layout_packInsert(a, c);
-            b = c;
-            bound(c);
-          }
-        }
-      }
-    }
-    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
-    for (i = 0; i < n; i++) {
-      c = nodes[i];
-      c.x -= cx;
-      c.y -= cy;
-      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
-    }
-    node.r = cr;
-    nodes.forEach(d3_layout_packUnlink);
-  }
-  function d3_layout_packLink(node) {
-    node._pack_next = node._pack_prev = node;
-  }
-  function d3_layout_packUnlink(node) {
-    delete node._pack_next;
-    delete node._pack_prev;
-  }
-  function d3_layout_packTransform(node, x, y, k) {
-    var children = node.children;
-    node.x = x += k * node.x;
-    node.y = y += k * node.y;
-    node.r *= k;
-    if (children) {
-      var i = -1, n = children.length;
-      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
-    }
-  }
-  function d3_layout_packPlace(a, b, c) {
-    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
-    if (db && (dx || dy)) {
-      var da = b.r + c.r, dc = dx * dx + dy * dy;
-      da *= da;
-      db *= db;
-      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
-      c.x = a.x + x * dx + y * dy;
-      c.y = a.y + x * dy - y * dx;
-    } else {
-      c.x = a.x + db;
-      c.y = a.y;
-    }
-  }
-  d3.layout.cluster = function() {
-    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
-    function cluster(d, i) {
-      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
-      d3_layout_treeVisitAfter(root, function(node) {
-        var children = node.children;
-        if (children && children.length) {
-          node.x = d3_layout_clusterX(children);
-          node.y = d3_layout_clusterY(children);
-        } else {
-          node.x = previousNode ? x += separation(node, previousNode) : 0;
-          node.y = 0;
-          previousNode = node;
-        }
-      });
-      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
-      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {
-        node.x = (node.x - root.x) * size[0];
-        node.y = (root.y - node.y) * size[1];
-      } : function(node) {
-        node.x = (node.x - x0) / (x1 - x0) * size[0];
-        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
-      });
-      return nodes;
-    }
-    cluster.separation = function(x) {
-      if (!arguments.length) return separation;
-      separation = x;
-      return cluster;
-    };
-    cluster.size = function(x) {
-      if (!arguments.length) return nodeSize ? null : size;
-      nodeSize = (size = x) == null;
-      return cluster;
-    };
-    cluster.nodeSize = function(x) {
-      if (!arguments.length) return nodeSize ? size : null;
-      nodeSize = (size = x) != null;
-      return cluster;
-    };
-    return d3_layout_hierarchyRebind(cluster, hierarchy);
-  };
-  function d3_layout_clusterY(children) {
-    return 1 + d3.max(children, function(child) {
-      return child.y;
-    });
-  }
-  function d3_layout_clusterX(children) {
-    return children.reduce(function(x, child) {
-      return x + child.x;
-    }, 0) / children.length;
-  }
-  function d3_layout_clusterLeft(node) {
-    var children = node.children;
-    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
-  }
-  function d3_layout_clusterRight(node) {
-    var children = node.children, n;
-    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
-  }
-  d3.layout.treemap = function() {
-    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
-    function scale(children, k) {
-      var i = -1, n = children.length, child, area;
-      while (++i < n) {
-        area = (child = children[i]).value * (k < 0 ? 0 : k);
-        child.area = isNaN(area) || area <= 0 ? 0 : area;
-      }
-    }
-    function squarify(node) {
-      var children = node.children;
-      if (children && children.length) {
-        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
-        scale(remaining, rect.dx * rect.dy / node.value);
-        row.area = 0;
-        while ((n = remaining.length) > 0) {
-          row.push(child = remaining[n - 1]);
-          row.area += child.area;
-          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
-            remaining.pop();
-            best = score;
-          } else {
-            row.area -= row.pop().area;
-            position(row, u, rect, false);
-            u = Math.min(rect.dx, rect.dy);
-            row.length = row.area = 0;
-            best = Infinity;
-          }
-        }
-        if (row.length) {
-          position(row, u, rect, true);
-          row.length = row.area = 0;
-        }
-        children.forEach(squarify);
-      }
-    }
-    function stickify(node) {
-      var children = node.children;
-      if (children && children.length) {
-        var rect = pad(node), remaining = children.slice(), child, row = [];
-        scale(remaining, rect.dx * rect.dy / node.value);
-        row.area = 0;
-        while (child = remaining.pop()) {
-          row.push(child);
-          row.area += child.area;
-          if (child.z != null) {
-            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
-            row.length = row.area = 0;
-          }
-        }
-        children.forEach(stickify);
-      }
-    }
-    function worst(row, u) {
-      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
-      while (++i < n) {
-        if (!(r = row[i].area)) continue;
-        if (r < rmin) rmin = r;
-        if (r > rmax) rmax = r;
-      }
-      s *= s;
-      u *= u;
-      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
-    }
-    function position(row, u, rect, flush) {
-      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
-      if (u == rect.dx) {
-        if (flush || v > rect.dy) v = rect.dy;
-        while (++i < n) {
-          o = row[i];
-          o.x = x;
-          o.y = y;
-          o.dy = v;
-          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
-        }
-        o.z = true;
-        o.dx += rect.x + rect.dx - x;
-        rect.y += v;
-        rect.dy -= v;
-      } else {
-        if (flush || v > rect.dx) v = rect.dx;
-        while (++i < n) {
-          o = row[i];
-          o.x = x;
-          o.y = y;
-          o.dx = v;
-          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
-        }
-        o.z = false;
-        o.dy += rect.y + rect.dy - y;
-        rect.x += v;
-        rect.dx -= v;
-      }
-    }
-    function treemap(d) {
-      var nodes = stickies || hierarchy(d), root = nodes[0];
-      root.x = 0;
-      root.y = 0;
-      root.dx = size[0];
-      root.dy = size[1];
-      if (stickies) hierarchy.revalue(root);
-      scale([ root ], root.dx * root.dy / root.value);
-      (stickies ? stickify : squarify)(root);
-      if (sticky) stickies = nodes;
-      return nodes;
-    }
-    treemap.size = function(x) {
-      if (!arguments.length) return size;
-      size = x;
-      return treemap;
-    };
-    treemap.padding = function(x) {
-      if (!arguments.length) return padding;
-      function padFunction(node) {
-        var p = x.call(treemap, node, node.depth);
-        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
-      }
-      function padConstant(node) {
-        return d3_layout_treemapPad(node, x);
-      }
-      var type;
-      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ],
-      padConstant) : padConstant;
-      return treemap;
-    };
-    treemap.round = function(x) {
-      if (!arguments.length) return round != Number;
-      round = x ? Math.round : Number;
-      return treemap;
-    };
-    treemap.sticky = function(x) {
-      if (!arguments.length) return sticky;
-      sticky = x;
-      stickies = null;
-      return treemap;
-    };
-    treemap.ratio = function(x) {
-      if (!arguments.length) return ratio;
-      ratio = x;
-      return treemap;
-    };
-    treemap.mode = function(x) {
-      if (!arguments.length) return mode;
-      mode = x + "";
-      return treemap;
-    };
-    return d3_layout_hierarchyRebind(treemap, hierarchy);
-  };
-  function d3_layout_treemapPadNull(node) {
-    return {
-      x: node.x,
-      y: node.y,
-      dx: node.dx,
-      dy: node.dy
-    };
-  }
-  function d3_layout_treemapPad(node, padding) {
-    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
-    if (dx < 0) {
-      x += dx / 2;
-      dx = 0;
-    }
-    if (dy < 0) {
-      y += dy / 2;
-      dy = 0;
-    }
-    return {
-      x: x,
-      y: y,
-      dx: dx,
-      dy: dy
-    };
-  }
-  d3.random = {
-    normal: function(µ, σ) {
-      var n = arguments.length;
-      if (n < 2) σ = 1;
-      if (n < 1) µ = 0;
-      return function() {
-        var x, y, r;
-        do {
-          x = Math.random() * 2 - 1;
-          y = Math.random() * 2 - 1;
-          r = x * x + y * y;
-        } while (!r || r > 1);
-        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
-      };
-    },
-    logNormal: function() {
-      var random = d3.random.normal.apply(d3, arguments);
-      return function() {
-        return Math.exp(random());
-      };
-    },
-    irwinHall: function(m) {
-      return function() {
-        for (var s = 0, j = 0; j < m; j++) s += Math.random();
-        return s / m;
-      };
-    }
-  };
-  d3.scale = {};
-  function d3_scaleExtent(domain) {
-    var start = domain[0], stop = domain[domain.length - 1];
-    return start < stop ? [ start, stop ] : [ stop, start ];
-  }
-  function d3_scaleRange(scale) {
-    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
-  }
-  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
-    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
-    return function(x) {
-      return i(u(x));
-    };
-  }
-  function d3_scale_nice(domain, nice) {
-    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
-    if (x1 < x0) {
-      dx = i0, i0 = i1, i1 = dx;
-      dx = x0, x0 = x1, x1 = dx;
-    }
-    domain[i0] = nice.floor(x0);
-    domain[i1] = nice.ceil(x1);
-    return domain;
-  }
-  function d3_scale_niceStep(step) {
-    return step ? {
-      floor: function(x) {
-        return Math.floor(x / step) * step;
-      },
-      ceil: function(x) {
-        return Math.ceil(x / step) * step;
-      }
-    } : d3_scale_niceIdentity;
-  }
-  var d3_scale_niceIdentity = {
-    floor: d3_identity,
-    ceil: d3_identity
-  };
-  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
-    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
-    if (domain[k] < domain[0]) {
-      domain = domain.slice().reverse();
-      range = range.slice().reverse();
-    }
-    while (++j <= k) {
-      u.push(uninterpolate(domain[j - 1], domain[j]));
-      i.push(interpolate(range[j - 1], range[j]));
-    }
-    return function(x) {
-      var j = d3.bisect(domain, x, 1, k) - 1;
-      return i[j](u[j](x));
-    };
-  }
-  d3.scale.linear = function() {
-    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
-  };
-  function d3_scale_linear(domain, range, interpolate, clamp) {
-    var output, input;
-    function rescale() {
-      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
-      output = linear(domain, range, uninterpolate, interpolate);
-      input = linear(range, domain, uninterpolate, d3_interpolate);
-      return scale;
-    }
-    function scale(x) {
-      return output(x);
-    }
-    scale.invert = function(y) {
-      return input(y);
-    };
-    scale.domain = function(x) {
-      if (!arguments.length) return domain;
-      domain = x.map(Number);
-      return rescale();
-    };
-    scale.range = function(x) {
-      if (!arguments.length) return range;
-      range = x;
-      return rescale();
-    };
-    scale.rangeRound = function(x) {
-      return scale.range(x).interpolate(d3_interpolateRound);
-    };
-    scale.clamp = function(x) {
-      if (!arguments.length) return clamp;
-      clamp = x;
-      return rescale();
-    };
-    scale.interpolate = function(x) {
-      if (!arguments.length) return interpolate;
-      interpolate = x;
-      return rescale();
-    };
-    scale.ticks = function(m) {
-      return d3_scale_linearTicks(domain, m);
-    };
-    scale.tickFormat = function(m, format) {
-      return d3_scale_linearTickFormat(domain, m, format);
-    };
-    scale.nice = function(m) {
-      d3_scale_linearNice(domain, m);
-      return rescale();
-    };
-    scale.copy = function() {
-      return d3_scale_linear(domain, range, interpolate, clamp);
-    };
-    return rescale();
-  }
-  function d3_scale_linearRebind(scale, linear) {
-    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
-  }
-  function d3_scale_linearNice(domain, m) {
-    return d3_scale_nice(domain, d3_scale_niceStep(m ? d3_scale_linearTickRange(domain, m)[2] : d3_scale_linearNiceStep(domain)));
-  }
-  function d3_scale_linearNiceStep(domain) {
-    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0];
-    return Math.pow(10, Math.round(Math.log(span) / Math.LN10) - 1);
-  }
-  function d3_scale_linearTickRange(domain, m) {
-    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
-    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
-    extent[0] = Math.ceil(extent[0] / step) * step;
-    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
-    extent[2] = step;
-    return extent;
-  }
-  function d3_scale_linearTicks(domain, m) {
-    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
-  }
-  function d3_scale_linearTickFormat(domain, m, format) {
-    var precision = -Math.floor(Math.log(d3_scale_linearTickRange(domain, m)[2]) / Math.LN10 + .01);
-    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {
-      return [ b, c, d, e, f, g, h, i || "." + (precision - (j === "%") * 2), j ].join("");
-    }) : ",." + precision + "f");
-  }
-  d3.scale.log = function() {
-    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
-  };
-  function d3_scale_log(linear, base, positive, domain) {
-    function log(x) {
-      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
-    }
-    function pow(x) {
-      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
-    }
-    function scale(x) {
-      return linear(log(x));
-    }
-    scale.invert = function(x) {
-      return pow(linear.invert(x));
-    };
-    scale.domain = function(x) {
-      if (!arguments.length) return domain;
-      positive = x[0] >= 0;
-      linear.domain((domain = x.map(Number)).map(log));
-      return scale;
-    };
-    scale.base = function(_) {
-      if (!arguments.length) return base;
-      base = +_;
-      linear.domain(domain.map(log));
-      return scale;
-    };
-    scale.nice = function() {
-      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
-      linear.domain(niced);
-      domain = niced.map(pow);
-      return scale;
-    };
-    scale.ticks = function() {
-      var extent = d3_scaleExtent(domain), ticks = [];
-      if (extent.every(isFinite)) {
-        var u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
-        if (positive) {
-          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
-          ticks.push(pow(i));
-        } else {
-          ticks.push(pow(i));
-          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
-        }
-        for (i = 0; ticks[i] < u; i++) {}
-        for (j = ticks.length; ticks[j - 1] > v; j--) {}
-        ticks = ticks.slice(i, j);
-      }
-      return ticks;
-    };
-    scale.tickFormat = function(n, format) {
-      if (!arguments.length) return d3_scale_logFormat;
-      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
-      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12,
-      Math.floor), e;
-      return function(d) {
-        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
-      };
-    };
-    scale.copy = function() {
-      return d3_scale_log(linear.copy(), base, positive, domain);
-    };
-    return d3_scale_linearRebind(scale, linear);
-  }
-  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
-    floor: function(x) {
-      return -Math.ceil(-x);
-    },
-    ceil: function(x) {
-      return -Math.floor(-x);
-    }
-  };
-  d3.scale.pow = function() {
-    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
-  };
-  function d3_scale_pow(linear, exponent, domain) {
-    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
-    function scale(x) {
-      return linear(powp(x));
-    }
-    scale.invert = function(x) {
-      return powb(linear.invert(x));
-    };
-    scale.domain = function(x) {
-      if (!arguments.length) return domain;
-      linear.domain((domain = x.map(Number)).map(powp));
-      return scale;
-    };
-    scale.ticks = function(m) {
-      return d3_scale_linearTicks(domain, m);
-    };
-    scale.tickFormat = function(m, format) {
-      return d3_scale_linearTickFormat(domain, m, format);
-    };
-    scale.nice = function(m) {
-      return scale.domain(d3_scale_linearNice(domain, m));
-    };
-    scale.exponent = function(x) {
-      if (!arguments.length) return exponent;
-      powp = d3_scale_powPow(exponent = x);
-      powb = d3_scale_powPow(1 / exponent);
-      linear.domain(domain.map(powp));
-      return scale;
-    };
-    scale.copy = function() {
-      return d3_scale_pow(linear.copy(), exponent, domain);
-    };
-    return d3_scale_linearRebind(scale, linear);
-  }
-  function d3_scale_powPow(e) {
-    return function(x) {
-      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
-    };
-  }
-  d3.scale.sqrt = function() {
-    return d3.scale.pow().exponent(.5);
-  };
-  d3.scale.ordinal = function() {
-    return d3_scale_ordinal([], {
-      t: "range",
-      a: [ [] ]
-    });
-  };
-  function d3_scale_ordinal(domain, ranger) {
-    var index, range, rangeBand;
-    function scale(x) {
-      return range[((index.get(x) || index.set(x, domain.push(x))) - 1) % range.length];
-    }
-    function steps(start, step) {
-      return d3.range(domain.length).map(function(i) {
-        return start + step * i;
-      });
-    }
-    scale.domain = function(x) {
-      if (!arguments.length) return domain;
-      domain = [];
-      index = new d3_Map();
-      var i = -1, n = x.length, xi;
-      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
-      return scale[ranger.t].apply(scale, ranger.a);
-    };
-    scale.range = function(x) {
-      if (!arguments.length) return range;
-      range = x;
-      rangeBand = 0;
-      ranger = {
-        t: "range",
-        a: arguments
-      };
-      return scale;
-    };
-    scale.rangePoints = function(x, padding) {
-      if (arguments.length < 2) padding = 0;
-      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);
-      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);
-      rangeBand = 0;
-      ranger = {
-        t: "rangePoints",
-        a: arguments
-      };
-      return scale;
-    };
-    scale.rangeBands = function(x, padding, outerPadding) {
-      if (arguments.length < 2) padding = 0;
-      if (arguments.length < 3) outerPadding = padding;
-      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
-      range = steps(start + step * outerPadding, step);
-      if (reverse) range.reverse();
-      rangeBand = step * (1 - padding);
-      ranger = {
-        t: "rangeBands",
-        a: arguments
-      };
-      return scale;
-    };
-    scale.rangeRoundBands = function(x, padding, outerPadding) {
-      if (arguments.length < 2) padding = 0;
-      if (arguments.length < 3) outerPadding = padding;
-      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;
-      range = steps(start + Math.round(error / 2), step);
-      if (reverse) range.reverse();
-      rangeBand = Math.round(step * (1 - padding));
-      ranger = {
-        t: "rangeRoundBands",
-        a: arguments
-      };
-      return scale;
-    };
-    scale.rangeBand = function() {
-      return rangeBand;
-    };
-    scale.rangeExtent = function() {
-      return d3_scaleExtent(ranger.a[0]);
-    };
-    scale.copy = function() {
-      return d3_scale_ordinal(domain, ranger);
-    };
-    return scale.domain(domain);
-  }
-  d3.scale.category10 = function() {
-    return d3.scale.ordinal().range(d3_category10);
-  };
-  d3.scale.category20 = function() {
-    return d3.scale.ordinal().range(d3_category20);
-  };
-  d3.scale.category20b = function() {
-    return d3.scale.ordinal().range(d3_category20b);
-  };
-  d3.scale.category20c = function() {
-    return d3.scale.ordinal().range(d3_category20c);
-  };
-  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
-  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
-  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
-  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
-  d3.scale.quantile = function() {
-    return d3_scale_quantile([], []);
-  };
-  function d3_scale_quantile(domain, range) {
-    var thresholds;
-    function rescale() {
-      var k = 0, q = range.length;
-      thresholds = [];
-      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
-      return scale;
-    }
-    function scale(x) {
-      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
-    }
-    scale.domain = function(x) {
-      if (!arguments.length) return domain;
-      domain = x.filter(function(d) {
-        return !isNaN(d);
-      }).sort(d3.ascending);
-      return rescale();
-    };
-    scale.range = function(x) {
-      if (!arguments.length) return range;
-      range = x;
-      return rescale();
-    };
-    scale.quantiles = function() {
-      return thresholds;
-    };
-    scale.invertExtent = function(y) {
-      y = range.indexOf(y);
-      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
-    };
-    scale.copy = function() {
-      return d3_scale_quantile(domain, range);
-    };
-    return rescale();
-  }
-  d3.scale.quantize = function() {
-    return d3_scale_quantize(0, 1, [ 0, 1 ]);
-  };
-  function d3_scale_quantize(x0, x1, range) {
-    var kx, i;
-    function scale(x) {
-      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
-    }
-    function rescale() {
-      kx = range.length / (x1 - x0);
-      i = range.length - 1;
-      return scale;
-    }
-    scale.domain = function(x) {
-      if (!arguments.length) return [ x0, x1 ];
-      x0 = +x[0];
-      x1 = +x[x.length - 1];
-      return rescale();
-    };
-    scale.range = function(x) {
-      if (!arguments.length) return range;
-      range = x;
-      return rescale();
-    };
-    scale.invertExtent = function(y) {
-      y = range.indexOf(y);
-      y = y < 0 ? NaN : y / kx + x0;
-      return [ y, y + 1 / kx ];
-    };
-    scale.copy = function() {
-      return d3_scale_quantize(x0, x1, range);
-    };
-    return rescale();
-  }
-  d3.scale.threshold = function() {
-    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
-  };
-  function d3_scale_threshold(domain, range) {
-    function scale(x) {
-      if (x <= x) return range[d3.bisect(domain, x)];
-    }
-    scale.domain = function(_) {
-      if (!arguments.length) return domain;
-      domain = _;
-      return scale;
-    };
-    scale.range = function(_) {
-      if (!arguments.length) return range;
-      range = _;
-      return scale;
-    };
-    scale.invertExtent = function(y) {
-      y = range.indexOf(y);
-      return [ domain[y - 1], domain[y] ];
-    };
-    scale.copy = function() {
-      return d3_scale_threshold(domain, range);
-    };
-    return scale;
-  }
-  d3.scale.identity = function() {
-    return d3_scale_identity([ 0, 1 ]);
-  };
-  function d3_scale_identity(domain) {
-    function identity(x) {
-      return +x;
-    }
-    identity.invert = identity;
-    identity.domain = identity.range = function(x) {
-      if (!arguments.length) return domain;
-      domain = x.map(identity);
-      return identity;
-    };
-    identity.ticks = function(m) {
-      return d3_scale_linearTicks(domain, m);
-    };
-    identity.tickFormat = function(m, format) {
-      return d3_scale_linearTickFormat(domain, m, format);
-    };
-    identity.copy = function() {
-      return d3_scale_identity(domain);
-    };
-    return identity;
-  }
-  d3.svg.arc = function() {
-    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
-    function arc() {
-      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0,
-      a0 = a1, a1 = da), a1 - a0), df = da < π ? "0" : "1", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);
-      return da >= d3_svg_arcMax ? r0 ? "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "M0," + r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + -r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + r0 + "Z" : "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "Z" : r0 ? "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L" + r0 * c1 + "," + r0 * s1 + "A" + r0 + "," + r0 + " 0 " + df + ",0 " + r0 * c0 + "," + r0 * s0 + "Z" : "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L0,0" + "Z";
-    }
-    arc.innerRadius = function(v) {
-      if (!arguments.length) return innerRadius;
-      innerRadius = d3_functor(v);
-      return arc;
-    };
-    arc.outerRadius = function(v) {
-      if (!arguments.length) return outerRadius;
-      outerRadius = d3_functor(v);
-      return arc;
-    };
-    arc.startAngle = function(v) {
-      if (!arguments.length) return startAngle;
-      startAngle = d3_functor(v);
-      return arc;
-    };
-    arc.endAngle = function(v) {
-      if (!arguments.length) return endAngle;
-      endAngle = d3_functor(v);
-      return arc;
-    };
-    arc.centroid = function() {
-      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;
-      return [ Math.cos(a) * r, Math.sin(a) * r ];
-    };
-    return arc;
-  };
-  var d3_svg_arcOffset = -π / 2, d3_svg_arcMax = 2 * π - 1e-6;
-  function d3_svg_arcInnerRadius(d) {
-    return d.innerRadius;
-  }
-  function d3_svg_arcOuterRadius(d) {
-    return d.outerRadius;
-  }
-  function d3_svg_arcStartAngle(d) {
-    return d.startAngle;
-  }
-  function d3_svg_arcEndAngle(d) {
-    return d.endAngle;
-  }
-  d3.svg.line.radial = function() {
-    var line = d3_svg_line(d3_svg_lineRadial);
-    line.radius = line.x, delete line.x;
-    line.angle = line.y, delete line.y;
-    return line;
-  };
-  function d3_svg_lineRadial(points) {
-    var point, i = -1, n = points.length, r, a;
-    while (++i < n) {
-      point = points[i];
-      r = point[0];
-      a = point[1] + d3_svg_arcOffset;
-      point[0] = r * Math.cos(a);
-      point[1] = r * Math.sin(a);
-    }
-    return points;
-  }
-  function d3_svg_area(projection) {
-    var x0 = d3_svg_lineX, x1 = d3_svg_lineX, y0 = 0, y1 = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
-    function area(data) {
-      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
-        return x;
-      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
-        return y;
-      } : d3_functor(y1), x, y;
-      function segment() {
-        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
-      }
-      while (++i < n) {
-        if (defined.call(this, d = data[i], i)) {
-          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
-          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
-        } else if (points0.length) {
-          segment();
-          points0 = [];
-          points1 = [];
-        }
-      }
-      if (points0.length) segment();
-      return segments.length ? segments.join("") : null;
-    }
-    area.x = function(_) {
-      if (!arguments.length) return x1;
-      x0 = x1 = _;
-      return area;
-    };
-    area.x0 = function(_) {
-      if (!arguments.length) return x0;
-      x0 = _;
-      return area;
-    };
-    area.x1 = function(_) {
-      if (!arguments.length) return x1;
-      x1 = _;
-      return area;
-    };
-    area.y = function(_) {
-      if (!arguments.length) return y1;
-      y0 = y1 = _;
-      return area;
-    };
-    area.y0 = function(_) {
-      if (!arguments.length) return y0;
-      y0 = _;
-      return area;
-    };
-    area.y1 = function(_) {
-      if (!arguments.length) return y1;
-      y1 = _;
-      return area;
-    };
-    area.defined = function(_) {
-      if (!arguments.length) return defined;
-      defined = _;
-      return area;
-    };
-    area.interpolate = function(_) {
-      if (!arguments.length) return interpolateKey;
-      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
-      interpolateReverse = interpolate.reverse || interpolate;
-      L = interpolate.closed ? "M" : "L";
-      return area;
-    };
-    area.tension = function(_) {
-      if (!arguments.length) return tension;
-      tension = _;
-      return area;
-    };
-    return area;
-  }
-  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
-  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
-  d3.svg.area = function() {
-    return d3_svg_area(d3_identity);
-  };
-  d3.svg.area.radial = function() {
-    var area = d3_svg_area(d3_svg_lineRadial);
-    area.radius = area.x, delete area.x;
-    area.innerRadius = area.x0, delete area.x0;
-    area.outerRadius = area.x1, delete area.x1;
-    area.angle = area.y, delete area.y;
-    area.startAngle = area.y0, delete area.y0;
-    area.endAngle = area.y1, delete area.y1;
-    return area;
-  };
-  d3.svg.chord = function() {
-    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
-    function chord(d, i) {
-      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
-      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
-    }
-    function subgroup(self, f, d, i) {
-      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;
-      return {
-        r: r,
-        a0: a0,
-        a1: a1,
-        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
-        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
-      };
-    }
-    function equals(a, b) {
-      return a.a0 == b.a0 && a.a1 == b.a1;
-    }
-    function arc(r, p, a) {
-      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
-    }
-    function curve(r0, p0, r1, p1) {
-      return "Q 0,0 " + p1;
-    }
-    chord.radius = function(v) {
-      if (!arguments.length) return radius;
-      radius = d3_functor(v);
-      return chord;
-    };
-    chord.source = function(v) {
-      if (!arguments.length) return source;
-      source = d3_functor(v);
-      return chord;
-    };
-    chord.target = function(v) {
-      if (!arguments.length) return target;
-      target = d3_functor(v);
-      return chord;
-    };
-    chord.startAngle = function(v) {
-      if (!arguments.length) return startAngle;
-      startAngle = d3_functor(v);
-      return chord;
-    };
-    chord.endAngle = function(v) {
-      if (!arguments.length) return endAngle;
-      endAngle = d3_functor(v);
-      return chord;
-    };
-    return chord;
-  };
-  function d3_svg_chordRadius(d) {
-    return d.radius;
-  }
-  d3.svg.diagonal = function() {
-    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
-    function diagonal(d, i) {
-      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
-        x: p0.x,
-        y: m
-      }, {
-        x: p3.x,
-        y: m
-      }, p3 ];
-      p = p.map(projection);
-      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
-    }
-    diagonal.source = function(x) {
-      if (!arguments.length) return source;
-      source = d3_functor(x);
-      return diagonal;
-    };
-    diagonal.target = function(x) {
-      if (!arguments.length) return target;
-      target = d3_functor(x);
-      return diagonal;
-    };
-    diagonal.projection = function(x) {
-      if (!arguments.length) return projection;
-      projection = x;
-      return diagonal;
-    };
-    return diagonal;
-  };
-  function d3_svg_diagonalProjection(d) {
-    return [ d.x, d.y ];
-  }
-  d3.svg.diagonal.radial = function() {
-    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
-    diagonal.projection = function(x) {
-      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
-    };
-    return diagonal;
-  };
-  function d3_svg_diagonalRadialProjection(projection) {
-    return function() {
-      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;
-      return [ r * Math.cos(a), r * Math.sin(a) ];
-    };
-  }
-  d3.svg.symbol = function() {
-    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
-    function symbol(d, i) {
-      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
-    }
-    symbol.type = function(x) {
-      if (!arguments.length) return type;
-      type = d3_functor(x);
-      return symbol;
-    };
-    symbol.size = function(x) {
-      if (!arguments.length) return size;
-      size = d3_functor(x);
-      return symbol;
-    };
-    return symbol;
-  };
-  function d3_svg_symbolSize() {
-    return 64;
-  }
-  function d3_svg_symbolType() {
-    return "circle";
-  }
-  function d3_svg_symbolCircle(size) {
-    var r = Math.sqrt(size / π);
-    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
-  }
-  var d3_svg_symbols = d3.map({
-    circle: d3_svg_symbolCircle,
-    cross: function(size) {
-      var r = Math.sqrt(size / 5) / 2;
-      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
-    },
-    diamond: function(size) {
-      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
-      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
-    },
-    square: function(size) {
-      var r = Math.sqrt(size) / 2;
-      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
-    },
-    "triangle-down": function(size) {
-      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
-      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
-    },
-    "triangle-up": function(size) {
-      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
-      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
-    }
-  });
-  d3.svg.symbolTypes = d3_svg_symbols.keys();
-  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
-  function d3_transition(groups, id) {
-    d3_subclass(groups, d3_transitionPrototype);
-    groups.id = id;
-    return groups;
-  }
-  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
-  d3_transitionPrototype.call = d3_selectionPrototype.call;
-  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
-  d3_transitionPrototype.node = d3_selectionPrototype.node;
-  d3_transitionPrototype.size = d3_selectionPrototype.size;
-  d3.transition = function(selection) {
-    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();
-  };
-  d3.transition.prototype = d3_transitionPrototype;
-  d3_transitionPrototype.select = function(selector) {
-    var id = this.id, subgroups = [], subgroup, subnode, node;
-    selector = d3_selection_selector(selector);
-    for (var j = -1, m = this.length; ++j < m; ) {
-      subgroups.push(subgroup = []);
-      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
-        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
-          if ("__data__" in node) subnode.__data__ = node.__data__;
-          d3_transitionNode(subnode, i, id, node.__transition__[id]);
-          subgroup.push(subnode);
-        } else {
-          subgroup.push(null);
-        }
-      }
-    }
-    return d3_transition(subgroups, id);
-  };
-  d3_transitionPrototype.selectAll = function(selector) {
-    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;
-    selector = d3_selection_selectorAll(selector);
-    for (var j = -1, m = this.length; ++j < m; ) {
-      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
-        if (node = group[i]) {
-          transition = node.__transition__[id];
-          subnodes = selector.call(node, node.__data__, i, j);
-          subgroups.push(subgroup = []);
-          for (var k = -1, o = subnodes.length; ++k < o; ) {
-            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);
-            subgroup.push(subnode);
-          }
-        }
-      }
-    }
-    return d3_transition(subgroups, id);
-  };
-  d3_transitionPrototype.filter = function(filter) {
-    var subgroups = [], subgroup, group, node;
-    if (typeof filter !== "function") filter = d3_selection_filter(filter);
-    for (var j = 0, m = this.length; j < m; j++) {
-      subgroups.push(subgroup = []);
-      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
-        if ((node = group[i]) && filter.call(node, node.__data__, i)) {
-          subgroup.push(node);
-        }
-      }
-    }
-    return d3_transition(subgroups, this.id);
-  };
-  d3_transitionPrototype.tween = function(name, tween) {
-    var id = this.id;
-    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);
-    return d3_selection_each(this, tween == null ? function(node) {
-      node.__transition__[id].tween.remove(name);
-    } : function(node) {
-      node.__transition__[id].tween.set(name, tween);
-    });
-  };
-  function d3_transition_tween(groups, name, value, tween) {
-    var id = groups.id;
-    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
-      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
-    } : (value = tween(value), function(node) {
-      node.__transition__[id].tween.set(name, value);
-    }));
-  }
-  d3_transitionPrototype.attr = function(nameNS, value) {
-    if (arguments.length < 2) {
-      for (value in nameNS) this.attr(value, nameNS[value]);
-      return this;
-    }
-    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
-    function attrNull() {
-      this.removeAttribute(name);
-    }
-    function attrNullNS() {
-      this.removeAttributeNS(name.space, name.local);
-    }
-    function attrTween(b) {
-      return b == null ? attrNull : (b += "", function() {
-        var a = this.getAttribute(name), i;
-        return a !== b && (i = interpolate(a, b), function(t) {
-          this.setAttribute(name, i(t));
-        });
-      });
-    }
-    function attrTweenNS(b) {
-      return b == null ? attrNullNS : (b += "", function() {
-        var a = this.getAttributeNS(name.space, name.local), i;
-        return a !== b && (i = interpolate(a, b), function(t) {
-          this.setAttributeNS(name.space, name.local, i(t));
-        });
-      });
-    }
-    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
-  };
-  d3_transitionPrototype.attrTween = function(nameNS, tween) {
-    var name = d3.ns.qualify(nameNS);
-    function attrTween(d, i) {
-      var f = tween.call(this, d, i, this.getAttribute(name));
-      return f && function(t) {
-        this.setAttribute(name, f(t));
-      };
-    }
-    function attrTweenNS(d, i) {
-      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
-      return f && function(t) {
-        this.setAttributeNS(name.space, name.local, f(t));
-      };
-    }
-    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
-  };
-  d3_transitionPrototype.style = function(name, value, priority) {
-    var n = arguments.length;
-    if (n < 3) {
-      if (typeof name !== "string") {
-        if (n < 2) value = "";
-        for (priority in name) this.style(priority, name[priority], value);
-        return this;
-      }
-      priority = "";
-    }
-    function styleNull() {
-      this.style.removeProperty(name);
-    }
-    function styleString(b) {
-      return b == null ? styleNull : (b += "", function() {
-        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;
-        return a !== b && (i = d3_interpolate(a, b), function(t) {
-          this.style.setProperty(name, i(t), priority);
-        });
-      });
-    }
-    return d3_transition_tween(this, "style." + name, value, styleString);
-  };
-  d3_transitionPrototype.styleTween = function(name, tween, priority) {
-    if (arguments.length < 3) priority = "";
-    function styleTween(d, i) {
-      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));
-      return f && function(t) {
-        this.style.setProperty(name, f(t), priority);
-      };
-    }
-    return this.tween("style." + name, styleTween);
-  };
-  d3_transitionPrototype.text = function(value) {
-    return d3_transition_tween(this, "text", value, d3_transition_text);
-  };
-  function d3_transition_text(b) {
-    if (b == null) b = "";
-    return function() {
-      this.textContent = b;
-    };
-  }
-  d3_transitionPrototype.remove = function() {
-    return this.each("end.transition", function() {
-      var p;
-      if (!this.__transition__ && (p = this.parentNode)) p.removeChild(this);
-    });
-  };
-  d3_transitionPrototype.ease = function(value) {
-    var id = this.id;
-    if (arguments.length < 1) return this.node().__transition__[id].ease;
-    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
-    return d3_selection_each(this, function(node) {
-      node.__transition__[id].ease = value;
-    });
-  };
-  d3_transitionPrototype.delay = function(value) {
-    var id = this.id;
-    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
-      node.__transition__[id].delay = value.call(node, node.__data__, i, j) | 0;
-    } : (value |= 0, function(node) {
-      node.__transition__[id].delay = value;
-    }));
-  };
-  d3_transitionPrototype.duration = function(value) {
-    var id = this.id;
-    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
-      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j) | 0);
-    } : (value = Math.max(1, value | 0), function(node) {
-      node.__transition__[id].duration = value;
-    }));
-  };
-  d3_transitionPrototype.each = function(type, listener) {
-    var id = this.id;
-    if (arguments.length < 2) {
-      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
-      d3_transitionInheritId = id;
-      d3_selection_each(this, function(node, i, j) {
-        d3_transitionInherit = node.__transition__[id];
-        type.call(node, node.__data__, i, j);
-      });
-      d3_transitionInherit = inherit;
-      d3_transitionInheritId = inheritId;
-    } else {
-      d3_selection_each(this, function(node) {
-        var transition = node.__transition__[id];
-        (transition.event || (transition.event = d3.dispatch("start", "end"))).on(type, listener);
-      });
-    }
-    return this;
-  };
-  d3_transitionPrototype.transition = function() {
-    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;
-    for (var j = 0, m = this.length; j < m; j++) {
-      subgroups.push(subgroup = []);
-      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
-        if (node = group[i]) {
-          transition = Object.create(node.__transition__[id0]);
-          transition.delay += transition.duration;
-          d3_transitionNode(node, i, id1, transition);
-        }
-        subgroup.push(node);
-      }
-    }
-    return d3_transition(subgroups, id1);
-  };
-  function d3_transitionNode(node, i, id, inherit) {
-    var lock = node.__transition__ || (node.__transition__ = {
-      active: 0,
-      count: 0
-    }), transition = lock[id];
-    if (!transition) {
-      var time = inherit.time;
-      transition = lock[id] = {
-        tween: new d3_Map(),
-        time: time,
-        ease: inherit.ease,
-        delay: inherit.delay,
-        duration: inherit.duration
-      };
-      ++lock.count;
-      d3.timer(function(elapsed) {
-        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, tweened = [];
-        if (delay <= elapsed) return start(elapsed);
-        d3_timer_replace(start, delay, time);
-        function start(elapsed) {
-          if (lock.active > id) return stop();
-          lock.active = id;
-          transition.event && transition.event.start.call(node, d, i);
-          transition.tween.forEach(function(key, value) {
-            if (value = value.call(node, d, i)) {
-              tweened.push(value);
-            }
-          });
-          if (tick(elapsed)) return 1;
-          d3_timer_replace(tick, 0, time);
-        }
-        function tick(elapsed) {
-          if (lock.active !== id) return stop();
-          var t = (elapsed - delay) / duration, e = ease(t), n = tweened.length;
-          while (n > 0) {
-            tweened[--n].call(node, e);
-          }
-          if (t >= 1) {
-            stop();
-            transition.event && transition.event.end.call(node, d, i);
-            return 1;
-          }
-        }
-        function stop() {
-          if (--lock.count) delete lock[id]; else delete node.__transition__;
-          return 1;
-        }
-      }, 0, time);
-    }
-  }
-  d3.svg.axis = function() {
-    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, tickMajorSize = 6, tickMinorSize = 6, tickEndSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_, tickSubdivide = 0;
-    function axis(g) {
-      g.each(function() {
-        var g = d3.select(this);
-        var ticks = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments_) : scale.domain() : tickValues, tickFormat = tickFormat_ == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments_) : String : tickFormat_;
-        var subticks = d3_svg_axisSubdivide(scale, ticks, tickSubdivide), subtick = g.selectAll(".tick.minor").data(subticks, String), subtickEnter = subtick.enter().insert("line", ".tick").attr("class", "tick minor").style("opacity", 1e-6), subtickExit = d3.transition(subtick.exit()).style("opacity", 1e-6).remove(), subtickUpdate = d3.transition(subtick).style("opacity", 1);
-        var tick = g.selectAll(".tick.major").data(ticks, String), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick major").style("opacity", 1e-6), tickExit = d3.transition(tick.exit()).style("opacity", 1e-6).remove(), tickUpdate = d3.transition(tick).style("opacity", 1), tickTransform;
-        var range = d3_scaleRange(scale), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
-        d3.transition(path));
-        var scale1 = scale.copy(), scale0 = this.__chart__ || scale1;
-        this.__chart__ = scale1;
-        tickEnter.append("line");
-        tickEnter.append("text");
-        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text");
-        switch (orient) {
-         case "bottom":
-          {
-            tickTransform = d3_svg_axisX;
-            subtickEnter.attr("y2", tickMinorSize);
-            subtickUpdate.attr("x2", 0).attr("y2", tickMinorSize);
-            lineEnter.attr("y2", tickMajorSize);
-            textEnter.attr("y", Math.max(tickMajorSize, 0) + tickPadding);
-            lineUpdate.attr("x2", 0).attr("y2", tickMajorSize);
-            textUpdate.attr("x", 0).attr("y", Math.max(tickMajorSize, 0) + tickPadding);
-            text.attr("dy", ".71em").style("text-anchor", "middle");
-            pathUpdate.attr("d", "M" + range[0] + "," + tickEndSize + "V0H" + range[1] + "V" + tickEndSize);
-            break;
-          }
-
-         case "top":
-          {
-            tickTransform = d3_svg_axisX;
-            subtickEnter.attr("y2", -tickMinorSize);
-            subtickUpdate.attr("x2", 0).attr("y2", -tickMinorSize);
-            lineEnter.attr("y2", -tickMajorSize);
-            textEnter.attr("y", -(Math.max(tickMajorSize, 0) + tickPadding));
-            lineUpdate.attr("x2", 0).attr("y2", -tickMajorSize);
-            textUpdate.attr("x", 0).attr("y", -(Math.max(tickMajorSize, 0) + tickPadding));
-            text.attr("dy", "0em").style("text-anchor", "middle");
-            pathUpdate.attr("d", "M" + range[0] + "," + -tickEndSize + "V0H" + range[1] + "V" + -tickEndSize);
-            break;
-          }
-
-         case "left":
-          {
-            tickTransform = d3_svg_axisY;
-            subtickEnter.attr("x2", -tickMinorSize);
-            subtickUpdate.attr("x2", -tickMinorSize).attr("y2", 0);
-            lineEnter.attr("x2", -tickMajorSize);
-            textEnter.attr("x", -(Math.max(tickMajorSize, 0) + tickPadding));
-            lineUpdate.attr("x2", -tickMajorSize).attr("y2", 0);
-            textUpdate.attr("x", -(Math.max(tickMajorSize, 0) + tickPadding)).attr("y", 0);
-            text.attr("dy", ".32em").style("text-anchor", "end");
-            pathUpdate.attr("d", "M" + -tickEndSize + "," + range[0] + "H0V" + range[1] + "H" + -tickEndSize);
-            break;
-          }
-
-         case "right":
-          {
-            tickTransform = d3_svg_axisY;
-            subtickEnter.attr("x2", tickMinorSize);
-            subtickUpdate.attr("x2", tickMinorSize).attr("y2", 0);
-            lineEnter.attr("x2", tickMajorSize);
-            textEnter.attr("x", Math.max(tickMajorSize, 0) + tickPadding);
-            lineUpdate.attr("x2", tickMajorSize).attr("y2", 0);
-            textUpdate.attr("x", Math.max(tickMajorSize, 0) + tickPadding).attr("y", 0);
-            text.attr("dy", ".32em").style("text-anchor", "start");
-            pathUpdate.attr("d", "M" + tickEndSize + "," + range[0] + "H0V" + range[1] + "H" + tickEndSize);
-            break;
-          }
-        }
-        if (scale.rangeBand) {
-          var dx = scale1.rangeBand() / 2, x = function(d) {
-            return scale1(d) + dx;
-          };
-          tickEnter.call(tickTransform, x);
-          tickUpdate.call(tickTransform, x);
-        } else {
-          tickEnter.call(tickTransform, scale0);
-          tickUpdate.call(tickTransform, scale1);
-          tickExit.call(tickTransform, scale1);
-          subtickEnter.call(tickTransform, scale0);
-          subtickUpdate.call(tickTransform, scale1);
-          subtickExit.call(tickTransform, scale1);
-        }
-      });
-    }
-    axis.scale = function(x) {
-      if (!arguments.length) return scale;
-      scale = x;
-      return axis;
-    };
-    axis.orient = function(x) {
-      if (!arguments.length) return orient;
-      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
-      return axis;
-    };
-    axis.ticks = function() {
-      if (!arguments.length) return tickArguments_;
-      tickArguments_ = arguments;
-      return axis;
-    };
-    axis.tickValues = function(x) {
-      if (!arguments.length) return tickValues;
-      tickValues = x;
-      return axis;
-    };
-    axis.tickFormat = function(x) {
-      if (!arguments.length) return tickFormat_;
-      tickFormat_ = x;
-      return axis;
-    };
-    axis.tickSize = function(x, y) {
-      if (!arguments.length) return tickMajorSize;
-      var n = arguments.length - 1;
-      tickMajorSize = +x;
-      tickMinorSize = n > 1 ? +y : tickMajorSize;
-      tickEndSize = n > 0 ? +arguments[n] : tickMajorSize;
-      return axis;
-    };
-    axis.tickPadding = function(x) {
-      if (!arguments.length) return tickPadding;
-      tickPadding = +x;
-      return axis;
-    };
-    axis.tickSubdivide = function(x) {
-      if (!arguments.length) return tickSubdivide;
-      tickSubdivide = +x;
-      return axis;
-    };
-    return axis;
-  };
-  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
-    top: 1,
-    right: 1,
-    bottom: 1,
-    left: 1
-  };
-  function d3_svg_axisX(selection, x) {
-    selection.attr("transform", function(d) {
-      return "translate(" + x(d) + ",0)";
-    });
-  }
-  function d3_svg_axisY(selection, y) {
-    selection.attr("transform", function(d) {
-      return "translate(0," + y(d) + ")";
-    });
-  }
-  function d3_svg_axisSubdivide(scale, ticks, m) {
-    subticks = [];
-    if (m && ticks.length > 1) {
-      var extent = d3_scaleExtent(scale.domain()), subticks, i = -1, n = ticks.length, d = (ticks[1] - ticks[0]) / ++m, j, v;
-      while (++i < n) {
-        for (j = m; --j > 0; ) {
-          if ((v = +ticks[i] - j * d) >= extent[0]) {
-            subticks.push(v);
-          }
-        }
-      }
-      for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1]; ) {
-        subticks.push(v);
-      }
-    }
-    return subticks;
-  }
-  d3.svg.brush = function() {
-    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, resizes = d3_svg_brushResizes[0], extent = [ [ 0, 0 ], [ 0, 0 ] ], clamp = [ true, true ], extentDomain;
-    function brush(g) {
-      g.each(function() {
-        var g = d3.select(this), bg = g.selectAll(".background").data([ 0 ]), fg = g.selectAll(".extent").data([ 0 ]), tz = g.selectAll(".resize").data(resizes, String), e;
-        g.style("pointer-events", "all").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
-        bg.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
-        fg.enter().append("rect").attr("class", "extent").style("cursor", "move");
-        tz.enter().append("g").attr("class", function(d) {
-          return "resize " + d;
-        }).style("cursor", function(d) {
-          return d3_svg_brushCursor[d];
-        }).append("rect").attr("x", function(d) {
-          return /[ew]$/.test(d) ? -3 : null;
-        }).attr("y", function(d) {
-          return /^[ns]/.test(d) ? -3 : null;
-        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
-        tz.style("display", brush.empty() ? "none" : null);
-        tz.exit().remove();
-        if (x) {
-          e = d3_scaleRange(x);
-          bg.attr("x", e[0]).attr("width", e[1] - e[0]);
-          redrawX(g);
-        }
-        if (y) {
-          e = d3_scaleRange(y);
-          bg.attr("y", e[0]).attr("height", e[1] - e[0]);
-          redrawY(g);
-        }
-        redraw(g);
-      });
-    }
-    function redraw(g) {
-      g.selectAll(".resize").attr("transform", function(d) {
-        return "translate(" + extent[+/e$/.test(d)][0] + "," + extent[+/^s/.test(d)][1] + ")";
-      });
-    }
-    function redrawX(g) {
-      g.select(".extent").attr("x", extent[0][0]);
-      g.selectAll(".extent,.n>rect,.s>rect").attr("width", extent[1][0] - extent[0][0]);
-    }
-    function redrawY(g) {
-      g.select(".extent").attr("y", extent[0][1]);
-      g.selectAll(".extent,.e>rect,.w>rect").attr("height", extent[1][1] - extent[0][1]);
-    }
-    function brushstart() {
-      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(), center, origin = mouse(), offset;
-      var w = d3.select(d3_window).on("keydown.brush", keydown).on("keyup.brush", keyup);
-      if (d3.event.changedTouches) {
-        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
-      } else {
-        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
-      }
-      if (dragging) {
-        origin[0] = extent[0][0] - origin[0];
-        origin[1] = extent[0][1] - origin[1];
-      } else if (resizing) {
-        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
-        offset = [ extent[1 - ex][0] - origin[0], extent[1 - ey][1] - origin[1] ];
-        origin[0] = extent[ex][0];
-        origin[1] = extent[ey][1];
-      } else if (d3.event.altKey) center = origin.slice();
-      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
-      d3.select("body").style("cursor", eventTarget.style("cursor"));
-      event_({
-        type: "brushstart"
-      });
-      brushmove();
-      function mouse() {
-        var touches = d3.event.changedTouches;
-        return touches ? d3.touches(target, touches)[0] : d3.mouse(target);
-      }
-      function keydown() {
-        if (d3.event.keyCode == 32) {
-          if (!dragging) {
-            center = null;
-            origin[0] -= extent[1][0];
-            origin[1] -= extent[1][1];
-            dragging = 2;
-          }
-          d3_eventPreventDefault();
-        }
-      }
-      function keyup() {
-        if (d3.event.keyCode == 32 && dragging == 2) {
-          origin[0] += extent[1][0];
-          origin[1] += extent[1][1];
-          dragging = 0;
-          d3_eventPreventDefault();
-        }
-      }
-      function brushmove() {
-        var point = mouse(), moved = false;
-        if (offset) {
-          point[0] += offset[0];
-          point[1] += offset[1];
-        }
-        if (!dragging) {
-          if (d3.event.altKey) {
-            if (!center) center = [ (extent[0][0] + extent[1][0]) / 2, (extent[0][1] + extent[1][1]) / 2 ];
-            origin[0] = extent[+(point[0] < center[0])][0];
-            origin[1] = extent[+(point[1] < center[1])][1];
-          } else center = null;
-        }
-        if (resizingX && move1(point, x, 0)) {
-          redrawX(g);
-          moved = true;
-        }
-        if (resizingY && move1(point, y, 1)) {
-          redrawY(g);
-          moved = true;
-        }
-        if (moved) {
-          redraw(g);
-          event_({
-            type: "brush",
-            mode: dragging ? "move" : "resize"
-          });
-        }
-      }
-      function move1(point, scale, i) {
-        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], size = extent[1][i] - extent[0][i], min, max;
-        if (dragging) {
-          r0 -= position;
-          r1 -= size + position;
-        }
-        min = clamp[i] ? Math.max(r0, Math.min(r1, point[i])) : point[i];
-        if (dragging) {
-          max = (min += position) + size;
-        } else {
-          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
-          if (position < min) {
-            max = min;
-            min = position;
-          } else {
-            max = position;
-          }
-        }
-        if (extent[0][i] !== min || extent[1][i] !== max) {
-          extentDomain = null;
-          extent[0][i] = min;
-          extent[1][i] = max;
-          return true;
-        }
-      }
-      function brushend() {
-        brushmove();
-        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
-        d3.select("body").style("cursor", null);
-        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
-        dragRestore();
-        event_({
-          type: "brushend"
-        });
-      }
-    }
-    brush.x = function(z) {
-      if (!arguments.length) return x;
-      x = z;
-      resizes = d3_svg_brushResizes[!x << 1 | !y];
-      return brush;
-    };
-    brush.y = function(z) {
-      if (!arguments.length) return y;
-      y = z;
-      resizes = d3_svg_brushResizes[!x << 1 | !y];
-      return brush;
-    };
-    brush.clamp = function(z) {
-      if (!arguments.length) return x && y ? clamp : x || y ? clamp[+!x] : null;
-      if (x && y) clamp = [ !!z[0], !!z[1] ]; else if (x || y) clamp[+!x] = !!z;
-      return brush;
-    };
-    brush.extent = function(z) {
-      var x0, x1, y0, y1, t;
-      if (!arguments.length) {
-        z = extentDomain || extent;
-        if (x) {
-          x0 = z[0][0], x1 = z[1][0];
-          if (!extentDomain) {
-            x0 = extent[0][0], x1 = extent[1][0];
-            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
-            if (x1 < x0) t = x0, x0 = x1, x1 = t;
-          }
-        }
-        if (y) {
-          y0 = z[0][1], y1 = z[1][1];
-          if (!extentDomain) {
-            y0 = extent[0][1], y1 = extent[1][1];
-            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
-            if (y1 < y0) t = y0, y0 = y1, y1 = t;
-          }
-        }
-        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
-      }
-      extentDomain = [ [ 0, 0 ], [ 0, 0 ] ];
-      if (x) {
-        x0 = z[0], x1 = z[1];
-        if (y) x0 = x0[0], x1 = x1[0];
-        extentDomain[0][0] = x0, extentDomain[1][0] = x1;
-        if (x.invert) x0 = x(x0), x1 = x(x1);
-        if (x1 < x0) t = x0, x0 = x1, x1 = t;
-        extent[0][0] = x0 | 0, extent[1][0] = x1 | 0;
-      }
-      if (y) {
-        y0 = z[0], y1 = z[1];
-        if (x) y0 = y0[1], y1 = y1[1];
-        extentDomain[0][1] = y0, extentDomain[1][1] = y1;
-        if (y.invert) y0 = y(y0), y1 = y(y1);
-        if (y1 < y0) t = y0, y0 = y1, y1 = t;
-        extent[0][1] = y0 | 0, extent[1][1] = y1 | 0;
-      }
-      return brush;
-    };
-    brush.clear = function() {
-      extentDomain = null;
-      extent[0][0] = extent[0][1] = extent[1][0] = extent[1][1] = 0;
-      return brush;
-    };
-    brush.empty = function() {
-      return x && extent[0][0] === extent[1][0] || y && extent[0][1] === extent[1][1];
-    };
-    return d3.rebind(brush, event, "on");
-  };
-  var d3_svg_brushCursor = {
-    n: "ns-resize",
-    e: "ew-resize",
-    s: "ns-resize",
-    w: "ew-resize",
-    nw: "nwse-resize",
-    ne: "nesw-resize",
-    se: "nwse-resize",
-    sw: "nesw-resize"
-  };
-  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
-  d3.time = {};
-  var d3_time = Date, d3_time_daySymbols = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
-  function d3_time_utc() {
-    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
-  }
-  d3_time_utc.prototype = {
-    getDate: function() {
-      return this._.getUTCDate();
-    },
-    getDay: function() {
-      return this._.getUTCDay();
-    },
-    getFullYear: function() {
-      return this._.getUTCFullYear();
-    },
-    getHours: function() {
-      return this._.getUTCHours();
-    },
-    getMilliseconds: function() {
-      return this._.getUTCMilliseconds();
-    },
-    getMinutes: function() {
-      return this._.getUTCMinutes();
-    },
-    getMonth: function() {
-      return this._.getUTCMonth();
-    },
-    getSeconds: function() {
-      return this._.getUTCSeconds();
-    },
-    getTime: function() {
-      return this._.getTime();
-    },
-    getTimezoneOffset: function() {
-      return 0;
-    },
-    valueOf: function() {
-      return this._.valueOf();
-    },
-    setDate: function() {
-      d3_time_prototype.setUTCDate.apply(this._, arguments);
-    },
-    setDay: function() {
-      d3_time_prototype.setUTCDay.apply(this._, arguments);
-    },
-    setFullYear: function() {
-      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
-    },
-    setHours: function() {
-      d3_time_prototype.setUTCHours.apply(this._, arguments);
-    },
-    setMilliseconds: function() {
-      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
-    },
-    setMinutes: function() {
-      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
-    },
-    setMonth: function() {
-      d3_time_prototype.setUTCMonth.apply(this._, arguments);
-    },
-    setSeconds: function() {
-      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
-    },
-    setTime: function() {
-      d3_time_prototype.setTime.apply(this._, arguments);
-    }
-  };
-  var d3_time_prototype = Date.prototype;
-  var d3_time_formatDateTime = "%a %b %e %X %Y", d3_time_formatDate = "%m/%d/%Y", d3_time_formatTime = "%H:%M:%S";
-  var d3_time_days = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ], d3_time_dayAbbreviations = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], d3_time_months = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ], d3_time_monthAbbreviations = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
-  function d3_time_interval(local, step, number) {
-    function round(date) {
-      var d0 = local(date), d1 = offset(d0, 1);
-      return date - d0 < d1 - date ? d0 : d1;
-    }
-    function ceil(date) {
-      step(date = local(new d3_time(date - 1)), 1);
-      return date;
-    }
-    function offset(date, k) {
-      step(date = new d3_time(+date), k);
-      return date;
-    }
-    function range(t0, t1, dt) {
-      var time = ceil(t0), times = [];
-      if (dt > 1) {
-        while (time < t1) {
-          if (!(number(time) % dt)) times.push(new Date(+time));
-          step(time, 1);
-        }
-      } else {
-        while (time < t1) times.push(new Date(+time)), step(time, 1);
-      }
-      return times;
-    }
-    function range_utc(t0, t1, dt) {
-      try {
-        d3_time = d3_time_utc;
-        var utc = new d3_time_utc();
-        utc._ = t0;
-        return range(utc, t1, dt);
-      } finally {
-        d3_time = Date;
-      }
-    }
-    local.floor = local;
-    local.round = round;
-    local.ceil = ceil;
-    local.offset = offset;
-    local.range = range;
-    var utc = local.utc = d3_time_interval_utc(local);
-    utc.floor = utc;
-    utc.round = d3_time_interval_utc(round);
-    utc.ceil = d3_time_interval_utc(ceil);
-    utc.offset = d3_time_interval_utc(offset);
-    utc.range = range_utc;
-    return local;
-  }
-  function d3_time_interval_utc(method) {
-    return function(date, k) {
-      try {
-        d3_time = d3_time_utc;
-        var utc = new d3_time_utc();
-        utc._ = date;
-        return method(utc, k)._;
-      } finally {
-        d3_time = Date;
-      }
-    };
-  }
-  d3.time.year = d3_time_interval(function(date) {
-    date = d3.time.day(date);
-    date.setMonth(0, 1);
-    return date;
-  }, function(date, offset) {
-    date.setFullYear(date.getFullYear() + offset);
-  }, function(date) {
-    return date.getFullYear();
-  });
-  d3.time.years = d3.time.year.range;
-  d3.time.years.utc = d3.time.year.utc.range;
-  d3.time.day = d3_time_interval(function(date) {
-    var day = new d3_time(2e3, 0);
-    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
-    return day;
-  }, function(date, offset) {
-    date.setDate(date.getDate() + offset);
-  }, function(date) {
-    return date.getDate() - 1;
-  });
-  d3.time.days = d3.time.day.range;
-  d3.time.days.utc = d3.time.day.utc.range;
-  d3.time.dayOfYear = function(date) {
-    var year = d3.time.year(date);
-    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
-  };
-  d3_time_daySymbols.forEach(function(day, i) {
-    day = day.toLowerCase();
-    i = 7 - i;
-    var interval = d3.time[day] = d3_time_interval(function(date) {
-      (date = d3.time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
-      return date;
-    }, function(date, offset) {
-      date.setDate(date.getDate() + Math.floor(offset) * 7);
-    }, function(date) {
-      var day = d3.time.year(date).getDay();
-      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
-    });
-    d3.time[day + "s"] = interval.range;
-    d3.time[day + "s"].utc = interval.utc.range;
-    d3.time[day + "OfYear"] = function(date) {
-      var day = d3.time.year(date).getDay();
-      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7);
-    };
-  });
-  d3.time.week = d3.time.sunday;
-  d3.time.weeks = d3.time.sunday.range;
-  d3.time.weeks.utc = d3.time.sunday.utc.range;
-  d3.time.weekOfYear = d3.time.sundayOfYear;
-  d3.time.format = function(template) {
-    var n = template.length;
-    function format(date) {
-      var string = [], i = -1, j = 0, c, p, f;
-      while (++i < n) {
-        if (template.charCodeAt(i) === 37) {
-          string.push(template.substring(j, i));
-          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
-          if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
-          string.push(c);
-          j = i + 1;
-        }
-      }
-      string.push(template.substring(j, i));
-      return string.join("");
-    }
-    format.parse = function(string) {
-      var d = {
-        y: 1900,
-        m: 0,
-        d: 1,
-        H: 0,
-        M: 0,
-        S: 0,
-        L: 0
-      }, i = d3_time_parse(d, template, string, 0);
-      if (i != string.length) return null;
-      if ("p" in d) d.H = d.H % 12 + d.p * 12;
-      var date = new d3_time();
-      if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
-        date.setFullYear(d.y, 0, 1);
-        date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
-      } else date.setFullYear(d.y, d.m, d.d);
-      date.setHours(d.H, d.M, d.S, d.L);
-      return date;
-    };
-    format.toString = function() {
-      return template;
-    };
-    return format;
-  };
-  function d3_time_parse(date, template, string, j) {
-    var c, p, i = 0, n = template.length, m = string.length;
-    while (i < n) {
-      if (j >= m) return -1;
-      c = template.charCodeAt(i++);
-      if (c === 37) {
-        p = d3_time_parsers[template.charAt(i++)];
-        if (!p || (j = p(date, string, j)) < 0) return -1;
-      } else if (c != string.charCodeAt(j++)) {
-        return -1;
-      }
-    }
-    return j;
-  }
-  function d3_time_formatRe(names) {
-    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
-  }
-  function d3_time_formatLookup(names) {
-    var map = new d3_Map(), i = -1, n = names.length;
-    while (++i < n) map.set(names[i].toLowerCase(), i);
-    return map;
-  }
-  function d3_time_formatPad(value, fill, width) {
-    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
-    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
-  }
-  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;
-  var d3_time_formatPads = {
-    "-": "",
-    _: " ",
-    "0": "0"
-  };
-  var d3_time_formats = {
-    a: function(d) {
-      return d3_time_dayAbbreviations[d.getDay()];
-    },
-    A: function(d) {
-      return d3_time_days[d.getDay()];
-    },
-    b: function(d) {
-      return d3_time_monthAbbreviations[d.getMonth()];
-    },
-    B: function(d) {
-      return d3_time_months[d.getMonth()];
-    },
-    c: d3.time.format(d3_time_formatDateTime),
-    d: function(d, p) {
-      return d3_time_formatPad(d.getDate(), p, 2);
-    },
-    e: function(d, p) {
-      return d3_time_formatPad(d.getDate(), p, 2);
-    },
-    H: function(d, p) {
-      return d3_time_formatPad(d.getHours(), p, 2);
-    },
-    I: function(d, p) {
-      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
-    },
-    j: function(d, p) {
-      return d3_time_formatPad(1 + d3.time.dayOfYear(d), p, 3);
-    },
-    L: function(d, p) {
-      return d3_time_formatPad(d.getMilliseconds(), p, 3);
-    },
-    m: function(d, p) {
-      return d3_time_formatPad(d.getMonth() + 1, p, 2);
-    },
-    M: function(d, p) {
-      return d3_time_formatPad(d.getMinutes(), p, 2);
-    },
-    p: function(d) {
-      return d.getHours() >= 12 ? "PM" : "AM";
-    },
-    S: function(d, p) {
-      return d3_time_formatPad(d.getSeconds(), p, 2);
-    },
-    U: function(d, p) {
-      return d3_time_formatPad(d3.time.sundayOfYear(d), p, 2);
-    },
-    w: function(d) {
-      return d.getDay();
-    },
-    W: function(d, p) {
-      return d3_time_formatPad(d3.time.mondayOfYear(d), p, 2);
-    },
-    x: d3.time.format(d3_time_formatDate),
-    X: d3.time.format(d3_time_formatTime),
-    y: function(d, p) {
-      return d3_time_formatPad(d.getFullYear() % 100, p, 2);
-    },
-    Y: function(d, p) {
-      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
-    },
-    Z: d3_time_zone,
-    "%": function() {
-      return "%";
-    }
-  };
-  var d3_time_parsers = {
-    a: d3_time_parseWeekdayAbbrev,
-    A: d3_time_parseWeekday,
-    b: d3_time_parseMonthAbbrev,
-    B: d3_time_parseMonth,
-    c: d3_time_parseLocaleFull,
-    d: d3_time_parseDay,
-    e: d3_time_parseDay,
-    H: d3_time_parseHour24,
-    I: d3_time_parseHour24,
-    j: d3_time_parseDayOfYear,
-    L: d3_time_parseMilliseconds,
-    m: d3_time_parseMonthNumber,
-    M: d3_time_parseMinutes,
-    p: d3_time_parseAmPm,
-    S: d3_time_parseSeconds,
-    U: d3_time_parseWeekNumberSunday,
-    w: d3_time_parseWeekdayNumber,
-    W: d3_time_parseWeekNumberMonday,
-    x: d3_time_parseLocaleDate,
-    X: d3_time_parseLocaleTime,
-    y: d3_time_parseYear,
-    Y: d3_time_parseFullYear,
-    "%": d3_time_parseLiteralPercent
-  };
-  function d3_time_parseWeekdayAbbrev(date, string, i) {
-    d3_time_dayAbbrevRe.lastIndex = 0;
-    var n = d3_time_dayAbbrevRe.exec(string.substring(i));
-    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
-  }
-  function d3_time_parseWeekday(date, string, i) {
-    d3_time_dayRe.lastIndex = 0;
-    var n = d3_time_dayRe.exec(string.substring(i));
-    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
-  }
-  function d3_time_parseWeekdayNumber(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 1));
-    return n ? (date.w = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseWeekNumberSunday(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i));
-    return n ? (date.U = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseWeekNumberMonday(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i));
-    return n ? (date.W = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseMonthAbbrev(date, string, i) {
-    d3_time_monthAbbrevRe.lastIndex = 0;
-    var n = d3_time_monthAbbrevRe.exec(string.substring(i));
-    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
-  }
-  function d3_time_parseMonth(date, string, i) {
-    d3_time_monthRe.lastIndex = 0;
-    var n = d3_time_monthRe.exec(string.substring(i));
-    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
-  }
-  function d3_time_parseLocaleFull(date, string, i) {
-    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
-  }
-  function d3_time_parseLocaleDate(date, string, i) {
-    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
-  }
-  function d3_time_parseLocaleTime(date, string, i) {
-    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
-  }
-  function d3_time_parseFullYear(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 4));
-    return n ? (date.y = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseYear(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
-    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
-  }
-  function d3_time_expandYear(d) {
-    return d + (d > 68 ? 1900 : 2e3);
-  }
-  function d3_time_parseMonthNumber(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
-    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
-  }
-  function d3_time_parseDay(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
-    return n ? (date.d = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseDayOfYear(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
-    return n ? (date.j = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseHour24(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
-    return n ? (date.H = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseMinutes(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
-    return n ? (date.M = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseSeconds(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
-    return n ? (date.S = +n[0], i + n[0].length) : -1;
-  }
-  function d3_time_parseMilliseconds(date, string, i) {
-    d3_time_numberRe.lastIndex = 0;
-    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
-    return n ? (date.L = +n[0], i + n[0].length) : -1;
-  }
-  var d3_time_numberRe = /^\s*\d+/;
-  function d3_time_parseAmPm(date, string, i) {
-    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());
-    return n == null ? -1 : (date.p = n, i);
-  }
-  var d3_time_amPmLookup = d3.map({
-    am: 0,
-    pm: 1
-  });
-  function d3_time_zone(d) {
-    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = ~~(Math.abs(z) / 60), zm = Math.abs(z) % 60;
-    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
-  }
-  function d3_time_parseLiteralPercent(date, string, i) {
-    d3_time_percentRe.lastIndex = 0;
-    var n = d3_time_percentRe.exec(string.substring(i, i + 1));
-    return n ? i + n[0].length : -1;
-  }
-  d3.time.format.utc = function(template) {
-    var local = d3.time.format(template);
-    function format(date) {
-      try {
-        d3_time = d3_time_utc;
-        var utc = new d3_time();
-        utc._ = date;
-        return local(utc);
-      } finally {
-        d3_time = Date;
-      }
-    }
-    format.parse = function(string) {
-      try {
-        d3_time = d3_time_utc;
-        var date = local.parse(string);
-        return date && date._;
-      } finally {
-        d3_time = Date;
-      }
-    };
-    format.toString = local.toString;
-    return format;
-  };
-  var d3_time_formatIso = d3.time.format.utc("%Y-%m-%dT%H:%M:%S.%LZ");
-  d3.time.format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
-  function d3_time_formatIsoNative(date) {
-    return date.toISOString();
-  }
-  d3_time_formatIsoNative.parse = function(string) {
-    var date = new Date(string);
-    return isNaN(date) ? null : date;
-  };
-  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
-  d3.time.second = d3_time_interval(function(date) {
-    return new d3_time(Math.floor(date / 1e3) * 1e3);
-  }, function(date, offset) {
-    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
-  }, function(date) {
-    return date.getSeconds();
-  });
-  d3.time.seconds = d3.time.second.range;
-  d3.time.seconds.utc = d3.time.second.utc.range;
-  d3.time.minute = d3_time_interval(function(date) {
-    return new d3_time(Math.floor(date / 6e4) * 6e4);
-  }, function(date, offset) {
-    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
-  }, function(date) {
-    return date.getMinutes();
-  });
-  d3.time.minutes = d3.time.minute.range;
-  d3.time.minutes.utc = d3.time.minute.utc.range;
-  d3.time.hour = d3_time_interval(function(date) {
-    var timezone = date.getTimezoneOffset() / 60;
-    return new d3_time((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
-  }, function(date, offset) {
-    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
-  }, function(date) {
-    return date.getHours();
-  });
-  d3.time.hours = d3.time.hour.range;
-  d3.time.hours.utc = d3.time.hour.utc.range;
-  d3.time.month = d3_time_interval(function(date) {
-    date = d3.time.day(date);
-    date.setDate(1);
-    return date;
-  }, function(date, offset) {
-    date.setMonth(date.getMonth() + offset);
-  }, function(date) {
-    return date.getMonth();
-  });
-  d3.time.months = d3.time.month.range;
-  d3.time.months.utc = d3.time.month.utc.range;
-  function d3_time_scale(linear, methods, format) {
-    function scale(x) {
-      return linear(x);
-    }
-    scale.invert = function(x) {
-      return d3_time_scaleDate(linear.invert(x));
-    };
-    scale.domain = function(x) {
-      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
-      linear.domain(x);
-      return scale;
-    };
-    scale.nice = function(m) {
-      return scale.domain(d3_scale_nice(scale.domain(), m));
-    };
-    scale.ticks = function(m, k) {
-      var extent = d3_scaleExtent(scale.domain());
-      if (typeof m !== "function") {
-        var span = extent[1] - extent[0], target = span / m, i = d3.bisect(d3_time_scaleSteps, target);
-        if (i == d3_time_scaleSteps.length) return methods.year(extent, m);
-        if (!i) return linear.ticks(m).map(d3_time_scaleDate);
-        if (target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target) --i;
-        m = methods[i];
-        k = m[1];
-        m = m[0].range;
-      }
-      return m(extent[0], new Date(+extent[1] + 1), k);
-    };
-    scale.tickFormat = function() {
-      return format;
-    };
-    scale.copy = function() {
-      return d3_time_scale(linear.copy(), methods, format);
-    };
-    return d3_scale_linearRebind(scale, linear);
-  }
-  function d3_time_scaleDate(t) {
-    return new Date(t);
-  }
-  function d3_time_scaleFormat(formats) {
-    return function(date) {
-      var i = formats.length - 1, f = formats[i];
-      while (!f[1](date)) f = formats[--i];
-      return f[0](date);
-    };
-  }
-  function d3_time_scaleSetYear(y) {
-    var d = new Date(y, 0, 1);
-    d.setFullYear(y);
-    return d;
-  }
-  function d3_time_scaleGetYear(d) {
-    var y = d.getFullYear(), d0 = d3_time_scaleSetYear(y), d1 = d3_time_scaleSetYear(y + 1);
-    return y + (d - d0) / (d1 - d0);
-  }
-  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
-  var d3_time_scaleLocalMethods = [ [ d3.time.second, 1 ], [ d3.time.second, 5 ], [ d3.time.second, 15 ], [ d3.time.second, 30 ], [ d3.time.minute, 1 ], [ d3.time.minute, 5 ], [ d3.time.minute, 15 ], [ d3.time.minute, 30 ], [ d3.time.hour, 1 ], [ d3.time.hour, 3 ], [ d3.time.hour, 6 ], [ d3.time.hour, 12 ], [ d3.time.day, 1 ], [ d3.time.day, 2 ], [ d3.time.week, 1 ], [ d3.time.month, 1 ], [ d3.time.month, 3 ], [ d3.time.year, 1 ] ];
-  var d3_time_scaleLocalFormats = [ [ d3.time.format("%Y"), d3_true ], [ d3.time.format("%B"), function(d) {
-    return d.getMonth();
-  } ], [ d3.time.format("%b %d"), function(d) {
-    return d.getDate() != 1;
-  } ], [ d3.time.format("%a %d"), function(d) {
-    return d.getDay() && d.getDate() != 1;
-  } ], [ d3.time.format("%I %p"), function(d) {
-    return d.getHours();
-  } ], [ d3.time.format("%I:%M"), function(d) {
-    return d.getMinutes();
-  } ], [ d3.time.format(":%S"), function(d) {
-    return d.getSeconds();
-  } ], [ d3.time.format(".%L"), function(d) {
-    return d.getMilliseconds();
-  } ] ];
-  var d3_time_scaleLinear = d3.scale.linear(), d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);
-  d3_time_scaleLocalMethods.year = function(extent, m) {
-    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleGetYear)).ticks(m).map(d3_time_scaleSetYear);
-  };
-  d3.time.scale = function() {
-    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
-  };
-  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {
-    return [ m[0].utc, m[1] ];
-  });
-  var d3_time_scaleUTCFormats = [ [ d3.time.format.utc("%Y"), d3_true ], [ d3.time.format.utc("%B"), function(d) {
-    return d.getUTCMonth();
-  } ], [ d3.time.format.utc("%b %d"), function(d) {
-    return d.getUTCDate() != 1;
-  } ], [ d3.time.format.utc("%a %d"), function(d) {
-    return d.getUTCDay() && d.getUTCDate() != 1;
-  } ], [ d3.time.format.utc("%I %p"), function(d) {
-    return d.getUTCHours();
-  } ], [ d3.time.format.utc("%I:%M"), function(d) {
-    return d.getUTCMinutes();
-  } ], [ d3.time.format.utc(":%S"), function(d) {
-    return d.getUTCSeconds();
-  } ], [ d3.time.format.utc(".%L"), function(d) {
-    return d.getUTCMilliseconds();
-  } ] ];
-  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);
-  function d3_time_scaleUTCSetYear(y) {
-    var d = new Date(Date.UTC(y, 0, 1));
-    d.setUTCFullYear(y);
-    return d;
-  }
-  function d3_time_scaleUTCGetYear(d) {
-    var y = d.getUTCFullYear(), d0 = d3_time_scaleUTCSetYear(y), d1 = d3_time_scaleUTCSetYear(y + 1);
-    return y + (d - d0) / (d1 - d0);
-  }
-  d3_time_scaleUTCMethods.year = function(extent, m) {
-    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleUTCGetYear)).ticks(m).map(d3_time_scaleUTCSetYear);
-  };
-  d3.time.scale.utc = function() {
-    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);
-  };
-  d3.text = d3_xhrType(function(request) {
-    return request.responseText;
-  });
-  d3.json = function(url, callback) {
-    return d3_xhr(url, "application/json", d3_json, callback);
-  };
-  function d3_json(request) {
-    return JSON.parse(request.responseText);
-  }
-  d3.html = function(url, callback) {
-    return d3_xhr(url, "text/html", d3_html, callback);
-  };
-  function d3_html(request) {
-    var range = d3_document.createRange();
-    range.selectNode(d3_document.body);
-    return range.createContextualFragment(request.responseText);
-  }
-  d3.xml = d3_xhrType(function(request) {
-    return request.responseXML;
-  });
-  return d3;
-}();
diff --git a/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/jquery.js b/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/jquery.js
deleted file mode 100644
index 50937333b99..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/js/thirdparty/jquery.js
+++ /dev/null
@@ -1,10872 +0,0 @@
-/*!
- * jQuery JavaScript Library v3.5.1
- * https://jquery.com/
- *
- * Includes Sizzle.js
- * https://sizzlejs.com/
- *
- * Copyright JS Foundation and other contributors
- * Released under the MIT license
- * https://jquery.org/license
- *
- * Date: 2020-05-04T22:49Z
- */
-( function( global, factory ) {
-
-	"use strict";
-
-	if ( typeof module === "object" && typeof module.exports === "object" ) {
-
-		// For CommonJS and CommonJS-like environments where a proper `window`
-		// is present, execute the factory and get jQuery.
-		// For environments that do not have a `window` with a `document`
-		// (such as Node.js), expose a factory as module.exports.
-		// This accentuates the need for the creation of a real `window`.
-		// e.g. var jQuery = require("jquery")(window);
-		// See ticket #14549 for more info.
-		module.exports = global.document ?
-			factory( global, true ) :
-			function( w ) {
-				if ( !w.document ) {
-					throw new Error( "jQuery requires a window with a document" );
-				}
-				return factory( w );
-			};
-	} else {
-		factory( global );
-	}
-
-// Pass this if window is not defined yet
-} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {
-
-// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
-// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
-// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
-// enough that all such attempts are guarded in a try block.
-"use strict";
-
-var arr = [];
-
-var getProto = Object.getPrototypeOf;
-
-var slice = arr.slice;
-
-var flat = arr.flat ? function( array ) {
-	return arr.flat.call( array );
-} : function( array ) {
-	return arr.concat.apply( [], array );
-};
-
-
-var push = arr.push;
-
-var indexOf = arr.indexOf;
-
-var class2type = {};
-
-var toString = class2type.toString;
-
-var hasOwn = class2type.hasOwnProperty;
-
-var fnToString = hasOwn.toString;
-
-var ObjectFunctionString = fnToString.call( Object );
-
-var support = {};
-
-var isFunction = function isFunction( obj ) {
-
-      // Support: Chrome <=57, Firefox <=52
-      // In some browsers, typeof returns "function" for HTML <object> elements
-      // (i.e., `typeof document.createElement( "object" ) === "function"`).
-      // We don't want to classify *any* DOM node as a function.
-      return typeof obj === "function" && typeof obj.nodeType !== "number";
-  };
-
-
-var isWindow = function isWindow( obj ) {
-		return obj != null && obj === obj.window;
-	};
-
-
-var document = window.document;
-
-
-
-	var preservedScriptAttributes = {
-		type: true,
-		src: true,
-		nonce: true,
-		noModule: true
-	};
-
-	function DOMEval( code, node, doc ) {
-		doc = doc || document;
-
-		var i, val,
-			script = doc.createElement( "script" );
-
-		script.text = code;
-		if ( node ) {
-			for ( i in preservedScriptAttributes ) {
-
-				// Support: Firefox 64+, Edge 18+
-				// Some browsers don't support the "nonce" property on scripts.
-				// On the other hand, just using `getAttribute` is not enough as
-				// the `nonce` attribute is reset to an empty string whenever it
-				// becomes browsing-context connected.
-				// See https://github.com/whatwg/html/issues/2369
-				// See https://html.spec.whatwg.org/#nonce-attributes
-				// The `node.getAttribute` check was added for the sake of
-				// `jQuery.globalEval` so that it can fake a nonce-containing node
-				// via an object.
-				val = node[ i ] || node.getAttribute && node.getAttribute( i );
-				if ( val ) {
-					script.setAttribute( i, val );
-				}
-			}
-		}
-		doc.head.appendChild( script ).parentNode.removeChild( script );
-	}
-
-
-function toType( obj ) {
-	if ( obj == null ) {
-		return obj + "";
-	}
-
-	// Support: Android <=2.3 only (functionish RegExp)
-	return typeof obj === "object" || typeof obj === "function" ?
-		class2type[ toString.call( obj ) ] || "object" :
-		typeof obj;
-}
-/* global Symbol */
-// Defining this global in .eslintrc.json would create a danger of using the global
-// unguarded in another place, it seems safer to define global only for this module
-
-
-
-var
-	version = "3.5.1",
-
-	// Define a local copy of jQuery
-	jQuery = function( selector, context ) {
-
-		// The jQuery object is actually just the init constructor 'enhanced'
-		// Need init if jQuery is called (just allow error to be thrown if not included)
-		return new jQuery.fn.init( selector, context );
-	};
-
-jQuery.fn = jQuery.prototype = {
-
-	// The current version of jQuery being used
-	jquery: version,
-
-	constructor: jQuery,
-
-	// The default length of a jQuery object is 0
-	length: 0,
-
-	toArray: function() {
-		return slice.call( this );
-	},
-
-	// Get the Nth element in the matched element set OR
-	// Get the whole matched element set as a clean array
-	get: function( num ) {
-
-		// Return all the elements in a clean array
-		if ( num == null ) {
-			return slice.call( this );
-		}
-
-		// Return just the one element from the set
-		return num < 0 ? this[ num + this.length ] : this[ num ];
-	},
-
-	// Take an array of elements and push it onto the stack
-	// (returning the new matched element set)
-	pushStack: function( elems ) {
-
-		// Build a new jQuery matched element set
-		var ret = jQuery.merge( this.constructor(), elems );
-
-		// Add the old object onto the stack (as a reference)
-		ret.prevObject = this;
-
-		// Return the newly-formed element set
-		return ret;
-	},
-
-	// Execute a callback for every element in the matched set.
-	each: function( callback ) {
-		return jQuery.each( this, callback );
-	},
-
-	map: function( callback ) {
-		return this.pushStack( jQuery.map( this, function( elem, i ) {
-			return callback.call( elem, i, elem );
-		} ) );
-	},
-
-	slice: function() {
-		return this.pushStack( slice.apply( this, arguments ) );
-	},
-
-	first: function() {
-		return this.eq( 0 );
-	},
-
-	last: function() {
-		return this.eq( -1 );
-	},
-
-	even: function() {
-		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
-			return ( i + 1 ) % 2;
-		} ) );
-	},
-
-	odd: function() {
-		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
-			return i % 2;
-		} ) );
-	},
-
-	eq: function( i ) {
-		var len = this.length,
-			j = +i + ( i < 0 ? len : 0 );
-		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
-	},
-
-	end: function() {
-		return this.prevObject || this.constructor();
-	},
-
-	// For internal use only.
-	// Behaves like an Array's method, not like a jQuery method.
-	push: push,
-	sort: arr.sort,
-	splice: arr.splice
-};
-
-jQuery.extend = jQuery.fn.extend = function() {
-	var options, name, src, copy, copyIsArray, clone,
-		target = arguments[ 0 ] || {},
-		i = 1,
-		length = arguments.length,
-		deep = false;
-
-	// Handle a deep copy situation
-	if ( typeof target === "boolean" ) {
-		deep = target;
-
-		// Skip the boolean and the target
-		target = arguments[ i ] || {};
-		i++;
-	}
-
-	// Handle case when target is a string or something (possible in deep copy)
-	if ( typeof target !== "object" && !isFunction( target ) ) {
-		target = {};
-	}
-
-	// Extend jQuery itself if only one argument is passed
-	if ( i === length ) {
-		target = this;
-		i--;
-	}
-
-	for ( ; i < length; i++ ) {
-
-		// Only deal with non-null/undefined values
-		if ( ( options = arguments[ i ] ) != null ) {
-
-			// Extend the base object
-			for ( name in options ) {
-				copy = options[ name ];
-
-				// Prevent Object.prototype pollution
-				// Prevent never-ending loop
-				if ( name === "__proto__" || target === copy ) {
-					continue;
-				}
-
-				// Recurse if we're merging plain objects or arrays
-				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
-					( copyIsArray = Array.isArray( copy ) ) ) ) {
-					src = target[ name ];
-
-					// Ensure proper type for the source value
-					if ( copyIsArray && !Array.isArray( src ) ) {
-						clone = [];
-					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
-						clone = {};
-					} else {
-						clone = src;
-					}
-					copyIsArray = false;
-
-					// Never move original objects, clone them
-					target[ name ] = jQuery.extend( deep, clone, copy );
-
-				// Don't bring in undefined values
-				} else if ( copy !== undefined ) {
-					target[ name ] = copy;
-				}
-			}
-		}
-	}
-
-	// Return the modified object
-	return target;
-};
-
-jQuery.extend( {
-
-	// Unique for each copy of jQuery on the page
-	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),
-
-	// Assume jQuery is ready without the ready module
-	isReady: true,
-
-	error: function( msg ) {
-		throw new Error( msg );
-	},
-
-	noop: function() {},
-
-	isPlainObject: function( obj ) {
-		var proto, Ctor;
-
-		// Detect obvious negatives
-		// Use toString instead of jQuery.type to catch host objects
-		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
-			return false;
-		}
-
-		proto = getProto( obj );
-
-		// Objects with no prototype (e.g., `Object.create( null )`) are plain
-		if ( !proto ) {
-			return true;
-		}
-
-		// Objects with prototype are plain iff they were constructed by a global Object function
-		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
-		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
-	},
-
-	isEmptyObject: function( obj ) {
-		var name;
-
-		for ( name in obj ) {
-			return false;
-		}
-		return true;
-	},
-
-	// Evaluates a script in a provided context; falls back to the global one
-	// if not specified.
-	globalEval: function( code, options, doc ) {
-		DOMEval( code, { nonce: options && options.nonce }, doc );
-	},
-
-	each: function( obj, callback ) {
-		var length, i = 0;
-
-		if ( isArrayLike( obj ) ) {
-			length = obj.length;
-			for ( ; i < length; i++ ) {
-				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
-					break;
-				}
-			}
-		} else {
-			for ( i in obj ) {
-				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
-					break;
-				}
-			}
-		}
-
-		return obj;
-	},
-
-	// results is for internal usage only
-	makeArray: function( arr, results ) {
-		var ret = results || [];
-
-		if ( arr != null ) {
-			if ( isArrayLike( Object( arr ) ) ) {
-				jQuery.merge( ret,
-					typeof arr === "string" ?
-					[ arr ] : arr
-				);
-			} else {
-				push.call( ret, arr );
-			}
-		}
-
-		return ret;
-	},
-
-	inArray: function( elem, arr, i ) {
-		return arr == null ? -1 : indexOf.call( arr, elem, i );
-	},
-
-	// Support: Android <=4.0 only, PhantomJS 1 only
-	// push.apply(_, arraylike) throws on ancient WebKit
-	merge: function( first, second ) {
-		var len = +second.length,
-			j = 0,
-			i = first.length;
-
-		for ( ; j < len; j++ ) {
-			first[ i++ ] = second[ j ];
-		}
-
-		first.length = i;
-
-		return first;
-	},
-
-	grep: function( elems, callback, invert ) {
-		var callbackInverse,
-			matches = [],
-			i = 0,
-			length = elems.length,
-			callbackExpect = !invert;
-
-		// Go through the array, only saving the items
-		// that pass the validator function
-		for ( ; i < length; i++ ) {
-			callbackInverse = !callback( elems[ i ], i );
-			if ( callbackInverse !== callbackExpect ) {
-				matches.push( elems[ i ] );
-			}
-		}
-
-		return matches;
-	},
-
-	// arg is for internal usage only
-	map: function( elems, callback, arg ) {
-		var length, value,
-			i = 0,
-			ret = [];
-
-		// Go through the array, translating each of the items to their new values
-		if ( isArrayLike( elems ) ) {
-			length = elems.length;
-			for ( ; i < length; i++ ) {
-				value = callback( elems[ i ], i, arg );
-
-				if ( value != null ) {
-					ret.push( value );
-				}
-			}
-
-		// Go through every key on the object,
-		} else {
-			for ( i in elems ) {
-				value = callback( elems[ i ], i, arg );
-
-				if ( value != null ) {
-					ret.push( value );
-				}
-			}
-		}
-
-		// Flatten any nested arrays
-		return flat( ret );
-	},
-
-	// A global GUID counter for objects
-	guid: 1,
-
-	// jQuery.support is not used in Core but other projects attach their
-	// properties to it so it needs to exist.
-	support: support
-} );
-
-if ( typeof Symbol === "function" ) {
-	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
-}
-
-// Populate the class2type map
-jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
-function( _i, name ) {
-	class2type[ "[object " + name + "]" ] = name.toLowerCase();
-} );
-
-function isArrayLike( obj ) {
-
-	// Support: real iOS 8.2 only (not reproducible in simulator)
-	// `in` check used to prevent JIT error (gh-2145)
-	// hasOwn isn't used here due to false negatives
-	// regarding Nodelist length in IE
-	var length = !!obj && "length" in obj && obj.length,
-		type = toType( obj );
-
-	if ( isFunction( obj ) || isWindow( obj ) ) {
-		return false;
-	}
-
-	return type === "array" || length === 0 ||
-		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
-}
-var Sizzle =
-/*!
- * Sizzle CSS Selector Engine v2.3.5
- * https://sizzlejs.com/
- *
- * Copyright JS Foundation and other contributors
- * Released under the MIT license
- * https://js.foundation/
- *
- * Date: 2020-03-14
- */
-( function( window ) {
-var i,
-	support,
-	Expr,
-	getText,
-	isXML,
-	tokenize,
-	compile,
-	select,
-	outermostContext,
-	sortInput,
-	hasDuplicate,
-
-	// Local document vars
-	setDocument,
-	document,
-	docElem,
-	documentIsHTML,
-	rbuggyQSA,
-	rbuggyMatches,
-	matches,
-	contains,
-
-	// Instance-specific data
-	expando = "sizzle" + 1 * new Date(),
-	preferredDoc = window.document,
-	dirruns = 0,
-	done = 0,
-	classCache = createCache(),
-	tokenCache = createCache(),
-	compilerCache = createCache(),
-	nonnativeSelectorCache = createCache(),
-	sortOrder = function( a, b ) {
-		if ( a === b ) {
-			hasDuplicate = true;
-		}
-		return 0;
-	},
-
-	// Instance methods
-	hasOwn = ( {} ).hasOwnProperty,
-	arr = [],
-	pop = arr.pop,
-	pushNative = arr.push,
-	push = arr.push,
-	slice = arr.slice,
-
-	// Use a stripped-down indexOf as it's faster than native
-	// https://jsperf.com/thor-indexof-vs-for/5
-	indexOf = function( list, elem ) {
-		var i = 0,
-			len = list.length;
-		for ( ; i < len; i++ ) {
-			if ( list[ i ] === elem ) {
-				return i;
-			}
-		}
-		return -1;
-	},
-
-	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
-		"ismap|loop|multiple|open|readonly|required|scoped",
-
-	// Regular expressions
-
-	// http://www.w3.org/TR/css3-selectors/#whitespace
-	whitespace = "[\\x20\\t\\r\\n\\f]",
-
-	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
-	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
-		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
-
-	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
-	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
-
-		// Operator (capture 2)
-		"*([*^$|!~]?=)" + whitespace +
-
-		// "Attribute values must be CSS identifiers [capture 5]
-		// or strings [capture 3 or capture 4]"
-		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
-		whitespace + "*\\]",
-
-	pseudos = ":(" + identifier + ")(?:\\((" +
-
-		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
-		// 1. quoted (capture 3; capture 4 or capture 5)
-		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
-
-		// 2. simple (capture 6)
-		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
-
-		// 3. anything else (capture 2)
-		".*" +
-		")\\)|)",
-
-	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
-	rwhitespace = new RegExp( whitespace + "+", "g" ),
-	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
-		whitespace + "+$", "g" ),
-
-	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
-	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
-		"*" ),
-	rdescend = new RegExp( whitespace + "|>" ),
-
-	rpseudo = new RegExp( pseudos ),
-	ridentifier = new RegExp( "^" + identifier + "$" ),
-
-	matchExpr = {
-		"ID": new RegExp( "^#(" + identifier + ")" ),
-		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
-		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
-		"ATTR": new RegExp( "^" + attributes ),
-		"PSEUDO": new RegExp( "^" + pseudos ),
-		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
-			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
-			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
-		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
-
-		// For use in libraries implementing .is()
-		// We use this for POS matching in `select`
-		"needsContext": new RegExp( "^" + whitespace +
-			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
-			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
-	},
-
-	rhtml = /HTML$/i,
-	rinputs = /^(?:input|select|textarea|button)$/i,
-	rheader = /^h\d$/i,
-
-	rnative = /^[^{]+\{\s*\[native \w/,
-
-	// Easily-parseable/retrievable ID or TAG or CLASS selectors
-	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
-
-	rsibling = /[+~]/,
-
-	// CSS escapes
-	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
-	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
-	funescape = function( escape, nonHex ) {
-		var high = "0x" + escape.slice( 1 ) - 0x10000;
-
-		return nonHex ?
-
-			// Strip the backslash prefix from a non-hex escape sequence
-			nonHex :
-
-			// Replace a hexadecimal escape sequence with the encoded Unicode code point
-			// Support: IE <=11+
-			// For values outside the Basic Multilingual Plane (BMP), manually construct a
-			// surrogate pair
-			high < 0 ?
-				String.fromCharCode( high + 0x10000 ) :
-				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
-	},
-
-	// CSS string/identifier serialization
-	// https://drafts.csswg.org/cssom/#common-serializing-idioms
-	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
-	fcssescape = function( ch, asCodePoint ) {
-		if ( asCodePoint ) {
-
-			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
-			if ( ch === "\0" ) {
-				return "\uFFFD";
-			}
-
-			// Control characters and (dependent upon position) numbers get escaped as code points
-			return ch.slice( 0, -1 ) + "\\" +
-				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
-		}
-
-		// Other potentially-special ASCII characters get backslash-escaped
-		return "\\" + ch;
-	},
-
-	// Used for iframes
-	// See setDocument()
-	// Removing the function wrapper causes a "Permission Denied"
-	// error in IE
-	unloadHandler = function() {
-		setDocument();
-	},
-
-	inDisabledFieldset = addCombinator(
-		function( elem ) {
-			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
-		},
-		{ dir: "parentNode", next: "legend" }
-	);
-
-// Optimize for push.apply( _, NodeList )
-try {
-	push.apply(
-		( arr = slice.call( preferredDoc.childNodes ) ),
-		preferredDoc.childNodes
-	);
-
-	// Support: Android<4.0
-	// Detect silently failing push.apply
-	// eslint-disable-next-line no-unused-expressions
-	arr[ preferredDoc.childNodes.length ].nodeType;
-} catch ( e ) {
-	push = { apply: arr.length ?
-
-		// Leverage slice if possible
-		function( target, els ) {
-			pushNative.apply( target, slice.call( els ) );
-		} :
-
-		// Support: IE<9
-		// Otherwise append directly
-		function( target, els ) {
-			var j = target.length,
-				i = 0;
-
-			// Can't trust NodeList.length
-			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
-			target.length = j - 1;
-		}
-	};
-}
-
-function Sizzle( selector, context, results, seed ) {
-	var m, i, elem, nid, match, groups, newSelector,
-		newContext = context && context.ownerDocument,
-
-		// nodeType defaults to 9, since context defaults to document
-		nodeType = context ? context.nodeType : 9;
-
-	results = results || [];
-
-	// Return early from calls with invalid selector or context
-	if ( typeof selector !== "string" || !selector ||
-		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {
-
-		return results;
-	}
-
-	// Try to shortcut find operations (as opposed to filters) in HTML documents
-	if ( !seed ) {
-		setDocument( context );
-		context = context || document;
-
-		if ( documentIsHTML ) {
-
-			// If the selector is sufficiently simple, try using a "get*By*" DOM method
-			// (excepting DocumentFragment context, where the methods don't exist)
-			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {
-
-				// ID selector
-				if ( ( m = match[ 1 ] ) ) {
-
-					// Document context
-					if ( nodeType === 9 ) {
-						if ( ( elem = context.getElementById( m ) ) ) {
-
-							// Support: IE, Opera, Webkit
-							// TODO: identify versions
-							// getElementById can match elements by name instead of ID
-							if ( elem.id === m ) {
-								results.push( elem );
-								return results;
-							}
-						} else {
-							return results;
-						}
-
-					// Element context
-					} else {
-
-						// Support: IE, Opera, Webkit
-						// TODO: identify versions
-						// getElementById can match elements by name instead of ID
-						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
-							contains( context, elem ) &&
-							elem.id === m ) {
-
-							results.push( elem );
-							return results;
-						}
-					}
-
-				// Type selector
-				} else if ( match[ 2 ] ) {
-					push.apply( results, context.getElementsByTagName( selector ) );
-					return results;
-
-				// Class selector
-				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
-					context.getElementsByClassName ) {
-
-					push.apply( results, context.getElementsByClassName( m ) );
-					return results;
-				}
-			}
-
-			// Take advantage of querySelectorAll
-			if ( support.qsa &&
-				!nonnativeSelectorCache[ selector + " " ] &&
-				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&
-
-				// Support: IE 8 only
-				// Exclude object elements
-				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {
-
-				newSelector = selector;
-				newContext = context;
-
-				// qSA considers elements outside a scoping root when evaluating child or
-				// descendant combinators, which is not what we want.
-				// In such cases, we work around the behavior by prefixing every selector in the
-				// list with an ID selector referencing the scope context.
-				// The technique has to be used as well when a leading combinator is used
-				// as such selectors are not recognized by querySelectorAll.
-				// Thanks to Andrew Dupont for this technique.
-				if ( nodeType === 1 &&
-					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {
-
-					// Expand context for sibling selectors
-					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
-						context;
-
-					// We can use :scope instead of the ID hack if the browser
-					// supports it & if we're not changing the context.
-					if ( newContext !== context || !support.scope ) {
-
-						// Capture the context ID, setting it first if necessary
-						if ( ( nid = context.getAttribute( "id" ) ) ) {
-							nid = nid.replace( rcssescape, fcssescape );
-						} else {
-							context.setAttribute( "id", ( nid = expando ) );
-						}
-					}
-
-					// Prefix every selector in the list
-					groups = tokenize( selector );
-					i = groups.length;
-					while ( i-- ) {
-						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
-							toSelector( groups[ i ] );
-					}
-					newSelector = groups.join( "," );
-				}
-
-				try {
-					push.apply( results,
-						newContext.querySelectorAll( newSelector )
-					);
-					return results;
-				} catch ( qsaError ) {
-					nonnativeSelectorCache( selector, true );
-				} finally {
-					if ( nid === expando ) {
-						context.removeAttribute( "id" );
-					}
-				}
-			}
-		}
-	}
-
-	// All others
-	return select( selector.replace( rtrim, "$1" ), context, results, seed );
-}
-
-/**
- * Create key-value caches of limited size
- * @returns {function(string, object)} Returns the Object data after storing it on itself with
- *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
- *	deleting the oldest entry
- */
-function createCache() {
-	var keys = [];
-
-	function cache( key, value ) {
-
-		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
-		if ( keys.push( key + " " ) > Expr.cacheLength ) {
-
-			// Only keep the most recent entries
-			delete cache[ keys.shift() ];
-		}
-		return ( cache[ key + " " ] = value );
-	}
-	return cache;
-}
-
-/**
- * Mark a function for special use by Sizzle
- * @param {Function} fn The function to mark
- */
-function markFunction( fn ) {
-	fn[ expando ] = true;
-	return fn;
-}
-
-/**
- * Support testing using an element
- * @param {Function} fn Passed the created element and returns a boolean result
- */
-function assert( fn ) {
-	var el = document.createElement( "fieldset" );
-
-	try {
-		return !!fn( el );
-	} catch ( e ) {
-		return false;
-	} finally {
-
-		// Remove from its parent by default
-		if ( el.parentNode ) {
-			el.parentNode.removeChild( el );
-		}
-
-		// release memory in IE
-		el = null;
-	}
-}
-
-/**
- * Adds the same handler for all of the specified attrs
- * @param {String} attrs Pipe-separated list of attributes
- * @param {Function} handler The method that will be applied
- */
-function addHandle( attrs, handler ) {
-	var arr = attrs.split( "|" ),
-		i = arr.length;
-
-	while ( i-- ) {
-		Expr.attrHandle[ arr[ i ] ] = handler;
-	}
-}
-
-/**
- * Checks document order of two siblings
- * @param {Element} a
- * @param {Element} b
- * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
- */
-function siblingCheck( a, b ) {
-	var cur = b && a,
-		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
-			a.sourceIndex - b.sourceIndex;
-
-	// Use IE sourceIndex if available on both nodes
-	if ( diff ) {
-		return diff;
-	}
-
-	// Check if b follows a
-	if ( cur ) {
-		while ( ( cur = cur.nextSibling ) ) {
-			if ( cur === b ) {
-				return -1;
-			}
-		}
-	}
-
-	return a ? 1 : -1;
-}
-
-/**
- * Returns a function to use in pseudos for input types
- * @param {String} type
- */
-function createInputPseudo( type ) {
-	return function( elem ) {
-		var name = elem.nodeName.toLowerCase();
-		return name === "input" && elem.type === type;
-	};
-}
-
-/**
- * Returns a function to use in pseudos for buttons
- * @param {String} type
- */
-function createButtonPseudo( type ) {
-	return function( elem ) {
-		var name = elem.nodeName.toLowerCase();
-		return ( name === "input" || name === "button" ) && elem.type === type;
-	};
-}
-
-/**
- * Returns a function to use in pseudos for :enabled/:disabled
- * @param {Boolean} disabled true for :disabled; false for :enabled
- */
-function createDisabledPseudo( disabled ) {
-
-	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
-	return function( elem ) {
-
-		// Only certain elements can match :enabled or :disabled
-		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
-		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
-		if ( "form" in elem ) {
-
-			// Check for inherited disabledness on relevant non-disabled elements:
-			// * listed form-associated elements in a disabled fieldset
-			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
-			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
-			// * option elements in a disabled optgroup
-			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
-			// All such elements have a "form" property.
-			if ( elem.parentNode && elem.disabled === false ) {
-
-				// Option elements defer to a parent optgroup if present
-				if ( "label" in elem ) {
-					if ( "label" in elem.parentNode ) {
-						return elem.parentNode.disabled === disabled;
-					} else {
-						return elem.disabled === disabled;
-					}
-				}
-
-				// Support: IE 6 - 11
-				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
-				return elem.isDisabled === disabled ||
-
-					// Where there is no isDisabled, check manually
-					/* jshint -W018 */
-					elem.isDisabled !== !disabled &&
-					inDisabledFieldset( elem ) === disabled;
-			}
-
-			return elem.disabled === disabled;
-
-		// Try to winnow out elements that can't be disabled before trusting the disabled property.
-		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
-		// even exist on them, let alone have a boolean value.
-		} else if ( "label" in elem ) {
-			return elem.disabled === disabled;
-		}
-
-		// Remaining elements are neither :enabled nor :disabled
-		return false;
-	};
-}
-
-/**
- * Returns a function to use in pseudos for positionals
- * @param {Function} fn
- */
-function createPositionalPseudo( fn ) {
-	return markFunction( function( argument ) {
-		argument = +argument;
-		return markFunction( function( seed, matches ) {
-			var j,
-				matchIndexes = fn( [], seed.length, argument ),
-				i = matchIndexes.length;
-
-			// Match elements found at the specified indexes
-			while ( i-- ) {
-				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
-					seed[ j ] = !( matches[ j ] = seed[ j ] );
-				}
-			}
-		} );
-	} );
-}
-
-/**
- * Checks a node for validity as a Sizzle context
- * @param {Element|Object=} context
- * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
- */
-function testContext( context ) {
-	return context && typeof context.getElementsByTagName !== "undefined" && context;
-}
-
-// Expose support vars for convenience
-support = Sizzle.support = {};
-
-/**
- * Detects XML nodes
- * @param {Element|Object} elem An element or a document
- * @returns {Boolean} True iff elem is a non-HTML XML node
- */
-isXML = Sizzle.isXML = function( elem ) {
-	var namespace = elem.namespaceURI,
-		docElem = ( elem.ownerDocument || elem ).documentElement;
-
-	// Support: IE <=8
-	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
-	// https://bugs.jquery.com/ticket/4833
-	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
-};
-
-/**
- * Sets document-related variables once based on the current document
- * @param {Element|Object} [doc] An element or document object to use to set the document
- * @returns {Object} Returns the current document
- */
-setDocument = Sizzle.setDocument = function( node ) {
-	var hasCompare, subWindow,
-		doc = node ? node.ownerDocument || node : preferredDoc;
-
-	// Return early if doc is invalid or already selected
-	// Support: IE 11+, Edge 17 - 18+
-	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-	// two documents; shallow comparisons work.
-	// eslint-disable-next-line eqeqeq
-	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
-		return document;
-	}
-
-	// Update global variables
-	document = doc;
-	docElem = document.documentElement;
-	documentIsHTML = !isXML( document );
-
-	// Support: IE 9 - 11+, Edge 12 - 18+
-	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
-	// Support: IE 11+, Edge 17 - 18+
-	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-	// two documents; shallow comparisons work.
-	// eslint-disable-next-line eqeqeq
-	if ( preferredDoc != document &&
-		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {
-
-		// Support: IE 11, Edge
-		if ( subWindow.addEventListener ) {
-			subWindow.addEventListener( "unload", unloadHandler, false );
-
-		// Support: IE 9 - 10 only
-		} else if ( subWindow.attachEvent ) {
-			subWindow.attachEvent( "onunload", unloadHandler );
-		}
-	}
-
-	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
-	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
-	// IE/Edge & older browsers don't support the :scope pseudo-class.
-	// Support: Safari 6.0 only
-	// Safari 6.0 supports :scope but it's an alias of :root there.
-	support.scope = assert( function( el ) {
-		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
-		return typeof el.querySelectorAll !== "undefined" &&
-			!el.querySelectorAll( ":scope fieldset div" ).length;
-	} );
-
-	/* Attributes
-	---------------------------------------------------------------------- */
-
-	// Support: IE<8
-	// Verify that getAttribute really returns attributes and not properties
-	// (excepting IE8 booleans)
-	support.attributes = assert( function( el ) {
-		el.className = "i";
-		return !el.getAttribute( "className" );
-	} );
-
-	/* getElement(s)By*
-	---------------------------------------------------------------------- */
-
-	// Check if getElementsByTagName("*") returns only elements
-	support.getElementsByTagName = assert( function( el ) {
-		el.appendChild( document.createComment( "" ) );
-		return !el.getElementsByTagName( "*" ).length;
-	} );
-
-	// Support: IE<9
-	support.getElementsByClassName = rnative.test( document.getElementsByClassName );
-
-	// Support: IE<10
-	// Check if getElementById returns elements by name
-	// The broken getElementById methods don't pick up programmatically-set names,
-	// so use a roundabout getElementsByName test
-	support.getById = assert( function( el ) {
-		docElem.appendChild( el ).id = expando;
-		return !document.getElementsByName || !document.getElementsByName( expando ).length;
-	} );
-
-	// ID filter and find
-	if ( support.getById ) {
-		Expr.filter[ "ID" ] = function( id ) {
-			var attrId = id.replace( runescape, funescape );
-			return function( elem ) {
-				return elem.getAttribute( "id" ) === attrId;
-			};
-		};
-		Expr.find[ "ID" ] = function( id, context ) {
-			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
-				var elem = context.getElementById( id );
-				return elem ? [ elem ] : [];
-			}
-		};
-	} else {
-		Expr.filter[ "ID" ] =  function( id ) {
-			var attrId = id.replace( runescape, funescape );
-			return function( elem ) {
-				var node = typeof elem.getAttributeNode !== "undefined" &&
-					elem.getAttributeNode( "id" );
-				return node && node.value === attrId;
-			};
-		};
-
-		// Support: IE 6 - 7 only
-		// getElementById is not reliable as a find shortcut
-		Expr.find[ "ID" ] = function( id, context ) {
-			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
-				var node, i, elems,
-					elem = context.getElementById( id );
-
-				if ( elem ) {
-
-					// Verify the id attribute
-					node = elem.getAttributeNode( "id" );
-					if ( node && node.value === id ) {
-						return [ elem ];
-					}
-
-					// Fall back on getElementsByName
-					elems = context.getElementsByName( id );
-					i = 0;
-					while ( ( elem = elems[ i++ ] ) ) {
-						node = elem.getAttributeNode( "id" );
-						if ( node && node.value === id ) {
-							return [ elem ];
-						}
-					}
-				}
-
-				return [];
-			}
-		};
-	}
-
-	// Tag
-	Expr.find[ "TAG" ] = support.getElementsByTagName ?
-		function( tag, context ) {
-			if ( typeof context.getElementsByTagName !== "undefined" ) {
-				return context.getElementsByTagName( tag );
-
-			// DocumentFragment nodes don't have gEBTN
-			} else if ( support.qsa ) {
-				return context.querySelectorAll( tag );
-			}
-		} :
-
-		function( tag, context ) {
-			var elem,
-				tmp = [],
-				i = 0,
-
-				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
-				results = context.getElementsByTagName( tag );
-
-			// Filter out possible comments
-			if ( tag === "*" ) {
-				while ( ( elem = results[ i++ ] ) ) {
-					if ( elem.nodeType === 1 ) {
-						tmp.push( elem );
-					}
-				}
-
-				return tmp;
-			}
-			return results;
-		};
-
-	// Class
-	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
-		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
-			return context.getElementsByClassName( className );
-		}
-	};
-
-	/* QSA/matchesSelector
-	---------------------------------------------------------------------- */
-
-	// QSA and matchesSelector support
-
-	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
-	rbuggyMatches = [];
-
-	// qSa(:focus) reports false when true (Chrome 21)
-	// We allow this because of a bug in IE8/9 that throws an error
-	// whenever `document.activeElement` is accessed on an iframe
-	// So, we allow :focus to pass through QSA all the time to avoid the IE error
-	// See https://bugs.jquery.com/ticket/13378
-	rbuggyQSA = [];
-
-	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {
-
-		// Build QSA regex
-		// Regex strategy adopted from Diego Perini
-		assert( function( el ) {
-
-			var input;
-
-			// Select is set to empty string on purpose
-			// This is to test IE's treatment of not explicitly
-			// setting a boolean content attribute,
-			// since its presence should be enough
-			// https://bugs.jquery.com/ticket/12359
-			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
-				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
-				"<option selected=''></option></select>";
-
-			// Support: IE8, Opera 11-12.16
-			// Nothing should be selected when empty strings follow ^= or $= or *=
-			// The test attribute must be unknown in Opera but "safe" for WinRT
-			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
-			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
-				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
-			}
-
-			// Support: IE8
-			// Boolean attributes and "value" are not treated correctly
-			if ( !el.querySelectorAll( "[selected]" ).length ) {
-				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
-			}
-
-			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
-			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
-				rbuggyQSA.push( "~=" );
-			}
-
-			// Support: IE 11+, Edge 15 - 18+
-			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
-			// Adding a temporary attribute to the document before the selection works
-			// around the issue.
-			// Interestingly, IE 10 & older don't seem to have the issue.
-			input = document.createElement( "input" );
-			input.setAttribute( "name", "" );
-			el.appendChild( input );
-			if ( !el.querySelectorAll( "[name='']" ).length ) {
-				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
-					whitespace + "*(?:''|\"\")" );
-			}
-
-			// Webkit/Opera - :checked should return selected option elements
-			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
-			// IE8 throws error here and will not see later tests
-			if ( !el.querySelectorAll( ":checked" ).length ) {
-				rbuggyQSA.push( ":checked" );
-			}
-
-			// Support: Safari 8+, iOS 8+
-			// https://bugs.webkit.org/show_bug.cgi?id=136851
-			// In-page `selector#id sibling-combinator selector` fails
-			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
-				rbuggyQSA.push( ".#.+[+~]" );
-			}
-
-			// Support: Firefox <=3.6 - 5 only
-			// Old Firefox doesn't throw on a badly-escaped identifier.
-			el.querySelectorAll( "\\\f" );
-			rbuggyQSA.push( "[\\r\\n\\f]" );
-		} );
-
-		assert( function( el ) {
-			el.innerHTML = "<a href='' disabled='disabled'></a>" +
-				"<select disabled='disabled'><option/></select>";
-
-			// Support: Windows 8 Native Apps
-			// The type and name attributes are restricted during .innerHTML assignment
-			var input = document.createElement( "input" );
-			input.setAttribute( "type", "hidden" );
-			el.appendChild( input ).setAttribute( "name", "D" );
-
-			// Support: IE8
-			// Enforce case-sensitivity of name attribute
-			if ( el.querySelectorAll( "[name=d]" ).length ) {
-				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
-			}
-
-			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
-			// IE8 throws error here and will not see later tests
-			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
-				rbuggyQSA.push( ":enabled", ":disabled" );
-			}
-
-			// Support: IE9-11+
-			// IE's :disabled selector does not pick up the children of disabled fieldsets
-			docElem.appendChild( el ).disabled = true;
-			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
-				rbuggyQSA.push( ":enabled", ":disabled" );
-			}
-
-			// Support: Opera 10 - 11 only
-			// Opera 10-11 does not throw on post-comma invalid pseudos
-			el.querySelectorAll( "*,:x" );
-			rbuggyQSA.push( ",.*:" );
-		} );
-	}
-
-	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
-		docElem.webkitMatchesSelector ||
-		docElem.mozMatchesSelector ||
-		docElem.oMatchesSelector ||
-		docElem.msMatchesSelector ) ) ) ) {
-
-		assert( function( el ) {
-
-			// Check to see if it's possible to do matchesSelector
-			// on a disconnected node (IE 9)
-			support.disconnectedMatch = matches.call( el, "*" );
-
-			// This should fail with an exception
-			// Gecko does not error, returns false instead
-			matches.call( el, "[s!='']:x" );
-			rbuggyMatches.push( "!=", pseudos );
-		} );
-	}
-
-	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
-	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );
-
-	/* Contains
-	---------------------------------------------------------------------- */
-	hasCompare = rnative.test( docElem.compareDocumentPosition );
-
-	// Element contains another
-	// Purposefully self-exclusive
-	// As in, an element does not contain itself
-	contains = hasCompare || rnative.test( docElem.contains ) ?
-		function( a, b ) {
-			var adown = a.nodeType === 9 ? a.documentElement : a,
-				bup = b && b.parentNode;
-			return a === bup || !!( bup && bup.nodeType === 1 && (
-				adown.contains ?
-					adown.contains( bup ) :
-					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
-			) );
-		} :
-		function( a, b ) {
-			if ( b ) {
-				while ( ( b = b.parentNode ) ) {
-					if ( b === a ) {
-						return true;
-					}
-				}
-			}
-			return false;
-		};
-
-	/* Sorting
-	---------------------------------------------------------------------- */
-
-	// Document order sorting
-	sortOrder = hasCompare ?
-	function( a, b ) {
-
-		// Flag for duplicate removal
-		if ( a === b ) {
-			hasDuplicate = true;
-			return 0;
-		}
-
-		// Sort on method existence if only one input has compareDocumentPosition
-		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
-		if ( compare ) {
-			return compare;
-		}
-
-		// Calculate position if both inputs belong to the same document
-		// Support: IE 11+, Edge 17 - 18+
-		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-		// two documents; shallow comparisons work.
-		// eslint-disable-next-line eqeqeq
-		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
-			a.compareDocumentPosition( b ) :
-
-			// Otherwise we know they are disconnected
-			1;
-
-		// Disconnected nodes
-		if ( compare & 1 ||
-			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {
-
-			// Choose the first element that is related to our preferred document
-			// Support: IE 11+, Edge 17 - 18+
-			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-			// two documents; shallow comparisons work.
-			// eslint-disable-next-line eqeqeq
-			if ( a == document || a.ownerDocument == preferredDoc &&
-				contains( preferredDoc, a ) ) {
-				return -1;
-			}
-
-			// Support: IE 11+, Edge 17 - 18+
-			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-			// two documents; shallow comparisons work.
-			// eslint-disable-next-line eqeqeq
-			if ( b == document || b.ownerDocument == preferredDoc &&
-				contains( preferredDoc, b ) ) {
-				return 1;
-			}
-
-			// Maintain original order
-			return sortInput ?
-				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
-				0;
-		}
-
-		return compare & 4 ? -1 : 1;
-	} :
-	function( a, b ) {
-
-		// Exit early if the nodes are identical
-		if ( a === b ) {
-			hasDuplicate = true;
-			return 0;
-		}
-
-		var cur,
-			i = 0,
-			aup = a.parentNode,
-			bup = b.parentNode,
-			ap = [ a ],
-			bp = [ b ];
-
-		// Parentless nodes are either documents or disconnected
-		if ( !aup || !bup ) {
-
-			// Support: IE 11+, Edge 17 - 18+
-			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-			// two documents; shallow comparisons work.
-			/* eslint-disable eqeqeq */
-			return a == document ? -1 :
-				b == document ? 1 :
-				/* eslint-enable eqeqeq */
-				aup ? -1 :
-				bup ? 1 :
-				sortInput ?
-				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
-				0;
-
-		// If the nodes are siblings, we can do a quick check
-		} else if ( aup === bup ) {
-			return siblingCheck( a, b );
-		}
-
-		// Otherwise we need full lists of their ancestors for comparison
-		cur = a;
-		while ( ( cur = cur.parentNode ) ) {
-			ap.unshift( cur );
-		}
-		cur = b;
-		while ( ( cur = cur.parentNode ) ) {
-			bp.unshift( cur );
-		}
-
-		// Walk down the tree looking for a discrepancy
-		while ( ap[ i ] === bp[ i ] ) {
-			i++;
-		}
-
-		return i ?
-
-			// Do a sibling check if the nodes have a common ancestor
-			siblingCheck( ap[ i ], bp[ i ] ) :
-
-			// Otherwise nodes in our document sort first
-			// Support: IE 11+, Edge 17 - 18+
-			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-			// two documents; shallow comparisons work.
-			/* eslint-disable eqeqeq */
-			ap[ i ] == preferredDoc ? -1 :
-			bp[ i ] == preferredDoc ? 1 :
-			/* eslint-enable eqeqeq */
-			0;
-	};
-
-	return document;
-};
-
-Sizzle.matches = function( expr, elements ) {
-	return Sizzle( expr, null, null, elements );
-};
-
-Sizzle.matchesSelector = function( elem, expr ) {
-	setDocument( elem );
-
-	if ( support.matchesSelector && documentIsHTML &&
-		!nonnativeSelectorCache[ expr + " " ] &&
-		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
-		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {
-
-		try {
-			var ret = matches.call( elem, expr );
-
-			// IE 9's matchesSelector returns false on disconnected nodes
-			if ( ret || support.disconnectedMatch ||
-
-				// As well, disconnected nodes are said to be in a document
-				// fragment in IE 9
-				elem.document && elem.document.nodeType !== 11 ) {
-				return ret;
-			}
-		} catch ( e ) {
-			nonnativeSelectorCache( expr, true );
-		}
-	}
-
-	return Sizzle( expr, document, null, [ elem ] ).length > 0;
-};
-
-Sizzle.contains = function( context, elem ) {
-
-	// Set document vars if needed
-	// Support: IE 11+, Edge 17 - 18+
-	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-	// two documents; shallow comparisons work.
-	// eslint-disable-next-line eqeqeq
-	if ( ( context.ownerDocument || context ) != document ) {
-		setDocument( context );
-	}
-	return contains( context, elem );
-};
-
-Sizzle.attr = function( elem, name ) {
-
-	// Set document vars if needed
-	// Support: IE 11+, Edge 17 - 18+
-	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-	// two documents; shallow comparisons work.
-	// eslint-disable-next-line eqeqeq
-	if ( ( elem.ownerDocument || elem ) != document ) {
-		setDocument( elem );
-	}
-
-	var fn = Expr.attrHandle[ name.toLowerCase() ],
-
-		// Don't get fooled by Object.prototype properties (jQuery #13807)
-		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
-			fn( elem, name, !documentIsHTML ) :
-			undefined;
-
-	return val !== undefined ?
-		val :
-		support.attributes || !documentIsHTML ?
-			elem.getAttribute( name ) :
-			( val = elem.getAttributeNode( name ) ) && val.specified ?
-				val.value :
-				null;
-};
-
-Sizzle.escape = function( sel ) {
-	return ( sel + "" ).replace( rcssescape, fcssescape );
-};
-
-Sizzle.error = function( msg ) {
-	throw new Error( "Syntax error, unrecognized expression: " + msg );
-};
-
-/**
- * Document sorting and removing duplicates
- * @param {ArrayLike} results
- */
-Sizzle.uniqueSort = function( results ) {
-	var elem,
-		duplicates = [],
-		j = 0,
-		i = 0;
-
-	// Unless we *know* we can detect duplicates, assume their presence
-	hasDuplicate = !support.detectDuplicates;
-	sortInput = !support.sortStable && results.slice( 0 );
-	results.sort( sortOrder );
-
-	if ( hasDuplicate ) {
-		while ( ( elem = results[ i++ ] ) ) {
-			if ( elem === results[ i ] ) {
-				j = duplicates.push( i );
-			}
-		}
-		while ( j-- ) {
-			results.splice( duplicates[ j ], 1 );
-		}
-	}
-
-	// Clear input after sorting to release objects
-	// See https://github.com/jquery/sizzle/pull/225
-	sortInput = null;
-
-	return results;
-};
-
-/**
- * Utility function for retrieving the text value of an array of DOM nodes
- * @param {Array|Element} elem
- */
-getText = Sizzle.getText = function( elem ) {
-	var node,
-		ret = "",
-		i = 0,
-		nodeType = elem.nodeType;
-
-	if ( !nodeType ) {
-
-		// If no nodeType, this is expected to be an array
-		while ( ( node = elem[ i++ ] ) ) {
-
-			// Do not traverse comment nodes
-			ret += getText( node );
-		}
-	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
-
-		// Use textContent for elements
-		// innerText usage removed for consistency of new lines (jQuery #11153)
-		if ( typeof elem.textContent === "string" ) {
-			return elem.textContent;
-		} else {
-
-			// Traverse its children
-			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
-				ret += getText( elem );
-			}
-		}
-	} else if ( nodeType === 3 || nodeType === 4 ) {
-		return elem.nodeValue;
-	}
-
-	// Do not include comment or processing instruction nodes
-
-	return ret;
-};
-
-Expr = Sizzle.selectors = {
-
-	// Can be adjusted by the user
-	cacheLength: 50,
-
-	createPseudo: markFunction,
-
-	match: matchExpr,
-
-	attrHandle: {},
-
-	find: {},
-
-	relative: {
-		">": { dir: "parentNode", first: true },
-		" ": { dir: "parentNode" },
-		"+": { dir: "previousSibling", first: true },
-		"~": { dir: "previousSibling" }
-	},
-
-	preFilter: {
-		"ATTR": function( match ) {
-			match[ 1 ] = match[ 1 ].replace( runescape, funescape );
-
-			// Move the given value to match[3] whether quoted or unquoted
-			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
-				match[ 5 ] || "" ).replace( runescape, funescape );
-
-			if ( match[ 2 ] === "~=" ) {
-				match[ 3 ] = " " + match[ 3 ] + " ";
-			}
-
-			return match.slice( 0, 4 );
-		},
-
-		"CHILD": function( match ) {
-
-			/* matches from matchExpr["CHILD"]
-				1 type (only|nth|...)
-				2 what (child|of-type)
-				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
-				4 xn-component of xn+y argument ([+-]?\d*n|)
-				5 sign of xn-component
-				6 x of xn-component
-				7 sign of y-component
-				8 y of y-component
-			*/
-			match[ 1 ] = match[ 1 ].toLowerCase();
-
-			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {
-
-				// nth-* requires argument
-				if ( !match[ 3 ] ) {
-					Sizzle.error( match[ 0 ] );
-				}
-
-				// numeric x and y parameters for Expr.filter.CHILD
-				// remember that false/true cast respectively to 0/1
-				match[ 4 ] = +( match[ 4 ] ?
-					match[ 5 ] + ( match[ 6 ] || 1 ) :
-					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
-				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );
-
-				// other types prohibit arguments
-			} else if ( match[ 3 ] ) {
-				Sizzle.error( match[ 0 ] );
-			}
-
-			return match;
-		},
-
-		"PSEUDO": function( match ) {
-			var excess,
-				unquoted = !match[ 6 ] && match[ 2 ];
-
-			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
-				return null;
-			}
-
-			// Accept quoted arguments as-is
-			if ( match[ 3 ] ) {
-				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";
-
-			// Strip excess characters from unquoted arguments
-			} else if ( unquoted && rpseudo.test( unquoted ) &&
-
-				// Get excess from tokenize (recursively)
-				( excess = tokenize( unquoted, true ) ) &&
-
-				// advance to the next closing parenthesis
-				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {
-
-				// excess is a negative index
-				match[ 0 ] = match[ 0 ].slice( 0, excess );
-				match[ 2 ] = unquoted.slice( 0, excess );
-			}
-
-			// Return only captures needed by the pseudo filter method (type and argument)
-			return match.slice( 0, 3 );
-		}
-	},
-
-	filter: {
-
-		"TAG": function( nodeNameSelector ) {
-			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
-			return nodeNameSelector === "*" ?
-				function() {
-					return true;
-				} :
-				function( elem ) {
-					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
-				};
-		},
-
-		"CLASS": function( className ) {
-			var pattern = classCache[ className + " " ];
-
-			return pattern ||
-				( pattern = new RegExp( "(^|" + whitespace +
-					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
-						className, function( elem ) {
-							return pattern.test(
-								typeof elem.className === "string" && elem.className ||
-								typeof elem.getAttribute !== "undefined" &&
-									elem.getAttribute( "class" ) ||
-								""
-							);
-				} );
-		},
-
-		"ATTR": function( name, operator, check ) {
-			return function( elem ) {
-				var result = Sizzle.attr( elem, name );
-
-				if ( result == null ) {
-					return operator === "!=";
-				}
-				if ( !operator ) {
-					return true;
-				}
-
-				result += "";
-
-				/* eslint-disable max-len */
-
-				return operator === "=" ? result === check :
-					operator === "!=" ? result !== check :
-					operator === "^=" ? check && result.indexOf( check ) === 0 :
-					operator === "*=" ? check && result.indexOf( check ) > -1 :
-					operator === "$=" ? check && result.slice( -check.length ) === check :
-					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
-					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
-					false;
-				/* eslint-enable max-len */
-
-			};
-		},
-
-		"CHILD": function( type, what, _argument, first, last ) {
-			var simple = type.slice( 0, 3 ) !== "nth",
-				forward = type.slice( -4 ) !== "last",
-				ofType = what === "of-type";
-
-			return first === 1 && last === 0 ?
-
-				// Shortcut for :nth-*(n)
-				function( elem ) {
-					return !!elem.parentNode;
-				} :
-
-				function( elem, _context, xml ) {
-					var cache, uniqueCache, outerCache, node, nodeIndex, start,
-						dir = simple !== forward ? "nextSibling" : "previousSibling",
-						parent = elem.parentNode,
-						name = ofType && elem.nodeName.toLowerCase(),
-						useCache = !xml && !ofType,
-						diff = false;
-
-					if ( parent ) {
-
-						// :(first|last|only)-(child|of-type)
-						if ( simple ) {
-							while ( dir ) {
-								node = elem;
-								while ( ( node = node[ dir ] ) ) {
-									if ( ofType ?
-										node.nodeName.toLowerCase() === name :
-										node.nodeType === 1 ) {
-
-										return false;
-									}
-								}
-
-								// Reverse direction for :only-* (if we haven't yet done so)
-								start = dir = type === "only" && !start && "nextSibling";
-							}
-							return true;
-						}
-
-						start = [ forward ? parent.firstChild : parent.lastChild ];
-
-						// non-xml :nth-child(...) stores cache data on `parent`
-						if ( forward && useCache ) {
-
-							// Seek `elem` from a previously-cached index
-
-							// ...in a gzip-friendly way
-							node = parent;
-							outerCache = node[ expando ] || ( node[ expando ] = {} );
-
-							// Support: IE <9 only
-							// Defend against cloned attroperties (jQuery gh-1709)
-							uniqueCache = outerCache[ node.uniqueID ] ||
-								( outerCache[ node.uniqueID ] = {} );
-
-							cache = uniqueCache[ type ] || [];
-							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
-							diff = nodeIndex && cache[ 2 ];
-							node = nodeIndex && parent.childNodes[ nodeIndex ];
-
-							while ( ( node = ++nodeIndex && node && node[ dir ] ||
-
-								// Fallback to seeking `elem` from the start
-								( diff = nodeIndex = 0 ) || start.pop() ) ) {
-
-								// When found, cache indexes on `parent` and break
-								if ( node.nodeType === 1 && ++diff && node === elem ) {
-									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
-									break;
-								}
-							}
-
-						} else {
-
-							// Use previously-cached element index if available
-							if ( useCache ) {
-
-								// ...in a gzip-friendly way
-								node = elem;
-								outerCache = node[ expando ] || ( node[ expando ] = {} );
-
-								// Support: IE <9 only
-								// Defend against cloned attroperties (jQuery gh-1709)
-								uniqueCache = outerCache[ node.uniqueID ] ||
-									( outerCache[ node.uniqueID ] = {} );
-
-								cache = uniqueCache[ type ] || [];
-								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
-								diff = nodeIndex;
-							}
-
-							// xml :nth-child(...)
-							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
-							if ( diff === false ) {
-
-								// Use the same loop as above to seek `elem` from the start
-								while ( ( node = ++nodeIndex && node && node[ dir ] ||
-									( diff = nodeIndex = 0 ) || start.pop() ) ) {
-
-									if ( ( ofType ?
-										node.nodeName.toLowerCase() === name :
-										node.nodeType === 1 ) &&
-										++diff ) {
-
-										// Cache the index of each encountered element
-										if ( useCache ) {
-											outerCache = node[ expando ] ||
-												( node[ expando ] = {} );
-
-											// Support: IE <9 only
-											// Defend against cloned attroperties (jQuery gh-1709)
-											uniqueCache = outerCache[ node.uniqueID ] ||
-												( outerCache[ node.uniqueID ] = {} );
-
-											uniqueCache[ type ] = [ dirruns, diff ];
-										}
-
-										if ( node === elem ) {
-											break;
-										}
-									}
-								}
-							}
-						}
-
-						// Incorporate the offset, then check against cycle size
-						diff -= last;
-						return diff === first || ( diff % first === 0 && diff / first >= 0 );
-					}
-				};
-		},
-
-		"PSEUDO": function( pseudo, argument ) {
-
-			// pseudo-class names are case-insensitive
-			// http://www.w3.org/TR/selectors/#pseudo-classes
-			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
-			// Remember that setFilters inherits from pseudos
-			var args,
-				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
-					Sizzle.error( "unsupported pseudo: " + pseudo );
-
-			// The user may use createPseudo to indicate that
-			// arguments are needed to create the filter function
-			// just as Sizzle does
-			if ( fn[ expando ] ) {
-				return fn( argument );
-			}
-
-			// But maintain support for old signatures
-			if ( fn.length > 1 ) {
-				args = [ pseudo, pseudo, "", argument ];
-				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
-					markFunction( function( seed, matches ) {
-						var idx,
-							matched = fn( seed, argument ),
-							i = matched.length;
-						while ( i-- ) {
-							idx = indexOf( seed, matched[ i ] );
-							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
-						}
-					} ) :
-					function( elem ) {
-						return fn( elem, 0, args );
-					};
-			}
-
-			return fn;
-		}
-	},
-
-	pseudos: {
-
-		// Potentially complex pseudos
-		"not": markFunction( function( selector ) {
-
-			// Trim the selector passed to compile
-			// to avoid treating leading and trailing
-			// spaces as combinators
-			var input = [],
-				results = [],
-				matcher = compile( selector.replace( rtrim, "$1" ) );
-
-			return matcher[ expando ] ?
-				markFunction( function( seed, matches, _context, xml ) {
-					var elem,
-						unmatched = matcher( seed, null, xml, [] ),
-						i = seed.length;
-
-					// Match elements unmatched by `matcher`
-					while ( i-- ) {
-						if ( ( elem = unmatched[ i ] ) ) {
-							seed[ i ] = !( matches[ i ] = elem );
-						}
-					}
-				} ) :
-				function( elem, _context, xml ) {
-					input[ 0 ] = elem;
-					matcher( input, null, xml, results );
-
-					// Don't keep the element (issue #299)
-					input[ 0 ] = null;
-					return !results.pop();
-				};
-		} ),
-
-		"has": markFunction( function( selector ) {
-			return function( elem ) {
-				return Sizzle( selector, elem ).length > 0;
-			};
-		} ),
-
-		"contains": markFunction( function( text ) {
-			text = text.replace( runescape, funescape );
-			return function( elem ) {
-				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
-			};
-		} ),
-
-		// "Whether an element is represented by a :lang() selector
-		// is based solely on the element's language value
-		// being equal to the identifier C,
-		// or beginning with the identifier C immediately followed by "-".
-		// The matching of C against the element's language value is performed case-insensitively.
-		// The identifier C does not have to be a valid language name."
-		// http://www.w3.org/TR/selectors/#lang-pseudo
-		"lang": markFunction( function( lang ) {
-
-			// lang value must be a valid identifier
-			if ( !ridentifier.test( lang || "" ) ) {
-				Sizzle.error( "unsupported lang: " + lang );
-			}
-			lang = lang.replace( runescape, funescape ).toLowerCase();
-			return function( elem ) {
-				var elemLang;
-				do {
-					if ( ( elemLang = documentIsHTML ?
-						elem.lang :
-						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {
-
-						elemLang = elemLang.toLowerCase();
-						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
-					}
-				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
-				return false;
-			};
-		} ),
-
-		// Miscellaneous
-		"target": function( elem ) {
-			var hash = window.location && window.location.hash;
-			return hash && hash.slice( 1 ) === elem.id;
-		},
-
-		"root": function( elem ) {
-			return elem === docElem;
-		},
-
-		"focus": function( elem ) {
-			return elem === document.activeElement &&
-				( !document.hasFocus || document.hasFocus() ) &&
-				!!( elem.type || elem.href || ~elem.tabIndex );
-		},
-
-		// Boolean properties
-		"enabled": createDisabledPseudo( false ),
-		"disabled": createDisabledPseudo( true ),
-
-		"checked": function( elem ) {
-
-			// In CSS3, :checked should return both checked and selected elements
-			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
-			var nodeName = elem.nodeName.toLowerCase();
-			return ( nodeName === "input" && !!elem.checked ) ||
-				( nodeName === "option" && !!elem.selected );
-		},
-
-		"selected": function( elem ) {
-
-			// Accessing this property makes selected-by-default
-			// options in Safari work properly
-			if ( elem.parentNode ) {
-				// eslint-disable-next-line no-unused-expressions
-				elem.parentNode.selectedIndex;
-			}
-
-			return elem.selected === true;
-		},
-
-		// Contents
-		"empty": function( elem ) {
-
-			// http://www.w3.org/TR/selectors/#empty-pseudo
-			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
-			//   but not by others (comment: 8; processing instruction: 7; etc.)
-			// nodeType < 6 works because attributes (2) do not appear as children
-			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
-				if ( elem.nodeType < 6 ) {
-					return false;
-				}
-			}
-			return true;
-		},
-
-		"parent": function( elem ) {
-			return !Expr.pseudos[ "empty" ]( elem );
-		},
-
-		// Element/input types
-		"header": function( elem ) {
-			return rheader.test( elem.nodeName );
-		},
-
-		"input": function( elem ) {
-			return rinputs.test( elem.nodeName );
-		},
-
-		"button": function( elem ) {
-			var name = elem.nodeName.toLowerCase();
-			return name === "input" && elem.type === "button" || name === "button";
-		},
-
-		"text": function( elem ) {
-			var attr;
-			return elem.nodeName.toLowerCase() === "input" &&
-				elem.type === "text" &&
-
-				// Support: IE<8
-				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
-				( ( attr = elem.getAttribute( "type" ) ) == null ||
-					attr.toLowerCase() === "text" );
-		},
-
-		// Position-in-collection
-		"first": createPositionalPseudo( function() {
-			return [ 0 ];
-		} ),
-
-		"last": createPositionalPseudo( function( _matchIndexes, length ) {
-			return [ length - 1 ];
-		} ),
-
-		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
-			return [ argument < 0 ? argument + length : argument ];
-		} ),
-
-		"even": createPositionalPseudo( function( matchIndexes, length ) {
-			var i = 0;
-			for ( ; i < length; i += 2 ) {
-				matchIndexes.push( i );
-			}
-			return matchIndexes;
-		} ),
-
-		"odd": createPositionalPseudo( function( matchIndexes, length ) {
-			var i = 1;
-			for ( ; i < length; i += 2 ) {
-				matchIndexes.push( i );
-			}
-			return matchIndexes;
-		} ),
-
-		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
-			var i = argument < 0 ?
-				argument + length :
-				argument > length ?
-					length :
-					argument;
-			for ( ; --i >= 0; ) {
-				matchIndexes.push( i );
-			}
-			return matchIndexes;
-		} ),
-
-		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
-			var i = argument < 0 ? argument + length : argument;
-			for ( ; ++i < length; ) {
-				matchIndexes.push( i );
-			}
-			return matchIndexes;
-		} )
-	}
-};
-
-Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];
-
-// Add button/input type pseudos
-for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
-	Expr.pseudos[ i ] = createInputPseudo( i );
-}
-for ( i in { submit: true, reset: true } ) {
-	Expr.pseudos[ i ] = createButtonPseudo( i );
-}
-
-// Easy API for creating new setFilters
-function setFilters() {}
-setFilters.prototype = Expr.filters = Expr.pseudos;
-Expr.setFilters = new setFilters();
-
-tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
-	var matched, match, tokens, type,
-		soFar, groups, preFilters,
-		cached = tokenCache[ selector + " " ];
-
-	if ( cached ) {
-		return parseOnly ? 0 : cached.slice( 0 );
-	}
-
-	soFar = selector;
-	groups = [];
-	preFilters = Expr.preFilter;
-
-	while ( soFar ) {
-
-		// Comma and first run
-		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
-			if ( match ) {
-
-				// Don't consume trailing commas as valid
-				soFar = soFar.slice( match[ 0 ].length ) || soFar;
-			}
-			groups.push( ( tokens = [] ) );
-		}
-
-		matched = false;
-
-		// Combinators
-		if ( ( match = rcombinators.exec( soFar ) ) ) {
-			matched = match.shift();
-			tokens.push( {
-				value: matched,
-
-				// Cast descendant combinators to space
-				type: match[ 0 ].replace( rtrim, " " )
-			} );
-			soFar = soFar.slice( matched.length );
-		}
-
-		// Filters
-		for ( type in Expr.filter ) {
-			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
-				( match = preFilters[ type ]( match ) ) ) ) {
-				matched = match.shift();
-				tokens.push( {
-					value: matched,
-					type: type,
-					matches: match
-				} );
-				soFar = soFar.slice( matched.length );
-			}
-		}
-
-		if ( !matched ) {
-			break;
-		}
-	}
-
-	// Return the length of the invalid excess
-	// if we're just parsing
-	// Otherwise, throw an error or return tokens
-	return parseOnly ?
-		soFar.length :
-		soFar ?
-			Sizzle.error( selector ) :
-
-			// Cache the tokens
-			tokenCache( selector, groups ).slice( 0 );
-};
-
-function toSelector( tokens ) {
-	var i = 0,
-		len = tokens.length,
-		selector = "";
-	for ( ; i < len; i++ ) {
-		selector += tokens[ i ].value;
-	}
-	return selector;
-}
-
-function addCombinator( matcher, combinator, base ) {
-	var dir = combinator.dir,
-		skip = combinator.next,
-		key = skip || dir,
-		checkNonElements = base && key === "parentNode",
-		doneName = done++;
-
-	return combinator.first ?
-
-		// Check against closest ancestor/preceding element
-		function( elem, context, xml ) {
-			while ( ( elem = elem[ dir ] ) ) {
-				if ( elem.nodeType === 1 || checkNonElements ) {
-					return matcher( elem, context, xml );
-				}
-			}
-			return false;
-		} :
-
-		// Check against all ancestor/preceding elements
-		function( elem, context, xml ) {
-			var oldCache, uniqueCache, outerCache,
-				newCache = [ dirruns, doneName ];
-
-			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
-			if ( xml ) {
-				while ( ( elem = elem[ dir ] ) ) {
-					if ( elem.nodeType === 1 || checkNonElements ) {
-						if ( matcher( elem, context, xml ) ) {
-							return true;
-						}
-					}
-				}
-			} else {
-				while ( ( elem = elem[ dir ] ) ) {
-					if ( elem.nodeType === 1 || checkNonElements ) {
-						outerCache = elem[ expando ] || ( elem[ expando ] = {} );
-
-						// Support: IE <9 only
-						// Defend against cloned attroperties (jQuery gh-1709)
-						uniqueCache = outerCache[ elem.uniqueID ] ||
-							( outerCache[ elem.uniqueID ] = {} );
-
-						if ( skip && skip === elem.nodeName.toLowerCase() ) {
-							elem = elem[ dir ] || elem;
-						} else if ( ( oldCache = uniqueCache[ key ] ) &&
-							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {
-
-							// Assign to newCache so results back-propagate to previous elements
-							return ( newCache[ 2 ] = oldCache[ 2 ] );
-						} else {
-
-							// Reuse newcache so results back-propagate to previous elements
-							uniqueCache[ key ] = newCache;
-
-							// A match means we're done; a fail means we have to keep checking
-							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
-								return true;
-							}
-						}
-					}
-				}
-			}
-			return false;
-		};
-}
-
-function elementMatcher( matchers ) {
-	return matchers.length > 1 ?
-		function( elem, context, xml ) {
-			var i = matchers.length;
-			while ( i-- ) {
-				if ( !matchers[ i ]( elem, context, xml ) ) {
-					return false;
-				}
-			}
-			return true;
-		} :
-		matchers[ 0 ];
-}
-
-function multipleContexts( selector, contexts, results ) {
-	var i = 0,
-		len = contexts.length;
-	for ( ; i < len; i++ ) {
-		Sizzle( selector, contexts[ i ], results );
-	}
-	return results;
-}
-
-function condense( unmatched, map, filter, context, xml ) {
-	var elem,
-		newUnmatched = [],
-		i = 0,
-		len = unmatched.length,
-		mapped = map != null;
-
-	for ( ; i < len; i++ ) {
-		if ( ( elem = unmatched[ i ] ) ) {
-			if ( !filter || filter( elem, context, xml ) ) {
-				newUnmatched.push( elem );
-				if ( mapped ) {
-					map.push( i );
-				}
-			}
-		}
-	}
-
-	return newUnmatched;
-}
-
-function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
-	if ( postFilter && !postFilter[ expando ] ) {
-		postFilter = setMatcher( postFilter );
-	}
-	if ( postFinder && !postFinder[ expando ] ) {
-		postFinder = setMatcher( postFinder, postSelector );
-	}
-	return markFunction( function( seed, results, context, xml ) {
-		var temp, i, elem,
-			preMap = [],
-			postMap = [],
-			preexisting = results.length,
-
-			// Get initial elements from seed or context
-			elems = seed || multipleContexts(
-				selector || "*",
-				context.nodeType ? [ context ] : context,
-				[]
-			),
-
-			// Prefilter to get matcher input, preserving a map for seed-results synchronization
-			matcherIn = preFilter && ( seed || !selector ) ?
-				condense( elems, preMap, preFilter, context, xml ) :
-				elems,
-
-			matcherOut = matcher ?
-
-				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
-				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?
-
-					// ...intermediate processing is necessary
-					[] :
-
-					// ...otherwise use results directly
-					results :
-				matcherIn;
-
-		// Find primary matches
-		if ( matcher ) {
-			matcher( matcherIn, matcherOut, context, xml );
-		}
-
-		// Apply postFilter
-		if ( postFilter ) {
-			temp = condense( matcherOut, postMap );
-			postFilter( temp, [], context, xml );
-
-			// Un-match failing elements by moving them back to matcherIn
-			i = temp.length;
-			while ( i-- ) {
-				if ( ( elem = temp[ i ] ) ) {
-					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
-				}
-			}
-		}
-
-		if ( seed ) {
-			if ( postFinder || preFilter ) {
-				if ( postFinder ) {
-
-					// Get the final matcherOut by condensing this intermediate into postFinder contexts
-					temp = [];
-					i = matcherOut.length;
-					while ( i-- ) {
-						if ( ( elem = matcherOut[ i ] ) ) {
-
-							// Restore matcherIn since elem is not yet a final match
-							temp.push( ( matcherIn[ i ] = elem ) );
-						}
-					}
-					postFinder( null, ( matcherOut = [] ), temp, xml );
-				}
-
-				// Move matched elements from seed to results to keep them synchronized
-				i = matcherOut.length;
-				while ( i-- ) {
-					if ( ( elem = matcherOut[ i ] ) &&
-						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {
-
-						seed[ temp ] = !( results[ temp ] = elem );
-					}
-				}
-			}
-
-		// Add elements to results, through postFinder if defined
-		} else {
-			matcherOut = condense(
-				matcherOut === results ?
-					matcherOut.splice( preexisting, matcherOut.length ) :
-					matcherOut
-			);
-			if ( postFinder ) {
-				postFinder( null, results, matcherOut, xml );
-			} else {
-				push.apply( results, matcherOut );
-			}
-		}
-	} );
-}
-
-function matcherFromTokens( tokens ) {
-	var checkContext, matcher, j,
-		len = tokens.length,
-		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
-		implicitRelative = leadingRelative || Expr.relative[ " " ],
-		i = leadingRelative ? 1 : 0,
-
-		// The foundational matcher ensures that elements are reachable from top-level context(s)
-		matchContext = addCombinator( function( elem ) {
-			return elem === checkContext;
-		}, implicitRelative, true ),
-		matchAnyContext = addCombinator( function( elem ) {
-			return indexOf( checkContext, elem ) > -1;
-		}, implicitRelative, true ),
-		matchers = [ function( elem, context, xml ) {
-			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
-				( checkContext = context ).nodeType ?
-					matchContext( elem, context, xml ) :
-					matchAnyContext( elem, context, xml ) );
-
-			// Avoid hanging onto element (issue #299)
-			checkContext = null;
-			return ret;
-		} ];
-
-	for ( ; i < len; i++ ) {
-		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
-			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
-		} else {
-			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );
-
-			// Return special upon seeing a positional matcher
-			if ( matcher[ expando ] ) {
-
-				// Find the next relative operator (if any) for proper handling
-				j = ++i;
-				for ( ; j < len; j++ ) {
-					if ( Expr.relative[ tokens[ j ].type ] ) {
-						break;
-					}
-				}
-				return setMatcher(
-					i > 1 && elementMatcher( matchers ),
-					i > 1 && toSelector(
-
-					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
-					tokens
-						.slice( 0, i - 1 )
-						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
-					).replace( rtrim, "$1" ),
-					matcher,
-					i < j && matcherFromTokens( tokens.slice( i, j ) ),
-					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
-					j < len && toSelector( tokens )
-				);
-			}
-			matchers.push( matcher );
-		}
-	}
-
-	return elementMatcher( matchers );
-}
-
-function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
-	var bySet = setMatchers.length > 0,
-		byElement = elementMatchers.length > 0,
-		superMatcher = function( seed, context, xml, results, outermost ) {
-			var elem, j, matcher,
-				matchedCount = 0,
-				i = "0",
-				unmatched = seed && [],
-				setMatched = [],
-				contextBackup = outermostContext,
-
-				// We must always have either seed elements or outermost context
-				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),
-
-				// Use integer dirruns iff this is the outermost matcher
-				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
-				len = elems.length;
-
-			if ( outermost ) {
-
-				// Support: IE 11+, Edge 17 - 18+
-				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-				// two documents; shallow comparisons work.
-				// eslint-disable-next-line eqeqeq
-				outermostContext = context == document || context || outermost;
-			}
-
-			// Add elements passing elementMatchers directly to results
-			// Support: IE<9, Safari
-			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
-			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
-				if ( byElement && elem ) {
-					j = 0;
-
-					// Support: IE 11+, Edge 17 - 18+
-					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
-					// two documents; shallow comparisons work.
-					// eslint-disable-next-line eqeqeq
-					if ( !context && elem.ownerDocument != document ) {
-						setDocument( elem );
-						xml = !documentIsHTML;
-					}
-					while ( ( matcher = elementMatchers[ j++ ] ) ) {
-						if ( matcher( elem, context || document, xml ) ) {
-							results.push( elem );
-							break;
-						}
-					}
-					if ( outermost ) {
-						dirruns = dirrunsUnique;
-					}
-				}
-
-				// Track unmatched elements for set filters
-				if ( bySet ) {
-
-					// They will have gone through all possible matchers
-					if ( ( elem = !matcher && elem ) ) {
-						matchedCount--;
-					}
-
-					// Lengthen the array for every element, matched or not
-					if ( seed ) {
-						unmatched.push( elem );
-					}
-				}
-			}
-
-			// `i` is now the count of elements visited above, and adding it to `matchedCount`
-			// makes the latter nonnegative.
-			matchedCount += i;
-
-			// Apply set filters to unmatched elements
-			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
-			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
-			// no element matchers and no seed.
-			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
-			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
-			// numerically zero.
-			if ( bySet && i !== matchedCount ) {
-				j = 0;
-				while ( ( matcher = setMatchers[ j++ ] ) ) {
-					matcher( unmatched, setMatched, context, xml );
-				}
-
-				if ( seed ) {
-
-					// Reintegrate element matches to eliminate the need for sorting
-					if ( matchedCount > 0 ) {
-						while ( i-- ) {
-							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
-								setMatched[ i ] = pop.call( results );
-							}
-						}
-					}
-
-					// Discard index placeholder values to get only actual matches
-					setMatched = condense( setMatched );
-				}
-
-				// Add matches to results
-				push.apply( results, setMatched );
-
-				// Seedless set matches succeeding multiple successful matchers stipulate sorting
-				if ( outermost && !seed && setMatched.length > 0 &&
-					( matchedCount + setMatchers.length ) > 1 ) {
-
-					Sizzle.uniqueSort( results );
-				}
-			}
-
-			// Override manipulation of globals by nested matchers
-			if ( outermost ) {
-				dirruns = dirrunsUnique;
-				outermostContext = contextBackup;
-			}
-
-			return unmatched;
-		};
-
-	return bySet ?
-		markFunction( superMatcher ) :
-		superMatcher;
-}
-
-compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
-	var i,
-		setMatchers = [],
-		elementMatchers = [],
-		cached = compilerCache[ selector + " " ];
-
-	if ( !cached ) {
-
-		// Generate a function of recursive functions that can be used to check each element
-		if ( !match ) {
-			match = tokenize( selector );
-		}
-		i = match.length;
-		while ( i-- ) {
-			cached = matcherFromTokens( match[ i ] );
-			if ( cached[ expando ] ) {
-				setMatchers.push( cached );
-			} else {
-				elementMatchers.push( cached );
-			}
-		}
-
-		// Cache the compiled function
-		cached = compilerCache(
-			selector,
-			matcherFromGroupMatchers( elementMatchers, setMatchers )
-		);
-
-		// Save selector and tokenization
-		cached.selector = selector;
-	}
-	return cached;
-};
-
-/**
- * A low-level selection function that works with Sizzle's compiled
- *  selector functions
- * @param {String|Function} selector A selector or a pre-compiled
- *  selector function built with Sizzle.compile
- * @param {Element} context
- * @param {Array} [results]
- * @param {Array} [seed] A set of elements to match against
- */
-select = Sizzle.select = function( selector, context, results, seed ) {
-	var i, tokens, token, type, find,
-		compiled = typeof selector === "function" && selector,
-		match = !seed && tokenize( ( selector = compiled.selector || selector ) );
-
-	results = results || [];
-
-	// Try to minimize operations if there is only one selector in the list and no seed
-	// (the latter of which guarantees us context)
-	if ( match.length === 1 ) {
-
-		// Reduce context if the leading compound selector is an ID
-		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
-		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
-			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {
-
-			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
-				.replace( runescape, funescape ), context ) || [] )[ 0 ];
-			if ( !context ) {
-				return results;
-
-			// Precompiled matchers will still verify ancestry, so step up a level
-			} else if ( compiled ) {
-				context = context.parentNode;
-			}
-
-			selector = selector.slice( tokens.shift().value.length );
-		}
-
-		// Fetch a seed set for right-to-left matching
-		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
-		while ( i-- ) {
-			token = tokens[ i ];
-
-			// Abort if we hit a combinator
-			if ( Expr.relative[ ( type = token.type ) ] ) {
-				break;
-			}
-			if ( ( find = Expr.find[ type ] ) ) {
-
-				// Search, expanding context for leading sibling combinators
-				if ( ( seed = find(
-					token.matches[ 0 ].replace( runescape, funescape ),
-					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
-						context
-				) ) ) {
-
-					// If seed is empty or no tokens remain, we can return early
-					tokens.splice( i, 1 );
-					selector = seed.length && toSelector( tokens );
-					if ( !selector ) {
-						push.apply( results, seed );
-						return results;
-					}
-
-					break;
-				}
-			}
-		}
-	}
-
-	// Compile and execute a filtering function if one is not provided
-	// Provide `match` to avoid retokenization if we modified the selector above
-	( compiled || compile( selector, match ) )(
-		seed,
-		context,
-		!documentIsHTML,
-		results,
-		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
-	);
-	return results;
-};
-
-// One-time assignments
-
-// Sort stability
-support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;
-
-// Support: Chrome 14-35+
-// Always assume duplicates if they aren't passed to the comparison function
-support.detectDuplicates = !!hasDuplicate;
-
-// Initialize against the default document
-setDocument();
-
-// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
-// Detached nodes confoundingly follow *each other*
-support.sortDetached = assert( function( el ) {
-
-	// Should return 1, but returns 4 (following)
-	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
-} );
-
-// Support: IE<8
-// Prevent attribute/property "interpolation"
-// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
-if ( !assert( function( el ) {
-	el.innerHTML = "<a href='#'></a>";
-	return el.firstChild.getAttribute( "href" ) === "#";
-} ) ) {
-	addHandle( "type|href|height|width", function( elem, name, isXML ) {
-		if ( !isXML ) {
-			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
-		}
-	} );
-}
-
-// Support: IE<9
-// Use defaultValue in place of getAttribute("value")
-if ( !support.attributes || !assert( function( el ) {
-	el.innerHTML = "<input/>";
-	el.firstChild.setAttribute( "value", "" );
-	return el.firstChild.getAttribute( "value" ) === "";
-} ) ) {
-	addHandle( "value", function( elem, _name, isXML ) {
-		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
-			return elem.defaultValue;
-		}
-	} );
-}
-
-// Support: IE<9
-// Use getAttributeNode to fetch booleans when getAttribute lies
-if ( !assert( function( el ) {
-	return el.getAttribute( "disabled" ) == null;
-} ) ) {
-	addHandle( booleans, function( elem, name, isXML ) {
-		var val;
-		if ( !isXML ) {
-			return elem[ name ] === true ? name.toLowerCase() :
-				( val = elem.getAttributeNode( name ) ) && val.specified ?
-					val.value :
-					null;
-		}
-	} );
-}
-
-return Sizzle;
-
-} )( window );
-
-
-
-jQuery.find = Sizzle;
-jQuery.expr = Sizzle.selectors;
-
-// Deprecated
-jQuery.expr[ ":" ] = jQuery.expr.pseudos;
-jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
-jQuery.text = Sizzle.getText;
-jQuery.isXMLDoc = Sizzle.isXML;
-jQuery.contains = Sizzle.contains;
-jQuery.escapeSelector = Sizzle.escape;
-
-
-
-
-var dir = function( elem, dir, until ) {
-	var matched = [],
-		truncate = until !== undefined;
-
-	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
-		if ( elem.nodeType === 1 ) {
-			if ( truncate && jQuery( elem ).is( until ) ) {
-				break;
-			}
-			matched.push( elem );
-		}
-	}
-	return matched;
-};
-
-
-var siblings = function( n, elem ) {
-	var matched = [];
-
-	for ( ; n; n = n.nextSibling ) {
-		if ( n.nodeType === 1 && n !== elem ) {
-			matched.push( n );
-		}
-	}
-
-	return matched;
-};
-
-
-var rneedsContext = jQuery.expr.match.needsContext;
-
-
-
-function nodeName( elem, name ) {
-
-  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
-
-};
-var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );
-
-
-
-// Implement the identical functionality for filter and not
-function winnow( elements, qualifier, not ) {
-	if ( isFunction( qualifier ) ) {
-		return jQuery.grep( elements, function( elem, i ) {
-			return !!qualifier.call( elem, i, elem ) !== not;
-		} );
-	}
-
-	// Single element
-	if ( qualifier.nodeType ) {
-		return jQuery.grep( elements, function( elem ) {
-			return ( elem === qualifier ) !== not;
-		} );
-	}
-
-	// Arraylike of elements (jQuery, arguments, Array)
-	if ( typeof qualifier !== "string" ) {
-		return jQuery.grep( elements, function( elem ) {
-			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
-		} );
-	}
-
-	// Filtered directly for both simple and complex selectors
-	return jQuery.filter( qualifier, elements, not );
-}
-
-jQuery.filter = function( expr, elems, not ) {
-	var elem = elems[ 0 ];
-
-	if ( not ) {
-		expr = ":not(" + expr + ")";
-	}
-
-	if ( elems.length === 1 && elem.nodeType === 1 ) {
-		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
-	}
-
-	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
-		return elem.nodeType === 1;
-	} ) );
-};
-
-jQuery.fn.extend( {
-	find: function( selector ) {
-		var i, ret,
-			len = this.length,
-			self = this;
-
-		if ( typeof selector !== "string" ) {
-			return this.pushStack( jQuery( selector ).filter( function() {
-				for ( i = 0; i < len; i++ ) {
-					if ( jQuery.contains( self[ i ], this ) ) {
-						return true;
-					}
-				}
-			} ) );
-		}
-
-		ret = this.pushStack( [] );
-
-		for ( i = 0; i < len; i++ ) {
-			jQuery.find( selector, self[ i ], ret );
-		}
-
-		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
-	},
-	filter: function( selector ) {
-		return this.pushStack( winnow( this, selector || [], false ) );
-	},
-	not: function( selector ) {
-		return this.pushStack( winnow( this, selector || [], true ) );
-	},
-	is: function( selector ) {
-		return !!winnow(
-			this,
-
-			// If this is a positional/relative selector, check membership in the returned set
-			// so $("p:first").is("p:last") won't return true for a doc with two "p".
-			typeof selector === "string" && rneedsContext.test( selector ) ?
-				jQuery( selector ) :
-				selector || [],
-			false
-		).length;
-	}
-} );
-
-
-// Initialize a jQuery object
-
-
-// A central reference to the root jQuery(document)
-var rootjQuery,
-
-	// A simple way to check for HTML strings
-	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
-	// Strict HTML recognition (#11290: must start with <)
-	// Shortcut simple #id case for speed
-	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
-
-	init = jQuery.fn.init = function( selector, context, root ) {
-		var match, elem;
-
-		// HANDLE: $(""), $(null), $(undefined), $(false)
-		if ( !selector ) {
-			return this;
-		}
-
-		// Method init() accepts an alternate rootjQuery
-		// so migrate can support jQuery.sub (gh-2101)
-		root = root || rootjQuery;
-
-		// Handle HTML strings
-		if ( typeof selector === "string" ) {
-			if ( selector[ 0 ] === "<" &&
-				selector[ selector.length - 1 ] === ">" &&
-				selector.length >= 3 ) {
-
-				// Assume that strings that start and end with <> are HTML and skip the regex check
-				match = [ null, selector, null ];
-
-			} else {
-				match = rquickExpr.exec( selector );
-			}
-
-			// Match html or make sure no context is specified for #id
-			if ( match && ( match[ 1 ] || !context ) ) {
-
-				// HANDLE: $(html) -> $(array)
-				if ( match[ 1 ] ) {
-					context = context instanceof jQuery ? context[ 0 ] : context;
-
-					// Option to run scripts is true for back-compat
-					// Intentionally let the error be thrown if parseHTML is not present
-					jQuery.merge( this, jQuery.parseHTML(
-						match[ 1 ],
-						context && context.nodeType ? context.ownerDocument || context : document,
-						true
-					) );
-
-					// HANDLE: $(html, props)
-					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
-						for ( match in context ) {
-
-							// Properties of context are called as methods if possible
-							if ( isFunction( this[ match ] ) ) {
-								this[ match ]( context[ match ] );
-
-							// ...and otherwise set as attributes
-							} else {
-								this.attr( match, context[ match ] );
-							}
-						}
-					}
-
-					return this;
-
-				// HANDLE: $(#id)
-				} else {
-					elem = document.getElementById( match[ 2 ] );
-
-					if ( elem ) {
-
-						// Inject the element directly into the jQuery object
-						this[ 0 ] = elem;
-						this.length = 1;
-					}
-					return this;
-				}
-
-			// HANDLE: $(expr, $(...))
-			} else if ( !context || context.jquery ) {
-				return ( context || root ).find( selector );
-
-			// HANDLE: $(expr, context)
-			// (which is just equivalent to: $(context).find(expr)
-			} else {
-				return this.constructor( context ).find( selector );
-			}
-
-		// HANDLE: $(DOMElement)
-		} else if ( selector.nodeType ) {
-			this[ 0 ] = selector;
-			this.length = 1;
-			return this;
-
-		// HANDLE: $(function)
-		// Shortcut for document ready
-		} else if ( isFunction( selector ) ) {
-			return root.ready !== undefined ?
-				root.ready( selector ) :
-
-				// Execute immediately if ready is not present
-				selector( jQuery );
-		}
-
-		return jQuery.makeArray( selector, this );
-	};
-
-// Give the init function the jQuery prototype for later instantiation
-init.prototype = jQuery.fn;
-
-// Initialize central reference
-rootjQuery = jQuery( document );
-
-
-var rparentsprev = /^(?:parents|prev(?:Until|All))/,
-
-	// Methods guaranteed to produce a unique set when starting from a unique set
-	guaranteedUnique = {
-		children: true,
-		contents: true,
-		next: true,
-		prev: true
-	};
-
-jQuery.fn.extend( {
-	has: function( target ) {
-		var targets = jQuery( target, this ),
-			l = targets.length;
-
-		return this.filter( function() {
-			var i = 0;
-			for ( ; i < l; i++ ) {
-				if ( jQuery.contains( this, targets[ i ] ) ) {
-					return true;
-				}
-			}
-		} );
-	},
-
-	closest: function( selectors, context ) {
-		var cur,
-			i = 0,
-			l = this.length,
-			matched = [],
-			targets = typeof selectors !== "string" && jQuery( selectors );
-
-		// Positional selectors never match, since there's no _selection_ context
-		if ( !rneedsContext.test( selectors ) ) {
-			for ( ; i < l; i++ ) {
-				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {
-
-					// Always skip document fragments
-					if ( cur.nodeType < 11 && ( targets ?
-						targets.index( cur ) > -1 :
-
-						// Don't pass non-elements to Sizzle
-						cur.nodeType === 1 &&
-							jQuery.find.matchesSelector( cur, selectors ) ) ) {
-
-						matched.push( cur );
-						break;
-					}
-				}
-			}
-		}
-
-		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
-	},
-
-	// Determine the position of an element within the set
-	index: function( elem ) {
-
-		// No argument, return index in parent
-		if ( !elem ) {
-			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
-		}
-
-		// Index in selector
-		if ( typeof elem === "string" ) {
-			return indexOf.call( jQuery( elem ), this[ 0 ] );
-		}
-
-		// Locate the position of the desired element
-		return indexOf.call( this,
-
-			// If it receives a jQuery object, the first element is used
-			elem.jquery ? elem[ 0 ] : elem
-		);
-	},
-
-	add: function( selector, context ) {
-		return this.pushStack(
-			jQuery.uniqueSort(
-				jQuery.merge( this.get(), jQuery( selector, context ) )
-			)
-		);
-	},
-
-	addBack: function( selector ) {
-		return this.add( selector == null ?
-			this.prevObject : this.prevObject.filter( selector )
-		);
-	}
-} );
-
-function sibling( cur, dir ) {
-	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
-	return cur;
-}
-
-jQuery.each( {
-	parent: function( elem ) {
-		var parent = elem.parentNode;
-		return parent && parent.nodeType !== 11 ? parent : null;
-	},
-	parents: function( elem ) {
-		return dir( elem, "parentNode" );
-	},
-	parentsUntil: function( elem, _i, until ) {
-		return dir( elem, "parentNode", until );
-	},
-	next: function( elem ) {
-		return sibling( elem, "nextSibling" );
-	},
-	prev: function( elem ) {
-		return sibling( elem, "previousSibling" );
-	},
-	nextAll: function( elem ) {
-		return dir( elem, "nextSibling" );
-	},
-	prevAll: function( elem ) {
-		return dir( elem, "previousSibling" );
-	},
-	nextUntil: function( elem, _i, until ) {
-		return dir( elem, "nextSibling", until );
-	},
-	prevUntil: function( elem, _i, until ) {
-		return dir( elem, "previousSibling", until );
-	},
-	siblings: function( elem ) {
-		return siblings( ( elem.parentNode || {} ).firstChild, elem );
-	},
-	children: function( elem ) {
-		return siblings( elem.firstChild );
-	},
-	contents: function( elem ) {
-		if ( elem.contentDocument != null &&
-
-			// Support: IE 11+
-			// <object> elements with no `data` attribute has an object
-			// `contentDocument` with a `null` prototype.
-			getProto( elem.contentDocument ) ) {
-
-			return elem.contentDocument;
-		}
-
-		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
-		// Treat the template element as a regular one in browsers that
-		// don't support it.
-		if ( nodeName( elem, "template" ) ) {
-			elem = elem.content || elem;
-		}
-
-		return jQuery.merge( [], elem.childNodes );
-	}
-}, function( name, fn ) {
-	jQuery.fn[ name ] = function( until, selector ) {
-		var matched = jQuery.map( this, fn, until );
-
-		if ( name.slice( -5 ) !== "Until" ) {
-			selector = until;
-		}
-
-		if ( selector && typeof selector === "string" ) {
-			matched = jQuery.filter( selector, matched );
-		}
-
-		if ( this.length > 1 ) {
-
-			// Remove duplicates
-			if ( !guaranteedUnique[ name ] ) {
-				jQuery.uniqueSort( matched );
-			}
-
-			// Reverse order for parents* and prev-derivatives
-			if ( rparentsprev.test( name ) ) {
-				matched.reverse();
-			}
-		}
-
-		return this.pushStack( matched );
-	};
-} );
-var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );
-
-
-
-// Convert String-formatted options into Object-formatted ones
-function createOptions( options ) {
-	var object = {};
-	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
-		object[ flag ] = true;
-	} );
-	return object;
-}
-
-/*
- * Create a callback list using the following parameters:
- *
- *	options: an optional list of space-separated options that will change how
- *			the callback list behaves or a more traditional option object
- *
- * By default a callback list will act like an event callback list and can be
- * "fired" multiple times.
- *
- * Possible options:
- *
- *	once:			will ensure the callback list can only be fired once (like a Deferred)
- *
- *	memory:			will keep track of previous values and will call any callback added
- *					after the list has been fired right away with the latest "memorized"
- *					values (like a Deferred)
- *
- *	unique:			will ensure a callback can only be added once (no duplicate in the list)
- *
- *	stopOnFalse:	interrupt callings when a callback returns false
- *
- */
-jQuery.Callbacks = function( options ) {
-
-	// Convert options from String-formatted to Object-formatted if needed
-	// (we check in cache first)
-	options = typeof options === "string" ?
-		createOptions( options ) :
-		jQuery.extend( {}, options );
-
-	var // Flag to know if list is currently firing
-		firing,
-
-		// Last fire value for non-forgettable lists
-		memory,
-
-		// Flag to know if list was already fired
-		fired,
-
-		// Flag to prevent firing
-		locked,
-
-		// Actual callback list
-		list = [],
-
-		// Queue of execution data for repeatable lists
-		queue = [],
-
-		// Index of currently firing callback (modified by add/remove as needed)
-		firingIndex = -1,
-
-		// Fire callbacks
-		fire = function() {
-
-			// Enforce single-firing
-			locked = locked || options.once;
-
-			// Execute callbacks for all pending executions,
-			// respecting firingIndex overrides and runtime changes
-			fired = firing = true;
-			for ( ; queue.length; firingIndex = -1 ) {
-				memory = queue.shift();
-				while ( ++firingIndex < list.length ) {
-
-					// Run callback and check for early termination
-					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
-						options.stopOnFalse ) {
-
-						// Jump to end and forget the data so .add doesn't re-fire
-						firingIndex = list.length;
-						memory = false;
-					}
-				}
-			}
-
-			// Forget the data if we're done with it
-			if ( !options.memory ) {
-				memory = false;
-			}
-
-			firing = false;
-
-			// Clean up if we're done firing for good
-			if ( locked ) {
-
-				// Keep an empty list if we have data for future add calls
-				if ( memory ) {
-					list = [];
-
-				// Otherwise, this object is spent
-				} else {
-					list = "";
-				}
-			}
-		},
-
-		// Actual Callbacks object
-		self = {
-
-			// Add a callback or a collection of callbacks to the list
-			add: function() {
-				if ( list ) {
-
-					// If we have memory from a past run, we should fire after adding
-					if ( memory && !firing ) {
-						firingIndex = list.length - 1;
-						queue.push( memory );
-					}
-
-					( function add( args ) {
-						jQuery.each( args, function( _, arg ) {
-							if ( isFunction( arg ) ) {
-								if ( !options.unique || !self.has( arg ) ) {
-									list.push( arg );
-								}
-							} else if ( arg && arg.length && toType( arg ) !== "string" ) {
-
-								// Inspect recursively
-								add( arg );
-							}
-						} );
-					} )( arguments );
-
-					if ( memory && !firing ) {
-						fire();
-					}
-				}
-				return this;
-			},
-
-			// Remove a callback from the list
-			remove: function() {
-				jQuery.each( arguments, function( _, arg ) {
-					var index;
-					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
-						list.splice( index, 1 );
-
-						// Handle firing indexes
-						if ( index <= firingIndex ) {
-							firingIndex--;
-						}
-					}
-				} );
-				return this;
-			},
-
-			// Check if a given callback is in the list.
-			// If no argument is given, return whether or not list has callbacks attached.
-			has: function( fn ) {
-				return fn ?
-					jQuery.inArray( fn, list ) > -1 :
-					list.length > 0;
-			},
-
-			// Remove all callbacks from the list
-			empty: function() {
-				if ( list ) {
-					list = [];
-				}
-				return this;
-			},
-
-			// Disable .fire and .add
-			// Abort any current/pending executions
-			// Clear all callbacks and values
-			disable: function() {
-				locked = queue = [];
-				list = memory = "";
-				return this;
-			},
-			disabled: function() {
-				return !list;
-			},
-
-			// Disable .fire
-			// Also disable .add unless we have memory (since it would have no effect)
-			// Abort any pending executions
-			lock: function() {
-				locked = queue = [];
-				if ( !memory && !firing ) {
-					list = memory = "";
-				}
-				return this;
-			},
-			locked: function() {
-				return !!locked;
-			},
-
-			// Call all callbacks with the given context and arguments
-			fireWith: function( context, args ) {
-				if ( !locked ) {
-					args = args || [];
-					args = [ context, args.slice ? args.slice() : args ];
-					queue.push( args );
-					if ( !firing ) {
-						fire();
-					}
-				}
-				return this;
-			},
-
-			// Call all the callbacks with the given arguments
-			fire: function() {
-				self.fireWith( this, arguments );
-				return this;
-			},
-
-			// To know if the callbacks have already been called at least once
-			fired: function() {
-				return !!fired;
-			}
-		};
-
-	return self;
-};
-
-
-function Identity( v ) {
-	return v;
-}
-function Thrower( ex ) {
-	throw ex;
-}
-
-function adoptValue( value, resolve, reject, noValue ) {
-	var method;
-
-	try {
-
-		// Check for promise aspect first to privilege synchronous behavior
-		if ( value && isFunction( ( method = value.promise ) ) ) {
-			method.call( value ).done( resolve ).fail( reject );
-
-		// Other thenables
-		} else if ( value && isFunction( ( method = value.then ) ) ) {
-			method.call( value, resolve, reject );
-
-		// Other non-thenables
-		} else {
-
-			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
-			// * false: [ value ].slice( 0 ) => resolve( value )
-			// * true: [ value ].slice( 1 ) => resolve()
-			resolve.apply( undefined, [ value ].slice( noValue ) );
-		}
-
-	// For Promises/A+, convert exceptions into rejections
-	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
-	// Deferred#then to conditionally suppress rejection.
-	} catch ( value ) {
-
-		// Support: Android 4.0 only
-		// Strict mode functions invoked without .call/.apply get global-object context
-		reject.apply( undefined, [ value ] );
-	}
-}
-
-jQuery.extend( {
-
-	Deferred: function( func ) {
-		var tuples = [
-
-				// action, add listener, callbacks,
-				// ... .then handlers, argument index, [final state]
-				[ "notify", "progress", jQuery.Callbacks( "memory" ),
-					jQuery.Callbacks( "memory" ), 2 ],
-				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
-					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
-				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
-					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
-			],
-			state = "pending",
-			promise = {
-				state: function() {
-					return state;
-				},
-				always: function() {
-					deferred.done( arguments ).fail( arguments );
-					return this;
-				},
-				"catch": function( fn ) {
-					return promise.then( null, fn );
-				},
-
-				// Keep pipe for back-compat
-				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
-					var fns = arguments;
-
-					return jQuery.Deferred( function( newDefer ) {
-						jQuery.each( tuples, function( _i, tuple ) {
-
-							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
-							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];
-
-							// deferred.progress(function() { bind to newDefer or newDefer.notify })
-							// deferred.done(function() { bind to newDefer or newDefer.resolve })
-							// deferred.fail(function() { bind to newDefer or newDefer.reject })
-							deferred[ tuple[ 1 ] ]( function() {
-								var returned = fn && fn.apply( this, arguments );
-								if ( returned && isFunction( returned.promise ) ) {
-									returned.promise()
-										.progress( newDefer.notify )
-										.done( newDefer.resolve )
-										.fail( newDefer.reject );
-								} else {
-									newDefer[ tuple[ 0 ] + "With" ](
-										this,
-										fn ? [ returned ] : arguments
-									);
-								}
-							} );
-						} );
-						fns = null;
-					} ).promise();
-				},
-				then: function( onFulfilled, onRejected, onProgress ) {
-					var maxDepth = 0;
-					function resolve( depth, deferred, handler, special ) {
-						return function() {
-							var that = this,
-								args = arguments,
-								mightThrow = function() {
-									var returned, then;
-
-									// Support: Promises/A+ section 2.3.3.3.3
-									// https://promisesaplus.com/#point-59
-									// Ignore double-resolution attempts
-									if ( depth < maxDepth ) {
-										return;
-									}
-
-									returned = handler.apply( that, args );
-
-									// Support: Promises/A+ section 2.3.1
-									// https://promisesaplus.com/#point-48
-									if ( returned === deferred.promise() ) {
-										throw new TypeError( "Thenable self-resolution" );
-									}
-
-									// Support: Promises/A+ sections 2.3.3.1, 3.5
-									// https://promisesaplus.com/#point-54
-									// https://promisesaplus.com/#point-75
-									// Retrieve `then` only once
-									then = returned &&
-
-										// Support: Promises/A+ section 2.3.4
-										// https://promisesaplus.com/#point-64
-										// Only check objects and functions for thenability
-										( typeof returned === "object" ||
-											typeof returned === "function" ) &&
-										returned.then;
-
-									// Handle a returned thenable
-									if ( isFunction( then ) ) {
-
-										// Special processors (notify) just wait for resolution
-										if ( special ) {
-											then.call(
-												returned,
-												resolve( maxDepth, deferred, Identity, special ),
-												resolve( maxDepth, deferred, Thrower, special )
-											);
-
-										// Normal processors (resolve) also hook into progress
-										} else {
-
-											// ...and disregard older resolution values
-											maxDepth++;
-
-											then.call(
-												returned,
-												resolve( maxDepth, deferred, Identity, special ),
-												resolve( maxDepth, deferred, Thrower, special ),
-												resolve( maxDepth, deferred, Identity,
-													deferred.notifyWith )
-											);
-										}
-
-									// Handle all other returned values
-									} else {
-
-										// Only substitute handlers pass on context
-										// and multiple values (non-spec behavior)
-										if ( handler !== Identity ) {
-											that = undefined;
-											args = [ returned ];
-										}
-
-										// Process the value(s)
-										// Default process is resolve
-										( special || deferred.resolveWith )( that, args );
-									}
-								},
-
-								// Only normal processors (resolve) catch and reject exceptions
-								process = special ?
-									mightThrow :
-									function() {
-										try {
-											mightThrow();
-										} catch ( e ) {
-
-											if ( jQuery.Deferred.exceptionHook ) {
-												jQuery.Deferred.exceptionHook( e,
-													process.stackTrace );
-											}
-
-											// Support: Promises/A+ section 2.3.3.3.4.1
-											// https://promisesaplus.com/#point-61
-											// Ignore post-resolution exceptions
-											if ( depth + 1 >= maxDepth ) {
-
-												// Only substitute handlers pass on context
-												// and multiple values (non-spec behavior)
-												if ( handler !== Thrower ) {
-													that = undefined;
-													args = [ e ];
-												}
-
-												deferred.rejectWith( that, args );
-											}
-										}
-									};
-
-							// Support: Promises/A+ section 2.3.3.3.1
-							// https://promisesaplus.com/#point-57
-							// Re-resolve promises immediately to dodge false rejection from
-							// subsequent errors
-							if ( depth ) {
-								process();
-							} else {
-
-								// Call an optional hook to record the stack, in case of exception
-								// since it's otherwise lost when execution goes async
-								if ( jQuery.Deferred.getStackHook ) {
-									process.stackTrace = jQuery.Deferred.getStackHook();
-								}
-								window.setTimeout( process );
-							}
-						};
-					}
-
-					return jQuery.Deferred( function( newDefer ) {
-
-						// progress_handlers.add( ... )
-						tuples[ 0 ][ 3 ].add(
-							resolve(
-								0,
-								newDefer,
-								isFunction( onProgress ) ?
-									onProgress :
-									Identity,
-								newDefer.notifyWith
-							)
-						);
-
-						// fulfilled_handlers.add( ... )
-						tuples[ 1 ][ 3 ].add(
-							resolve(
-								0,
-								newDefer,
-								isFunction( onFulfilled ) ?
-									onFulfilled :
-									Identity
-							)
-						);
-
-						// rejected_handlers.add( ... )
-						tuples[ 2 ][ 3 ].add(
-							resolve(
-								0,
-								newDefer,
-								isFunction( onRejected ) ?
-									onRejected :
-									Thrower
-							)
-						);
-					} ).promise();
-				},
-
-				// Get a promise for this deferred
-				// If obj is provided, the promise aspect is added to the object
-				promise: function( obj ) {
-					return obj != null ? jQuery.extend( obj, promise ) : promise;
-				}
-			},
-			deferred = {};
-
-		// Add list-specific methods
-		jQuery.each( tuples, function( i, tuple ) {
-			var list = tuple[ 2 ],
-				stateString = tuple[ 5 ];
-
-			// promise.progress = list.add
-			// promise.done = list.add
-			// promise.fail = list.add
-			promise[ tuple[ 1 ] ] = list.add;
-
-			// Handle state
-			if ( stateString ) {
-				list.add(
-					function() {
-
-						// state = "resolved" (i.e., fulfilled)
-						// state = "rejected"
-						state = stateString;
-					},
-
-					// rejected_callbacks.disable
-					// fulfilled_callbacks.disable
-					tuples[ 3 - i ][ 2 ].disable,
-
-					// rejected_handlers.disable
-					// fulfilled_handlers.disable
-					tuples[ 3 - i ][ 3 ].disable,
-
-					// progress_callbacks.lock
-					tuples[ 0 ][ 2 ].lock,
-
-					// progress_handlers.lock
-					tuples[ 0 ][ 3 ].lock
-				);
-			}
-
-			// progress_handlers.fire
-			// fulfilled_handlers.fire
-			// rejected_handlers.fire
-			list.add( tuple[ 3 ].fire );
-
-			// deferred.notify = function() { deferred.notifyWith(...) }
-			// deferred.resolve = function() { deferred.resolveWith(...) }
-			// deferred.reject = function() { deferred.rejectWith(...) }
-			deferred[ tuple[ 0 ] ] = function() {
-				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
-				return this;
-			};
-
-			// deferred.notifyWith = list.fireWith
-			// deferred.resolveWith = list.fireWith
-			// deferred.rejectWith = list.fireWith
-			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
-		} );
-
-		// Make the deferred a promise
-		promise.promise( deferred );
-
-		// Call given func if any
-		if ( func ) {
-			func.call( deferred, deferred );
-		}
-
-		// All done!
-		return deferred;
-	},
-
-	// Deferred helper
-	when: function( singleValue ) {
-		var
-
-			// count of uncompleted subordinates
-			remaining = arguments.length,
-
-			// count of unprocessed arguments
-			i = remaining,
-
-			// subordinate fulfillment data
-			resolveContexts = Array( i ),
-			resolveValues = slice.call( arguments ),
-
-			// the master Deferred
-			master = jQuery.Deferred(),
-
-			// subordinate callback factory
-			updateFunc = function( i ) {
-				return function( value ) {
-					resolveContexts[ i ] = this;
-					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
-					if ( !( --remaining ) ) {
-						master.resolveWith( resolveContexts, resolveValues );
-					}
-				};
-			};
-
-		// Single- and empty arguments are adopted like Promise.resolve
-		if ( remaining <= 1 ) {
-			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
-				!remaining );
-
-			// Use .then() to unwrap secondary thenables (cf. gh-3000)
-			if ( master.state() === "pending" ||
-				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {
-
-				return master.then();
-			}
-		}
-
-		// Multiple arguments are aggregated like Promise.all array elements
-		while ( i-- ) {
-			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
-		}
-
-		return master.promise();
-	}
-} );
-
-
-// These usually indicate a programmer mistake during development,
-// warn about them ASAP rather than swallowing them by default.
-var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
-
-jQuery.Deferred.exceptionHook = function( error, stack ) {
-
-	// Support: IE 8 - 9 only
-	// Console exists when dev tools are open, which can happen at any time
-	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
-		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
-	}
-};
-
-
-
-
-jQuery.readyException = function( error ) {
-	window.setTimeout( function() {
-		throw error;
-	} );
-};
-
-
-
-
-// The deferred used on DOM ready
-var readyList = jQuery.Deferred();
-
-jQuery.fn.ready = function( fn ) {
-
-	readyList
-		.then( fn )
-
-		// Wrap jQuery.readyException in a function so that the lookup
-		// happens at the time of error handling instead of callback
-		// registration.
-		.catch( function( error ) {
-			jQuery.readyException( error );
-		} );
-
-	return this;
-};
-
-jQuery.extend( {
-
-	// Is the DOM ready to be used? Set to true once it occurs.
-	isReady: false,
-
-	// A counter to track how many items to wait for before
-	// the ready event fires. See #6781
-	readyWait: 1,
-
-	// Handle when the DOM is ready
-	ready: function( wait ) {
-
-		// Abort if there are pending holds or we're already ready
-		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
-			return;
-		}
-
-		// Remember that the DOM is ready
-		jQuery.isReady = true;
-
-		// If a normal DOM Ready event fired, decrement, and wait if need be
-		if ( wait !== true && --jQuery.readyWait > 0 ) {
-			return;
-		}
-
-		// If there are functions bound, to execute
-		readyList.resolveWith( document, [ jQuery ] );
-	}
-} );
-
-jQuery.ready.then = readyList.then;
-
-// The ready event handler and self cleanup method
-function completed() {
-	document.removeEventListener( "DOMContentLoaded", completed );
-	window.removeEventListener( "load", completed );
-	jQuery.ready();
-}
-
-// Catch cases where $(document).ready() is called
-// after the browser event has already occurred.
-// Support: IE <=9 - 10 only
-// Older IE sometimes signals "interactive" too soon
-if ( document.readyState === "complete" ||
-	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {
-
-	// Handle it asynchronously to allow scripts the opportunity to delay ready
-	window.setTimeout( jQuery.ready );
-
-} else {
-
-	// Use the handy event callback
-	document.addEventListener( "DOMContentLoaded", completed );
-
-	// A fallback to window.onload, that will always work
-	window.addEventListener( "load", completed );
-}
-
-
-
-
-// Multifunctional method to get and set values of a collection
-// The value/s can optionally be executed if it's a function
-var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
-	var i = 0,
-		len = elems.length,
-		bulk = key == null;
-
-	// Sets many values
-	if ( toType( key ) === "object" ) {
-		chainable = true;
-		for ( i in key ) {
-			access( elems, fn, i, key[ i ], true, emptyGet, raw );
-		}
-
-	// Sets one value
-	} else if ( value !== undefined ) {
-		chainable = true;
-
-		if ( !isFunction( value ) ) {
-			raw = true;
-		}
-
-		if ( bulk ) {
-
-			// Bulk operations run against the entire set
-			if ( raw ) {
-				fn.call( elems, value );
-				fn = null;
-
-			// ...except when executing function values
-			} else {
-				bulk = fn;
-				fn = function( elem, _key, value ) {
-					return bulk.call( jQuery( elem ), value );
-				};
-			}
-		}
-
-		if ( fn ) {
-			for ( ; i < len; i++ ) {
-				fn(
-					elems[ i ], key, raw ?
-					value :
-					value.call( elems[ i ], i, fn( elems[ i ], key ) )
-				);
-			}
-		}
-	}
-
-	if ( chainable ) {
-		return elems;
-	}
-
-	// Gets
-	if ( bulk ) {
-		return fn.call( elems );
-	}
-
-	return len ? fn( elems[ 0 ], key ) : emptyGet;
-};
-
-
-// Matches dashed string for camelizing
-var rmsPrefix = /^-ms-/,
-	rdashAlpha = /-([a-z])/g;
-
-// Used by camelCase as callback to replace()
-function fcamelCase( _all, letter ) {
-	return letter.toUpperCase();
-}
-
-// Convert dashed to camelCase; used by the css and data modules
-// Support: IE <=9 - 11, Edge 12 - 15
-// Microsoft forgot to hump their vendor prefix (#9572)
-function camelCase( string ) {
-	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
-}
-var acceptData = function( owner ) {
-
-	// Accepts only:
-	//  - Node
-	//    - Node.ELEMENT_NODE
-	//    - Node.DOCUMENT_NODE
-	//  - Object
-	//    - Any
-	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
-};
-
-
-
-
-function Data() {
-	this.expando = jQuery.expando + Data.uid++;
-}
-
-Data.uid = 1;
-
-Data.prototype = {
-
-	cache: function( owner ) {
-
-		// Check if the owner object already has a cache
-		var value = owner[ this.expando ];
-
-		// If not, create one
-		if ( !value ) {
-			value = {};
-
-			// We can accept data for non-element nodes in modern browsers,
-			// but we should not, see #8335.
-			// Always return an empty object.
-			if ( acceptData( owner ) ) {
-
-				// If it is a node unlikely to be stringify-ed or looped over
-				// use plain assignment
-				if ( owner.nodeType ) {
-					owner[ this.expando ] = value;
-
-				// Otherwise secure it in a non-enumerable property
-				// configurable must be true to allow the property to be
-				// deleted when data is removed
-				} else {
-					Object.defineProperty( owner, this.expando, {
-						value: value,
-						configurable: true
-					} );
-				}
-			}
-		}
-
-		return value;
-	},
-	set: function( owner, data, value ) {
-		var prop,
-			cache = this.cache( owner );
-
-		// Handle: [ owner, key, value ] args
-		// Always use camelCase key (gh-2257)
-		if ( typeof data === "string" ) {
-			cache[ camelCase( data ) ] = value;
-
-		// Handle: [ owner, { properties } ] args
-		} else {
-
-			// Copy the properties one-by-one to the cache object
-			for ( prop in data ) {
-				cache[ camelCase( prop ) ] = data[ prop ];
-			}
-		}
-		return cache;
-	},
-	get: function( owner, key ) {
-		return key === undefined ?
-			this.cache( owner ) :
-
-			// Always use camelCase key (gh-2257)
-			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
-	},
-	access: function( owner, key, value ) {
-
-		// In cases where either:
-		//
-		//   1. No key was specified
-		//   2. A string key was specified, but no value provided
-		//
-		// Take the "read" path and allow the get method to determine
-		// which value to return, respectively either:
-		//
-		//   1. The entire cache object
-		//   2. The data stored at the key
-		//
-		if ( key === undefined ||
-				( ( key && typeof key === "string" ) && value === undefined ) ) {
-
-			return this.get( owner, key );
-		}
-
-		// When the key is not a string, or both a key and value
-		// are specified, set or extend (existing objects) with either:
-		//
-		//   1. An object of properties
-		//   2. A key and value
-		//
-		this.set( owner, key, value );
-
-		// Since the "set" path can have two possible entry points
-		// return the expected data based on which path was taken[*]
-		return value !== undefined ? value : key;
-	},
-	remove: function( owner, key ) {
-		var i,
-			cache = owner[ this.expando ];
-
-		if ( cache === undefined ) {
-			return;
-		}
-
-		if ( key !== undefined ) {
-
-			// Support array or space separated string of keys
-			if ( Array.isArray( key ) ) {
-
-				// If key is an array of keys...
-				// We always set camelCase keys, so remove that.
-				key = key.map( camelCase );
-			} else {
-				key = camelCase( key );
-
-				// If a key with the spaces exists, use it.
-				// Otherwise, create an array by matching non-whitespace
-				key = key in cache ?
-					[ key ] :
-					( key.match( rnothtmlwhite ) || [] );
-			}
-
-			i = key.length;
-
-			while ( i-- ) {
-				delete cache[ key[ i ] ];
-			}
-		}
-
-		// Remove the expando if there's no more data
-		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {
-
-			// Support: Chrome <=35 - 45
-			// Webkit & Blink performance suffers when deleting properties
-			// from DOM nodes, so set to undefined instead
-			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
-			if ( owner.nodeType ) {
-				owner[ this.expando ] = undefined;
-			} else {
-				delete owner[ this.expando ];
-			}
-		}
-	},
-	hasData: function( owner ) {
-		var cache = owner[ this.expando ];
-		return cache !== undefined && !jQuery.isEmptyObject( cache );
-	}
-};
-var dataPriv = new Data();
-
-var dataUser = new Data();
-
-
-
-//	Implementation Summary
-//
-//	1. Enforce API surface and semantic compatibility with 1.9.x branch
-//	2. Improve the module's maintainability by reducing the storage
-//		paths to a single mechanism.
-//	3. Use the same single mechanism to support "private" and "user" data.
-//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
-//	5. Avoid exposing implementation details on user objects (eg. expando properties)
-//	6. Provide a clear path for implementation upgrade to WeakMap in 2014
-
-var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
-	rmultiDash = /[A-Z]/g;
-
-function getData( data ) {
-	if ( data === "true" ) {
-		return true;
-	}
-
-	if ( data === "false" ) {
-		return false;
-	}
-
-	if ( data === "null" ) {
-		return null;
-	}
-
-	// Only convert to a number if it doesn't change the string
-	if ( data === +data + "" ) {
-		return +data;
-	}
-
-	if ( rbrace.test( data ) ) {
-		return JSON.parse( data );
-	}
-
-	return data;
-}
-
-function dataAttr( elem, key, data ) {
-	var name;
-
-	// If nothing was found internally, try to fetch any
-	// data from the HTML5 data-* attribute
-	if ( data === undefined && elem.nodeType === 1 ) {
-		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
-		data = elem.getAttribute( name );
-
-		if ( typeof data === "string" ) {
-			try {
-				data = getData( data );
-			} catch ( e ) {}
-
-			// Make sure we set the data so it isn't changed later
-			dataUser.set( elem, key, data );
-		} else {
-			data = undefined;
-		}
-	}
-	return data;
-}
-
-jQuery.extend( {
-	hasData: function( elem ) {
-		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
-	},
-
-	data: function( elem, name, data ) {
-		return dataUser.access( elem, name, data );
-	},
-
-	removeData: function( elem, name ) {
-		dataUser.remove( elem, name );
-	},
-
-	// TODO: Now that all calls to _data and _removeData have been replaced
-	// with direct calls to dataPriv methods, these can be deprecated.
-	_data: function( elem, name, data ) {
-		return dataPriv.access( elem, name, data );
-	},
-
-	_removeData: function( elem, name ) {
-		dataPriv.remove( elem, name );
-	}
-} );
-
-jQuery.fn.extend( {
-	data: function( key, value ) {
-		var i, name, data,
-			elem = this[ 0 ],
-			attrs = elem && elem.attributes;
-
-		// Gets all values
-		if ( key === undefined ) {
-			if ( this.length ) {
-				data = dataUser.get( elem );
-
-				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
-					i = attrs.length;
-					while ( i-- ) {
-
-						// Support: IE 11 only
-						// The attrs elements can be null (#14894)
-						if ( attrs[ i ] ) {
-							name = attrs[ i ].name;
-							if ( name.indexOf( "data-" ) === 0 ) {
-								name = camelCase( name.slice( 5 ) );
-								dataAttr( elem, name, data[ name ] );
-							}
-						}
-					}
-					dataPriv.set( elem, "hasDataAttrs", true );
-				}
-			}
-
-			return data;
-		}
-
-		// Sets multiple values
-		if ( typeof key === "object" ) {
-			return this.each( function() {
-				dataUser.set( this, key );
-			} );
-		}
-
-		return access( this, function( value ) {
-			var data;
-
-			// The calling jQuery object (element matches) is not empty
-			// (and therefore has an element appears at this[ 0 ]) and the
-			// `value` parameter was not undefined. An empty jQuery object
-			// will result in `undefined` for elem = this[ 0 ] which will
-			// throw an exception if an attempt to read a data cache is made.
-			if ( elem && value === undefined ) {
-
-				// Attempt to get data from the cache
-				// The key will always be camelCased in Data
-				data = dataUser.get( elem, key );
-				if ( data !== undefined ) {
-					return data;
-				}
-
-				// Attempt to "discover" the data in
-				// HTML5 custom data-* attrs
-				data = dataAttr( elem, key );
-				if ( data !== undefined ) {
-					return data;
-				}
-
-				// We tried really hard, but the data doesn't exist.
-				return;
-			}
-
-			// Set the data...
-			this.each( function() {
-
-				// We always store the camelCased key
-				dataUser.set( this, key, value );
-			} );
-		}, null, value, arguments.length > 1, null, true );
-	},
-
-	removeData: function( key ) {
-		return this.each( function() {
-			dataUser.remove( this, key );
-		} );
-	}
-} );
-
-
-jQuery.extend( {
-	queue: function( elem, type, data ) {
-		var queue;
-
-		if ( elem ) {
-			type = ( type || "fx" ) + "queue";
-			queue = dataPriv.get( elem, type );
-
-			// Speed up dequeue by getting out quickly if this is just a lookup
-			if ( data ) {
-				if ( !queue || Array.isArray( data ) ) {
-					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
-				} else {
-					queue.push( data );
-				}
-			}
-			return queue || [];
-		}
-	},
-
-	dequeue: function( elem, type ) {
-		type = type || "fx";
-
-		var queue = jQuery.queue( elem, type ),
-			startLength = queue.length,
-			fn = queue.shift(),
-			hooks = jQuery._queueHooks( elem, type ),
-			next = function() {
-				jQuery.dequeue( elem, type );
-			};
-
-		// If the fx queue is dequeued, always remove the progress sentinel
-		if ( fn === "inprogress" ) {
-			fn = queue.shift();
-			startLength--;
-		}
-
-		if ( fn ) {
-
-			// Add a progress sentinel to prevent the fx queue from being
-			// automatically dequeued
-			if ( type === "fx" ) {
-				queue.unshift( "inprogress" );
-			}
-
-			// Clear up the last queue stop function
-			delete hooks.stop;
-			fn.call( elem, next, hooks );
-		}
-
-		if ( !startLength && hooks ) {
-			hooks.empty.fire();
-		}
-	},
-
-	// Not public - generate a queueHooks object, or return the current one
-	_queueHooks: function( elem, type ) {
-		var key = type + "queueHooks";
-		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
-			empty: jQuery.Callbacks( "once memory" ).add( function() {
-				dataPriv.remove( elem, [ type + "queue", key ] );
-			} )
-		} );
-	}
-} );
-
-jQuery.fn.extend( {
-	queue: function( type, data ) {
-		var setter = 2;
-
-		if ( typeof type !== "string" ) {
-			data = type;
-			type = "fx";
-			setter--;
-		}
-
-		if ( arguments.length < setter ) {
-			return jQuery.queue( this[ 0 ], type );
-		}
-
-		return data === undefined ?
-			this :
-			this.each( function() {
-				var queue = jQuery.queue( this, type, data );
-
-				// Ensure a hooks for this queue
-				jQuery._queueHooks( this, type );
-
-				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
-					jQuery.dequeue( this, type );
-				}
-			} );
-	},
-	dequeue: function( type ) {
-		return this.each( function() {
-			jQuery.dequeue( this, type );
-		} );
-	},
-	clearQueue: function( type ) {
-		return this.queue( type || "fx", [] );
-	},
-
-	// Get a promise resolved when queues of a certain type
-	// are emptied (fx is the type by default)
-	promise: function( type, obj ) {
-		var tmp,
-			count = 1,
-			defer = jQuery.Deferred(),
-			elements = this,
-			i = this.length,
-			resolve = function() {
-				if ( !( --count ) ) {
-					defer.resolveWith( elements, [ elements ] );
-				}
-			};
-
-		if ( typeof type !== "string" ) {
-			obj = type;
-			type = undefined;
-		}
-		type = type || "fx";
-
-		while ( i-- ) {
-			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
-			if ( tmp && tmp.empty ) {
-				count++;
-				tmp.empty.add( resolve );
-			}
-		}
-		resolve();
-		return defer.promise( obj );
-	}
-} );
-var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;
-
-var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );
-
-
-var cssExpand = [ "Top", "Right", "Bottom", "Left" ];
-
-var documentElement = document.documentElement;
-
-
-
-	var isAttached = function( elem ) {
-			return jQuery.contains( elem.ownerDocument, elem );
-		},
-		composed = { composed: true };
-
-	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
-	// Check attachment across shadow DOM boundaries when possible (gh-3504)
-	// Support: iOS 10.0-10.2 only
-	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
-	// leading to errors. We need to check for `getRootNode`.
-	if ( documentElement.getRootNode ) {
-		isAttached = function( elem ) {
-			return jQuery.contains( elem.ownerDocument, elem ) ||
-				elem.getRootNode( composed ) === elem.ownerDocument;
-		};
-	}
-var isHiddenWithinTree = function( elem, el ) {
-
-		// isHiddenWithinTree might be called from jQuery#filter function;
-		// in that case, element will be second argument
-		elem = el || elem;
-
-		// Inline style trumps all
-		return elem.style.display === "none" ||
-			elem.style.display === "" &&
-
-			// Otherwise, check computed style
-			// Support: Firefox <=43 - 45
-			// Disconnected elements can have computed display: none, so first confirm that elem is
-			// in the document.
-			isAttached( elem ) &&
-
-			jQuery.css( elem, "display" ) === "none";
-	};
-
-
-
-function adjustCSS( elem, prop, valueParts, tween ) {
-	var adjusted, scale,
-		maxIterations = 20,
-		currentValue = tween ?
-			function() {
-				return tween.cur();
-			} :
-			function() {
-				return jQuery.css( elem, prop, "" );
-			},
-		initial = currentValue(),
-		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),
-
-		// Starting value computation is required for potential unit mismatches
-		initialInUnit = elem.nodeType &&
-			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
-			rcssNum.exec( jQuery.css( elem, prop ) );
-
-	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {
-
-		// Support: Firefox <=54
-		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
-		initial = initial / 2;
-
-		// Trust units reported by jQuery.css
-		unit = unit || initialInUnit[ 3 ];
-
-		// Iteratively approximate from a nonzero starting point
-		initialInUnit = +initial || 1;
-
-		while ( maxIterations-- ) {
-
-			// Evaluate and update our best guess (doubling guesses that zero out).
-			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
-			jQuery.style( elem, prop, initialInUnit + unit );
-			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
-				maxIterations = 0;
-			}
-			initialInUnit = initialInUnit / scale;
-
-		}
-
-		initialInUnit = initialInUnit * 2;
-		jQuery.style( elem, prop, initialInUnit + unit );
-
-		// Make sure we update the tween properties later on
-		valueParts = valueParts || [];
-	}
-
-	if ( valueParts ) {
-		initialInUnit = +initialInUnit || +initial || 0;
-
-		// Apply relative offset (+=/-=) if specified
-		adjusted = valueParts[ 1 ] ?
-			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
-			+valueParts[ 2 ];
-		if ( tween ) {
-			tween.unit = unit;
-			tween.start = initialInUnit;
-			tween.end = adjusted;
-		}
-	}
-	return adjusted;
-}
-
-
-var defaultDisplayMap = {};
-
-function getDefaultDisplay( elem ) {
-	var temp,
-		doc = elem.ownerDocument,
-		nodeName = elem.nodeName,
-		display = defaultDisplayMap[ nodeName ];
-
-	if ( display ) {
-		return display;
-	}
-
-	temp = doc.body.appendChild( doc.createElement( nodeName ) );
-	display = jQuery.css( temp, "display" );
-
-	temp.parentNode.removeChild( temp );
-
-	if ( display === "none" ) {
-		display = "block";
-	}
-	defaultDisplayMap[ nodeName ] = display;
-
-	return display;
-}
-
-function showHide( elements, show ) {
-	var display, elem,
-		values = [],
-		index = 0,
-		length = elements.length;
-
-	// Determine new display value for elements that need to change
-	for ( ; index < length; index++ ) {
-		elem = elements[ index ];
-		if ( !elem.style ) {
-			continue;
-		}
-
-		display = elem.style.display;
-		if ( show ) {
-
-			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
-			// check is required in this first loop unless we have a nonempty display value (either
-			// inline or about-to-be-restored)
-			if ( display === "none" ) {
-				values[ index ] = dataPriv.get( elem, "display" ) || null;
-				if ( !values[ index ] ) {
-					elem.style.display = "";
-				}
-			}
-			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
-				values[ index ] = getDefaultDisplay( elem );
-			}
-		} else {
-			if ( display !== "none" ) {
-				values[ index ] = "none";
-
-				// Remember what we're overwriting
-				dataPriv.set( elem, "display", display );
-			}
-		}
-	}
-
-	// Set the display of the elements in a second loop to avoid constant reflow
-	for ( index = 0; index < length; index++ ) {
-		if ( values[ index ] != null ) {
-			elements[ index ].style.display = values[ index ];
-		}
-	}
-
-	return elements;
-}
-
-jQuery.fn.extend( {
-	show: function() {
-		return showHide( this, true );
-	},
-	hide: function() {
-		return showHide( this );
-	},
-	toggle: function( state ) {
-		if ( typeof state === "boolean" ) {
-			return state ? this.show() : this.hide();
-		}
-
-		return this.each( function() {
-			if ( isHiddenWithinTree( this ) ) {
-				jQuery( this ).show();
-			} else {
-				jQuery( this ).hide();
-			}
-		} );
-	}
-} );
-var rcheckableType = ( /^(?:checkbox|radio)$/i );
-
-var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );
-
-var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );
-
-
-
-( function() {
-	var fragment = document.createDocumentFragment(),
-		div = fragment.appendChild( document.createElement( "div" ) ),
-		input = document.createElement( "input" );
-
-	// Support: Android 4.0 - 4.3 only
-	// Check state lost if the name is set (#11217)
-	// Support: Windows Web Apps (WWA)
-	// `name` and `type` must use .setAttribute for WWA (#14901)
-	input.setAttribute( "type", "radio" );
-	input.setAttribute( "checked", "checked" );
-	input.setAttribute( "name", "t" );
-
-	div.appendChild( input );
-
-	// Support: Android <=4.1 only
-	// Older WebKit doesn't clone checked state correctly in fragments
-	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;
-
-	// Support: IE <=11 only
-	// Make sure textarea (and checkbox) defaultValue is properly cloned
-	div.innerHTML = "<textarea>x</textarea>";
-	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
-
-	// Support: IE <=9 only
-	// IE <=9 replaces <option> tags with their contents when inserted outside of
-	// the select element.
-	div.innerHTML = "<option></option>";
-	support.option = !!div.lastChild;
-} )();
-
-
-// We have to close these tags to support XHTML (#13200)
-var wrapMap = {
-
-	// XHTML parsers do not magically insert elements in the
-	// same way that tag soup parsers do. So we cannot shorten
-	// this by omitting <tbody> or other required elements.
-	thead: [ 1, "<table>", "</table>" ],
-	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
-	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
-	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
-
-	_default: [ 0, "", "" ]
-};
-
-wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
-wrapMap.th = wrapMap.td;
-
-// Support: IE <=9 only
-if ( !support.option ) {
-	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
-}
-
-
-function getAll( context, tag ) {
-
-	// Support: IE <=9 - 11 only
-	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
-	var ret;
-
-	if ( typeof context.getElementsByTagName !== "undefined" ) {
-		ret = context.getElementsByTagName( tag || "*" );
-
-	} else if ( typeof context.querySelectorAll !== "undefined" ) {
-		ret = context.querySelectorAll( tag || "*" );
-
-	} else {
-		ret = [];
-	}
-
-	if ( tag === undefined || tag && nodeName( context, tag ) ) {
-		return jQuery.merge( [ context ], ret );
-	}
-
-	return ret;
-}
-
-
-// Mark scripts as having already been evaluated
-function setGlobalEval( elems, refElements ) {
-	var i = 0,
-		l = elems.length;
-
-	for ( ; i < l; i++ ) {
-		dataPriv.set(
-			elems[ i ],
-			"globalEval",
-			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
-		);
-	}
-}
-
-
-var rhtml = /<|&#?\w+;/;
-
-function buildFragment( elems, context, scripts, selection, ignored ) {
-	var elem, tmp, tag, wrap, attached, j,
-		fragment = context.createDocumentFragment(),
-		nodes = [],
-		i = 0,
-		l = elems.length;
-
-	for ( ; i < l; i++ ) {
-		elem = elems[ i ];
-
-		if ( elem || elem === 0 ) {
-
-			// Add nodes directly
-			if ( toType( elem ) === "object" ) {
-
-				// Support: Android <=4.0 only, PhantomJS 1 only
-				// push.apply(_, arraylike) throws on ancient WebKit
-				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );
-
-			// Convert non-html into a text node
-			} else if ( !rhtml.test( elem ) ) {
-				nodes.push( context.createTextNode( elem ) );
-
-			// Convert html into DOM nodes
-			} else {
-				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );
-
-				// Deserialize a standard representation
-				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
-				wrap = wrapMap[ tag ] || wrapMap._default;
-				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];
-
-				// Descend through wrappers to the right content
-				j = wrap[ 0 ];
-				while ( j-- ) {
-					tmp = tmp.lastChild;
-				}
-
-				// Support: Android <=4.0 only, PhantomJS 1 only
-				// push.apply(_, arraylike) throws on ancient WebKit
-				jQuery.merge( nodes, tmp.childNodes );
-
-				// Remember the top-level container
-				tmp = fragment.firstChild;
-
-				// Ensure the created nodes are orphaned (#12392)
-				tmp.textContent = "";
-			}
-		}
-	}
-
-	// Remove wrapper from fragment
-	fragment.textContent = "";
-
-	i = 0;
-	while ( ( elem = nodes[ i++ ] ) ) {
-
-		// Skip elements already in the context collection (trac-4087)
-		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
-			if ( ignored ) {
-				ignored.push( elem );
-			}
-			continue;
-		}
-
-		attached = isAttached( elem );
-
-		// Append to fragment
-		tmp = getAll( fragment.appendChild( elem ), "script" );
-
-		// Preserve script evaluation history
-		if ( attached ) {
-			setGlobalEval( tmp );
-		}
-
-		// Capture executables
-		if ( scripts ) {
-			j = 0;
-			while ( ( elem = tmp[ j++ ] ) ) {
-				if ( rscriptType.test( elem.type || "" ) ) {
-					scripts.push( elem );
-				}
-			}
-		}
-	}
-
-	return fragment;
-}
-
-
-var
-	rkeyEvent = /^key/,
-	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
-	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
-
-function returnTrue() {
-	return true;
-}
-
-function returnFalse() {
-	return false;
-}
-
-// Support: IE <=9 - 11+
-// focus() and blur() are asynchronous, except when they are no-op.
-// So expect focus to be synchronous when the element is already active,
-// and blur to be synchronous when the element is not already active.
-// (focus and blur are always synchronous in other supported browsers,
-// this just defines when we can count on it).
-function expectSync( elem, type ) {
-	return ( elem === safeActiveElement() ) === ( type === "focus" );
-}
-
-// Support: IE <=9 only
-// Accessing document.activeElement can throw unexpectedly
-// https://bugs.jquery.com/ticket/13393
-function safeActiveElement() {
-	try {
-		return document.activeElement;
-	} catch ( err ) { }
-}
-
-function on( elem, types, selector, data, fn, one ) {
-	var origFn, type;
-
-	// Types can be a map of types/handlers
-	if ( typeof types === "object" ) {
-
-		// ( types-Object, selector, data )
-		if ( typeof selector !== "string" ) {
-
-			// ( types-Object, data )
-			data = data || selector;
-			selector = undefined;
-		}
-		for ( type in types ) {
-			on( elem, type, selector, data, types[ type ], one );
-		}
-		return elem;
-	}
-
-	if ( data == null && fn == null ) {
-
-		// ( types, fn )
-		fn = selector;
-		data = selector = undefined;
-	} else if ( fn == null ) {
-		if ( typeof selector === "string" ) {
-
-			// ( types, selector, fn )
-			fn = data;
-			data = undefined;
-		} else {
-
-			// ( types, data, fn )
-			fn = data;
-			data = selector;
-			selector = undefined;
-		}
-	}
-	if ( fn === false ) {
-		fn = returnFalse;
-	} else if ( !fn ) {
-		return elem;
-	}
-
-	if ( one === 1 ) {
-		origFn = fn;
-		fn = function( event ) {
-
-			// Can use an empty set, since event contains the info
-			jQuery().off( event );
-			return origFn.apply( this, arguments );
-		};
-
-		// Use same guid so caller can remove using origFn
-		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
-	}
-	return elem.each( function() {
-		jQuery.event.add( this, types, fn, data, selector );
-	} );
-}
-
-/*
- * Helper functions for managing events -- not part of the public interface.
- * Props to Dean Edwards' addEvent library for many of the ideas.
- */
-jQuery.event = {
-
-	global: {},
-
-	add: function( elem, types, handler, data, selector ) {
-
-		var handleObjIn, eventHandle, tmp,
-			events, t, handleObj,
-			special, handlers, type, namespaces, origType,
-			elemData = dataPriv.get( elem );
-
-		// Only attach events to objects that accept data
-		if ( !acceptData( elem ) ) {
-			return;
-		}
-
-		// Caller can pass in an object of custom data in lieu of the handler
-		if ( handler.handler ) {
-			handleObjIn = handler;
-			handler = handleObjIn.handler;
-			selector = handleObjIn.selector;
-		}
-
-		// Ensure that invalid selectors throw exceptions at attach time
-		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
-		if ( selector ) {
-			jQuery.find.matchesSelector( documentElement, selector );
-		}
-
-		// Make sure that the handler has a unique ID, used to find/remove it later
-		if ( !handler.guid ) {
-			handler.guid = jQuery.guid++;
-		}
-
-		// Init the element's event structure and main handler, if this is the first
-		if ( !( events = elemData.events ) ) {
-			events = elemData.events = Object.create( null );
-		}
-		if ( !( eventHandle = elemData.handle ) ) {
-			eventHandle = elemData.handle = function( e ) {
-
-				// Discard the second event of a jQuery.event.trigger() and
-				// when an event is called after a page has unloaded
-				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
-					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
-			};
-		}
-
-		// Handle multiple events separated by a space
-		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
-		t = types.length;
-		while ( t-- ) {
-			tmp = rtypenamespace.exec( types[ t ] ) || [];
-			type = origType = tmp[ 1 ];
-			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();
-
-			// There *must* be a type, no attaching namespace-only handlers
-			if ( !type ) {
-				continue;
-			}
-
-			// If event changes its type, use the special event handlers for the changed type
-			special = jQuery.event.special[ type ] || {};
-
-			// If selector defined, determine special event api type, otherwise given type
-			type = ( selector ? special.delegateType : special.bindType ) || type;
-
-			// Update special based on newly reset type
-			special = jQuery.event.special[ type ] || {};
-
-			// handleObj is passed to all event handlers
-			handleObj = jQuery.extend( {
-				type: type,
-				origType: origType,
-				data: data,
-				handler: handler,
-				guid: handler.guid,
-				selector: selector,
-				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
-				namespace: namespaces.join( "." )
-			}, handleObjIn );
-
-			// Init the event handler queue if we're the first
-			if ( !( handlers = events[ type ] ) ) {
-				handlers = events[ type ] = [];
-				handlers.delegateCount = 0;
-
-				// Only use addEventListener if the special events handler returns false
-				if ( !special.setup ||
-					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
-
-					if ( elem.addEventListener ) {
-						elem.addEventListener( type, eventHandle );
-					}
-				}
-			}
-
-			if ( special.add ) {
-				special.add.call( elem, handleObj );
-
-				if ( !handleObj.handler.guid ) {
-					handleObj.handler.guid = handler.guid;
-				}
-			}
-
-			// Add to the element's handler list, delegates in front
-			if ( selector ) {
-				handlers.splice( handlers.delegateCount++, 0, handleObj );
-			} else {
-				handlers.push( handleObj );
-			}
-
-			// Keep track of which events have ever been used, for event optimization
-			jQuery.event.global[ type ] = true;
-		}
-
-	},
-
-	// Detach an event or set of events from an element
-	remove: function( elem, types, handler, selector, mappedTypes ) {
-
-		var j, origCount, tmp,
-			events, t, handleObj,
-			special, handlers, type, namespaces, origType,
-			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );
-
-		if ( !elemData || !( events = elemData.events ) ) {
-			return;
-		}
-
-		// Once for each type.namespace in types; type may be omitted
-		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
-		t = types.length;
-		while ( t-- ) {
-			tmp = rtypenamespace.exec( types[ t ] ) || [];
-			type = origType = tmp[ 1 ];
-			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();
-
-			// Unbind all events (on this namespace, if provided) for the element
-			if ( !type ) {
-				for ( type in events ) {
-					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
-				}
-				continue;
-			}
-
-			special = jQuery.event.special[ type ] || {};
-			type = ( selector ? special.delegateType : special.bindType ) || type;
-			handlers = events[ type ] || [];
-			tmp = tmp[ 2 ] &&
-				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );
-
-			// Remove matching events
-			origCount = j = handlers.length;
-			while ( j-- ) {
-				handleObj = handlers[ j ];
-
-				if ( ( mappedTypes || origType === handleObj.origType ) &&
-					( !handler || handler.guid === handleObj.guid ) &&
-					( !tmp || tmp.test( handleObj.namespace ) ) &&
-					( !selector || selector === handleObj.selector ||
-						selector === "**" && handleObj.selector ) ) {
-					handlers.splice( j, 1 );
-
-					if ( handleObj.selector ) {
-						handlers.delegateCount--;
-					}
-					if ( special.remove ) {
-						special.remove.call( elem, handleObj );
-					}
-				}
-			}
-
-			// Remove generic event handler if we removed something and no more handlers exist
-			// (avoids potential for endless recursion during removal of special event handlers)
-			if ( origCount && !handlers.length ) {
-				if ( !special.teardown ||
-					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
-
-					jQuery.removeEvent( elem, type, elemData.handle );
-				}
-
-				delete events[ type ];
-			}
-		}
-
-		// Remove data and the expando if it's no longer used
-		if ( jQuery.isEmptyObject( events ) ) {
-			dataPriv.remove( elem, "handle events" );
-		}
-	},
-
-	dispatch: function( nativeEvent ) {
-
-		var i, j, ret, matched, handleObj, handlerQueue,
-			args = new Array( arguments.length ),
-
-			// Make a writable jQuery.Event from the native event object
-			event = jQuery.event.fix( nativeEvent ),
-
-			handlers = (
-					dataPriv.get( this, "events" ) || Object.create( null )
-				)[ event.type ] || [],
-			special = jQuery.event.special[ event.type ] || {};
-
-		// Use the fix-ed jQuery.Event rather than the (read-only) native event
-		args[ 0 ] = event;
-
-		for ( i = 1; i < arguments.length; i++ ) {
-			args[ i ] = arguments[ i ];
-		}
-
-		event.delegateTarget = this;
-
-		// Call the preDispatch hook for the mapped type, and let it bail if desired
-		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
-			return;
-		}
-
-		// Determine handlers
-		handlerQueue = jQuery.event.handlers.call( this, event, handlers );
-
-		// Run delegates first; they may want to stop propagation beneath us
-		i = 0;
-		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
-			event.currentTarget = matched.elem;
-
-			j = 0;
-			while ( ( handleObj = matched.handlers[ j++ ] ) &&
-				!event.isImmediatePropagationStopped() ) {
-
-				// If the event is namespaced, then each handler is only invoked if it is
-				// specially universal or its namespaces are a superset of the event's.
-				if ( !event.rnamespace || handleObj.namespace === false ||
-					event.rnamespace.test( handleObj.namespace ) ) {
-
-					event.handleObj = handleObj;
-					event.data = handleObj.data;
-
-					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
-						handleObj.handler ).apply( matched.elem, args );
-
-					if ( ret !== undefined ) {
-						if ( ( event.result = ret ) === false ) {
-							event.preventDefault();
-							event.stopPropagation();
-						}
-					}
-				}
-			}
-		}
-
-		// Call the postDispatch hook for the mapped type
-		if ( special.postDispatch ) {
-			special.postDispatch.call( this, event );
-		}
-
-		return event.result;
-	},
-
-	handlers: function( event, handlers ) {
-		var i, handleObj, sel, matchedHandlers, matchedSelectors,
-			handlerQueue = [],
-			delegateCount = handlers.delegateCount,
-			cur = event.target;
-
-		// Find delegate handlers
-		if ( delegateCount &&
-
-			// Support: IE <=9
-			// Black-hole SVG <use> instance trees (trac-13180)
-			cur.nodeType &&
-
-			// Support: Firefox <=42
-			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
-			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
-			// Support: IE 11 only
-			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
-			!( event.type === "click" && event.button >= 1 ) ) {
-
-			for ( ; cur !== this; cur = cur.parentNode || this ) {
-
-				// Don't check non-elements (#13208)
-				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
-				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
-					matchedHandlers = [];
-					matchedSelectors = {};
-					for ( i = 0; i < delegateCount; i++ ) {
-						handleObj = handlers[ i ];
-
-						// Don't conflict with Object.prototype properties (#13203)
-						sel = handleObj.selector + " ";
-
-						if ( matchedSelectors[ sel ] === undefined ) {
-							matchedSelectors[ sel ] = handleObj.needsContext ?
-								jQuery( sel, this ).index( cur ) > -1 :
-								jQuery.find( sel, this, null, [ cur ] ).length;
-						}
-						if ( matchedSelectors[ sel ] ) {
-							matchedHandlers.push( handleObj );
-						}
-					}
-					if ( matchedHandlers.length ) {
-						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
-					}
-				}
-			}
-		}
-
-		// Add the remaining (directly-bound) handlers
-		cur = this;
-		if ( delegateCount < handlers.length ) {
-			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
-		}
-
-		return handlerQueue;
-	},
-
-	addProp: function( name, hook ) {
-		Object.defineProperty( jQuery.Event.prototype, name, {
-			enumerable: true,
-			configurable: true,
-
-			get: isFunction( hook ) ?
-				function() {
-					if ( this.originalEvent ) {
-							return hook( this.originalEvent );
-					}
-				} :
-				function() {
-					if ( this.originalEvent ) {
-							return this.originalEvent[ name ];
-					}
-				},
-
-			set: function( value ) {
-				Object.defineProperty( this, name, {
-					enumerable: true,
-					configurable: true,
-					writable: true,
-					value: value
-				} );
-			}
-		} );
-	},
-
-	fix: function( originalEvent ) {
-		return originalEvent[ jQuery.expando ] ?
-			originalEvent :
-			new jQuery.Event( originalEvent );
-	},
-
-	special: {
-		load: {
-
-			// Prevent triggered image.load events from bubbling to window.load
-			noBubble: true
-		},
-		click: {
-
-			// Utilize native event to ensure correct state for checkable inputs
-			setup: function( data ) {
-
-				// For mutual compressibility with _default, replace `this` access with a local var.
-				// `|| data` is dead code meant only to preserve the variable through minification.
-				var el = this || data;
-
-				// Claim the first handler
-				if ( rcheckableType.test( el.type ) &&
-					el.click && nodeName( el, "input" ) ) {
-
-					// dataPriv.set( el, "click", ... )
-					leverageNative( el, "click", returnTrue );
-				}
-
-				// Return false to allow normal processing in the caller
-				return false;
-			},
-			trigger: function( data ) {
-
-				// For mutual compressibility with _default, replace `this` access with a local var.
-				// `|| data` is dead code meant only to preserve the variable through minification.
-				var el = this || data;
-
-				// Force setup before triggering a click
-				if ( rcheckableType.test( el.type ) &&
-					el.click && nodeName( el, "input" ) ) {
-
-					leverageNative( el, "click" );
-				}
-
-				// Return non-false to allow normal event-path propagation
-				return true;
-			},
-
-			// For cross-browser consistency, suppress native .click() on links
-			// Also prevent it if we're currently inside a leveraged native-event stack
-			_default: function( event ) {
-				var target = event.target;
-				return rcheckableType.test( target.type ) &&
-					target.click && nodeName( target, "input" ) &&
-					dataPriv.get( target, "click" ) ||
-					nodeName( target, "a" );
-			}
-		},
-
-		beforeunload: {
-			postDispatch: function( event ) {
-
-				// Support: Firefox 20+
-				// Firefox doesn't alert if the returnValue field is not set.
-				if ( event.result !== undefined && event.originalEvent ) {
-					event.originalEvent.returnValue = event.result;
-				}
-			}
-		}
-	}
-};
-
-// Ensure the presence of an event listener that handles manually-triggered
-// synthetic events by interrupting progress until reinvoked in response to
-// *native* events that it fires directly, ensuring that state changes have
-// already occurred before other listeners are invoked.
-function leverageNative( el, type, expectSync ) {
-
-	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
-	if ( !expectSync ) {
-		if ( dataPriv.get( el, type ) === undefined ) {
-			jQuery.event.add( el, type, returnTrue );
-		}
-		return;
-	}
-
-	// Register the controller as a special universal handler for all event namespaces
-	dataPriv.set( el, type, false );
-	jQuery.event.add( el, type, {
-		namespace: false,
-		handler: function( event ) {
-			var notAsync, result,
-				saved = dataPriv.get( this, type );
-
-			if ( ( event.isTrigger & 1 ) && this[ type ] ) {
-
-				// Interrupt processing of the outer synthetic .trigger()ed event
-				// Saved data should be false in such cases, but might be a leftover capture object
-				// from an async native handler (gh-4350)
-				if ( !saved.length ) {
-
-					// Store arguments for use when handling the inner native event
-					// There will always be at least one argument (an event object), so this array
-					// will not be confused with a leftover capture object.
-					saved = slice.call( arguments );
-					dataPriv.set( this, type, saved );
-
-					// Trigger the native event and capture its result
-					// Support: IE <=9 - 11+
-					// focus() and blur() are asynchronous
-					notAsync = expectSync( this, type );
-					this[ type ]();
-					result = dataPriv.get( this, type );
-					if ( saved !== result || notAsync ) {
-						dataPriv.set( this, type, false );
-					} else {
-						result = {};
-					}
-					if ( saved !== result ) {
-
-						// Cancel the outer synthetic event
-						event.stopImmediatePropagation();
-						event.preventDefault();
-						return result.value;
-					}
-
-				// If this is an inner synthetic event for an event with a bubbling surrogate
-				// (focus or blur), assume that the surrogate already propagated from triggering the
-				// native event and prevent that from happening again here.
-				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
-				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
-				// less bad than duplication.
-				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
-					event.stopPropagation();
-				}
-
-			// If this is a native event triggered above, everything is now in order
-			// Fire an inner synthetic event with the original arguments
-			} else if ( saved.length ) {
-
-				// ...and capture the result
-				dataPriv.set( this, type, {
-					value: jQuery.event.trigger(
-
-						// Support: IE <=9 - 11+
-						// Extend with the prototype to reset the above stopImmediatePropagation()
-						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
-						saved.slice( 1 ),
-						this
-					)
-				} );
-
-				// Abort handling of the native event
-				event.stopImmediatePropagation();
-			}
-		}
-	} );
-}
-
-jQuery.removeEvent = function( elem, type, handle ) {
-
-	// This "if" is needed for plain objects
-	if ( elem.removeEventListener ) {
-		elem.removeEventListener( type, handle );
-	}
-};
-
-jQuery.Event = function( src, props ) {
-
-	// Allow instantiation without the 'new' keyword
-	if ( !( this instanceof jQuery.Event ) ) {
-		return new jQuery.Event( src, props );
-	}
-
-	// Event object
-	if ( src && src.type ) {
-		this.originalEvent = src;
-		this.type = src.type;
-
-		// Events bubbling up the document may have been marked as prevented
-		// by a handler lower down the tree; reflect the correct value.
-		this.isDefaultPrevented = src.defaultPrevented ||
-				src.defaultPrevented === undefined &&
-
-				// Support: Android <=2.3 only
-				src.returnValue === false ?
-			returnTrue :
-			returnFalse;
-
-		// Create target properties
-		// Support: Safari <=6 - 7 only
-		// Target should not be a text node (#504, #13143)
-		this.target = ( src.target && src.target.nodeType === 3 ) ?
-			src.target.parentNode :
-			src.target;
-
-		this.currentTarget = src.currentTarget;
-		this.relatedTarget = src.relatedTarget;
-
-	// Event type
-	} else {
-		this.type = src;
-	}
-
-	// Put explicitly provided properties onto the event object
-	if ( props ) {
-		jQuery.extend( this, props );
-	}
-
-	// Create a timestamp if incoming event doesn't have one
-	this.timeStamp = src && src.timeStamp || Date.now();
-
-	// Mark it as fixed
-	this[ jQuery.expando ] = true;
-};
-
-// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
-// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
-jQuery.Event.prototype = {
-	constructor: jQuery.Event,
-	isDefaultPrevented: returnFalse,
-	isPropagationStopped: returnFalse,
-	isImmediatePropagationStopped: returnFalse,
-	isSimulated: false,
-
-	preventDefault: function() {
-		var e = this.originalEvent;
-
-		this.isDefaultPrevented = returnTrue;
-
-		if ( e && !this.isSimulated ) {
-			e.preventDefault();
-		}
-	},
-	stopPropagation: function() {
-		var e = this.originalEvent;
-
-		this.isPropagationStopped = returnTrue;
-
-		if ( e && !this.isSimulated ) {
-			e.stopPropagation();
-		}
-	},
-	stopImmediatePropagation: function() {
-		var e = this.originalEvent;
-
-		this.isImmediatePropagationStopped = returnTrue;
-
-		if ( e && !this.isSimulated ) {
-			e.stopImmediatePropagation();
-		}
-
-		this.stopPropagation();
-	}
-};
-
-// Includes all common event props including KeyEvent and MouseEvent specific props
-jQuery.each( {
-	altKey: true,
-	bubbles: true,
-	cancelable: true,
-	changedTouches: true,
-	ctrlKey: true,
-	detail: true,
-	eventPhase: true,
-	metaKey: true,
-	pageX: true,
-	pageY: true,
-	shiftKey: true,
-	view: true,
-	"char": true,
-	code: true,
-	charCode: true,
-	key: true,
-	keyCode: true,
-	button: true,
-	buttons: true,
-	clientX: true,
-	clientY: true,
-	offsetX: true,
-	offsetY: true,
-	pointerId: true,
-	pointerType: true,
-	screenX: true,
-	screenY: true,
-	targetTouches: true,
-	toElement: true,
-	touches: true,
-
-	which: function( event ) {
-		var button = event.button;
-
-		// Add which for key events
-		if ( event.which == null && rkeyEvent.test( event.type ) ) {
-			return event.charCode != null ? event.charCode : event.keyCode;
-		}
-
-		// Add which for click: 1 === left; 2 === middle; 3 === right
-		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
-			if ( button & 1 ) {
-				return 1;
-			}
-
-			if ( button & 2 ) {
-				return 3;
-			}
-
-			if ( button & 4 ) {
-				return 2;
-			}
-
-			return 0;
-		}
-
-		return event.which;
-	}
-}, jQuery.event.addProp );
-
-jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
-	jQuery.event.special[ type ] = {
-
-		// Utilize native event if possible so blur/focus sequence is correct
-		setup: function() {
-
-			// Claim the first handler
-			// dataPriv.set( this, "focus", ... )
-			// dataPriv.set( this, "blur", ... )
-			leverageNative( this, type, expectSync );
-
-			// Return false to allow normal processing in the caller
-			return false;
-		},
-		trigger: function() {
-
-			// Force setup before trigger
-			leverageNative( this, type );
-
-			// Return non-false to allow normal event-path propagation
-			return true;
-		},
-
-		delegateType: delegateType
-	};
-} );
-
-// Create mouseenter/leave events using mouseover/out and event-time checks
-// so that event delegation works in jQuery.
-// Do the same for pointerenter/pointerleave and pointerover/pointerout
-//
-// Support: Safari 7 only
-// Safari sends mouseenter too often; see:
-// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
-// for the description of the bug (it existed in older Chrome versions as well).
-jQuery.each( {
-	mouseenter: "mouseover",
-	mouseleave: "mouseout",
-	pointerenter: "pointerover",
-	pointerleave: "pointerout"
-}, function( orig, fix ) {
-	jQuery.event.special[ orig ] = {
-		delegateType: fix,
-		bindType: fix,
-
-		handle: function( event ) {
-			var ret,
-				target = this,
-				related = event.relatedTarget,
-				handleObj = event.handleObj;
-
-			// For mouseenter/leave call the handler if related is outside the target.
-			// NB: No relatedTarget if the mouse left/entered the browser window
-			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
-				event.type = handleObj.origType;
-				ret = handleObj.handler.apply( this, arguments );
-				event.type = fix;
-			}
-			return ret;
-		}
-	};
-} );
-
-jQuery.fn.extend( {
-
-	on: function( types, selector, data, fn ) {
-		return on( this, types, selector, data, fn );
-	},
-	one: function( types, selector, data, fn ) {
-		return on( this, types, selector, data, fn, 1 );
-	},
-	off: function( types, selector, fn ) {
-		var handleObj, type;
-		if ( types && types.preventDefault && types.handleObj ) {
-
-			// ( event )  dispatched jQuery.Event
-			handleObj = types.handleObj;
-			jQuery( types.delegateTarget ).off(
-				handleObj.namespace ?
-					handleObj.origType + "." + handleObj.namespace :
-					handleObj.origType,
-				handleObj.selector,
-				handleObj.handler
-			);
-			return this;
-		}
-		if ( typeof types === "object" ) {
-
-			// ( types-object [, selector] )
-			for ( type in types ) {
-				this.off( type, selector, types[ type ] );
-			}
-			return this;
-		}
-		if ( selector === false || typeof selector === "function" ) {
-
-			// ( types [, fn] )
-			fn = selector;
-			selector = undefined;
-		}
-		if ( fn === false ) {
-			fn = returnFalse;
-		}
-		return this.each( function() {
-			jQuery.event.remove( this, types, fn, selector );
-		} );
-	}
-} );
-
-
-var
-
-	// Support: IE <=10 - 11, Edge 12 - 13 only
-	// In IE/Edge using regex groups here causes severe slowdowns.
-	// See https://connect.microsoft.com/IE/feedback/details/1736512/
-	rnoInnerhtml = /<script|<style|<link/i,
-
-	// checked="checked" or checked
-	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
-	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
-
-// Prefer a tbody over its parent table for containing new rows
-function manipulationTarget( elem, content ) {
-	if ( nodeName( elem, "table" ) &&
-		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {
-
-		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
-	}
-
-	return elem;
-}
-
-// Replace/restore the type attribute of script elements for safe DOM manipulation
-function disableScript( elem ) {
-	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
-	return elem;
-}
-function restoreScript( elem ) {
-	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
-		elem.type = elem.type.slice( 5 );
-	} else {
-		elem.removeAttribute( "type" );
-	}
-
-	return elem;
-}
-
-function cloneCopyEvent( src, dest ) {
-	var i, l, type, pdataOld, udataOld, udataCur, events;
-
-	if ( dest.nodeType !== 1 ) {
-		return;
-	}
-
-	// 1. Copy private data: events, handlers, etc.
-	if ( dataPriv.hasData( src ) ) {
-		pdataOld = dataPriv.get( src );
-		events = pdataOld.events;
-
-		if ( events ) {
-			dataPriv.remove( dest, "handle events" );
-
-			for ( type in events ) {
-				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
-					jQuery.event.add( dest, type, events[ type ][ i ] );
-				}
-			}
-		}
-	}
-
-	// 2. Copy user data
-	if ( dataUser.hasData( src ) ) {
-		udataOld = dataUser.access( src );
-		udataCur = jQuery.extend( {}, udataOld );
-
-		dataUser.set( dest, udataCur );
-	}
-}
-
-// Fix IE bugs, see support tests
-function fixInput( src, dest ) {
-	var nodeName = dest.nodeName.toLowerCase();
-
-	// Fails to persist the checked state of a cloned checkbox or radio button.
-	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
-		dest.checked = src.checked;
-
-	// Fails to return the selected option to the default selected state when cloning options
-	} else if ( nodeName === "input" || nodeName === "textarea" ) {
-		dest.defaultValue = src.defaultValue;
-	}
-}
-
-function domManip( collection, args, callback, ignored ) {
-
-	// Flatten any nested arrays
-	args = flat( args );
-
-	var fragment, first, scripts, hasScripts, node, doc,
-		i = 0,
-		l = collection.length,
-		iNoClone = l - 1,
-		value = args[ 0 ],
-		valueIsFunction = isFunction( value );
-
-	// We can't cloneNode fragments that contain checked, in WebKit
-	if ( valueIsFunction ||
-			( l > 1 && typeof value === "string" &&
-				!support.checkClone && rchecked.test( value ) ) ) {
-		return collection.each( function( index ) {
-			var self = collection.eq( index );
-			if ( valueIsFunction ) {
-				args[ 0 ] = value.call( this, index, self.html() );
-			}
-			domManip( self, args, callback, ignored );
-		} );
-	}
-
-	if ( l ) {
-		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
-		first = fragment.firstChild;
-
-		if ( fragment.childNodes.length === 1 ) {
-			fragment = first;
-		}
-
-		// Require either new content or an interest in ignored elements to invoke the callback
-		if ( first || ignored ) {
-			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
-			hasScripts = scripts.length;
-
-			// Use the original fragment for the last item
-			// instead of the first because it can end up
-			// being emptied incorrectly in certain situations (#8070).
-			for ( ; i < l; i++ ) {
-				node = fragment;
-
-				if ( i !== iNoClone ) {
-					node = jQuery.clone( node, true, true );
-
-					// Keep references to cloned scripts for later restoration
-					if ( hasScripts ) {
-
-						// Support: Android <=4.0 only, PhantomJS 1 only
-						// push.apply(_, arraylike) throws on ancient WebKit
-						jQuery.merge( scripts, getAll( node, "script" ) );
-					}
-				}
-
-				callback.call( collection[ i ], node, i );
-			}
-
-			if ( hasScripts ) {
-				doc = scripts[ scripts.length - 1 ].ownerDocument;
-
-				// Reenable scripts
-				jQuery.map( scripts, restoreScript );
-
-				// Evaluate executable scripts on first document insertion
-				for ( i = 0; i < hasScripts; i++ ) {
-					node = scripts[ i ];
-					if ( rscriptType.test( node.type || "" ) &&
-						!dataPriv.access( node, "globalEval" ) &&
-						jQuery.contains( doc, node ) ) {
-
-						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {
-
-							// Optional AJAX dependency, but won't run scripts if not present
-							if ( jQuery._evalUrl && !node.noModule ) {
-								jQuery._evalUrl( node.src, {
-									nonce: node.nonce || node.getAttribute( "nonce" )
-								}, doc );
-							}
-						} else {
-							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
-						}
-					}
-				}
-			}
-		}
-	}
-
-	return collection;
-}
-
-function remove( elem, selector, keepData ) {
-	var node,
-		nodes = selector ? jQuery.filter( selector, elem ) : elem,
-		i = 0;
-
-	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
-		if ( !keepData && node.nodeType === 1 ) {
-			jQuery.cleanData( getAll( node ) );
-		}
-
-		if ( node.parentNode ) {
-			if ( keepData && isAttached( node ) ) {
-				setGlobalEval( getAll( node, "script" ) );
-			}
-			node.parentNode.removeChild( node );
-		}
-	}
-
-	return elem;
-}
-
-jQuery.extend( {
-	htmlPrefilter: function( html ) {
-		return html;
-	},
-
-	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
-		var i, l, srcElements, destElements,
-			clone = elem.cloneNode( true ),
-			inPage = isAttached( elem );
-
-		// Fix IE cloning issues
-		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
-				!jQuery.isXMLDoc( elem ) ) {
-
-			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
-			destElements = getAll( clone );
-			srcElements = getAll( elem );
-
-			for ( i = 0, l = srcElements.length; i < l; i++ ) {
-				fixInput( srcElements[ i ], destElements[ i ] );
-			}
-		}
-
-		// Copy the events from the original to the clone
-		if ( dataAndEvents ) {
-			if ( deepDataAndEvents ) {
-				srcElements = srcElements || getAll( elem );
-				destElements = destElements || getAll( clone );
-
-				for ( i = 0, l = srcElements.length; i < l; i++ ) {
-					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
-				}
-			} else {
-				cloneCopyEvent( elem, clone );
-			}
-		}
-
-		// Preserve script evaluation history
-		destElements = getAll( clone, "script" );
-		if ( destElements.length > 0 ) {
-			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
-		}
-
-		// Return the cloned set
-		return clone;
-	},
-
-	cleanData: function( elems ) {
-		var data, elem, type,
-			special = jQuery.event.special,
-			i = 0;
-
-		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
-			if ( acceptData( elem ) ) {
-				if ( ( data = elem[ dataPriv.expando ] ) ) {
-					if ( data.events ) {
-						for ( type in data.events ) {
-							if ( special[ type ] ) {
-								jQuery.event.remove( elem, type );
-
-							// This is a shortcut to avoid jQuery.event.remove's overhead
-							} else {
-								jQuery.removeEvent( elem, type, data.handle );
-							}
-						}
-					}
-
-					// Support: Chrome <=35 - 45+
-					// Assign undefined instead of using delete, see Data#remove
-					elem[ dataPriv.expando ] = undefined;
-				}
-				if ( elem[ dataUser.expando ] ) {
-
-					// Support: Chrome <=35 - 45+
-					// Assign undefined instead of using delete, see Data#remove
-					elem[ dataUser.expando ] = undefined;
-				}
-			}
-		}
-	}
-} );
-
-jQuery.fn.extend( {
-	detach: function( selector ) {
-		return remove( this, selector, true );
-	},
-
-	remove: function( selector ) {
-		return remove( this, selector );
-	},
-
-	text: function( value ) {
-		return access( this, function( value ) {
-			return value === undefined ?
-				jQuery.text( this ) :
-				this.empty().each( function() {
-					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
-						this.textContent = value;
-					}
-				} );
-		}, null, value, arguments.length );
-	},
-
-	append: function() {
-		return domManip( this, arguments, function( elem ) {
-			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
-				var target = manipulationTarget( this, elem );
-				target.appendChild( elem );
-			}
-		} );
-	},
-
-	prepend: function() {
-		return domManip( this, arguments, function( elem ) {
-			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
-				var target = manipulationTarget( this, elem );
-				target.insertBefore( elem, target.firstChild );
-			}
-		} );
-	},
-
-	before: function() {
-		return domManip( this, arguments, function( elem ) {
-			if ( this.parentNode ) {
-				this.parentNode.insertBefore( elem, this );
-			}
-		} );
-	},
-
-	after: function() {
-		return domManip( this, arguments, function( elem ) {
-			if ( this.parentNode ) {
-				this.parentNode.insertBefore( elem, this.nextSibling );
-			}
-		} );
-	},
-
-	empty: function() {
-		var elem,
-			i = 0;
-
-		for ( ; ( elem = this[ i ] ) != null; i++ ) {
-			if ( elem.nodeType === 1 ) {
-
-				// Prevent memory leaks
-				jQuery.cleanData( getAll( elem, false ) );
-
-				// Remove any remaining nodes
-				elem.textContent = "";
-			}
-		}
-
-		return this;
-	},
-
-	clone: function( dataAndEvents, deepDataAndEvents ) {
-		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
-		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
-
-		return this.map( function() {
-			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
-		} );
-	},
-
-	html: function( value ) {
-		return access( this, function( value ) {
-			var elem = this[ 0 ] || {},
-				i = 0,
-				l = this.length;
-
-			if ( value === undefined && elem.nodeType === 1 ) {
-				return elem.innerHTML;
-			}
-
-			// See if we can take a shortcut and just use innerHTML
-			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
-				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {
-
-				value = jQuery.htmlPrefilter( value );
-
-				try {
-					for ( ; i < l; i++ ) {
-						elem = this[ i ] || {};
-
-						// Remove element nodes and prevent memory leaks
-						if ( elem.nodeType === 1 ) {
-							jQuery.cleanData( getAll( elem, false ) );
-							elem.innerHTML = value;
-						}
-					}
-
-					elem = 0;
-
-				// If using innerHTML throws an exception, use the fallback method
-				} catch ( e ) {}
-			}
-
-			if ( elem ) {
-				this.empty().append( value );
-			}
-		}, null, value, arguments.length );
-	},
-
-	replaceWith: function() {
-		var ignored = [];
-
-		// Make the changes, replacing each non-ignored context element with the new content
-		return domManip( this, arguments, function( elem ) {
-			var parent = this.parentNode;
-
-			if ( jQuery.inArray( this, ignored ) < 0 ) {
-				jQuery.cleanData( getAll( this ) );
-				if ( parent ) {
-					parent.replaceChild( elem, this );
-				}
-			}
-
-		// Force callback invocation
-		}, ignored );
-	}
-} );
-
-jQuery.each( {
-	appendTo: "append",
-	prependTo: "prepend",
-	insertBefore: "before",
-	insertAfter: "after",
-	replaceAll: "replaceWith"
-}, function( name, original ) {
-	jQuery.fn[ name ] = function( selector ) {
-		var elems,
-			ret = [],
-			insert = jQuery( selector ),
-			last = insert.length - 1,
-			i = 0;
-
-		for ( ; i <= last; i++ ) {
-			elems = i === last ? this : this.clone( true );
-			jQuery( insert[ i ] )[ original ]( elems );
-
-			// Support: Android <=4.0 only, PhantomJS 1 only
-			// .get() because push.apply(_, arraylike) throws on ancient WebKit
-			push.apply( ret, elems.get() );
-		}
-
-		return this.pushStack( ret );
-	};
-} );
-var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );
-
-var getStyles = function( elem ) {
-
-		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
-		// IE throws on elements created in popups
-		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
-		var view = elem.ownerDocument.defaultView;
-
-		if ( !view || !view.opener ) {
-			view = window;
-		}
-
-		return view.getComputedStyle( elem );
-	};
-
-var swap = function( elem, options, callback ) {
-	var ret, name,
-		old = {};
-
-	// Remember the old values, and insert the new ones
-	for ( name in options ) {
-		old[ name ] = elem.style[ name ];
-		elem.style[ name ] = options[ name ];
-	}
-
-	ret = callback.call( elem );
-
-	// Revert the old values
-	for ( name in options ) {
-		elem.style[ name ] = old[ name ];
-	}
-
-	return ret;
-};
-
-
-var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );
-
-
-
-( function() {
-
-	// Executing both pixelPosition & boxSizingReliable tests require only one layout
-	// so they're executed at the same time to save the second computation.
-	function computeStyleTests() {
-
-		// This is a singleton, we need to execute it only once
-		if ( !div ) {
-			return;
-		}
-
-		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
-			"margin-top:1px;padding:0;border:0";
-		div.style.cssText =
-			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
-			"margin:auto;border:1px;padding:1px;" +
-			"width:60%;top:1%";
-		documentElement.appendChild( container ).appendChild( div );
-
-		var divStyle = window.getComputedStyle( div );
-		pixelPositionVal = divStyle.top !== "1%";
-
-		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
-		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;
-
-		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
-		// Some styles come back with percentage values, even though they shouldn't
-		div.style.right = "60%";
-		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;
-
-		// Support: IE 9 - 11 only
-		// Detect misreporting of content dimensions for box-sizing:border-box elements
-		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;
-
-		// Support: IE 9 only
-		// Detect overflow:scroll screwiness (gh-3699)
-		// Support: Chrome <=64
-		// Don't get tricked when zoom affects offsetWidth (gh-4029)
-		div.style.position = "absolute";
-		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;
-
-		documentElement.removeChild( container );
-
-		// Nullify the div so it wouldn't be stored in the memory and
-		// it will also be a sign that checks already performed
-		div = null;
-	}
-
-	function roundPixelMeasures( measure ) {
-		return Math.round( parseFloat( measure ) );
-	}
-
-	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
-		reliableTrDimensionsVal, reliableMarginLeftVal,
-		container = document.createElement( "div" ),
-		div = document.createElement( "div" );
-
-	// Finish early in limited (non-browser) environments
-	if ( !div.style ) {
-		return;
-	}
-
-	// Support: IE <=9 - 11 only
-	// Style of cloned element affects source element cloned (#8908)
-	div.style.backgroundClip = "content-box";
-	div.cloneNode( true ).style.backgroundClip = "";
-	support.clearCloneStyle = div.style.backgroundClip === "content-box";
-
-	jQuery.extend( support, {
-		boxSizingReliable: function() {
-			computeStyleTests();
-			return boxSizingReliableVal;
-		},
-		pixelBoxStyles: function() {
-			computeStyleTests();
-			return pixelBoxStylesVal;
-		},
-		pixelPosition: function() {
-			computeStyleTests();
-			return pixelPositionVal;
-		},
-		reliableMarginLeft: function() {
-			computeStyleTests();
-			return reliableMarginLeftVal;
-		},
-		scrollboxSize: function() {
-			computeStyleTests();
-			return scrollboxSizeVal;
-		},
-
-		// Support: IE 9 - 11+, Edge 15 - 18+
-		// IE/Edge misreport `getComputedStyle` of table rows with width/height
-		// set in CSS while `offset*` properties report correct values.
-		// Behavior in IE 9 is more subtle than in newer versions & it passes
-		// some versions of this test; make sure not to make it pass there!
-		reliableTrDimensions: function() {
-			var table, tr, trChild, trStyle;
-			if ( reliableTrDimensionsVal == null ) {
-				table = document.createElement( "table" );
-				tr = document.createElement( "tr" );
-				trChild = document.createElement( "div" );
-
-				table.style.cssText = "position:absolute;left:-11111px";
-				tr.style.height = "1px";
-				trChild.style.height = "9px";
-
-				documentElement
-					.appendChild( table )
-					.appendChild( tr )
-					.appendChild( trChild );
-
-				trStyle = window.getComputedStyle( tr );
-				reliableTrDimensionsVal = parseInt( trStyle.height ) > 3;
-
-				documentElement.removeChild( table );
-			}
-			return reliableTrDimensionsVal;
-		}
-	} );
-} )();
-
-
-function curCSS( elem, name, computed ) {
-	var width, minWidth, maxWidth, ret,
-
-		// Support: Firefox 51+
-		// Retrieving style before computed somehow
-		// fixes an issue with getting wrong values
-		// on detached elements
-		style = elem.style;
-
-	computed = computed || getStyles( elem );
-
-	// getPropertyValue is needed for:
-	//   .css('filter') (IE 9 only, #12537)
-	//   .css('--customProperty) (#3144)
-	if ( computed ) {
-		ret = computed.getPropertyValue( name ) || computed[ name ];
-
-		if ( ret === "" && !isAttached( elem ) ) {
-			ret = jQuery.style( elem, name );
-		}
-
-		// A tribute to the "awesome hack by Dean Edwards"
-		// Android Browser returns percentage for some values,
-		// but width seems to be reliably pixels.
-		// This is against the CSSOM draft spec:
-		// https://drafts.csswg.org/cssom/#resolved-values
-		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {
-
-			// Remember the original values
-			width = style.width;
-			minWidth = style.minWidth;
-			maxWidth = style.maxWidth;
-
-			// Put in the new values to get a computed value out
-			style.minWidth = style.maxWidth = style.width = ret;
-			ret = computed.width;
-
-			// Revert the changed values
-			style.width = width;
-			style.minWidth = minWidth;
-			style.maxWidth = maxWidth;
-		}
-	}
-
-	return ret !== undefined ?
-
-		// Support: IE <=9 - 11 only
-		// IE returns zIndex value as an integer.
-		ret + "" :
-		ret;
-}
-
-
-function addGetHookIf( conditionFn, hookFn ) {
-
-	// Define the hook, we'll check on the first run if it's really needed.
-	return {
-		get: function() {
-			if ( conditionFn() ) {
-
-				// Hook not needed (or it's not possible to use it due
-				// to missing dependency), remove it.
-				delete this.get;
-				return;
-			}
-
-			// Hook needed; redefine it so that the support test is not executed again.
-			return ( this.get = hookFn ).apply( this, arguments );
-		}
-	};
-}
-
-
-var cssPrefixes = [ "Webkit", "Moz", "ms" ],
-	emptyStyle = document.createElement( "div" ).style,
-	vendorProps = {};
-
-// Return a vendor-prefixed property or undefined
-function vendorPropName( name ) {
-
-	// Check for vendor prefixed names
-	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
-		i = cssPrefixes.length;
-
-	while ( i-- ) {
-		name = cssPrefixes[ i ] + capName;
-		if ( name in emptyStyle ) {
-			return name;
-		}
-	}
-}
-
-// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
-function finalPropName( name ) {
-	var final = jQuery.cssProps[ name ] || vendorProps[ name ];
-
-	if ( final ) {
-		return final;
-	}
-	if ( name in emptyStyle ) {
-		return name;
-	}
-	return vendorProps[ name ] = vendorPropName( name ) || name;
-}
-
-
-var
-
-	// Swappable if display is none or starts with table
-	// except "table", "table-cell", or "table-caption"
-	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
-	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
-	rcustomProp = /^--/,
-	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
-	cssNormalTransform = {
-		letterSpacing: "0",
-		fontWeight: "400"
-	};
-
-function setPositiveNumber( _elem, value, subtract ) {
-
-	// Any relative (+/-) values have already been
-	// normalized at this point
-	var matches = rcssNum.exec( value );
-	return matches ?
-
-		// Guard against undefined "subtract", e.g., when used as in cssHooks
-		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
-		value;
-}
-
-function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
-	var i = dimension === "width" ? 1 : 0,
-		extra = 0,
-		delta = 0;
-
-	// Adjustment may not be necessary
-	if ( box === ( isBorderBox ? "border" : "content" ) ) {
-		return 0;
-	}
-
-	for ( ; i < 4; i += 2 ) {
-
-		// Both box models exclude margin
-		if ( box === "margin" ) {
-			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
-		}
-
-		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
-		if ( !isBorderBox ) {
-
-			// Add padding
-			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
-
-			// For "border" or "margin", add border
-			if ( box !== "padding" ) {
-				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
-
-			// But still keep track of it otherwise
-			} else {
-				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
-			}
-
-		// If we get here with a border-box (content + padding + border), we're seeking "content" or
-		// "padding" or "margin"
-		} else {
-
-			// For "content", subtract padding
-			if ( box === "content" ) {
-				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
-			}
-
-			// For "content" or "padding", subtract border
-			if ( box !== "margin" ) {
-				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
-			}
-		}
-	}
-
-	// Account for positive content-box scroll gutter when requested by providing computedVal
-	if ( !isBorderBox && computedVal >= 0 ) {
-
-		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
-		// Assuming integer scroll gutter, subtract the rest and round down
-		delta += Math.max( 0, Math.ceil(
-			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
-			computedVal -
-			delta -
-			extra -
-			0.5
-
-		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
-		// Use an explicit zero to avoid NaN (gh-3964)
-		) ) || 0;
-	}
-
-	return delta;
-}
-
-function getWidthOrHeight( elem, dimension, extra ) {
-
-	// Start with computed style
-	var styles = getStyles( elem ),
-
-		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
-		// Fake content-box until we know it's needed to know the true value.
-		boxSizingNeeded = !support.boxSizingReliable() || extra,
-		isBorderBox = boxSizingNeeded &&
-			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
-		valueIsBorderBox = isBorderBox,
-
-		val = curCSS( elem, dimension, styles ),
-		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );
-
-	// Support: Firefox <=54
-	// Return a confounding non-pixel value or feign ignorance, as appropriate.
-	if ( rnumnonpx.test( val ) ) {
-		if ( !extra ) {
-			return val;
-		}
-		val = "auto";
-	}
-
-
-	// Support: IE 9 - 11 only
-	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
-	// In those cases, the computed value can be trusted to be border-box.
-	if ( ( !support.boxSizingReliable() && isBorderBox ||
-
-		// Support: IE 10 - 11+, Edge 15 - 18+
-		// IE/Edge misreport `getComputedStyle` of table rows with width/height
-		// set in CSS while `offset*` properties report correct values.
-		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
-		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||
-
-		// Fall back to offsetWidth/offsetHeight when value is "auto"
-		// This happens for inline elements with no explicit setting (gh-3571)
-		val === "auto" ||
-
-		// Support: Android <=4.1 - 4.3 only
-		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
-		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&
-
-		// Make sure the element is visible & connected
-		elem.getClientRects().length ) {
-
-		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";
-
-		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
-		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
-		// retrieved value as a content box dimension.
-		valueIsBorderBox = offsetProp in elem;
-		if ( valueIsBorderBox ) {
-			val = elem[ offsetProp ];
-		}
-	}
-
-	// Normalize "" and auto
-	val = parseFloat( val ) || 0;
-
-	// Adjust for the element's box model
-	return ( val +
-		boxModelAdjustment(
-			elem,
-			dimension,
-			extra || ( isBorderBox ? "border" : "content" ),
-			valueIsBorderBox,
-			styles,
-
-			// Provide the current computed size to request scroll gutter calculation (gh-3589)
-			val
-		)
-	) + "px";
-}
-
-jQuery.extend( {
-
-	// Add in style property hooks for overriding the default
-	// behavior of getting and setting a style property
-	cssHooks: {
-		opacity: {
-			get: function( elem, computed ) {
-				if ( computed ) {
-
-					// We should always get a number back from opacity
-					var ret = curCSS( elem, "opacity" );
-					return ret === "" ? "1" : ret;
-				}
-			}
-		}
-	},
-
-	// Don't automatically add "px" to these possibly-unitless properties
-	cssNumber: {
-		"animationIterationCount": true,
-		"columnCount": true,
-		"fillOpacity": true,
-		"flexGrow": true,
-		"flexShrink": true,
-		"fontWeight": true,
-		"gridArea": true,
-		"gridColumn": true,
-		"gridColumnEnd": true,
-		"gridColumnStart": true,
-		"gridRow": true,
-		"gridRowEnd": true,
-		"gridRowStart": true,
-		"lineHeight": true,
-		"opacity": true,
-		"order": true,
-		"orphans": true,
-		"widows": true,
-		"zIndex": true,
-		"zoom": true
-	},
-
-	// Add in properties whose names you wish to fix before
-	// setting or getting the value
-	cssProps: {},
-
-	// Get and set the style property on a DOM Node
-	style: function( elem, name, value, extra ) {
-
-		// Don't set styles on text and comment nodes
-		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
-			return;
-		}
-
-		// Make sure that we're working with the right name
-		var ret, type, hooks,
-			origName = camelCase( name ),
-			isCustomProp = rcustomProp.test( name ),
-			style = elem.style;
-
-		// Make sure that we're working with the right name. We don't
-		// want to query the value if it is a CSS custom property
-		// since they are user-defined.
-		if ( !isCustomProp ) {
-			name = finalPropName( origName );
-		}
-
-		// Gets hook for the prefixed version, then unprefixed version
-		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
-
-		// Check if we're setting a value
-		if ( value !== undefined ) {
-			type = typeof value;
-
-			// Convert "+=" or "-=" to relative numbers (#7345)
-			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
-				value = adjustCSS( elem, name, ret );
-
-				// Fixes bug #9237
-				type = "number";
-			}
-
-			// Make sure that null and NaN values aren't set (#7116)
-			if ( value == null || value !== value ) {
-				return;
-			}
-
-			// If a number was passed in, add the unit (except for certain CSS properties)
-			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
-			// "px" to a few hardcoded values.
-			if ( type === "number" && !isCustomProp ) {
-				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
-			}
-
-			// background-* props affect original clone's values
-			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
-				style[ name ] = "inherit";
-			}
-
-			// If a hook was provided, use that value, otherwise just set the specified value
-			if ( !hooks || !( "set" in hooks ) ||
-				( value = hooks.set( elem, value, extra ) ) !== undefined ) {
-
-				if ( isCustomProp ) {
-					style.setProperty( name, value );
-				} else {
-					style[ name ] = value;
-				}
-			}
-
-		} else {
-
-			// If a hook was provided get the non-computed value from there
-			if ( hooks && "get" in hooks &&
-				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {
-
-				return ret;
-			}
-
-			// Otherwise just get the value from the style object
-			return style[ name ];
-		}
-	},
-
-	css: function( elem, name, extra, styles ) {
-		var val, num, hooks,
-			origName = camelCase( name ),
-			isCustomProp = rcustomProp.test( name );
-
-		// Make sure that we're working with the right name. We don't
-		// want to modify the value if it is a CSS custom property
-		// since they are user-defined.
-		if ( !isCustomProp ) {
-			name = finalPropName( origName );
-		}
-
-		// Try prefixed name followed by the unprefixed name
-		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
-
-		// If a hook was provided get the computed value from there
-		if ( hooks && "get" in hooks ) {
-			val = hooks.get( elem, true, extra );
-		}
-
-		// Otherwise, if a way to get the computed value exists, use that
-		if ( val === undefined ) {
-			val = curCSS( elem, name, styles );
-		}
-
-		// Convert "normal" to computed value
-		if ( val === "normal" && name in cssNormalTransform ) {
-			val = cssNormalTransform[ name ];
-		}
-
-		// Make numeric if forced or a qualifier was provided and val looks numeric
-		if ( extra === "" || extra ) {
-			num = parseFloat( val );
-			return extra === true || isFinite( num ) ? num || 0 : val;
-		}
-
-		return val;
-	}
-} );
-
-jQuery.each( [ "height", "width" ], function( _i, dimension ) {
-	jQuery.cssHooks[ dimension ] = {
-		get: function( elem, computed, extra ) {
-			if ( computed ) {
-
-				// Certain elements can have dimension info if we invisibly show them
-				// but it must have a current display style that would benefit
-				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
-
-					// Support: Safari 8+
-					// Table columns in Safari have non-zero offsetWidth & zero
-					// getBoundingClientRect().width unless display is changed.
-					// Support: IE <=11 only
-					// Running getBoundingClientRect on a disconnected node
-					// in IE throws an error.
-					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
-						swap( elem, cssShow, function() {
-							return getWidthOrHeight( elem, dimension, extra );
-						} ) :
-						getWidthOrHeight( elem, dimension, extra );
-			}
-		},
-
-		set: function( elem, value, extra ) {
-			var matches,
-				styles = getStyles( elem ),
-
-				// Only read styles.position if the test has a chance to fail
-				// to avoid forcing a reflow.
-				scrollboxSizeBuggy = !support.scrollboxSize() &&
-					styles.position === "absolute",
-
-				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
-				boxSizingNeeded = scrollboxSizeBuggy || extra,
-				isBorderBox = boxSizingNeeded &&
-					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
-				subtract = extra ?
-					boxModelAdjustment(
-						elem,
-						dimension,
-						extra,
-						isBorderBox,
-						styles
-					) :
-					0;
-
-			// Account for unreliable border-box dimensions by comparing offset* to computed and
-			// faking a content-box to get border and padding (gh-3699)
-			if ( isBorderBox && scrollboxSizeBuggy ) {
-				subtract -= Math.ceil(
-					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
-					parseFloat( styles[ dimension ] ) -
-					boxModelAdjustment( elem, dimension, "border", false, styles ) -
-					0.5
-				);
-			}
-
-			// Convert to pixels if value adjustment is needed
-			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
-				( matches[ 3 ] || "px" ) !== "px" ) {
-
-				elem.style[ dimension ] = value;
-				value = jQuery.css( elem, dimension );
-			}
-
-			return setPositiveNumber( elem, value, subtract );
-		}
-	};
-} );
-
-jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
-	function( elem, computed ) {
-		if ( computed ) {
-			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
-				elem.getBoundingClientRect().left -
-					swap( elem, { marginLeft: 0 }, function() {
-						return elem.getBoundingClientRect().left;
-					} )
-				) + "px";
-		}
-	}
-);
-
-// These hooks are used by animate to expand properties
-jQuery.each( {
-	margin: "",
-	padding: "",
-	border: "Width"
-}, function( prefix, suffix ) {
-	jQuery.cssHooks[ prefix + suffix ] = {
-		expand: function( value ) {
-			var i = 0,
-				expanded = {},
-
-				// Assumes a single number if not a string
-				parts = typeof value === "string" ? value.split( " " ) : [ value ];
-
-			for ( ; i < 4; i++ ) {
-				expanded[ prefix + cssExpand[ i ] + suffix ] =
-					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
-			}
-
-			return expanded;
-		}
-	};
-
-	if ( prefix !== "margin" ) {
-		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
-	}
-} );
-
-jQuery.fn.extend( {
-	css: function( name, value ) {
-		return access( this, function( elem, name, value ) {
-			var styles, len,
-				map = {},
-				i = 0;
-
-			if ( Array.isArray( name ) ) {
-				styles = getStyles( elem );
-				len = name.length;
-
-				for ( ; i < len; i++ ) {
-					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
-				}
-
-				return map;
-			}
-
-			return value !== undefined ?
-				jQuery.style( elem, name, value ) :
-				jQuery.css( elem, name );
-		}, name, value, arguments.length > 1 );
-	}
-} );
-
-
-function Tween( elem, options, prop, end, easing ) {
-	return new Tween.prototype.init( elem, options, prop, end, easing );
-}
-jQuery.Tween = Tween;
-
-Tween.prototype = {
-	constructor: Tween,
-	init: function( elem, options, prop, end, easing, unit ) {
-		this.elem = elem;
-		this.prop = prop;
-		this.easing = easing || jQuery.easing._default;
-		this.options = options;
-		this.start = this.now = this.cur();
-		this.end = end;
-		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
-	},
-	cur: function() {
-		var hooks = Tween.propHooks[ this.prop ];
-
-		return hooks && hooks.get ?
-			hooks.get( this ) :
-			Tween.propHooks._default.get( this );
-	},
-	run: function( percent ) {
-		var eased,
-			hooks = Tween.propHooks[ this.prop ];
-
-		if ( this.options.duration ) {
-			this.pos = eased = jQuery.easing[ this.easing ](
-				percent, this.options.duration * percent, 0, 1, this.options.duration
-			);
-		} else {
-			this.pos = eased = percent;
-		}
-		this.now = ( this.end - this.start ) * eased + this.start;
-
-		if ( this.options.step ) {
-			this.options.step.call( this.elem, this.now, this );
-		}
-
-		if ( hooks && hooks.set ) {
-			hooks.set( this );
-		} else {
-			Tween.propHooks._default.set( this );
-		}
-		return this;
-	}
-};
-
-Tween.prototype.init.prototype = Tween.prototype;
-
-Tween.propHooks = {
-	_default: {
-		get: function( tween ) {
-			var result;
-
-			// Use a property on the element directly when it is not a DOM element,
-			// or when there is no matching style property that exists.
-			if ( tween.elem.nodeType !== 1 ||
-				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
-				return tween.elem[ tween.prop ];
-			}
-
-			// Passing an empty string as a 3rd parameter to .css will automatically
-			// attempt a parseFloat and fallback to a string if the parse fails.
-			// Simple values such as "10px" are parsed to Float;
-			// complex values such as "rotate(1rad)" are returned as-is.
-			result = jQuery.css( tween.elem, tween.prop, "" );
-
-			// Empty strings, null, undefined and "auto" are converted to 0.
-			return !result || result === "auto" ? 0 : result;
-		},
-		set: function( tween ) {
-
-			// Use step hook for back compat.
-			// Use cssHook if its there.
-			// Use .style if available and use plain properties where available.
-			if ( jQuery.fx.step[ tween.prop ] ) {
-				jQuery.fx.step[ tween.prop ]( tween );
-			} else if ( tween.elem.nodeType === 1 && (
-					jQuery.cssHooks[ tween.prop ] ||
-					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
-				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
-			} else {
-				tween.elem[ tween.prop ] = tween.now;
-			}
-		}
-	}
-};
-
-// Support: IE <=9 only
-// Panic based approach to setting things on disconnected nodes
-Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
-	set: function( tween ) {
-		if ( tween.elem.nodeType && tween.elem.parentNode ) {
-			tween.elem[ tween.prop ] = tween.now;
-		}
-	}
-};
-
-jQuery.easing = {
-	linear: function( p ) {
-		return p;
-	},
-	swing: function( p ) {
-		return 0.5 - Math.cos( p * Math.PI ) / 2;
-	},
-	_default: "swing"
-};
-
-jQuery.fx = Tween.prototype.init;
-
-// Back compat <1.8 extension point
-jQuery.fx.step = {};
-
-
-
-
-var
-	fxNow, inProgress,
-	rfxtypes = /^(?:toggle|show|hide)$/,
-	rrun = /queueHooks$/;
-
-function schedule() {
-	if ( inProgress ) {
-		if ( document.hidden === false && window.requestAnimationFrame ) {
-			window.requestAnimationFrame( schedule );
-		} else {
-			window.setTimeout( schedule, jQuery.fx.interval );
-		}
-
-		jQuery.fx.tick();
-	}
-}
-
-// Animations created synchronously will run synchronously
-function createFxNow() {
-	window.setTimeout( function() {
-		fxNow = undefined;
-	} );
-	return ( fxNow = Date.now() );
-}
-
-// Generate parameters to create a standard animation
-function genFx( type, includeWidth ) {
-	var which,
-		i = 0,
-		attrs = { height: type };
-
-	// If we include width, step value is 1 to do all cssExpand values,
-	// otherwise step value is 2 to skip over Left and Right
-	includeWidth = includeWidth ? 1 : 0;
-	for ( ; i < 4; i += 2 - includeWidth ) {
-		which = cssExpand[ i ];
-		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
-	}
-
-	if ( includeWidth ) {
-		attrs.opacity = attrs.width = type;
-	}
-
-	return attrs;
-}
-
-function createTween( value, prop, animation ) {
-	var tween,
-		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
-		index = 0,
-		length = collection.length;
-	for ( ; index < length; index++ ) {
-		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {
-
-			// We're done with this property
-			return tween;
-		}
-	}
-}
-
-function defaultPrefilter( elem, props, opts ) {
-	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
-		isBox = "width" in props || "height" in props,
-		anim = this,
-		orig = {},
-		style = elem.style,
-		hidden = elem.nodeType && isHiddenWithinTree( elem ),
-		dataShow = dataPriv.get( elem, "fxshow" );
-
-	// Queue-skipping animations hijack the fx hooks
-	if ( !opts.queue ) {
-		hooks = jQuery._queueHooks( elem, "fx" );
-		if ( hooks.unqueued == null ) {
-			hooks.unqueued = 0;
-			oldfire = hooks.empty.fire;
-			hooks.empty.fire = function() {
-				if ( !hooks.unqueued ) {
-					oldfire();
-				}
-			};
-		}
-		hooks.unqueued++;
-
-		anim.always( function() {
-
-			// Ensure the complete handler is called before this completes
-			anim.always( function() {
-				hooks.unqueued--;
-				if ( !jQuery.queue( elem, "fx" ).length ) {
-					hooks.empty.fire();
-				}
-			} );
-		} );
-	}
-
-	// Detect show/hide animations
-	for ( prop in props ) {
-		value = props[ prop ];
-		if ( rfxtypes.test( value ) ) {
-			delete props[ prop ];
-			toggle = toggle || value === "toggle";
-			if ( value === ( hidden ? "hide" : "show" ) ) {
-
-				// Pretend to be hidden if this is a "show" and
-				// there is still data from a stopped show/hide
-				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
-					hidden = true;
-
-				// Ignore all other no-op show/hide data
-				} else {
-					continue;
-				}
-			}
-			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
-		}
-	}
-
-	// Bail out if this is a no-op like .hide().hide()
-	propTween = !jQuery.isEmptyObject( props );
-	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
-		return;
-	}
-
-	// Restrict "overflow" and "display" styles during box animations
-	if ( isBox && elem.nodeType === 1 ) {
-
-		// Support: IE <=9 - 11, Edge 12 - 15
-		// Record all 3 overflow attributes because IE does not infer the shorthand
-		// from identically-valued overflowX and overflowY and Edge just mirrors
-		// the overflowX value there.
-		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];
-
-		// Identify a display type, preferring old show/hide data over the CSS cascade
-		restoreDisplay = dataShow && dataShow.display;
-		if ( restoreDisplay == null ) {
-			restoreDisplay = dataPriv.get( elem, "display" );
-		}
-		display = jQuery.css( elem, "display" );
-		if ( display === "none" ) {
-			if ( restoreDisplay ) {
-				display = restoreDisplay;
-			} else {
-
-				// Get nonempty value(s) by temporarily forcing visibility
-				showHide( [ elem ], true );
-				restoreDisplay = elem.style.display || restoreDisplay;
-				display = jQuery.css( elem, "display" );
-				showHide( [ elem ] );
-			}
-		}
-
-		// Animate inline elements as inline-block
-		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
-			if ( jQuery.css( elem, "float" ) === "none" ) {
-
-				// Restore the original display value at the end of pure show/hide animations
-				if ( !propTween ) {
-					anim.done( function() {
-						style.display = restoreDisplay;
-					} );
-					if ( restoreDisplay == null ) {
-						display = style.display;
-						restoreDisplay = display === "none" ? "" : display;
-					}
-				}
-				style.display = "inline-block";
-			}
-		}
-	}
-
-	if ( opts.overflow ) {
-		style.overflow = "hidden";
-		anim.always( function() {
-			style.overflow = opts.overflow[ 0 ];
-			style.overflowX = opts.overflow[ 1 ];
-			style.overflowY = opts.overflow[ 2 ];
-		} );
-	}
-
-	// Implement show/hide animations
-	propTween = false;
-	for ( prop in orig ) {
-
-		// General show/hide setup for this element animation
-		if ( !propTween ) {
-			if ( dataShow ) {
-				if ( "hidden" in dataShow ) {
-					hidden = dataShow.hidden;
-				}
-			} else {
-				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
-			}
-
-			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
-			if ( toggle ) {
-				dataShow.hidden = !hidden;
-			}
-
-			// Show elements before animating them
-			if ( hidden ) {
-				showHide( [ elem ], true );
-			}
-
-			/* eslint-disable no-loop-func */
-
-			anim.done( function() {
-
-			/* eslint-enable no-loop-func */
-
-				// The final step of a "hide" animation is actually hiding the element
-				if ( !hidden ) {
-					showHide( [ elem ] );
-				}
-				dataPriv.remove( elem, "fxshow" );
-				for ( prop in orig ) {
-					jQuery.style( elem, prop, orig[ prop ] );
-				}
-			} );
-		}
-
-		// Per-property setup
-		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
-		if ( !( prop in dataShow ) ) {
-			dataShow[ prop ] = propTween.start;
-			if ( hidden ) {
-				propTween.end = propTween.start;
-				propTween.start = 0;
-			}
-		}
-	}
-}
-
-function propFilter( props, specialEasing ) {
-	var index, name, easing, value, hooks;
-
-	// camelCase, specialEasing and expand cssHook pass
-	for ( index in props ) {
-		name = camelCase( index );
-		easing = specialEasing[ name ];
-		value = props[ index ];
-		if ( Array.isArray( value ) ) {
-			easing = value[ 1 ];
-			value = props[ index ] = value[ 0 ];
-		}
-
-		if ( index !== name ) {
-			props[ name ] = value;
-			delete props[ index ];
-		}
-
-		hooks = jQuery.cssHooks[ name ];
-		if ( hooks && "expand" in hooks ) {
-			value = hooks.expand( value );
-			delete props[ name ];
-
-			// Not quite $.extend, this won't overwrite existing keys.
-			// Reusing 'index' because we have the correct "name"
-			for ( index in value ) {
-				if ( !( index in props ) ) {
-					props[ index ] = value[ index ];
-					specialEasing[ index ] = easing;
-				}
-			}
-		} else {
-			specialEasing[ name ] = easing;
-		}
-	}
-}
-
-function Animation( elem, properties, options ) {
-	var result,
-		stopped,
-		index = 0,
-		length = Animation.prefilters.length,
-		deferred = jQuery.Deferred().always( function() {
-
-			// Don't match elem in the :animated selector
-			delete tick.elem;
-		} ),
-		tick = function() {
-			if ( stopped ) {
-				return false;
-			}
-			var currentTime = fxNow || createFxNow(),
-				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
-
-				// Support: Android 2.3 only
-				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
-				temp = remaining / animation.duration || 0,
-				percent = 1 - temp,
-				index = 0,
-				length = animation.tweens.length;
-
-			for ( ; index < length; index++ ) {
-				animation.tweens[ index ].run( percent );
-			}
-
-			deferred.notifyWith( elem, [ animation, percent, remaining ] );
-
-			// If there's more to do, yield
-			if ( percent < 1 && length ) {
-				return remaining;
-			}
-
-			// If this was an empty animation, synthesize a final progress notification
-			if ( !length ) {
-				deferred.notifyWith( elem, [ animation, 1, 0 ] );
-			}
-
-			// Resolve the animation and report its conclusion
-			deferred.resolveWith( elem, [ animation ] );
-			return false;
-		},
-		animation = deferred.promise( {
-			elem: elem,
-			props: jQuery.extend( {}, properties ),
-			opts: jQuery.extend( true, {
-				specialEasing: {},
-				easing: jQuery.easing._default
-			}, options ),
-			originalProperties: properties,
-			originalOptions: options,
-			startTime: fxNow || createFxNow(),
-			duration: options.duration,
-			tweens: [],
-			createTween: function( prop, end ) {
-				var tween = jQuery.Tween( elem, animation.opts, prop, end,
-						animation.opts.specialEasing[ prop ] || animation.opts.easing );
-				animation.tweens.push( tween );
-				return tween;
-			},
-			stop: function( gotoEnd ) {
-				var index = 0,
-
-					// If we are going to the end, we want to run all the tweens
-					// otherwise we skip this part
-					length = gotoEnd ? animation.tweens.length : 0;
-				if ( stopped ) {
-					return this;
-				}
-				stopped = true;
-				for ( ; index < length; index++ ) {
-					animation.tweens[ index ].run( 1 );
-				}
-
-				// Resolve when we played the last frame; otherwise, reject
-				if ( gotoEnd ) {
-					deferred.notifyWith( elem, [ animation, 1, 0 ] );
-					deferred.resolveWith( elem, [ animation, gotoEnd ] );
-				} else {
-					deferred.rejectWith( elem, [ animation, gotoEnd ] );
-				}
-				return this;
-			}
-		} ),
-		props = animation.props;
-
-	propFilter( props, animation.opts.specialEasing );
-
-	for ( ; index < length; index++ ) {
-		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
-		if ( result ) {
-			if ( isFunction( result.stop ) ) {
-				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
-					result.stop.bind( result );
-			}
-			return result;
-		}
-	}
-
-	jQuery.map( props, createTween, animation );
-
-	if ( isFunction( animation.opts.start ) ) {
-		animation.opts.start.call( elem, animation );
-	}
-
-	// Attach callbacks from options
-	animation
-		.progress( animation.opts.progress )
-		.done( animation.opts.done, animation.opts.complete )
-		.fail( animation.opts.fail )
-		.always( animation.opts.always );
-
-	jQuery.fx.timer(
-		jQuery.extend( tick, {
-			elem: elem,
-			anim: animation,
-			queue: animation.opts.queue
-		} )
-	);
-
-	return animation;
-}
-
-jQuery.Animation = jQuery.extend( Animation, {
-
-	tweeners: {
-		"*": [ function( prop, value ) {
-			var tween = this.createTween( prop, value );
-			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
-			return tween;
-		} ]
-	},
-
-	tweener: function( props, callback ) {
-		if ( isFunction( props ) ) {
-			callback = props;
-			props = [ "*" ];
-		} else {
-			props = props.match( rnothtmlwhite );
-		}
-
-		var prop,
-			index = 0,
-			length = props.length;
-
-		for ( ; index < length; index++ ) {
-			prop = props[ index ];
-			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
-			Animation.tweeners[ prop ].unshift( callback );
-		}
-	},
-
-	prefilters: [ defaultPrefilter ],
-
-	prefilter: function( callback, prepend ) {
-		if ( prepend ) {
-			Animation.prefilters.unshift( callback );
-		} else {
-			Animation.prefilters.push( callback );
-		}
-	}
-} );
-
-jQuery.speed = function( speed, easing, fn ) {
-	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
-		complete: fn || !fn && easing ||
-			isFunction( speed ) && speed,
-		duration: speed,
-		easing: fn && easing || easing && !isFunction( easing ) && easing
-	};
-
-	// Go to the end state if fx are off
-	if ( jQuery.fx.off ) {
-		opt.duration = 0;
-
-	} else {
-		if ( typeof opt.duration !== "number" ) {
-			if ( opt.duration in jQuery.fx.speeds ) {
-				opt.duration = jQuery.fx.speeds[ opt.duration ];
-
-			} else {
-				opt.duration = jQuery.fx.speeds._default;
-			}
-		}
-	}
-
-	// Normalize opt.queue - true/undefined/null -> "fx"
-	if ( opt.queue == null || opt.queue === true ) {
-		opt.queue = "fx";
-	}
-
-	// Queueing
-	opt.old = opt.complete;
-
-	opt.complete = function() {
-		if ( isFunction( opt.old ) ) {
-			opt.old.call( this );
-		}
-
-		if ( opt.queue ) {
-			jQuery.dequeue( this, opt.queue );
-		}
-	};
-
-	return opt;
-};
-
-jQuery.fn.extend( {
-	fadeTo: function( speed, to, easing, callback ) {
-
-		// Show any hidden elements after setting opacity to 0
-		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()
-
-			// Animate to the value specified
-			.end().animate( { opacity: to }, speed, easing, callback );
-	},
-	animate: function( prop, speed, easing, callback ) {
-		var empty = jQuery.isEmptyObject( prop ),
-			optall = jQuery.speed( speed, easing, callback ),
-			doAnimation = function() {
-
-				// Operate on a copy of prop so per-property easing won't be lost
-				var anim = Animation( this, jQuery.extend( {}, prop ), optall );
-
-				// Empty animations, or finishing resolves immediately
-				if ( empty || dataPriv.get( this, "finish" ) ) {
-					anim.stop( true );
-				}
-			};
-			doAnimation.finish = doAnimation;
-
-		return empty || optall.queue === false ?
-			this.each( doAnimation ) :
-			this.queue( optall.queue, doAnimation );
-	},
-	stop: function( type, clearQueue, gotoEnd ) {
-		var stopQueue = function( hooks ) {
-			var stop = hooks.stop;
-			delete hooks.stop;
-			stop( gotoEnd );
-		};
-
-		if ( typeof type !== "string" ) {
-			gotoEnd = clearQueue;
-			clearQueue = type;
-			type = undefined;
-		}
-		if ( clearQueue ) {
-			this.queue( type || "fx", [] );
-		}
-
-		return this.each( function() {
-			var dequeue = true,
-				index = type != null && type + "queueHooks",
-				timers = jQuery.timers,
-				data = dataPriv.get( this );
-
-			if ( index ) {
-				if ( data[ index ] && data[ index ].stop ) {
-					stopQueue( data[ index ] );
-				}
-			} else {
-				for ( index in data ) {
-					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
-						stopQueue( data[ index ] );
-					}
-				}
-			}
-
-			for ( index = timers.length; index--; ) {
-				if ( timers[ index ].elem === this &&
-					( type == null || timers[ index ].queue === type ) ) {
-
-					timers[ index ].anim.stop( gotoEnd );
-					dequeue = false;
-					timers.splice( index, 1 );
-				}
-			}
-
-			// Start the next in the queue if the last step wasn't forced.
-			// Timers currently will call their complete callbacks, which
-			// will dequeue but only if they were gotoEnd.
-			if ( dequeue || !gotoEnd ) {
-				jQuery.dequeue( this, type );
-			}
-		} );
-	},
-	finish: function( type ) {
-		if ( type !== false ) {
-			type = type || "fx";
-		}
-		return this.each( function() {
-			var index,
-				data = dataPriv.get( this ),
-				queue = data[ type + "queue" ],
-				hooks = data[ type + "queueHooks" ],
-				timers = jQuery.timers,
-				length = queue ? queue.length : 0;
-
-			// Enable finishing flag on private data
-			data.finish = true;
-
-			// Empty the queue first
-			jQuery.queue( this, type, [] );
-
-			if ( hooks && hooks.stop ) {
-				hooks.stop.call( this, true );
-			}
-
-			// Look for any active animations, and finish them
-			for ( index = timers.length; index--; ) {
-				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
-					timers[ index ].anim.stop( true );
-					timers.splice( index, 1 );
-				}
-			}
-
-			// Look for any animations in the old queue and finish them
-			for ( index = 0; index < length; index++ ) {
-				if ( queue[ index ] && queue[ index ].finish ) {
-					queue[ index ].finish.call( this );
-				}
-			}
-
-			// Turn off finishing flag
-			delete data.finish;
-		} );
-	}
-} );
-
-jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
-	var cssFn = jQuery.fn[ name ];
-	jQuery.fn[ name ] = function( speed, easing, callback ) {
-		return speed == null || typeof speed === "boolean" ?
-			cssFn.apply( this, arguments ) :
-			this.animate( genFx( name, true ), speed, easing, callback );
-	};
-} );
-
-// Generate shortcuts for custom animations
-jQuery.each( {
-	slideDown: genFx( "show" ),
-	slideUp: genFx( "hide" ),
-	slideToggle: genFx( "toggle" ),
-	fadeIn: { opacity: "show" },
-	fadeOut: { opacity: "hide" },
-	fadeToggle: { opacity: "toggle" }
-}, function( name, props ) {
-	jQuery.fn[ name ] = function( speed, easing, callback ) {
-		return this.animate( props, speed, easing, callback );
-	};
-} );
-
-jQuery.timers = [];
-jQuery.fx.tick = function() {
-	var timer,
-		i = 0,
-		timers = jQuery.timers;
-
-	fxNow = Date.now();
-
-	for ( ; i < timers.length; i++ ) {
-		timer = timers[ i ];
-
-		// Run the timer and safely remove it when done (allowing for external removal)
-		if ( !timer() && timers[ i ] === timer ) {
-			timers.splice( i--, 1 );
-		}
-	}
-
-	if ( !timers.length ) {
-		jQuery.fx.stop();
-	}
-	fxNow = undefined;
-};
-
-jQuery.fx.timer = function( timer ) {
-	jQuery.timers.push( timer );
-	jQuery.fx.start();
-};
-
-jQuery.fx.interval = 13;
-jQuery.fx.start = function() {
-	if ( inProgress ) {
-		return;
-	}
-
-	inProgress = true;
-	schedule();
-};
-
-jQuery.fx.stop = function() {
-	inProgress = null;
-};
-
-jQuery.fx.speeds = {
-	slow: 600,
-	fast: 200,
-
-	// Default speed
-	_default: 400
-};
-
-
-// Based off of the plugin by Clint Helfers, with permission.
-// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
-jQuery.fn.delay = function( time, type ) {
-	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
-	type = type || "fx";
-
-	return this.queue( type, function( next, hooks ) {
-		var timeout = window.setTimeout( next, time );
-		hooks.stop = function() {
-			window.clearTimeout( timeout );
-		};
-	} );
-};
-
-
-( function() {
-	var input = document.createElement( "input" ),
-		select = document.createElement( "select" ),
-		opt = select.appendChild( document.createElement( "option" ) );
-
-	input.type = "checkbox";
-
-	// Support: Android <=4.3 only
-	// Default value for a checkbox should be "on"
-	support.checkOn = input.value !== "";
-
-	// Support: IE <=11 only
-	// Must access selectedIndex to make default options select
-	support.optSelected = opt.selected;
-
-	// Support: IE <=11 only
-	// An input loses its value after becoming a radio
-	input = document.createElement( "input" );
-	input.value = "t";
-	input.type = "radio";
-	support.radioValue = input.value === "t";
-} )();
-
-
-var boolHook,
-	attrHandle = jQuery.expr.attrHandle;
-
-jQuery.fn.extend( {
-	attr: function( name, value ) {
-		return access( this, jQuery.attr, name, value, arguments.length > 1 );
-	},
-
-	removeAttr: function( name ) {
-		return this.each( function() {
-			jQuery.removeAttr( this, name );
-		} );
-	}
-} );
-
-jQuery.extend( {
-	attr: function( elem, name, value ) {
-		var ret, hooks,
-			nType = elem.nodeType;
-
-		// Don't get/set attributes on text, comment and attribute nodes
-		if ( nType === 3 || nType === 8 || nType === 2 ) {
-			return;
-		}
-
-		// Fallback to prop when attributes are not supported
-		if ( typeof elem.getAttribute === "undefined" ) {
-			return jQuery.prop( elem, name, value );
-		}
-
-		// Attribute hooks are determined by the lowercase version
-		// Grab necessary hook if one is defined
-		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
-			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
-				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
-		}
-
-		if ( value !== undefined ) {
-			if ( value === null ) {
-				jQuery.removeAttr( elem, name );
-				return;
-			}
-
-			if ( hooks && "set" in hooks &&
-				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
-				return ret;
-			}
-
-			elem.setAttribute( name, value + "" );
-			return value;
-		}
-
-		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
-			return ret;
-		}
-
-		ret = jQuery.find.attr( elem, name );
-
-		// Non-existent attributes return null, we normalize to undefined
-		return ret == null ? undefined : ret;
-	},
-
-	attrHooks: {
-		type: {
-			set: function( elem, value ) {
-				if ( !support.radioValue && value === "radio" &&
-					nodeName( elem, "input" ) ) {
-					var val = elem.value;
-					elem.setAttribute( "type", value );
-					if ( val ) {
-						elem.value = val;
-					}
-					return value;
-				}
-			}
-		}
-	},
-
-	removeAttr: function( elem, value ) {
-		var name,
-			i = 0,
-
-			// Attribute names can contain non-HTML whitespace characters
-			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
-			attrNames = value && value.match( rnothtmlwhite );
-
-		if ( attrNames && elem.nodeType === 1 ) {
-			while ( ( name = attrNames[ i++ ] ) ) {
-				elem.removeAttribute( name );
-			}
-		}
-	}
-} );
-
-// Hooks for boolean attributes
-boolHook = {
-	set: function( elem, value, name ) {
-		if ( value === false ) {
-
-			// Remove boolean attributes when set to false
-			jQuery.removeAttr( elem, name );
-		} else {
-			elem.setAttribute( name, name );
-		}
-		return name;
-	}
-};
-
-jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
-	var getter = attrHandle[ name ] || jQuery.find.attr;
-
-	attrHandle[ name ] = function( elem, name, isXML ) {
-		var ret, handle,
-			lowercaseName = name.toLowerCase();
-
-		if ( !isXML ) {
-
-			// Avoid an infinite loop by temporarily removing this function from the getter
-			handle = attrHandle[ lowercaseName ];
-			attrHandle[ lowercaseName ] = ret;
-			ret = getter( elem, name, isXML ) != null ?
-				lowercaseName :
-				null;
-			attrHandle[ lowercaseName ] = handle;
-		}
-		return ret;
-	};
-} );
-
-
-
-
-var rfocusable = /^(?:input|select|textarea|button)$/i,
-	rclickable = /^(?:a|area)$/i;
-
-jQuery.fn.extend( {
-	prop: function( name, value ) {
-		return access( this, jQuery.prop, name, value, arguments.length > 1 );
-	},
-
-	removeProp: function( name ) {
-		return this.each( function() {
-			delete this[ jQuery.propFix[ name ] || name ];
-		} );
-	}
-} );
-
-jQuery.extend( {
-	prop: function( elem, name, value ) {
-		var ret, hooks,
-			nType = elem.nodeType;
-
-		// Don't get/set properties on text, comment and attribute nodes
-		if ( nType === 3 || nType === 8 || nType === 2 ) {
-			return;
-		}
-
-		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
-
-			// Fix name and attach hooks
-			name = jQuery.propFix[ name ] || name;
-			hooks = jQuery.propHooks[ name ];
-		}
-
-		if ( value !== undefined ) {
-			if ( hooks && "set" in hooks &&
-				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
-				return ret;
-			}
-
-			return ( elem[ name ] = value );
-		}
-
-		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
-			return ret;
-		}
-
-		return elem[ name ];
-	},
-
-	propHooks: {
-		tabIndex: {
-			get: function( elem ) {
-
-				// Support: IE <=9 - 11 only
-				// elem.tabIndex doesn't always return the
-				// correct value when it hasn't been explicitly set
-				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
-				// Use proper attribute retrieval(#12072)
-				var tabindex = jQuery.find.attr( elem, "tabindex" );
-
-				if ( tabindex ) {
-					return parseInt( tabindex, 10 );
-				}
-
-				if (
-					rfocusable.test( elem.nodeName ) ||
-					rclickable.test( elem.nodeName ) &&
-					elem.href
-				) {
-					return 0;
-				}
-
-				return -1;
-			}
-		}
-	},
-
-	propFix: {
-		"for": "htmlFor",
-		"class": "className"
-	}
-} );
-
-// Support: IE <=11 only
-// Accessing the selectedIndex property
-// forces the browser to respect setting selected
-// on the option
-// The getter ensures a default option is selected
-// when in an optgroup
-// eslint rule "no-unused-expressions" is disabled for this code
-// since it considers such accessions noop
-if ( !support.optSelected ) {
-	jQuery.propHooks.selected = {
-		get: function( elem ) {
-
-			/* eslint no-unused-expressions: "off" */
-
-			var parent = elem.parentNode;
-			if ( parent && parent.parentNode ) {
-				parent.parentNode.selectedIndex;
-			}
-			return null;
-		},
-		set: function( elem ) {
-
-			/* eslint no-unused-expressions: "off" */
-
-			var parent = elem.parentNode;
-			if ( parent ) {
-				parent.selectedIndex;
-
-				if ( parent.parentNode ) {
-					parent.parentNode.selectedIndex;
-				}
-			}
-		}
-	};
-}
-
-jQuery.each( [
-	"tabIndex",
-	"readOnly",
-	"maxLength",
-	"cellSpacing",
-	"cellPadding",
-	"rowSpan",
-	"colSpan",
-	"useMap",
-	"frameBorder",
-	"contentEditable"
-], function() {
-	jQuery.propFix[ this.toLowerCase() ] = this;
-} );
-
-
-
-
-	// Strip and collapse whitespace according to HTML spec
-	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
-	function stripAndCollapse( value ) {
-		var tokens = value.match( rnothtmlwhite ) || [];
-		return tokens.join( " " );
-	}
-
-
-function getClass( elem ) {
-	return elem.getAttribute && elem.getAttribute( "class" ) || "";
-}
-
-function classesToArray( value ) {
-	if ( Array.isArray( value ) ) {
-		return value;
-	}
-	if ( typeof value === "string" ) {
-		return value.match( rnothtmlwhite ) || [];
-	}
-	return [];
-}
-
-jQuery.fn.extend( {
-	addClass: function( value ) {
-		var classes, elem, cur, curValue, clazz, j, finalValue,
-			i = 0;
-
-		if ( isFunction( value ) ) {
-			return this.each( function( j ) {
-				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
-			} );
-		}
-
-		classes = classesToArray( value );
-
-		if ( classes.length ) {
-			while ( ( elem = this[ i++ ] ) ) {
-				curValue = getClass( elem );
-				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );
-
-				if ( cur ) {
-					j = 0;
-					while ( ( clazz = classes[ j++ ] ) ) {
-						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
-							cur += clazz + " ";
-						}
-					}
-
-					// Only assign if different to avoid unneeded rendering.
-					finalValue = stripAndCollapse( cur );
-					if ( curValue !== finalValue ) {
-						elem.setAttribute( "class", finalValue );
-					}
-				}
-			}
-		}
-
-		return this;
-	},
-
-	removeClass: function( value ) {
-		var classes, elem, cur, curValue, clazz, j, finalValue,
-			i = 0;
-
-		if ( isFunction( value ) ) {
-			return this.each( function( j ) {
-				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
-			} );
-		}
-
-		if ( !arguments.length ) {
-			return this.attr( "class", "" );
-		}
-
-		classes = classesToArray( value );
-
-		if ( classes.length ) {
-			while ( ( elem = this[ i++ ] ) ) {
-				curValue = getClass( elem );
-
-				// This expression is here for better compressibility (see addClass)
-				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );
-
-				if ( cur ) {
-					j = 0;
-					while ( ( clazz = classes[ j++ ] ) ) {
-
-						// Remove *all* instances
-						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
-							cur = cur.replace( " " + clazz + " ", " " );
-						}
-					}
-
-					// Only assign if different to avoid unneeded rendering.
-					finalValue = stripAndCollapse( cur );
-					if ( curValue !== finalValue ) {
-						elem.setAttribute( "class", finalValue );
-					}
-				}
-			}
-		}
-
-		return this;
-	},
-
-	toggleClass: function( value, stateVal ) {
-		var type = typeof value,
-			isValidValue = type === "string" || Array.isArray( value );
-
-		if ( typeof stateVal === "boolean" && isValidValue ) {
-			return stateVal ? this.addClass( value ) : this.removeClass( value );
-		}
-
-		if ( isFunction( value ) ) {
-			return this.each( function( i ) {
-				jQuery( this ).toggleClass(
-					value.call( this, i, getClass( this ), stateVal ),
-					stateVal
-				);
-			} );
-		}
-
-		return this.each( function() {
-			var className, i, self, classNames;
-
-			if ( isValidValue ) {
-
-				// Toggle individual class names
-				i = 0;
-				self = jQuery( this );
-				classNames = classesToArray( value );
-
-				while ( ( className = classNames[ i++ ] ) ) {
-
-					// Check each className given, space separated list
-					if ( self.hasClass( className ) ) {
-						self.removeClass( className );
-					} else {
-						self.addClass( className );
-					}
-				}
-
-			// Toggle whole class name
-			} else if ( value === undefined || type === "boolean" ) {
-				className = getClass( this );
-				if ( className ) {
-
-					// Store className if set
-					dataPriv.set( this, "__className__", className );
-				}
-
-				// If the element has a class name or if we're passed `false`,
-				// then remove the whole classname (if there was one, the above saved it).
-				// Otherwise bring back whatever was previously saved (if anything),
-				// falling back to the empty string if nothing was stored.
-				if ( this.setAttribute ) {
-					this.setAttribute( "class",
-						className || value === false ?
-						"" :
-						dataPriv.get( this, "__className__" ) || ""
-					);
-				}
-			}
-		} );
-	},
-
-	hasClass: function( selector ) {
-		var className, elem,
-			i = 0;
-
-		className = " " + selector + " ";
-		while ( ( elem = this[ i++ ] ) ) {
-			if ( elem.nodeType === 1 &&
-				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
-					return true;
-			}
-		}
-
-		return false;
-	}
-} );
-
-
-
-
-var rreturn = /\r/g;
-
-jQuery.fn.extend( {
-	val: function( value ) {
-		var hooks, ret, valueIsFunction,
-			elem = this[ 0 ];
-
-		if ( !arguments.length ) {
-			if ( elem ) {
-				hooks = jQuery.valHooks[ elem.type ] ||
-					jQuery.valHooks[ elem.nodeName.toLowerCase() ];
-
-				if ( hooks &&
-					"get" in hooks &&
-					( ret = hooks.get( elem, "value" ) ) !== undefined
-				) {
-					return ret;
-				}
-
-				ret = elem.value;
-
-				// Handle most common string cases
-				if ( typeof ret === "string" ) {
-					return ret.replace( rreturn, "" );
-				}
-
-				// Handle cases where value is null/undef or number
-				return ret == null ? "" : ret;
-			}
-
-			return;
-		}
-
-		valueIsFunction = isFunction( value );
-
-		return this.each( function( i ) {
-			var val;
-
-			if ( this.nodeType !== 1 ) {
-				return;
-			}
-
-			if ( valueIsFunction ) {
-				val = value.call( this, i, jQuery( this ).val() );
-			} else {
-				val = value;
-			}
-
-			// Treat null/undefined as ""; convert numbers to string
-			if ( val == null ) {
-				val = "";
-
-			} else if ( typeof val === "number" ) {
-				val += "";
-
-			} else if ( Array.isArray( val ) ) {
-				val = jQuery.map( val, function( value ) {
-					return value == null ? "" : value + "";
-				} );
-			}
-
-			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];
-
-			// If set returns undefined, fall back to normal setting
-			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
-				this.value = val;
-			}
-		} );
-	}
-} );
-
-jQuery.extend( {
-	valHooks: {
-		option: {
-			get: function( elem ) {
-
-				var val = jQuery.find.attr( elem, "value" );
-				return val != null ?
-					val :
-
-					// Support: IE <=10 - 11 only
-					// option.text throws exceptions (#14686, #14858)
-					// Strip and collapse whitespace
-					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
-					stripAndCollapse( jQuery.text( elem ) );
-			}
-		},
-		select: {
-			get: function( elem ) {
-				var value, option, i,
-					options = elem.options,
-					index = elem.selectedIndex,
-					one = elem.type === "select-one",
-					values = one ? null : [],
-					max = one ? index + 1 : options.length;
-
-				if ( index < 0 ) {
-					i = max;
-
-				} else {
-					i = one ? index : 0;
-				}
-
-				// Loop through all the selected options
-				for ( ; i < max; i++ ) {
-					option = options[ i ];
-
-					// Support: IE <=9 only
-					// IE8-9 doesn't update selected after form reset (#2551)
-					if ( ( option.selected || i === index ) &&
-
-							// Don't return options that are disabled or in a disabled optgroup
-							!option.disabled &&
-							( !option.parentNode.disabled ||
-								!nodeName( option.parentNode, "optgroup" ) ) ) {
-
-						// Get the specific value for the option
-						value = jQuery( option ).val();
-
-						// We don't need an array for one selects
-						if ( one ) {
-							return value;
-						}
-
-						// Multi-Selects return an array
-						values.push( value );
-					}
-				}
-
-				return values;
-			},
-
-			set: function( elem, value ) {
-				var optionSet, option,
-					options = elem.options,
-					values = jQuery.makeArray( value ),
-					i = options.length;
-
-				while ( i-- ) {
-					option = options[ i ];
-
-					/* eslint-disable no-cond-assign */
-
-					if ( option.selected =
-						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
-					) {
-						optionSet = true;
-					}
-
-					/* eslint-enable no-cond-assign */
-				}
-
-				// Force browsers to behave consistently when non-matching value is set
-				if ( !optionSet ) {
-					elem.selectedIndex = -1;
-				}
-				return values;
-			}
-		}
-	}
-} );
-
-// Radios and checkboxes getter/setter
-jQuery.each( [ "radio", "checkbox" ], function() {
-	jQuery.valHooks[ this ] = {
-		set: function( elem, value ) {
-			if ( Array.isArray( value ) ) {
-				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
-			}
-		}
-	};
-	if ( !support.checkOn ) {
-		jQuery.valHooks[ this ].get = function( elem ) {
-			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
-		};
-	}
-} );
-
-
-
-
-// Return jQuery for attributes-only inclusion
-
-
-support.focusin = "onfocusin" in window;
-
-
-var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
-	stopPropagationCallback = function( e ) {
-		e.stopPropagation();
-	};
-
-jQuery.extend( jQuery.event, {
-
-	trigger: function( event, data, elem, onlyHandlers ) {
-
-		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
-			eventPath = [ elem || document ],
-			type = hasOwn.call( event, "type" ) ? event.type : event,
-			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];
-
-		cur = lastElement = tmp = elem = elem || document;
-
-		// Don't do events on text and comment nodes
-		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
-			return;
-		}
-
-		// focus/blur morphs to focusin/out; ensure we're not firing them right now
-		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
-			return;
-		}
-
-		if ( type.indexOf( "." ) > -1 ) {
-
-			// Namespaced trigger; create a regexp to match event type in handle()
-			namespaces = type.split( "." );
-			type = namespaces.shift();
-			namespaces.sort();
-		}
-		ontype = type.indexOf( ":" ) < 0 && "on" + type;
-
-		// Caller can pass in a jQuery.Event object, Object, or just an event type string
-		event = event[ jQuery.expando ] ?
-			event :
-			new jQuery.Event( type, typeof event === "object" && event );
-
-		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
-		event.isTrigger = onlyHandlers ? 2 : 3;
-		event.namespace = namespaces.join( "." );
-		event.rnamespace = event.namespace ?
-			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
-			null;
-
-		// Clean up the event in case it is being reused
-		event.result = undefined;
-		if ( !event.target ) {
-			event.target = elem;
-		}
-
-		// Clone any incoming data and prepend the event, creating the handler arg list
-		data = data == null ?
-			[ event ] :
-			jQuery.makeArray( data, [ event ] );
-
-		// Allow special events to draw outside the lines
-		special = jQuery.event.special[ type ] || {};
-		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
-			return;
-		}
-
-		// Determine event propagation path in advance, per W3C events spec (#9951)
-		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
-		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {
-
-			bubbleType = special.delegateType || type;
-			if ( !rfocusMorph.test( bubbleType + type ) ) {
-				cur = cur.parentNode;
-			}
-			for ( ; cur; cur = cur.parentNode ) {
-				eventPath.push( cur );
-				tmp = cur;
-			}
-
-			// Only add window if we got to document (e.g., not plain obj or detached DOM)
-			if ( tmp === ( elem.ownerDocument || document ) ) {
-				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
-			}
-		}
-
-		// Fire handlers on the event path
-		i = 0;
-		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
-			lastElement = cur;
-			event.type = i > 1 ?
-				bubbleType :
-				special.bindType || type;
-
-			// jQuery handler
-			handle = (
-					dataPriv.get( cur, "events" ) || Object.create( null )
-				)[ event.type ] &&
-				dataPriv.get( cur, "handle" );
-			if ( handle ) {
-				handle.apply( cur, data );
-			}
-
-			// Native handler
-			handle = ontype && cur[ ontype ];
-			if ( handle && handle.apply && acceptData( cur ) ) {
-				event.result = handle.apply( cur, data );
-				if ( event.result === false ) {
-					event.preventDefault();
-				}
-			}
-		}
-		event.type = type;
-
-		// If nobody prevented the default action, do it now
-		if ( !onlyHandlers && !event.isDefaultPrevented() ) {
-
-			if ( ( !special._default ||
-				special._default.apply( eventPath.pop(), data ) === false ) &&
-				acceptData( elem ) ) {
-
-				// Call a native DOM method on the target with the same name as the event.
-				// Don't do default actions on window, that's where global variables be (#6170)
-				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {
-
-					// Don't re-trigger an onFOO event when we call its FOO() method
-					tmp = elem[ ontype ];
-
-					if ( tmp ) {
-						elem[ ontype ] = null;
-					}
-
-					// Prevent re-triggering of the same event, since we already bubbled it above
-					jQuery.event.triggered = type;
-
-					if ( event.isPropagationStopped() ) {
-						lastElement.addEventListener( type, stopPropagationCallback );
-					}
-
-					elem[ type ]();
-
-					if ( event.isPropagationStopped() ) {
-						lastElement.removeEventListener( type, stopPropagationCallback );
-					}
-
-					jQuery.event.triggered = undefined;
-
-					if ( tmp ) {
-						elem[ ontype ] = tmp;
-					}
-				}
-			}
-		}
-
-		return event.result;
-	},
-
-	// Piggyback on a donor event to simulate a different one
-	// Used only for `focus(in | out)` events
-	simulate: function( type, elem, event ) {
-		var e = jQuery.extend(
-			new jQuery.Event(),
-			event,
-			{
-				type: type,
-				isSimulated: true
-			}
-		);
-
-		jQuery.event.trigger( e, null, elem );
-	}
-
-} );
-
-jQuery.fn.extend( {
-
-	trigger: function( type, data ) {
-		return this.each( function() {
-			jQuery.event.trigger( type, data, this );
-		} );
-	},
-	triggerHandler: function( type, data ) {
-		var elem = this[ 0 ];
-		if ( elem ) {
-			return jQuery.event.trigger( type, data, elem, true );
-		}
-	}
-} );
-
-
-// Support: Firefox <=44
-// Firefox doesn't have focus(in | out) events
-// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
-//
-// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
-// focus(in | out) events fire after focus & blur events,
-// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
-// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
-if ( !support.focusin ) {
-	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {
-
-		// Attach a single capturing handler on the document while someone wants focusin/focusout
-		var handler = function( event ) {
-			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
-		};
-
-		jQuery.event.special[ fix ] = {
-			setup: function() {
-
-				// Handle: regular nodes (via `this.ownerDocument`), window
-				// (via `this.document`) & document (via `this`).
-				var doc = this.ownerDocument || this.document || this,
-					attaches = dataPriv.access( doc, fix );
-
-				if ( !attaches ) {
-					doc.addEventListener( orig, handler, true );
-				}
-				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
-			},
-			teardown: function() {
-				var doc = this.ownerDocument || this.document || this,
-					attaches = dataPriv.access( doc, fix ) - 1;
-
-				if ( !attaches ) {
-					doc.removeEventListener( orig, handler, true );
-					dataPriv.remove( doc, fix );
-
-				} else {
-					dataPriv.access( doc, fix, attaches );
-				}
-			}
-		};
-	} );
-}
-var location = window.location;
-
-var nonce = { guid: Date.now() };
-
-var rquery = ( /\?/ );
-
-
-
-// Cross-browser xml parsing
-jQuery.parseXML = function( data ) {
-	var xml;
-	if ( !data || typeof data !== "string" ) {
-		return null;
-	}
-
-	// Support: IE 9 - 11 only
-	// IE throws on parseFromString with invalid input.
-	try {
-		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
-	} catch ( e ) {
-		xml = undefined;
-	}
-
-	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
-		jQuery.error( "Invalid XML: " + data );
-	}
-	return xml;
-};
-
-
-var
-	rbracket = /\[\]$/,
-	rCRLF = /\r?\n/g,
-	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
-	rsubmittable = /^(?:input|select|textarea|keygen)/i;
-
-function buildParams( prefix, obj, traditional, add ) {
-	var name;
-
-	if ( Array.isArray( obj ) ) {
-
-		// Serialize array item.
-		jQuery.each( obj, function( i, v ) {
-			if ( traditional || rbracket.test( prefix ) ) {
-
-				// Treat each array item as a scalar.
-				add( prefix, v );
-
-			} else {
-
-				// Item is non-scalar (array or object), encode its numeric index.
-				buildParams(
-					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
-					v,
-					traditional,
-					add
-				);
-			}
-		} );
-
-	} else if ( !traditional && toType( obj ) === "object" ) {
-
-		// Serialize object item.
-		for ( name in obj ) {
-			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
-		}
-
-	} else {
-
-		// Serialize scalar item.
-		add( prefix, obj );
-	}
-}
-
-// Serialize an array of form elements or a set of
-// key/values into a query string
-jQuery.param = function( a, traditional ) {
-	var prefix,
-		s = [],
-		add = function( key, valueOrFunction ) {
-
-			// If value is a function, invoke it and use its return value
-			var value = isFunction( valueOrFunction ) ?
-				valueOrFunction() :
-				valueOrFunction;
-
-			s[ s.length ] = encodeURIComponent( key ) + "=" +
-				encodeURIComponent( value == null ? "" : value );
-		};
-
-	if ( a == null ) {
-		return "";
-	}
-
-	// If an array was passed in, assume that it is an array of form elements.
-	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
-
-		// Serialize the form elements
-		jQuery.each( a, function() {
-			add( this.name, this.value );
-		} );
-
-	} else {
-
-		// If traditional, encode the "old" way (the way 1.3.2 or older
-		// did it), otherwise encode params recursively.
-		for ( prefix in a ) {
-			buildParams( prefix, a[ prefix ], traditional, add );
-		}
-	}
-
-	// Return the resulting serialization
-	return s.join( "&" );
-};
-
-jQuery.fn.extend( {
-	serialize: function() {
-		return jQuery.param( this.serializeArray() );
-	},
-	serializeArray: function() {
-		return this.map( function() {
-
-			// Can add propHook for "elements" to filter or add form elements
-			var elements = jQuery.prop( this, "elements" );
-			return elements ? jQuery.makeArray( elements ) : this;
-		} )
-		.filter( function() {
-			var type = this.type;
-
-			// Use .is( ":disabled" ) so that fieldset[disabled] works
-			return this.name && !jQuery( this ).is( ":disabled" ) &&
-				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
-				( this.checked || !rcheckableType.test( type ) );
-		} )
-		.map( function( _i, elem ) {
-			var val = jQuery( this ).val();
-
-			if ( val == null ) {
-				return null;
-			}
-
-			if ( Array.isArray( val ) ) {
-				return jQuery.map( val, function( val ) {
-					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
-				} );
-			}
-
-			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
-		} ).get();
-	}
-} );
-
-
-var
-	r20 = /%20/g,
-	rhash = /#.*$/,
-	rantiCache = /([?&])_=[^&]*/,
-	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
-
-	// #7653, #8125, #8152: local protocol detection
-	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
-	rnoContent = /^(?:GET|HEAD)$/,
-	rprotocol = /^\/\//,
-
-	/* Prefilters
-	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
-	 * 2) These are called:
-	 *    - BEFORE asking for a transport
-	 *    - AFTER param serialization (s.data is a string if s.processData is true)
-	 * 3) key is the dataType
-	 * 4) the catchall symbol "*" can be used
-	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
-	 */
-	prefilters = {},
-
-	/* Transports bindings
-	 * 1) key is the dataType
-	 * 2) the catchall symbol "*" can be used
-	 * 3) selection will start with transport dataType and THEN go to "*" if needed
-	 */
-	transports = {},
-
-	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
-	allTypes = "*/".concat( "*" ),
-
-	// Anchor tag for parsing the document origin
-	originAnchor = document.createElement( "a" );
-	originAnchor.href = location.href;
-
-// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
-function addToPrefiltersOrTransports( structure ) {
-
-	// dataTypeExpression is optional and defaults to "*"
-	return function( dataTypeExpression, func ) {
-
-		if ( typeof dataTypeExpression !== "string" ) {
-			func = dataTypeExpression;
-			dataTypeExpression = "*";
-		}
-
-		var dataType,
-			i = 0,
-			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];
-
-		if ( isFunction( func ) ) {
-
-			// For each dataType in the dataTypeExpression
-			while ( ( dataType = dataTypes[ i++ ] ) ) {
-
-				// Prepend if requested
-				if ( dataType[ 0 ] === "+" ) {
-					dataType = dataType.slice( 1 ) || "*";
-					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );
-
-				// Otherwise append
-				} else {
-					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
-				}
-			}
-		}
-	};
-}
-
-// Base inspection function for prefilters and transports
-function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
-
-	var inspected = {},
-		seekingTransport = ( structure === transports );
-
-	function inspect( dataType ) {
-		var selected;
-		inspected[ dataType ] = true;
-		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
-			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
-			if ( typeof dataTypeOrTransport === "string" &&
-				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {
-
-				options.dataTypes.unshift( dataTypeOrTransport );
-				inspect( dataTypeOrTransport );
-				return false;
-			} else if ( seekingTransport ) {
-				return !( selected = dataTypeOrTransport );
-			}
-		} );
-		return selected;
-	}
-
-	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
-}
-
-// A special extend for ajax options
-// that takes "flat" options (not to be deep extended)
-// Fixes #9887
-function ajaxExtend( target, src ) {
-	var key, deep,
-		flatOptions = jQuery.ajaxSettings.flatOptions || {};
-
-	for ( key in src ) {
-		if ( src[ key ] !== undefined ) {
-			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
-		}
-	}
-	if ( deep ) {
-		jQuery.extend( true, target, deep );
-	}
-
-	return target;
-}
-
-/* Handles responses to an ajax request:
- * - finds the right dataType (mediates between content-type and expected dataType)
- * - returns the corresponding response
- */
-function ajaxHandleResponses( s, jqXHR, responses ) {
-
-	var ct, type, finalDataType, firstDataType,
-		contents = s.contents,
-		dataTypes = s.dataTypes;
-
-	// Remove auto dataType and get content-type in the process
-	while ( dataTypes[ 0 ] === "*" ) {
-		dataTypes.shift();
-		if ( ct === undefined ) {
-			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
-		}
-	}
-
-	// Check if we're dealing with a known content-type
-	if ( ct ) {
-		for ( type in contents ) {
-			if ( contents[ type ] && contents[ type ].test( ct ) ) {
-				dataTypes.unshift( type );
-				break;
-			}
-		}
-	}
-
-	// Check to see if we have a response for the expected dataType
-	if ( dataTypes[ 0 ] in responses ) {
-		finalDataType = dataTypes[ 0 ];
-	} else {
-
-		// Try convertible dataTypes
-		for ( type in responses ) {
-			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
-				finalDataType = type;
-				break;
-			}
-			if ( !firstDataType ) {
-				firstDataType = type;
-			}
-		}
-
-		// Or just use first one
-		finalDataType = finalDataType || firstDataType;
-	}
-
-	// If we found a dataType
-	// We add the dataType to the list if needed
-	// and return the corresponding response
-	if ( finalDataType ) {
-		if ( finalDataType !== dataTypes[ 0 ] ) {
-			dataTypes.unshift( finalDataType );
-		}
-		return responses[ finalDataType ];
-	}
-}
-
-/* Chain conversions given the request and the original response
- * Also sets the responseXXX fields on the jqXHR instance
- */
-function ajaxConvert( s, response, jqXHR, isSuccess ) {
-	var conv2, current, conv, tmp, prev,
-		converters = {},
-
-		// Work with a copy of dataTypes in case we need to modify it for conversion
-		dataTypes = s.dataTypes.slice();
-
-	// Create converters map with lowercased keys
-	if ( dataTypes[ 1 ] ) {
-		for ( conv in s.converters ) {
-			converters[ conv.toLowerCase() ] = s.converters[ conv ];
-		}
-	}
-
-	current = dataTypes.shift();
-
-	// Convert to each sequential dataType
-	while ( current ) {
-
-		if ( s.responseFields[ current ] ) {
-			jqXHR[ s.responseFields[ current ] ] = response;
-		}
-
-		// Apply the dataFilter if provided
-		if ( !prev && isSuccess && s.dataFilter ) {
-			response = s.dataFilter( response, s.dataType );
-		}
-
-		prev = current;
-		current = dataTypes.shift();
-
-		if ( current ) {
-
-			// There's only work to do if current dataType is non-auto
-			if ( current === "*" ) {
-
-				current = prev;
-
-			// Convert response if prev dataType is non-auto and differs from current
-			} else if ( prev !== "*" && prev !== current ) {
-
-				// Seek a direct converter
-				conv = converters[ prev + " " + current ] || converters[ "* " + current ];
-
-				// If none found, seek a pair
-				if ( !conv ) {
-					for ( conv2 in converters ) {
-
-						// If conv2 outputs current
-						tmp = conv2.split( " " );
-						if ( tmp[ 1 ] === current ) {
-
-							// If prev can be converted to accepted input
-							conv = converters[ prev + " " + tmp[ 0 ] ] ||
-								converters[ "* " + tmp[ 0 ] ];
-							if ( conv ) {
-
-								// Condense equivalence converters
-								if ( conv === true ) {
-									conv = converters[ conv2 ];
-
-								// Otherwise, insert the intermediate dataType
-								} else if ( converters[ conv2 ] !== true ) {
-									current = tmp[ 0 ];
-									dataTypes.unshift( tmp[ 1 ] );
-								}
-								break;
-							}
-						}
-					}
-				}
-
-				// Apply converter (if not an equivalence)
-				if ( conv !== true ) {
-
-					// Unless errors are allowed to bubble, catch and return them
-					if ( conv && s.throws ) {
-						response = conv( response );
-					} else {
-						try {
-							response = conv( response );
-						} catch ( e ) {
-							return {
-								state: "parsererror",
-								error: conv ? e : "No conversion from " + prev + " to " + current
-							};
-						}
-					}
-				}
-			}
-		}
-	}
-
-	return { state: "success", data: response };
-}
-
-jQuery.extend( {
-
-	// Counter for holding the number of active queries
-	active: 0,
-
-	// Last-Modified header cache for next request
-	lastModified: {},
-	etag: {},
-
-	ajaxSettings: {
-		url: location.href,
-		type: "GET",
-		isLocal: rlocalProtocol.test( location.protocol ),
-		global: true,
-		processData: true,
-		async: true,
-		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
-
-		/*
-		timeout: 0,
-		data: null,
-		dataType: null,
-		username: null,
-		password: null,
-		cache: null,
-		throws: false,
-		traditional: false,
-		headers: {},
-		*/
-
-		accepts: {
-			"*": allTypes,
-			text: "text/plain",
-			html: "text/html",
-			xml: "application/xml, text/xml",
-			json: "application/json, text/javascript"
-		},
-
-		contents: {
-			xml: /\bxml\b/,
-			html: /\bhtml/,
-			json: /\bjson\b/
-		},
-
-		responseFields: {
-			xml: "responseXML",
-			text: "responseText",
-			json: "responseJSON"
-		},
-
-		// Data converters
-		// Keys separate source (or catchall "*") and destination types with a single space
-		converters: {
-
-			// Convert anything to text
-			"* text": String,
-
-			// Text to html (true = no transformation)
-			"text html": true,
-
-			// Evaluate text as a json expression
-			"text json": JSON.parse,
-
-			// Parse text as xml
-			"text xml": jQuery.parseXML
-		},
-
-		// For options that shouldn't be deep extended:
-		// you can add your own custom options here if
-		// and when you create one that shouldn't be
-		// deep extended (see ajaxExtend)
-		flatOptions: {
-			url: true,
-			context: true
-		}
-	},
-
-	// Creates a full fledged settings object into target
-	// with both ajaxSettings and settings fields.
-	// If target is omitted, writes into ajaxSettings.
-	ajaxSetup: function( target, settings ) {
-		return settings ?
-
-			// Building a settings object
-			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :
-
-			// Extending ajaxSettings
-			ajaxExtend( jQuery.ajaxSettings, target );
-	},
-
-	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
-	ajaxTransport: addToPrefiltersOrTransports( transports ),
-
-	// Main method
-	ajax: function( url, options ) {
-
-		// If url is an object, simulate pre-1.5 signature
-		if ( typeof url === "object" ) {
-			options = url;
-			url = undefined;
-		}
-
-		// Force options to be an object
-		options = options || {};
-
-		var transport,
-
-			// URL without anti-cache param
-			cacheURL,
-
-			// Response headers
-			responseHeadersString,
-			responseHeaders,
-
-			// timeout handle
-			timeoutTimer,
-
-			// Url cleanup var
-			urlAnchor,
-
-			// Request state (becomes false upon send and true upon completion)
-			completed,
-
-			// To know if global events are to be dispatched
-			fireGlobals,
-
-			// Loop variable
-			i,
-
-			// uncached part of the url
-			uncached,
-
-			// Create the final options object
-			s = jQuery.ajaxSetup( {}, options ),
-
-			// Callbacks context
-			callbackContext = s.context || s,
-
-			// Context for global events is callbackContext if it is a DOM node or jQuery collection
-			globalEventContext = s.context &&
-				( callbackContext.nodeType || callbackContext.jquery ) ?
-					jQuery( callbackContext ) :
-					jQuery.event,
-
-			// Deferreds
-			deferred = jQuery.Deferred(),
-			completeDeferred = jQuery.Callbacks( "once memory" ),
-
-			// Status-dependent callbacks
-			statusCode = s.statusCode || {},
-
-			// Headers (they are sent all at once)
-			requestHeaders = {},
-			requestHeadersNames = {},
-
-			// Default abort message
-			strAbort = "canceled",
-
-			// Fake xhr
-			jqXHR = {
-				readyState: 0,
-
-				// Builds headers hashtable if needed
-				getResponseHeader: function( key ) {
-					var match;
-					if ( completed ) {
-						if ( !responseHeaders ) {
-							responseHeaders = {};
-							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
-								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
-									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
-										.concat( match[ 2 ] );
-							}
-						}
-						match = responseHeaders[ key.toLowerCase() + " " ];
-					}
-					return match == null ? null : match.join( ", " );
-				},
-
-				// Raw string
-				getAllResponseHeaders: function() {
-					return completed ? responseHeadersString : null;
-				},
-
-				// Caches the header
-				setRequestHeader: function( name, value ) {
-					if ( completed == null ) {
-						name = requestHeadersNames[ name.toLowerCase() ] =
-							requestHeadersNames[ name.toLowerCase() ] || name;
-						requestHeaders[ name ] = value;
-					}
-					return this;
-				},
-
-				// Overrides response content-type header
-				overrideMimeType: function( type ) {
-					if ( completed == null ) {
-						s.mimeType = type;
-					}
-					return this;
-				},
-
-				// Status-dependent callbacks
-				statusCode: function( map ) {
-					var code;
-					if ( map ) {
-						if ( completed ) {
-
-							// Execute the appropriate callbacks
-							jqXHR.always( map[ jqXHR.status ] );
-						} else {
-
-							// Lazy-add the new callbacks in a way that preserves old ones
-							for ( code in map ) {
-								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
-							}
-						}
-					}
-					return this;
-				},
-
-				// Cancel the request
-				abort: function( statusText ) {
-					var finalText = statusText || strAbort;
-					if ( transport ) {
-						transport.abort( finalText );
-					}
-					done( 0, finalText );
-					return this;
-				}
-			};
-
-		// Attach deferreds
-		deferred.promise( jqXHR );
-
-		// Add protocol if not provided (prefilters might expect it)
-		// Handle falsy url in the settings object (#10093: consistency with old signature)
-		// We also use the url parameter if available
-		s.url = ( ( url || s.url || location.href ) + "" )
-			.replace( rprotocol, location.protocol + "//" );
-
-		// Alias method option to type as per ticket #12004
-		s.type = options.method || options.type || s.method || s.type;
-
-		// Extract dataTypes list
-		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];
-
-		// A cross-domain request is in order when the origin doesn't match the current origin.
-		if ( s.crossDomain == null ) {
-			urlAnchor = document.createElement( "a" );
-
-			// Support: IE <=8 - 11, Edge 12 - 15
-			// IE throws exception on accessing the href property if url is malformed,
-			// e.g. http://example.com:80x/
-			try {
-				urlAnchor.href = s.url;
-
-				// Support: IE <=8 - 11 only
-				// Anchor's host property isn't correctly set when s.url is relative
-				urlAnchor.href = urlAnchor.href;
-				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
-					urlAnchor.protocol + "//" + urlAnchor.host;
-			} catch ( e ) {
-
-				// If there is an error parsing the URL, assume it is crossDomain,
-				// it can be rejected by the transport if it is invalid
-				s.crossDomain = true;
-			}
-		}
-
-		// Convert data if not already a string
-		if ( s.data && s.processData && typeof s.data !== "string" ) {
-			s.data = jQuery.param( s.data, s.traditional );
-		}
-
-		// Apply prefilters
-		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );
-
-		// If request was aborted inside a prefilter, stop there
-		if ( completed ) {
-			return jqXHR;
-		}
-
-		// We can fire global events as of now if asked to
-		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
-		fireGlobals = jQuery.event && s.global;
-
-		// Watch for a new set of requests
-		if ( fireGlobals && jQuery.active++ === 0 ) {
-			jQuery.event.trigger( "ajaxStart" );
-		}
-
-		// Uppercase the type
-		s.type = s.type.toUpperCase();
-
-		// Determine if request has content
-		s.hasContent = !rnoContent.test( s.type );
-
-		// Save the URL in case we're toying with the If-Modified-Since
-		// and/or If-None-Match header later on
-		// Remove hash to simplify url manipulation
-		cacheURL = s.url.replace( rhash, "" );
-
-		// More options handling for requests with no content
-		if ( !s.hasContent ) {
-
-			// Remember the hash so we can put it back
-			uncached = s.url.slice( cacheURL.length );
-
-			// If data is available and should be processed, append data to url
-			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
-				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;
-
-				// #9682: remove data so that it's not used in an eventual retry
-				delete s.data;
-			}
-
-			// Add or update anti-cache param if needed
-			if ( s.cache === false ) {
-				cacheURL = cacheURL.replace( rantiCache, "$1" );
-				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
-					uncached;
-			}
-
-			// Put hash and anti-cache on the URL that will be requested (gh-1732)
-			s.url = cacheURL + uncached;
-
-		// Change '%20' to '+' if this is encoded form body content (gh-2658)
-		} else if ( s.data && s.processData &&
-			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
-			s.data = s.data.replace( r20, "+" );
-		}
-
-		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
-		if ( s.ifModified ) {
-			if ( jQuery.lastModified[ cacheURL ] ) {
-				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
-			}
-			if ( jQuery.etag[ cacheURL ] ) {
-				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
-			}
-		}
-
-		// Set the correct header, if data is being sent
-		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
-			jqXHR.setRequestHeader( "Content-Type", s.contentType );
-		}
-
-		// Set the Accepts header for the server, depending on the dataType
-		jqXHR.setRequestHeader(
-			"Accept",
-			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
-				s.accepts[ s.dataTypes[ 0 ] ] +
-					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
-				s.accepts[ "*" ]
-		);
-
-		// Check for headers option
-		for ( i in s.headers ) {
-			jqXHR.setRequestHeader( i, s.headers[ i ] );
-		}
-
-		// Allow custom headers/mimetypes and early abort
-		if ( s.beforeSend &&
-			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {
-
-			// Abort if not done already and return
-			return jqXHR.abort();
-		}
-
-		// Aborting is no longer a cancellation
-		strAbort = "abort";
-
-		// Install callbacks on deferreds
-		completeDeferred.add( s.complete );
-		jqXHR.done( s.success );
-		jqXHR.fail( s.error );
-
-		// Get transport
-		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );
-
-		// If no transport, we auto-abort
-		if ( !transport ) {
-			done( -1, "No Transport" );
-		} else {
-			jqXHR.readyState = 1;
-
-			// Send global event
-			if ( fireGlobals ) {
-				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
-			}
-
-			// If request was aborted inside ajaxSend, stop there
-			if ( completed ) {
-				return jqXHR;
-			}
-
-			// Timeout
-			if ( s.async && s.timeout > 0 ) {
-				timeoutTimer = window.setTimeout( function() {
-					jqXHR.abort( "timeout" );
-				}, s.timeout );
-			}
-
-			try {
-				completed = false;
-				transport.send( requestHeaders, done );
-			} catch ( e ) {
-
-				// Rethrow post-completion exceptions
-				if ( completed ) {
-					throw e;
-				}
-
-				// Propagate others as results
-				done( -1, e );
-			}
-		}
-
-		// Callback for when everything is done
-		function done( status, nativeStatusText, responses, headers ) {
-			var isSuccess, success, error, response, modified,
-				statusText = nativeStatusText;
-
-			// Ignore repeat invocations
-			if ( completed ) {
-				return;
-			}
-
-			completed = true;
-
-			// Clear timeout if it exists
-			if ( timeoutTimer ) {
-				window.clearTimeout( timeoutTimer );
-			}
-
-			// Dereference transport for early garbage collection
-			// (no matter how long the jqXHR object will be used)
-			transport = undefined;
-
-			// Cache response headers
-			responseHeadersString = headers || "";
-
-			// Set readyState
-			jqXHR.readyState = status > 0 ? 4 : 0;
-
-			// Determine if successful
-			isSuccess = status >= 200 && status < 300 || status === 304;
-
-			// Get response data
-			if ( responses ) {
-				response = ajaxHandleResponses( s, jqXHR, responses );
-			}
-
-			// Use a noop converter for missing script
-			if ( !isSuccess && jQuery.inArray( "script", s.dataTypes ) > -1 ) {
-				s.converters[ "text script" ] = function() {};
-			}
-
-			// Convert no matter what (that way responseXXX fields are always set)
-			response = ajaxConvert( s, response, jqXHR, isSuccess );
-
-			// If successful, handle type chaining
-			if ( isSuccess ) {
-
-				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
-				if ( s.ifModified ) {
-					modified = jqXHR.getResponseHeader( "Last-Modified" );
-					if ( modified ) {
-						jQuery.lastModified[ cacheURL ] = modified;
-					}
-					modified = jqXHR.getResponseHeader( "etag" );
-					if ( modified ) {
-						jQuery.etag[ cacheURL ] = modified;
-					}
-				}
-
-				// if no content
-				if ( status === 204 || s.type === "HEAD" ) {
-					statusText = "nocontent";
-
-				// if not modified
-				} else if ( status === 304 ) {
-					statusText = "notmodified";
-
-				// If we have data, let's convert it
-				} else {
-					statusText = response.state;
-					success = response.data;
-					error = response.error;
-					isSuccess = !error;
-				}
-			} else {
-
-				// Extract error from statusText and normalize for non-aborts
-				error = statusText;
-				if ( status || !statusText ) {
-					statusText = "error";
-					if ( status < 0 ) {
-						status = 0;
-					}
-				}
-			}
-
-			// Set data for the fake xhr object
-			jqXHR.status = status;
-			jqXHR.statusText = ( nativeStatusText || statusText ) + "";
-
-			// Success/Error
-			if ( isSuccess ) {
-				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
-			} else {
-				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
-			}
-
-			// Status-dependent callbacks
-			jqXHR.statusCode( statusCode );
-			statusCode = undefined;
-
-			if ( fireGlobals ) {
-				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
-					[ jqXHR, s, isSuccess ? success : error ] );
-			}
-
-			// Complete
-			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );
-
-			if ( fireGlobals ) {
-				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
-
-				// Handle the global AJAX counter
-				if ( !( --jQuery.active ) ) {
-					jQuery.event.trigger( "ajaxStop" );
-				}
-			}
-		}
-
-		return jqXHR;
-	},
-
-	getJSON: function( url, data, callback ) {
-		return jQuery.get( url, data, callback, "json" );
-	},
-
-	getScript: function( url, callback ) {
-		return jQuery.get( url, undefined, callback, "script" );
-	}
-} );
-
-jQuery.each( [ "get", "post" ], function( _i, method ) {
-	jQuery[ method ] = function( url, data, callback, type ) {
-
-		// Shift arguments if data argument was omitted
-		if ( isFunction( data ) ) {
-			type = type || callback;
-			callback = data;
-			data = undefined;
-		}
-
-		// The url can be an options object (which then must have .url)
-		return jQuery.ajax( jQuery.extend( {
-			url: url,
-			type: method,
-			dataType: type,
-			data: data,
-			success: callback
-		}, jQuery.isPlainObject( url ) && url ) );
-	};
-} );
-
-jQuery.ajaxPrefilter( function( s ) {
-	var i;
-	for ( i in s.headers ) {
-		if ( i.toLowerCase() === "content-type" ) {
-			s.contentType = s.headers[ i ] || "";
-		}
-	}
-} );
-
-
-jQuery._evalUrl = function( url, options, doc ) {
-	return jQuery.ajax( {
-		url: url,
-
-		// Make this explicit, since user can override this through ajaxSetup (#11264)
-		type: "GET",
-		dataType: "script",
-		cache: true,
-		async: false,
-		global: false,
-
-		// Only evaluate the response if it is successful (gh-4126)
-		// dataFilter is not invoked for failure responses, so using it instead
-		// of the default converter is kludgy but it works.
-		converters: {
-			"text script": function() {}
-		},
-		dataFilter: function( response ) {
-			jQuery.globalEval( response, options, doc );
-		}
-	} );
-};
-
-
-jQuery.fn.extend( {
-	wrapAll: function( html ) {
-		var wrap;
-
-		if ( this[ 0 ] ) {
-			if ( isFunction( html ) ) {
-				html = html.call( this[ 0 ] );
-			}
-
-			// The elements to wrap the target around
-			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );
-
-			if ( this[ 0 ].parentNode ) {
-				wrap.insertBefore( this[ 0 ] );
-			}
-
-			wrap.map( function() {
-				var elem = this;
-
-				while ( elem.firstElementChild ) {
-					elem = elem.firstElementChild;
-				}
-
-				return elem;
-			} ).append( this );
-		}
-
-		return this;
-	},
-
-	wrapInner: function( html ) {
-		if ( isFunction( html ) ) {
-			return this.each( function( i ) {
-				jQuery( this ).wrapInner( html.call( this, i ) );
-			} );
-		}
-
-		return this.each( function() {
-			var self = jQuery( this ),
-				contents = self.contents();
-
-			if ( contents.length ) {
-				contents.wrapAll( html );
-
-			} else {
-				self.append( html );
-			}
-		} );
-	},
-
-	wrap: function( html ) {
-		var htmlIsFunction = isFunction( html );
-
-		return this.each( function( i ) {
-			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
-		} );
-	},
-
-	unwrap: function( selector ) {
-		this.parent( selector ).not( "body" ).each( function() {
-			jQuery( this ).replaceWith( this.childNodes );
-		} );
-		return this;
-	}
-} );
-
-
-jQuery.expr.pseudos.hidden = function( elem ) {
-	return !jQuery.expr.pseudos.visible( elem );
-};
-jQuery.expr.pseudos.visible = function( elem ) {
-	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
-};
-
-
-
-
-jQuery.ajaxSettings.xhr = function() {
-	try {
-		return new window.XMLHttpRequest();
-	} catch ( e ) {}
-};
-
-var xhrSuccessStatus = {
-
-		// File protocol always yields status code 0, assume 200
-		0: 200,
-
-		// Support: IE <=9 only
-		// #1450: sometimes IE returns 1223 when it should be 204
-		1223: 204
-	},
-	xhrSupported = jQuery.ajaxSettings.xhr();
-
-support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
-support.ajax = xhrSupported = !!xhrSupported;
-
-jQuery.ajaxTransport( function( options ) {
-	var callback, errorCallback;
-
-	// Cross domain only allowed if supported through XMLHttpRequest
-	if ( support.cors || xhrSupported && !options.crossDomain ) {
-		return {
-			send: function( headers, complete ) {
-				var i,
-					xhr = options.xhr();
-
-				xhr.open(
-					options.type,
-					options.url,
-					options.async,
-					options.username,
-					options.password
-				);
-
-				// Apply custom fields if provided
-				if ( options.xhrFields ) {
-					for ( i in options.xhrFields ) {
-						xhr[ i ] = options.xhrFields[ i ];
-					}
-				}
-
-				// Override mime type if needed
-				if ( options.mimeType && xhr.overrideMimeType ) {
-					xhr.overrideMimeType( options.mimeType );
-				}
-
-				// X-Requested-With header
-				// For cross-domain requests, seeing as conditions for a preflight are
-				// akin to a jigsaw puzzle, we simply never set it to be sure.
-				// (it can always be set on a per-request basis or even using ajaxSetup)
-				// For same-domain requests, won't change header if already provided.
-				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
-					headers[ "X-Requested-With" ] = "XMLHttpRequest";
-				}
-
-				// Set headers
-				for ( i in headers ) {
-					xhr.setRequestHeader( i, headers[ i ] );
-				}
-
-				// Callback
-				callback = function( type ) {
-					return function() {
-						if ( callback ) {
-							callback = errorCallback = xhr.onload =
-								xhr.onerror = xhr.onabort = xhr.ontimeout =
-									xhr.onreadystatechange = null;
-
-							if ( type === "abort" ) {
-								xhr.abort();
-							} else if ( type === "error" ) {
-
-								// Support: IE <=9 only
-								// On a manual native abort, IE9 throws
-								// errors on any property access that is not readyState
-								if ( typeof xhr.status !== "number" ) {
-									complete( 0, "error" );
-								} else {
-									complete(
-
-										// File: protocol always yields status 0; see #8605, #14207
-										xhr.status,
-										xhr.statusText
-									);
-								}
-							} else {
-								complete(
-									xhrSuccessStatus[ xhr.status ] || xhr.status,
-									xhr.statusText,
-
-									// Support: IE <=9 only
-									// IE9 has no XHR2 but throws on binary (trac-11426)
-									// For XHR2 non-text, let the caller handle it (gh-2498)
-									( xhr.responseType || "text" ) !== "text"  ||
-									typeof xhr.responseText !== "string" ?
-										{ binary: xhr.response } :
-										{ text: xhr.responseText },
-									xhr.getAllResponseHeaders()
-								);
-							}
-						}
-					};
-				};
-
-				// Listen to events
-				xhr.onload = callback();
-				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );
-
-				// Support: IE 9 only
-				// Use onreadystatechange to replace onabort
-				// to handle uncaught aborts
-				if ( xhr.onabort !== undefined ) {
-					xhr.onabort = errorCallback;
-				} else {
-					xhr.onreadystatechange = function() {
-
-						// Check readyState before timeout as it changes
-						if ( xhr.readyState === 4 ) {
-
-							// Allow onerror to be called first,
-							// but that will not handle a native abort
-							// Also, save errorCallback to a variable
-							// as xhr.onerror cannot be accessed
-							window.setTimeout( function() {
-								if ( callback ) {
-									errorCallback();
-								}
-							} );
-						}
-					};
-				}
-
-				// Create the abort callback
-				callback = callback( "abort" );
-
-				try {
-
-					// Do send the request (this may raise an exception)
-					xhr.send( options.hasContent && options.data || null );
-				} catch ( e ) {
-
-					// #14683: Only rethrow if this hasn't been notified as an error yet
-					if ( callback ) {
-						throw e;
-					}
-				}
-			},
-
-			abort: function() {
-				if ( callback ) {
-					callback();
-				}
-			}
-		};
-	}
-} );
-
-
-
-
-// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
-jQuery.ajaxPrefilter( function( s ) {
-	if ( s.crossDomain ) {
-		s.contents.script = false;
-	}
-} );
-
-// Install script dataType
-jQuery.ajaxSetup( {
-	accepts: {
-		script: "text/javascript, application/javascript, " +
-			"application/ecmascript, application/x-ecmascript"
-	},
-	contents: {
-		script: /\b(?:java|ecma)script\b/
-	},
-	converters: {
-		"text script": function( text ) {
-			jQuery.globalEval( text );
-			return text;
-		}
-	}
-} );
-
-// Handle cache's special case and crossDomain
-jQuery.ajaxPrefilter( "script", function( s ) {
-	if ( s.cache === undefined ) {
-		s.cache = false;
-	}
-	if ( s.crossDomain ) {
-		s.type = "GET";
-	}
-} );
-
-// Bind script tag hack transport
-jQuery.ajaxTransport( "script", function( s ) {
-
-	// This transport only deals with cross domain or forced-by-attrs requests
-	if ( s.crossDomain || s.scriptAttrs ) {
-		var script, callback;
-		return {
-			send: function( _, complete ) {
-				script = jQuery( "<script>" )
-					.attr( s.scriptAttrs || {} )
-					.prop( { charset: s.scriptCharset, src: s.url } )
-					.on( "load error", callback = function( evt ) {
-						script.remove();
-						callback = null;
-						if ( evt ) {
-							complete( evt.type === "error" ? 404 : 200, evt.type );
-						}
-					} );
-
-				// Use native DOM manipulation to avoid our domManip AJAX trickery
-				document.head.appendChild( script[ 0 ] );
-			},
-			abort: function() {
-				if ( callback ) {
-					callback();
-				}
-			}
-		};
-	}
-} );
-
-
-
-
-var oldCallbacks = [],
-	rjsonp = /(=)\?(?=&|$)|\?\?/;
-
-// Default jsonp settings
-jQuery.ajaxSetup( {
-	jsonp: "callback",
-	jsonpCallback: function() {
-		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
-		this[ callback ] = true;
-		return callback;
-	}
-} );
-
-// Detect, normalize options and install callbacks for jsonp requests
-jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
-
-	var callbackName, overwritten, responseContainer,
-		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
-			"url" :
-			typeof s.data === "string" &&
-				( s.contentType || "" )
-					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
-				rjsonp.test( s.data ) && "data"
-		);
-
-	// Handle iff the expected data type is "jsonp" or we have a parameter to set
-	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {
-
-		// Get callback name, remembering preexisting value associated with it
-		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
-			s.jsonpCallback() :
-			s.jsonpCallback;
-
-		// Insert callback into url or form data
-		if ( jsonProp ) {
-			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
-		} else if ( s.jsonp !== false ) {
-			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
-		}
-
-		// Use data converter to retrieve json after script execution
-		s.converters[ "script json" ] = function() {
-			if ( !responseContainer ) {
-				jQuery.error( callbackName + " was not called" );
-			}
-			return responseContainer[ 0 ];
-		};
-
-		// Force json dataType
-		s.dataTypes[ 0 ] = "json";
-
-		// Install callback
-		overwritten = window[ callbackName ];
-		window[ callbackName ] = function() {
-			responseContainer = arguments;
-		};
-
-		// Clean-up function (fires after converters)
-		jqXHR.always( function() {
-
-			// If previous value didn't exist - remove it
-			if ( overwritten === undefined ) {
-				jQuery( window ).removeProp( callbackName );
-
-			// Otherwise restore preexisting value
-			} else {
-				window[ callbackName ] = overwritten;
-			}
-
-			// Save back as free
-			if ( s[ callbackName ] ) {
-
-				// Make sure that re-using the options doesn't screw things around
-				s.jsonpCallback = originalSettings.jsonpCallback;
-
-				// Save the callback name for future use
-				oldCallbacks.push( callbackName );
-			}
-
-			// Call if it was a function and we have a response
-			if ( responseContainer && isFunction( overwritten ) ) {
-				overwritten( responseContainer[ 0 ] );
-			}
-
-			responseContainer = overwritten = undefined;
-		} );
-
-		// Delegate to script
-		return "script";
-	}
-} );
-
-
-
-
-// Support: Safari 8 only
-// In Safari 8 documents created via document.implementation.createHTMLDocument
-// collapse sibling forms: the second one becomes a child of the first one.
-// Because of that, this security measure has to be disabled in Safari 8.
-// https://bugs.webkit.org/show_bug.cgi?id=137337
-support.createHTMLDocument = ( function() {
-	var body = document.implementation.createHTMLDocument( "" ).body;
-	body.innerHTML = "<form></form><form></form>";
-	return body.childNodes.length === 2;
-} )();
-
-
-// Argument "data" should be string of html
-// context (optional): If specified, the fragment will be created in this context,
-// defaults to document
-// keepScripts (optional): If true, will include scripts passed in the html string
-jQuery.parseHTML = function( data, context, keepScripts ) {
-	if ( typeof data !== "string" ) {
-		return [];
-	}
-	if ( typeof context === "boolean" ) {
-		keepScripts = context;
-		context = false;
-	}
-
-	var base, parsed, scripts;
-
-	if ( !context ) {
-
-		// Stop scripts or inline event handlers from being executed immediately
-		// by using document.implementation
-		if ( support.createHTMLDocument ) {
-			context = document.implementation.createHTMLDocument( "" );
-
-			// Set the base href for the created document
-			// so any parsed elements with URLs
-			// are based on the document's URL (gh-2965)
-			base = context.createElement( "base" );
-			base.href = document.location.href;
-			context.head.appendChild( base );
-		} else {
-			context = document;
-		}
-	}
-
-	parsed = rsingleTag.exec( data );
-	scripts = !keepScripts && [];
-
-	// Single tag
-	if ( parsed ) {
-		return [ context.createElement( parsed[ 1 ] ) ];
-	}
-
-	parsed = buildFragment( [ data ], context, scripts );
-
-	if ( scripts && scripts.length ) {
-		jQuery( scripts ).remove();
-	}
-
-	return jQuery.merge( [], parsed.childNodes );
-};
-
-
-/**
- * Load a url into a page
- */
-jQuery.fn.load = function( url, params, callback ) {
-	var selector, type, response,
-		self = this,
-		off = url.indexOf( " " );
-
-	if ( off > -1 ) {
-		selector = stripAndCollapse( url.slice( off ) );
-		url = url.slice( 0, off );
-	}
-
-	// If it's a function
-	if ( isFunction( params ) ) {
-
-		// We assume that it's the callback
-		callback = params;
-		params = undefined;
-
-	// Otherwise, build a param string
-	} else if ( params && typeof params === "object" ) {
-		type = "POST";
-	}
-
-	// If we have elements to modify, make the request
-	if ( self.length > 0 ) {
-		jQuery.ajax( {
-			url: url,
-
-			// If "type" variable is undefined, then "GET" method will be used.
-			// Make value of this field explicit since
-			// user can override it through ajaxSetup method
-			type: type || "GET",
-			dataType: "html",
-			data: params
-		} ).done( function( responseText ) {
-
-			// Save response for use in complete callback
-			response = arguments;
-
-			self.html( selector ?
-
-				// If a selector was specified, locate the right elements in a dummy div
-				// Exclude scripts to avoid IE 'Permission Denied' errors
-				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :
-
-				// Otherwise use the full result
-				responseText );
-
-		// If the request succeeds, this function gets "data", "status", "jqXHR"
-		// but they are ignored because response was set above.
-		// If it fails, this function gets "jqXHR", "status", "error"
-		} ).always( callback && function( jqXHR, status ) {
-			self.each( function() {
-				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
-			} );
-		} );
-	}
-
-	return this;
-};
-
-
-
-
-jQuery.expr.pseudos.animated = function( elem ) {
-	return jQuery.grep( jQuery.timers, function( fn ) {
-		return elem === fn.elem;
-	} ).length;
-};
-
-
-
-
-jQuery.offset = {
-	setOffset: function( elem, options, i ) {
-		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
-			position = jQuery.css( elem, "position" ),
-			curElem = jQuery( elem ),
-			props = {};
-
-		// Set position first, in-case top/left are set even on static elem
-		if ( position === "static" ) {
-			elem.style.position = "relative";
-		}
-
-		curOffset = curElem.offset();
-		curCSSTop = jQuery.css( elem, "top" );
-		curCSSLeft = jQuery.css( elem, "left" );
-		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
-			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;
-
-		// Need to be able to calculate position if either
-		// top or left is auto and position is either absolute or fixed
-		if ( calculatePosition ) {
-			curPosition = curElem.position();
-			curTop = curPosition.top;
-			curLeft = curPosition.left;
-
-		} else {
-			curTop = parseFloat( curCSSTop ) || 0;
-			curLeft = parseFloat( curCSSLeft ) || 0;
-		}
-
-		if ( isFunction( options ) ) {
-
-			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
-			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
-		}
-
-		if ( options.top != null ) {
-			props.top = ( options.top - curOffset.top ) + curTop;
-		}
-		if ( options.left != null ) {
-			props.left = ( options.left - curOffset.left ) + curLeft;
-		}
-
-		if ( "using" in options ) {
-			options.using.call( elem, props );
-
-		} else {
-			if ( typeof props.top === "number" ) {
-				props.top += "px";
-			}
-			if ( typeof props.left === "number" ) {
-				props.left += "px";
-			}
-			curElem.css( props );
-		}
-	}
-};
-
-jQuery.fn.extend( {
-
-	// offset() relates an element's border box to the document origin
-	offset: function( options ) {
-
-		// Preserve chaining for setter
-		if ( arguments.length ) {
-			return options === undefined ?
-				this :
-				this.each( function( i ) {
-					jQuery.offset.setOffset( this, options, i );
-				} );
-		}
-
-		var rect, win,
-			elem = this[ 0 ];
-
-		if ( !elem ) {
-			return;
-		}
-
-		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
-		// Support: IE <=11 only
-		// Running getBoundingClientRect on a
-		// disconnected node in IE throws an error
-		if ( !elem.getClientRects().length ) {
-			return { top: 0, left: 0 };
-		}
-
-		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
-		rect = elem.getBoundingClientRect();
-		win = elem.ownerDocument.defaultView;
-		return {
-			top: rect.top + win.pageYOffset,
-			left: rect.left + win.pageXOffset
-		};
-	},
-
-	// position() relates an element's margin box to its offset parent's padding box
-	// This corresponds to the behavior of CSS absolute positioning
-	position: function() {
-		if ( !this[ 0 ] ) {
-			return;
-		}
-
-		var offsetParent, offset, doc,
-			elem = this[ 0 ],
-			parentOffset = { top: 0, left: 0 };
-
-		// position:fixed elements are offset from the viewport, which itself always has zero offset
-		if ( jQuery.css( elem, "position" ) === "fixed" ) {
-
-			// Assume position:fixed implies availability of getBoundingClientRect
-			offset = elem.getBoundingClientRect();
-
-		} else {
-			offset = this.offset();
-
-			// Account for the *real* offset parent, which can be the document or its root element
-			// when a statically positioned element is identified
-			doc = elem.ownerDocument;
-			offsetParent = elem.offsetParent || doc.documentElement;
-			while ( offsetParent &&
-				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
-				jQuery.css( offsetParent, "position" ) === "static" ) {
-
-				offsetParent = offsetParent.parentNode;
-			}
-			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {
-
-				// Incorporate borders into its offset, since they are outside its content origin
-				parentOffset = jQuery( offsetParent ).offset();
-				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
-				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
-			}
-		}
-
-		// Subtract parent offsets and element margins
-		return {
-			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
-			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
-		};
-	},
-
-	// This method will return documentElement in the following cases:
-	// 1) For the element inside the iframe without offsetParent, this method will return
-	//    documentElement of the parent window
-	// 2) For the hidden or detached element
-	// 3) For body or html element, i.e. in case of the html node - it will return itself
-	//
-	// but those exceptions were never presented as a real life use-cases
-	// and might be considered as more preferable results.
-	//
-	// This logic, however, is not guaranteed and can change at any point in the future
-	offsetParent: function() {
-		return this.map( function() {
-			var offsetParent = this.offsetParent;
-
-			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
-				offsetParent = offsetParent.offsetParent;
-			}
-
-			return offsetParent || documentElement;
-		} );
-	}
-} );
-
-// Create scrollLeft and scrollTop methods
-jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
-	var top = "pageYOffset" === prop;
-
-	jQuery.fn[ method ] = function( val ) {
-		return access( this, function( elem, method, val ) {
-
-			// Coalesce documents and windows
-			var win;
-			if ( isWindow( elem ) ) {
-				win = elem;
-			} else if ( elem.nodeType === 9 ) {
-				win = elem.defaultView;
-			}
-
-			if ( val === undefined ) {
-				return win ? win[ prop ] : elem[ method ];
-			}
-
-			if ( win ) {
-				win.scrollTo(
-					!top ? val : win.pageXOffset,
-					top ? val : win.pageYOffset
-				);
-
-			} else {
-				elem[ method ] = val;
-			}
-		}, method, val, arguments.length );
-	};
-} );
-
-// Support: Safari <=7 - 9.1, Chrome <=37 - 49
-// Add the top/left cssHooks using jQuery.fn.position
-// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
-// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
-// getComputedStyle returns percent when specified for top/left/bottom/right;
-// rather than make the css module depend on the offset module, just check for it here
-jQuery.each( [ "top", "left" ], function( _i, prop ) {
-	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
-		function( elem, computed ) {
-			if ( computed ) {
-				computed = curCSS( elem, prop );
-
-				// If curCSS returns percentage, fallback to offset
-				return rnumnonpx.test( computed ) ?
-					jQuery( elem ).position()[ prop ] + "px" :
-					computed;
-			}
-		}
-	);
-} );
-
-
-// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
-jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
-	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
-		function( defaultExtra, funcName ) {
-
-		// Margin is only for outerHeight, outerWidth
-		jQuery.fn[ funcName ] = function( margin, value ) {
-			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
-				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
-
-			return access( this, function( elem, type, value ) {
-				var doc;
-
-				if ( isWindow( elem ) ) {
-
-					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
-					return funcName.indexOf( "outer" ) === 0 ?
-						elem[ "inner" + name ] :
-						elem.document.documentElement[ "client" + name ];
-				}
-
-				// Get document width or height
-				if ( elem.nodeType === 9 ) {
-					doc = elem.documentElement;
-
-					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
-					// whichever is greatest
-					return Math.max(
-						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
-						elem.body[ "offset" + name ], doc[ "offset" + name ],
-						doc[ "client" + name ]
-					);
-				}
-
-				return value === undefined ?
-
-					// Get width or height on the element, requesting but not forcing parseFloat
-					jQuery.css( elem, type, extra ) :
-
-					// Set width or height on the element
-					jQuery.style( elem, type, value, extra );
-			}, type, chainable ? margin : undefined, chainable );
-		};
-	} );
-} );
-
-
-jQuery.each( [
-	"ajaxStart",
-	"ajaxStop",
-	"ajaxComplete",
-	"ajaxError",
-	"ajaxSuccess",
-	"ajaxSend"
-], function( _i, type ) {
-	jQuery.fn[ type ] = function( fn ) {
-		return this.on( type, fn );
-	};
-} );
-
-
-
-
-jQuery.fn.extend( {
-
-	bind: function( types, data, fn ) {
-		return this.on( types, null, data, fn );
-	},
-	unbind: function( types, fn ) {
-		return this.off( types, null, fn );
-	},
-
-	delegate: function( selector, types, data, fn ) {
-		return this.on( types, selector, data, fn );
-	},
-	undelegate: function( selector, types, fn ) {
-
-		// ( namespace ) or ( selector, types [, fn] )
-		return arguments.length === 1 ?
-			this.off( selector, "**" ) :
-			this.off( types, selector || "**", fn );
-	},
-
-	hover: function( fnOver, fnOut ) {
-		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
-	}
-} );
-
-jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
-	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
-	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
-	function( _i, name ) {
-
-		// Handle event binding
-		jQuery.fn[ name ] = function( data, fn ) {
-			return arguments.length > 0 ?
-				this.on( name, null, data, fn ) :
-				this.trigger( name );
-		};
-	} );
-
-
-
-
-// Support: Android <=4.0 only
-// Make sure we trim BOM and NBSP
-var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
-
-// Bind a function to a context, optionally partially applying any
-// arguments.
-// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
-// However, it is not slated for removal any time soon
-jQuery.proxy = function( fn, context ) {
-	var tmp, args, proxy;
-
-	if ( typeof context === "string" ) {
-		tmp = fn[ context ];
-		context = fn;
-		fn = tmp;
-	}
-
-	// Quick check to determine if target is callable, in the spec
-	// this throws a TypeError, but we will just return undefined.
-	if ( !isFunction( fn ) ) {
-		return undefined;
-	}
-
-	// Simulated bind
-	args = slice.call( arguments, 2 );
-	proxy = function() {
-		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
-	};
-
-	// Set the guid of unique handler to the same of original handler, so it can be removed
-	proxy.guid = fn.guid = fn.guid || jQuery.guid++;
-
-	return proxy;
-};
-
-jQuery.holdReady = function( hold ) {
-	if ( hold ) {
-		jQuery.readyWait++;
-	} else {
-		jQuery.ready( true );
-	}
-};
-jQuery.isArray = Array.isArray;
-jQuery.parseJSON = JSON.parse;
-jQuery.nodeName = nodeName;
-jQuery.isFunction = isFunction;
-jQuery.isWindow = isWindow;
-jQuery.camelCase = camelCase;
-jQuery.type = toType;
-
-jQuery.now = Date.now;
-
-jQuery.isNumeric = function( obj ) {
-
-	// As of jQuery 3.0, isNumeric is limited to
-	// strings and numbers (primitives or objects)
-	// that can be coerced to finite numbers (gh-2662)
-	var type = jQuery.type( obj );
-	return ( type === "number" || type === "string" ) &&
-
-		// parseFloat NaNs numeric-cast false positives ("")
-		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
-		// subtraction forces infinities to NaN
-		!isNaN( obj - parseFloat( obj ) );
-};
-
-jQuery.trim = function( text ) {
-	return text == null ?
-		"" :
-		( text + "" ).replace( rtrim, "" );
-};
-
-
-
-// Register as a named AMD module, since jQuery can be concatenated with other
-// files that may use define, but not via a proper concatenation script that
-// understands anonymous AMD modules. A named AMD is safest and most robust
-// way to register. Lowercase jquery is used because AMD module names are
-// derived from file names, and jQuery is normally delivered in a lowercase
-// file name. Do this after creating the global so that if an AMD module wants
-// to call noConflict to hide this version of jQuery, it will work.
-
-// Note that for maximum portability, libraries that are not jQuery should
-// declare themselves as anonymous modules, and avoid setting a global if an
-// AMD loader is present. jQuery is a special case. For more information, see
-// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
-
-if ( typeof define === "function" && define.amd ) {
-	define( "jquery", [], function() {
-		return jQuery;
-	} );
-}
-
-
-
-
-var
-
-	// Map over jQuery in case of overwrite
-	_jQuery = window.jQuery,
-
-	// Map over the $ in case of overwrite
-	_$ = window.$;
-
-jQuery.noConflict = function( deep ) {
-	if ( window.$ === jQuery ) {
-		window.$ = _$;
-	}
-
-	if ( deep && window.jQuery === jQuery ) {
-		window.jQuery = _jQuery;
-	}
-
-	return jQuery;
-};
-
-// Expose jQuery and $ identifiers, even in AMD
-// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
-// and CommonJS for browser emulators (#13566)
-if ( typeof noGlobal === "undefined" ) {
-	window.jQuery = window.$ = jQuery;
-}
-
-
-
-
-return jQuery;
-} );
diff --git a/hadoop-tools/hadoop-sls/src/main/html/showSimulationTrace.html b/hadoop-tools/hadoop-sls/src/main/html/showSimulationTrace.html
deleted file mode 100644
index e5dbc037505..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/showSimulationTrace.html
+++ /dev/null
@@ -1,376 +0,0 @@
-<!--
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
-
-   http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License. See accompanying LICENSE file.
--->
-<!doctype>
-<html>
-<head>
-  <meta charset="utf-8">
-  <link rel="stylesheet" href="css/bootstrap.min.css" media="screen">
-  <link rel="stylesheet" href="css/bootstrap-responsive.min.css">
-  <style type="text/css">
-    body {
-    font: 20px sans-serif;
-    }
-
-    .axis path,
-    .axis line {
-    fill: none;
-    stroke: #000;
-    shape-rendering: crispEdges;
-    }
-    .axis text {
-    font-family: sans-serif;
-    font-size: 20px;
-    }
-
-    .line {
-    fill: none;
-    stroke: steelblue;
-    stroke-width: 3px;
-    }
-
-    .legend {
-    padding: 1px;
-    font: 18px sans-serif;
-    background: yellow;
-    box-shadow: 2px 2px 1px #888;
-    }
-
-    .title {
-    font: 24px sans-serif;
-    }
-    .divborder {
-    border-width: 1px;
-    border-style: solid;
-    border-color: black;
-    margin-top:10px
-    }
-  </style>
-  <script src="js/thirdparty/d3.v3.js"></script>
-  <script src="js/thirdparty/jquery.js"></script>
-  <script src="js/thirdparty/bootstrap.min.js"></script>
-
-</head>
-
-<body>
-<div class="row">
-  <div class="offset5" style="margin-top:20px; margin-bottom:20px">
-    Select the generated metrics log file (realtimetrack.json): <input type='file' id='jsonfile' /> <input type='button' value='Generate !' onClick='draw()' /><br>
-  </div>
-</div>
-
-<div>
-  <div id="error-div" style="display:none">
-    <div class="alert alert-danger" role="alert" style="margin-left:20%; margin-right:20%">
-      <span id="error-message"></span>
-      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
-        <span aria-hidden="true">&times;</span>
-      </button>
-    </div>
-  </div>
-</div>
-
-<div id="data" style="display:none;">
-  <div class="row">
-    <div class="divborder span8 chart-area" style="margin-left:50px" id="area1"></div>
-    <div class="divborder span8 chart-area" id="area2"></div>
-  </div>
-
-  <div class="row">
-    <div class="divborder span8 chart-area" style="margin-left:50px" id="area3"></div>
-    <div class="divborder span8 chart-area" id="area4"></div>
-  </div>
-
-  <div class="row">
-    <div class="divborder span8 chart-area" style="margin-left:50px" id="area5"></div>
-    <div class="divborder span8 chart-area" id="area6"></div>
-  </div>
-
-  <div class="row">
-    <div class="divborder span8 " style="margin-left:50px" id="area7"></div>
-    <div class="span7 chart-area" id="area8"></div>
-  </div>
-  <div class="row">
-    <div class="divborder span8 chart-area" style="margin-left:50px" id="area9"></div>
-    <div class="divborder span8 chart-area" id="area10"></div>
-  </div>
-</div>
-<p>&nbsp;</p>
-<script>
-// select file and draw
-function draw() {
-  $("#error-div").css("display", "none");
-  var filepath = document.getElementById('jsonfile').value;
-  if (filepath) {
-    $(".chart-area").empty();
-    filepath = filepath.replace("C:\\fakepath\\", "");
-    drawCharts(filepath);
-  } else {
-    $("#error-message").html("Please choose file.");
-    $("#error-div").css("display", "block");
-    $("#data").css("display", "none");
-  }
-}
-
-function drawCharts(filepath) {
-  $.getJSON(filepath, function(data) {
-    var numQueues = 0;
-    var queueNames = new Array();
-    for (var j in data[0]) {
-      if (j.substring(0, 'queue'.length) === 'queue') {
-        queueNames[numQueues] = j;
-        numQueues ++;
-      }
-    }
-    numQueues /= 2;
-
-    // create graph
-    $.getJSON(filepath, function(data) {
-      var basetime = data[0].time;
-      data.forEach(function(d) {
-        d.time = (d.time - basetime) / 1000;
-      });
-
-      var legends = ["running.applications", "running.containers"];
-      drawEachChart("#area1", data, legends, "Cluster running applications & containers", "Number", 0, 0);
-      legends = ["jvm.free.memory", "jvm.max.memory", "jvm.total.memory"];
-      drawEachChart("#area2", data, legends, "JVM memory", "Memory (GB)", 0, 0);
-      legends = ["cluster.allocated.memory", "cluster.available.memory"];
-      drawEachChart("#area3", data, legends, "Cluster allocated & available memory", "Memory (GB)", 0, 0);
-      legends = ["cluster.allocated.vcores", "cluster.available.vcores"];
-      drawEachChart("#area4", data, legends, "Cluster allocated & available vcores", "Number", 0, 0);
-
-      for (var i = 0; i < numQueues; i ++) {
-        legends[i] = queueNames[i * 2];
-      }
-      drawEachChart("#area5", data, legends, "Queue allocated memory", "Memory (GB)", 1, 100);
-      for (var i = 0; i < numQueues; i ++) {
-        legends[i] = queueNames[i * 2 + 1];
-      }
-      drawEachChart("#area6", data, legends, "Queue allocated vcores", "VCores", 1, 90);
-
-      legends = [
-        "scheduler.allocate.timecost",
-        "scheduler.handle-NODE_ADDED.timecost", "scheduler.handle-NODE_REMOVED.timecost",
-        "scheduler.handle-NODE_UPDATE.timecost", "scheduler.handle-APP_ADDED.timecost",
-        "scheduler.handle-APP_REMOVED.timecost", "scheduler.handle-CONTAINER_EXPIRED.timecost"
-      ];
-      drawEachChart("#area7", data, legends, "Scheduler allocate & handle operations timecost", "Timecost (ms)", 0, 210);
-
-      // Node usage stats
-      legends = [
-        "nodes.memory.unused", "nodes.memory.1to19pctUsed",
-        "nodes.memory.20to39pctUsed", "nodes.memory.40to59pctUsed",
-        "nodes.memory.60to79pctUsed","nodes.memory.80to99pctUsed",
-        "nodes.memory.full"
-      ];
-      drawEachChart("#area9", data, legends, "Cluster nodes memory usage", "Node count", 1, 0);
-
-      legends = [
-        "nodes.vcores.unused", "nodes.vcores.1to19pctUsed",
-        "nodes.vcores.20to39pctUsed", "nodes.vcores.40to59pctUsed",
-        "nodes.vcores.60to79pctUsed", "nodes.vcores.80to99pctUsed",
-        "nodes.vcores.full"
-      ];
-      drawEachChart("#area10", data, legends, "Cluster nodes vcores usage", "Node count", 1, 0);
-    });
-  }).done(function() {
-    $("#data").css("display", "block");
-  }).fail(function(jqxhr, textStatus, error) {
-    $("#error-message").html(String(error));
-    $("#error-div").css("display", "block");
-    $("#data").css("display", "none");
-  });
-}
-
-// draw different chart
-function drawEachChart(chartArea, data, legends, title, yLabelTitle, isArea, pl) {
-  // drawchart
-  var margin = {top: 50, right: 250, bottom: 50, left: 70};
-  var width = 800 - margin.left - margin.right;
-  var height = 420 - margin.top - margin.bottom;
-
-  var x = d3.scale.linear().range([0, width]);
-  var y = d3.scale.linear().range([height, 0]);
-  var xAxis = d3.svg.axis().scale(x).orient("bottom");
-  var yAxis = d3.svg.axis().scale(y).orient("left");
-
-  var color = d3.scale.category10();
-
-  if (isArea == 1) {
-    var area = d3.svg.area()
-      .x(function(d) { return x(d.time); })
-      .y0(function(d) { return y(d.y0); })
-      .y1(function(d) { return y(d.y0 + d.y); });
-
-    var stack = d3.layout.stack()
-      .values(function(d) { return d.values; });
-
-    // create chart
-    var svg = d3.select(chartArea).append("svg")
-      .attr("width", width + margin.left + margin.right)
-      .attr("height", height + margin.top + margin.bottom)
-      .append("g")
-      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
-
-    color.domain(d3.keys(data[0])
-      .filter(function(key) {return $.inArray(key, legends) !== -1; }));
-
-    var points = stack(color.domain().map(function(name) {
-      return {
-        name: name,
-        values: data.map(function(d) {
-          return {time: d.time, y: d[name]};
-        })
-      };
-    }));
-
-    // x & y
-    x.domain(d3.extent(data, function(d) { return d.time; }));
-    y.domain([
-      d3.min(points, function(c) {
-      return 0.9 * d3.min(c.values, function(v) { return v.y; }); }),
-      d3.max(points, function(c) {
-        return 1.1 * d3.max(c.values, function(v) { return v.y + v.y0; }); })
-      ]);
-
-    svg.append("g").attr("class", "x axis")
-      .attr("transform", "translate(0," + height + ")")
-      .call(xAxis)
-      .append("text")
-      .attr("transform", "translate(" + (width / 2) + ", 45)")
-      .style("text-anchor", "middle")
-      .text("Time (s)");
-
-    svg.append("g")
-      .attr("class", "y axis")
-      .call(yAxis)
-      .append("text")
-      .attr("transform", "rotate(-90)")
-      .attr("y", 0 - margin.left)
-      .attr("x",0 - (height / 2))
-      .attr("dy", "1em")
-      .style("text-anchor", "middle")
-      .text(yLabelTitle);
-
-    var point = svg.selectAll(".point")
-      .data(points)
-      .enter().append("g");
-
-    point.append("path")
-      .attr("class", "area")
-      .attr("d", function(d) { return area(d.values); })
-      .style("fill", function(d) { return color(d.name); });
-  } else {
-    // lines
-    var line = d3.svg.line()
-      .interpolate("basis")
-      .x(function(d) { return x(d.time); })
-      .y(function(d) { return y(d.value); });
-
-    // create chart
-    var svg = d3.select(chartArea).append("svg")
-      .attr("id", title)
-      .attr("width", width + margin.left + margin.right)
-      .attr("height", height + margin.top + margin.bottom)
-      .append("g")
-      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
-
-    color.domain(d3.keys(data[0])
-      .filter(function(key) {return $.inArray(key, legends) !== -1; }));
-
-    var values = color.domain().map(function(name) {
-      return {
-        name: name,
-        values: data.map(function(d) {
-          return {time: d.time, value: +d[name]};
-        })
-      };
-    });
-
-    // x & y
-    x.domain(d3.extent(data, function(d) { return d.time; }));
-    y.domain([
-      d3.min(values, function(c) { return 0.9 * d3.min(c.values, function(v) { return v.value; }); }),
-      d3.max(values, function(c) { return 1.1 * d3.max(c.values, function(v) { return v.value; }); })
-    ]);
-
-    svg.append("g").attr("class", "x axis")
-      .attr("transform", "translate(0," + height + ")")
-      .call(xAxis)
-      .append("text")
-      .attr("transform", "translate(" + (width / 2) + ", 45)")
-      .style("text-anchor", "middle")
-      .text("Time (s)");
-
-    svg.append("g")
-      .attr("class", "y axis")
-      .call(yAxis)
-      .append("text")
-      .attr("transform", "rotate(-90)")
-      .attr("y", 0 - margin.left)
-      .attr("x",0 - (height / 2))
-      .attr("dy", "1em")
-      .style("text-anchor", "middle")
-      .text(yLabelTitle);
-
-    var value = svg.selectAll(".city")
-      .data(values)
-      .enter().append("g")
-      .attr("class", "city");
-
-    value.append("path")
-      .attr("class", "line")
-      .attr("d", function(d) { return line(d.values); })
-      .style("stroke", function(d) { return color(d.name); });
-  }
-
-  // title
-  svg.append("text")
-    .attr("x", (width / 2))
-    .attr("y", 10 - (margin.top / 2))
-    .attr("text-anchor", "middle")
-    .text(title);
-
-  // legend
-  var legend = svg.append("g")
-    .attr("class", "legend")
-    .attr("x", width - 50)
-    .attr("y", 25)
-    .attr("height", 120)
-    .attr("width", 140);
-
-  legend.selectAll('g').data(legends)
-    .enter()
-    .append('g')
-    .each(function(d, i) {
-      var g = d3.select(this);
-      g.append("rect")
-        .attr("x", width - 5 - pl)
-        .attr("y", i*20 + 0)
-        .attr("width", 10)
-        .attr("height", 10)
-        .style("fill", color(d));
-
-      g.append("text")
-        .attr("x", width + 15 - pl)
-        .attr("y", i * 20 + 8)
-        .attr("height",30)
-        .attr("width",250)
-        .style("fill", color(d))
-        .text(d);
-    });
-}
-</script>
-</body>
-</html>
diff --git a/hadoop-tools/hadoop-sls/src/main/html/simulate.html.template b/hadoop-tools/hadoop-sls/src/main/html/simulate.html.template
deleted file mode 100644
index 5e78fb20118..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/simulate.html.template
+++ /dev/null
@@ -1,306 +0,0 @@
-<html>
-  <head>
-    <meta charset="utf-8">
-      <link rel="stylesheet" href="css/bootstrap.min.css" media="screen">
-      <link rel="stylesheet" href="css/bootstrap-responsive.min.css">
-      <style type="text/css">
-        body '{' font: 15px sans-serif; '}'
-        .axis path,
-        .axis line '{' fill: none; stroke: #000; shape-rendering: crispEdges; '}'
-        .axis text '{' font-family: sans-serif; font-size: 12px; '}'
-        .line '{' fill: none; stroke: steelblue; stroke-width: 2px; '}'
-        .legend '{'
-          padding: 3px;
-          font: 10px sans-serif;
-          background: yellow;
-          box-shadow: 2px 2px 1px #888;
-        '}'
-        .title '{' font: 20px sans-serif; '}'
-        .divborder '{'
-          border-width: 1px;
-          border-style: solid;
-          border-color: black;
-          margin-top:10px
-        '}'
-      </style>
-      <script src="js/thirdparty/d3.v3.js"></script>
-      <script src="js/thirdparty/jquery.js"></script>
-      <script src="js/thirdparty/bootstrap.min.js"></script>
-    </head>
-  <body>
-    <div class="row">
-      <div class="span10 offset2"><br>
-        <input type="button" style="float: right;" value="Stop"
-               onClick="stop()" />
-      </div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area1"></div>
-      <div class="divborder span8" style="margin-left:50px" id="area2"></div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area3"></div>
-      <div class="divborder span8" style="margin-left:50px" id="area4"></div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area5"></div>
-      <div class="divborder span8" style="margin-left:50px" id="area6"></div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area7"></div>
-      <div class="divborder span8" style="margin-left:50px" id="area8"></div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area9"></div>
-      <div class="divborder span8" style="margin-left:50px" id="area10"></div>
-    </div><br/><br/>
-
-    <script>
-      var basetime = 0;
-      var running = 1;
-      var data = [];
-      var width, height;
-      var legends = [];
-      var titles = [];
-      var yLabels = [];
-      var isAreas = [];
-      var svgs = [];
-      var xs = [];
-      var ys = [];
-      var xAxiss = [];
-      var yAxiss = [];
-      var lineAreas = [];
-      var stacks = [];
-
-      // legends
-      legends[0] = [''running.applications'', ''running.containers''];
-      legends[1] = [''jvm.free.memory'', ''jvm.max.memory'', ''jvm.total.memory''];
-      legends[2] = [''cluster.allocated.memory'', ''cluster.available.memory''];
-      legends[3] = [''cluster.allocated.vcores'', ''cluster.available.vcores''];
-      legends[4] = [];
-      legends[5] = [];
-      {0}
-      legends[6] = [''scheduler.allocate.timecost'',
-                    ''scheduler.handle-NODE_ADDED.timecost'',
-                    ''scheduler.handle-NODE_REMOVED.timecost'',
-                    ''scheduler.handle-NODE_UPDATE.timecost'',
-                    ''scheduler.handle-APP_ADDED.timecost'',
-                    ''scheduler.handle-APP_REMOVED.timecost'',
-                    ''scheduler.handle-CONTAINER_EXPIRED.timecost'',
-                    ''scheduler.commit.success.timecost'',
-                    ''scheduler.commit.failure.timecost''];
-      legends[7] = [''scheduler.commit.success.throughput'',
-                    ''scheduler.commit.failure.throughput''];
-      legends[8] = [''nodes.memory.unused'',
-                    ''nodes.memory.1to19pctUsed'',
-                    ''nodes.memory.20to39pctUsed'',
-                    ''nodes.memory.40to59pctUsed'',
-                    ''nodes.memory.60to79pctUsed'',
-                    ''nodes.memory.80to99pctUsed'',
-                    ''nodes.memory.full''];
-      legends[9] = [''nodes.vcores.unused'',
-                    ''nodes.vcores.1to19pctUsed'',
-                    ''nodes.vcores.20to39pctUsed'',
-                    ''nodes.vcores.40to59pctUsed'',
-                    ''nodes.vcores.60to79pctUsed'',
-                    ''nodes.vcores.80to99pctUsed'',
-                    ''nodes.vcores.full''];
-
-      // title
-      titles[0] = ''Cluster running applications & containers'';
-      titles[1] = ''JVM memory'';
-      titles[2] = ''Cluster allocated & available memory'';
-      titles[3] = ''Cluster allocated & available vcores'';
-      titles[4] = ''Queue allocated memory'';
-      titles[5] = ''Queue allocated vcores'';
-      titles[6] = ''Scheduler allocate & handle & commit operation timecost'';
-      titles[7] = ''Scheduler commit success/failure operation throughput'';
-      titles[8] = ''Cluster nodes memory usage'';
-      titles[9] = ''Cluster nodes vcores usage'';
-
-      // ylabels
-      yLabels[0] = ''Number'';
-      yLabels[1] = ''Memory (GB)'';
-      yLabels[2] = ''Memory (GB)'';
-      yLabels[3] = ''Number'';
-      yLabels[4] = ''Memory (GB)'';
-      yLabels[5] = ''Number'';
-      yLabels[6] = ''Timecost (ms)'';
-      yLabels[7] = ''Number'';
-      yLabels[8] = ''Number'';
-      yLabels[9] = ''Number'';
-
-      // is area?
-      isAreas = [0, 0, 0, 0, 1, 1, 0, 0, 1, 1];
-
-      // draw all charts
-      for (var i = 0; i < 10; i ++) '{'
-        drawEachChart(i);
-      '}'
-
-      // draw each chart
-      function drawEachChart(index) '{'
-        var margin = '{'top: 50, right: 225, bottom: 50, left: 85'}';
-        width = 770 - margin.left - margin.right;
-        height = 420 - margin.top - margin.bottom;
-
-      xs[index] = d3.scale.linear().range([0, width]);
-      ys[index] = d3.scale.linear().range([height, 0]);
-      xAxiss[index] = d3.svg.axis().scale(xs[index]).orient(''bottom'');
-      yAxiss[index] = d3.svg.axis().scale(ys[index]).orient(''left'');
-
-      if (isAreas[index] == 1)'{'
-        lineAreas[index] = d3.svg.area()
-                            .x(function(d) '{' return xs[index](d.time); '}')
-                            .y0(function(d) '{' return ys[index](d.y0); '}')
-                            .y1(function(d) '{' return ys[index](d.y0 + d.y); '}');
-
-        stacks[index] = d3.layout.stack()
-                          .values(function(d) '{' return d.values; '}');
-      '}' else '{'
-        lineAreas[index] = d3.svg.line()
-                            .interpolate(''basis'')
-                            .x(function(d) '{' return xs[index](d.time); '}')
-                            .y(function(d) '{' return ys[index](d.value); '}');
-      '}'
-
-      svgs[index] = d3.select(''#area'' + (index + 1)).append(''svg'')
-        .attr(''width'', width + margin.left + margin.right)
-        .attr(''height'', height + margin.top + margin.bottom)
-        .append(''g'')
-        .attr(''transform'', ''translate('' + margin.left + '','' + margin.top + '')'');
-
-      // x, y and title
-      svgs[index].append(''text'')
-        .attr(''transform'', ''translate('' + (width / 2) + '' ,'' +
-              (height + margin.bottom - 10 ) + '')'')
-        .style(''text-anchor'', ''middle'')
-        .text(''Time ({1})'');
-
-      svgs[index].append(''text'')
-        .attr(''transform'', ''rotate(-90)'')
-        .attr(''y'', 0 - margin.left)
-        .attr(''x'',0 - (height / 2))
-        .attr(''dy'', ''1em'')
-        .style(''text-anchor'', ''middle'')
-        .text(yLabels[index]);
-
-      svgs[index].append(''text'')
-        .attr(''x'', (width / 2))
-        .attr(''y'', 10 - (margin.top / 2))
-        .attr(''text-anchor'', ''middle'')
-        .text(titles[index]);
-    '}'
-
-    // request data
-    function requestData() '{'
-      $.ajax('{'url: ''simulateMetrics'',
-        success: function(point) '{'
-          // update data
-          if (basetime == 0)  basetime = point.time;
-          point.time = (point.time - basetime) / {2};
-          data.push(point);
-
-          // clear old
-          for (var i = 0; i < 10; i ++) '{'
-            svgs[i].selectAll(''g.tick'').remove();
-            svgs[i].selectAll(''g'').remove();
-            var color = d3.scale.category10();
-            color.domain(d3.keys(data[0]).filter(function(key) '{'
-              return $.inArray(key, legends[i]) !== -1;
-            '}'));
-
-            var values;
-            if (isAreas[i] == 1) '{'
-              values = stacks[i](color.domain().map(function(name) '{'
-                return '{'
-                  name: name,
-                  values: data.map(function(d) '{'
-                    return '{'time: d.time, y: d[name]'}';
-                  '}')
-                '}'
-              '}'));
-              xs[i].domain(d3.extent(data, function(d) '{' return d.time;'}'));
-              ys[i].domain([
-                d3.min(values, function(c) '{' return 0; '}'),
-                d3.max(values, function(c) '{' return 1.1 * d3.max(c.values,
-                                        function(v) '{' return v.y + v.y0; '}'); '}')
-              ]);
-            '}' else '{'
-              values = color.domain().map(function(name) '{'
-                return '{'
-                  name: name,
-                  values: data.map(function(d) '{'
-                    return '{'time: d.time, value: d[name]'}';
-                  '}')
-                '}'
-              '}');
-              xs[i].domain(d3.extent(data, function(d) '{' return d.time;'}'));
-              ys[i].domain([
-                d3.min(values, function(c) '{' return 0; '}'),
-                d3.max(values, function(c) '{' return 1.1 * d3.max(c.values,
-                                        function(v) '{' return v.value; '}'); '}')
-              ]);
-            '}'
-
-            svgs[i].append(''g'').attr(''class'', ''x axis'')
-              .attr(''transform'', ''translate(0,'' + height + '')'').call(xAxiss[i]);
-
-            svgs[i].append(''g'').attr(''class'', ''y axis'').call(yAxiss[i]);
-
-            var value = svgs[i].selectAll(''.path'')
-              .data(values).enter().append(''g'').attr(''class'', ''line'');
-
-            if(isAreas[i] == 1) '{'
-              value.append(''path'').attr(''class'', ''area'')
-                    .attr(''d'', function(d) '{'return lineAreas[i](d.values); '}')
-                    .style(''fill'', function(d) '{'return color(d.name); '}');
-            '}' else '{'
-              value.append(''path'').attr(''class'', ''line'')
-                    .attr(''d'', function(d) '{'return lineAreas[i](d.values); '}')
-                    .style(''stroke'', function(d) '{'return color(d.name); '}');
-            '}'
-
-            // legend
-            var legend = svgs[i].append(''g'')
-              .attr(''class'', ''legend'')
-              .attr(''x'', width + 5)
-              .attr(''y'', 25)
-              .attr(''height'', 120)
-              .attr(''width'', 140);
-            legend.selectAll(''g'').data(legends[i])
-              .enter()
-              .append(''g'')
-              .each(function(d, i) '{'
-                var g = d3.select(this);
-                g.append(''rect'')
-                  .attr(''x'', width + 5)
-                  .attr(''y'', i*20)
-                  .attr(''width'', 10)
-                  .attr(''height'', 10)
-                  .style(''fill'', color(d));
-                g.append(''text'')
-                  .attr(''x'', width + 25)
-                  .attr(''y'', i * 20 + 8)
-                  .attr(''height'',30)
-                  .attr(''width'',250)
-                  .style(''fill'', color(d))
-                  .text(d);
-              '}');
-            '}'
-
-            if(running == 1)
-              setTimeout(requestData, {3});
-          '}',
-          cache: false
-        '}');
-      '}'
-
-      // stop
-      function stop() '{'
-        running = 0;
-      '}'
-      requestData();
-    </script>
-  </body>
-</html>
diff --git a/hadoop-tools/hadoop-sls/src/main/html/simulate.info.html.template b/hadoop-tools/hadoop-sls/src/main/html/simulate.info.html.template
deleted file mode 100644
index ead508fed9a..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/simulate.info.html.template
+++ /dev/null
@@ -1,50 +0,0 @@
-<html>
-  <head>
-    <meta charset="utf-8">
-    <style type="text/css">
-      .td1 '{'
-        border-width: 1px;
-        padding: 8px;
-        border-style: solid;
-        border-color: #666666;
-        background-color: #dedede;
-        width: 50%;
-      '}'
-      table.gridtable '{'
-        font-family: verdana,arial,sans-serif;
-        font-size:11px;
-        color:#333333;
-        border-width: 1px;
-        border-color: #666666;
-        border-collapse: collapse;
-        margin-top: 80px;
-      '}'
-      .td2 '{'
-        border-width: 1px;
-        padding: 8px;
-        border-style: solid;
-        border-color: #666666;
-        background-color: #ffffff;
-        width: 50%;
-      '}'
-    </style>
-  </head>
-  <body>
-    <table class="gridtable" align="center" width="400px">
-      <tr>
-        <td colspan="2" class="td2" align="center">
-          <b>SLS Simulate Information</b>
-        </td>
-      </tr>
-      {0}
-      <tr>
-        <td align="center" height="80px">
-          <a href="simulate">Simulation Charts</a>
-        </td>
-        <td align="center">
-          <a href="track">Tracked Jobs & Queues</a>
-        </td>
-      </tr>
-    </table>
-  </body>
-</html>
diff --git a/hadoop-tools/hadoop-sls/src/main/html/track.html.template b/hadoop-tools/hadoop-sls/src/main/html/track.html.template
deleted file mode 100644
index 5522b9f7796..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/html/track.html.template
+++ /dev/null
@@ -1,193 +0,0 @@
-<html>
-  <head>
-    <meta charset="utf-8">
-    <link rel="stylesheet" href="css/bootstrap.min.css" media="screen">
-    <link rel="stylesheet" href="css/bootstrap-responsive.min.css">
-    <style type="text/css">
-      body '{' font: 20px sans-serif;'}'
-      .axis path,
-      .axis line '{' fill: none; stroke: #000; shape-rendering: crispEdges;'}'
-      .axis text '{' font-family: sans-serif; font-size: 20px; '}'
-      .line '{' fill: none; stroke: steelblue; stroke-width: 3px; '}'
-      .legend '{' padding: 5px; font: 18px sans-serif; background: yellow;
-                box-shadow: 2px 2px 1px #888;'}'
-      .title '{' font: 24px sans-serif; '}'
-      .divborder '{' border-width: 1px; border-style: solid; border-color: black;
-                    margin-top:10px '}'
-    </style>
-    <script src="js/thirdparty/d3.v3.js"></script>
-    <script src="js/thirdparty/jquery.js"></script>
-    <script src="js/thirdparty/bootstrap.min.js"></script>
-  </head>
-  <body>
-    <div class="row">
-      <div class="offset4 span8"><br/><br/><br/>
-        Select Tracked Job/Queue:
-        <select id="trackedSelect" onchange="redrawChart()">
-          <option>----Queue----</option>
-          {0}
-          <option>----Job----</option>
-          {1}
-        </select>
-        <input type="button" style="float: right;" value="Stop"
-               onClick="stop()" />
-      </div>
-    </div>
-    <div class="row">
-      <div class="divborder span9 offset4" id="area1"></div>
-    </div>
-    <script>
-      // global variables
-      var basetime = 0;
-      var running = 1;
-      var para = '''';
-      var data = [];
-      var path, line, svg;
-      var x, y;
-      var width, height;
-      var xAxis, yAxis;
-      var legends = [''usage.memory'', ''demand.memory'', ''maxshare.memory'',
-                      ''minshare.memory'', ''fairshare.memory''];
-
-      // stop function
-      function stop() '{'
-        running = 0;
-      '}'
-
-      // select changed event
-      function redrawChart() '{'
-        var value = $(''#trackedSelect'').val();
-        if (value.substring(0, ''Job ''.length) === ''Job ''
-                      || value.substring(0, ''Queue ''.length) === ''Queue '') '{'
-          para = value;
-          running = 0;
-          basetime = 0;
-          data = [];
-          $(''#area1'').empty();
-          drawChart(''Tracking '' + value);
-          running = 1;
-          requestData();
-        }
-      }
-
-      // draw chart
-      function drawChart(title) '{'
-        // location
-        var margin = '{'top: 50, right: 150, bottom: 50, left: 80'}';
-        width = 800 - margin.left - margin.right;
-        height = 420 - margin.top - margin.bottom;
-        x = d3.scale.linear().range([0, width]);
-        y = d3.scale.linear().range([height, 0]);
-        xAxis = d3.svg.axis().scale(x).orient(''bottom'');
-        yAxis = d3.svg.axis().scale(y).orient(''left'');
-        // lines
-        line = d3.svg.line().interpolate(''basis'')
-                .x(function(d) '{' return x(d.time); })
-                .y(function(d) '{' return y(d.value); });
-        // create chart
-        svg = d3.select(''#area1'').append(''svg'')
-                .attr(''width'', width + margin.left + margin.right)
-                .attr(''height'', height + margin.top + margin.bottom)
-                .append(''g'')
-                .attr(''transform'', ''translate('' + margin.left + '','' + margin.top + '')'');
-        // axis labels
-        svg.append(''text'')
-                .attr(''transform'', ''translate('' + (width / 2) + '','' + (height + margin.bottom - 5 ) + '')'')
-                .style(''text-anchor'', ''middle'')
-                .text(''Time ({2})'');
-        svg.append(''text'')
-                .attr(''transform'', ''rotate(-90)'')
-                .attr(''y'', 0 - margin.left)
-                .attr(''x'',0 - (height / 2))
-                .attr(''dy'', ''1em'')
-                .style(''text-anchor'', ''middle'')
-                .text(''Memory (GB)'');
-        // title
-        svg.append(''text'')
-                .attr(''x'', (width / 2))
-                .attr(''y'', 10 - (margin.top / 2))
-                .attr(''text-anchor'', ''middle'')
-                .text(title);
-      '}'
-
-      // request data
-      function requestData() '{'
-        $.ajax('{'url: ''trackMetrics?t='' + para,
-          success: function(point) '{'
-            // clear old
-            svg.selectAll(''g.tick'').remove();
-            svg.selectAll(''g'').remove();
-
-          if(basetime == 0)  basetime = point.time;
-          point.time = (point.time - basetime)/{3};
-          data.push(point);
-
-          var color = d3.scale.category10();
-          color.domain(d3.keys(data[0]).filter(function(key) '{'
-            return $.inArray(key, legends) !== -1;
-          '}'));
-
-          var values = color.domain().map(function(name) '{'
-            return '{'
-              name: name,
-              values: data.map(function(d) '{'
-                return '{' time: d.time, value: d[name]'}';
-              '}')
-            '}';
-          '}');
-
-          // set x/y range
-          x.domain(d3.extent(data, function(d) '{' return d.time; '}'));
-          y.domain([
-            d3.min(values, function(c) '{' return 0 '}'),
-            d3.max(values, function(c) '{' return 1.1 * d3.max(c.values, function(v) '{' return v.value; '}'); '}')
-          ]);
-
-          svg.append(''g'').attr(''class'', ''x axis'')
-            .attr(''transform'', ''translate(0,'' + height + '')'').call(xAxis);
-          svg.append(''g'').attr(''class'', ''y axis'').call(yAxis);
-          var value = svg.selectAll(''.path'')
-            .data(values).enter().append(''g'').attr(''class'', ''line'');
-
-          value.append(''path'').attr(''class'', ''line'')
-            .attr(''d'', function(d) '{'return line(d.values); '}')
-            .style(''stroke'', function(d) '{'return color(d.name); '}');
-
-          // legend
-          var legend = svg.append(''g'')
-            .attr(''class'', ''legend'')
-            .attr(''x'', width + 5)
-            .attr(''y'', 25)
-            .attr(''height'', 120)
-            .attr(''width'', 180);
-
-          legend.selectAll(''g'').data(legends)
-            .enter()
-            .append(''g'')
-            .each(function(d, i) '{'
-              var g = d3.select(this);
-              g.append(''rect'')
-                .attr(''x'', width + 5)
-                .attr(''y'', i * 20)
-                .attr(''width'', 10)
-                .attr(''height'', 10)
-                .style(''fill'', color(d));
-
-              g.append(''text'')
-                .attr(''x'', width + 25)
-                .attr(''y'', i * 20 + 8)
-                .attr(''height'',30)
-                .attr(''width'',250)
-                .style(''fill'', color(d))
-                .text(d);
-            '}');
-
-          if(running == 1)
-            setTimeout(requestData, {4});
-        '}',
-        cache: false
-      '}');
-    '}'
-  </script>
-</body>
-</html>
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinition.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinition.java
deleted file mode 100644
index 1f9e351c429..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinition.java
+++ /dev/null
@@ -1,105 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-
-import java.util.List;
-
-public abstract class AMDefinition {
-  protected int jobCount;
-  protected String amType;
-  protected String user;
-  protected String queue;
-  protected long jobStartTime;
-  protected long jobFinishTime;
-  protected List<ContainerSimulator> taskContainers;
-  protected Resource amResource;
-  protected String labelExpression;
-  protected String oldAppId;
-
-  public AMDefinition(AmDefinitionBuilder builder) {
-    this.jobStartTime = builder.jobStartTime;
-    this.jobFinishTime = builder.jobFinishTime;
-    this.amType = builder.amType;
-    this.taskContainers = builder.taskContainers;
-    this.labelExpression = builder.labelExpression;
-    this.user = builder.user;
-    this.amResource = builder.amResource;
-    this.queue = builder.queue;
-    this.jobCount = builder.jobCount;
-    this.oldAppId = builder.jobId;
-  }
-
-  public String getAmType() {
-    return amType;
-  }
-
-  public String getUser() {
-    return user;
-  }
-
-  public String getOldAppId() {
-    return oldAppId;
-  }
-
-  public long getJobStartTime() {
-    return jobStartTime;
-  }
-
-  public long getJobFinishTime() {
-    return jobFinishTime;
-  }
-
-  public List<ContainerSimulator> getTaskContainers() {
-    return taskContainers;
-  }
-
-  public Resource getAmResource() {
-    return amResource;
-  }
-
-  public String getLabelExpression() {
-    return labelExpression;
-  }
-
-  public String getQueue() {
-    return queue;
-  }
-
-  public int getJobCount() {
-    return jobCount;
-  }
-
-
-  public abstract static class AmDefinitionBuilder {
-    private static final String DEFAULT_USER = "default";
-
-    protected int jobCount = 1;
-    protected String amType = AMDefinitionFactory.DEFAULT_JOB_TYPE;
-    protected String user = DEFAULT_USER;
-    protected String queue;
-    protected String jobId;
-    protected long jobStartTime;
-    protected long jobFinishTime;
-    protected List<ContainerSimulator> taskContainers;
-    protected Resource amResource;
-    protected String labelExpression = null;
-
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionFactory.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionFactory.java
deleted file mode 100644
index 61975f04a37..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionFactory.java
+++ /dev/null
@@ -1,133 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import java.util.Map;
-
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.tools.rumen.LoggedJob;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceInformation;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.synthetic.SynthJob;
-import org.apache.hadoop.yarn.util.resource.ResourceUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-
-public final class AMDefinitionFactory {
-  private static final Logger LOG = LoggerFactory.getLogger(
-      AMDefinitionFactory.class);
-  public final static String DEFAULT_JOB_TYPE = "mapreduce";
-
-  private AMDefinitionFactory() {}
-
-  public static AMDefinitionSLS createFromSlsTrace(Map<String, String> jsonJob,
-      SLSRunner slsRunner) throws YarnException {
-    AMDefinitionSLS amDefinition = AMDefinitionSLS.Builder.create(jsonJob)
-        .withAmType(SLSConfiguration.AM_TYPE)
-        .withAmResource(getAMContainerResourceSLS(jsonJob, slsRunner))
-        .withTaskContainers(
-            AMDefinitionSLS.getTaskContainers(jsonJob, slsRunner))
-        .withJobStartTime(SLSConfiguration.JOB_START_MS)
-        .withJobFinishTime(SLSConfiguration.JOB_END_MS)
-        .withLabelExpression(SLSConfiguration.JOB_LABEL_EXPR)
-        .withUser(SLSConfiguration.JOB_USER)
-        .withQueue(SLSConfiguration.JOB_QUEUE_NAME)
-        .withJobId(SLSConfiguration.JOB_ID)
-        .withJobCount(SLSConfiguration.JOB_COUNT)
-        .build();
-    slsRunner.increaseQueueAppNum(amDefinition.getQueue());
-    return amDefinition;
-  }
-
-  public static AMDefinitionRumen createFromRumenTrace(LoggedJob job,
-      long baselineTimeMs, SLSRunner slsRunner) throws YarnException {
-    AMDefinitionRumen amDefinition = AMDefinitionRumen.Builder.create()
-        .withAmType(DEFAULT_JOB_TYPE)
-        .withAmResource(getAMContainerResourceSynthAndRumen(slsRunner))
-        .withTaskContainers(
-            AMDefinitionRumen.getTaskContainers(job, slsRunner))
-        .withJobStartTime(job.getSubmitTime())
-        .withJobFinishTime(job.getFinishTime())
-        .withBaseLineTimeMs(baselineTimeMs)
-        .withUser(job.getUser())
-        .withQueue(job.getQueue().getValue())
-        .withJobId(job.getJobID().toString())
-        .build();
-    slsRunner.increaseQueueAppNum(amDefinition.getQueue());
-    return amDefinition;
-  }
-
-  public static AMDefinitionSynth createFromSynth(SynthJob job,
-      SLSRunner slsRunner) throws YarnException {
-    AMDefinitionSynth amDefinition =
-        AMDefinitionSynth.Builder.create()
-            .withAmType(job.getType())
-            .withAmResource(getAMContainerResourceSynthAndRumen(slsRunner))
-            .withTaskContainers(
-                AMDefinitionSynth.getTaskContainers(job, slsRunner))
-            .withUser(job.getUser())
-            .withQueue(job.getQueueName())
-            .withJobId(job.getJobID().toString())
-            .withJobStartTime(job.getSubmissionTime())
-            .withJobFinishTime(job.getSubmissionTime() + job.getDuration())
-            .withBaseLineTimeMs(0)
-            .build();
-
-    slsRunner.increaseQueueAppNum(amDefinition.getQueue());
-    return amDefinition;
-  }
-
-  private static Resource getAMContainerResourceSLS(Map<String, String> jsonJob,
-      Configured configured) {
-    Resource amContainerResource =
-        SLSConfiguration.getAMContainerResource(configured.getConf());
-    if (jsonJob == null) {
-      return amContainerResource;
-    }
-
-    ResourceInformation[] infors = ResourceUtils.getResourceTypesArray();
-    for (ResourceInformation info : infors) {
-      String key = SLSConfiguration.JOB_AM_PREFIX + info.getName();
-      if (jsonJob.containsKey(key)) {
-        long value = Long.parseLong(jsonJob.get(key));
-        amContainerResource.setResourceValue(info.getName(), value);
-      }
-    }
-
-    return amContainerResource;
-  }
-
-  private static Resource getAMContainerResourceSynthAndRumen(
-      Configured configured) {
-    return SLSConfiguration.getAMContainerResource(configured.getConf());
-  }
-
-  static void adjustTimeValuesToBaselineTime(AMDefinition amDef,
-      AMDefinition.AmDefinitionBuilder builder, long baselineTimeMs) {
-    builder.jobStartTime -= baselineTimeMs;
-    builder.jobFinishTime -= baselineTimeMs;
-    if (builder.jobStartTime < 0) {
-      LOG.warn("Warning: reset job {} start time to 0.", amDef.getOldAppId());
-      builder.jobFinishTime = builder.jobFinishTime - builder.jobStartTime;
-      builder.jobStartTime = 0;
-    }
-    amDef.jobStartTime = builder.jobStartTime;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionRumen.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionRumen.java
deleted file mode 100644
index cc97a90ec00..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionRumen.java
+++ /dev/null
@@ -1,167 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.tools.rumen.LoggedJob;
-import org.apache.hadoop.tools.rumen.LoggedTask;
-import org.apache.hadoop.tools.rumen.LoggedTaskAttempt;
-import org.apache.hadoop.tools.rumen.datatypes.UserName;
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.apache.hadoop.yarn.sls.AMDefinitionFactory.adjustTimeValuesToBaselineTime;
-
-public class AMDefinitionRumen extends AMDefinition {
-  public final static int DEFAULT_MAPPER_PRIORITY = 20;
-  private final static int DEFAULT_REDUCER_PRIORITY = 10;
-
-  public AMDefinitionRumen(AmDefinitionBuilder builder) {
-    super(builder);
-  }
-
-  public static List<ContainerSimulator> getTaskContainers(LoggedJob job,
-      SLSRunner slsRunner) throws YarnException {
-    List<ContainerSimulator> containerList = new ArrayList<>();
-
-    TaskContainerDefinition.Builder builder =
-        TaskContainerDefinition.Builder.create()
-            .withCount(1)
-            .withResource(slsRunner.getDefaultContainerResource())
-            .withExecutionType(ExecutionType.GUARANTEED)
-            .withAllocationId(-1)
-            .withRequestDelay(0);
-
-    // mapper
-    for (LoggedTask mapTask : job.getMapTasks()) {
-      if (mapTask.getAttempts().size() == 0) {
-        throw new YarnException("Invalid map task, no attempt for a mapper!");
-      }
-      LoggedTaskAttempt taskAttempt =
-          mapTask.getAttempts().get(mapTask.getAttempts().size() - 1);
-      TaskContainerDefinition containerDef = builder
-          .withHostname(taskAttempt.getHostName().getValue())
-          .withDuration(taskAttempt.getFinishTime() -
-              taskAttempt.getStartTime())
-          .withPriority(DEFAULT_MAPPER_PRIORITY)
-          .withType("map")
-          .build();
-      containerList.add(
-          ContainerSimulator.createFromTaskContainerDefinition(containerDef));
-    }
-
-    // reducer
-    for (LoggedTask reduceTask : job.getReduceTasks()) {
-      if (reduceTask.getAttempts().size() == 0) {
-        throw new YarnException(
-            "Invalid reduce task, no attempt for a reducer!");
-      }
-      LoggedTaskAttempt taskAttempt =
-          reduceTask.getAttempts().get(reduceTask.getAttempts().size() - 1);
-      TaskContainerDefinition containerDef = builder
-          .withHostname(taskAttempt.getHostName().getValue())
-          .withDuration(taskAttempt.getFinishTime() -
-              taskAttempt.getStartTime())
-          .withPriority(DEFAULT_REDUCER_PRIORITY)
-          .withType("reduce")
-          .build();
-      containerList.add(
-          ContainerSimulator.createFromTaskContainerDefinition(containerDef));
-    }
-
-    return containerList;
-  }
-
-
-  public static final class Builder extends AmDefinitionBuilder {
-    private long baselineTimeMs;
-
-    private Builder() {
-    }
-
-    public static Builder create() {
-      return new Builder();
-    }
-
-    public Builder withAmType(String amType) {
-      this.amType = amType;
-      return this;
-    }
-
-    public Builder withUser(UserName user) {
-      if (user != null) {
-        this.user = user.getValue();
-      }
-      return this;
-    }
-
-    public Builder withQueue(String queue) {
-      this.queue = queue;
-      return this;
-    }
-
-    public Builder withJobId(String oldJobId) {
-      this.jobId = oldJobId;
-      return this;
-    }
-
-    public Builder withJobStartTime(long time) {
-      this.jobStartTime = time;
-      return this;
-    }
-
-    public Builder withJobFinishTime(long time) {
-      this.jobFinishTime = time;
-      return this;
-    }
-
-    public Builder withBaseLineTimeMs(long baselineTimeMs) {
-      this.baselineTimeMs = baselineTimeMs;
-      return this;
-    }
-
-    public Builder withLabelExpression(String expr) {
-      this.labelExpression = expr;
-      return this;
-    }
-
-    public AMDefinitionRumen.Builder withTaskContainers(
-        List<ContainerSimulator> taskContainers) {
-      this.taskContainers = taskContainers;
-      return this;
-    }
-
-    public AMDefinitionRumen.Builder withAmResource(Resource amResource) {
-      this.amResource = amResource;
-      return this;
-    }
-
-    public AMDefinitionRumen build() {
-      AMDefinitionRumen amDef = new AMDefinitionRumen(this);
-
-      if (baselineTimeMs == 0) {
-        baselineTimeMs = jobStartTime;
-      }
-      adjustTimeValuesToBaselineTime(amDef, this, baselineTimeMs);
-      return amDef;
-    }
-
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSLS.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSLS.java
deleted file mode 100644
index a84c9240cb6..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSLS.java
+++ /dev/null
@@ -1,185 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceInformation;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.apache.hadoop.yarn.util.resource.ResourceUtils;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-
-public class AMDefinitionSLS extends AMDefinition {
-  public AMDefinitionSLS(AmDefinitionBuilder builder) {
-    super(builder);
-  }
-
-  public String getQueue() {
-    return queue;
-  }
-
-  public static List<ContainerSimulator> getTaskContainers(Map<String, ?> jsonJob,
-      SLSRunner slsRunner) throws YarnException {
-    List<Map<String, String>> tasks = (List) jsonJob.get(SLSConfiguration.JOB_TASKS);
-    if (tasks == null || tasks.size() == 0) {
-      throw new YarnException("No task for the job!");
-    }
-
-    List<ContainerSimulator> containers = new ArrayList<>();
-    for (Map<String, String> jsonTask : tasks) {
-      TaskContainerDefinition containerDef =
-          TaskContainerDefinition.Builder.create()
-              .withCount(jsonTask, SLSConfiguration.COUNT)
-              .withHostname(jsonTask.get(SLSConfiguration.TASK_HOST))
-              .withDuration(jsonTask, SLSConfiguration.TASK_DURATION_MS)
-              .withDurationLegacy(jsonTask, SLSConfiguration.DURATION_MS)
-              .withTaskStart(jsonTask, SLSConfiguration.TASK_START_MS)
-              .withTaskFinish(jsonTask, SLSConfiguration.TASK_END_MS)
-              .withResource(getResourceForContainer(jsonTask, slsRunner))
-              .withPriority(jsonTask, SLSConfiguration.TASK_PRIORITY)
-              .withType(jsonTask, SLSConfiguration.TASK_TYPE)
-              .withExecutionType(jsonTask, SLSConfiguration.TASK_EXECUTION_TYPE)
-              .withAllocationId(jsonTask, SLSConfiguration.TASK_ALLOCATION_ID)
-              .withRequestDelay(jsonTask, SLSConfiguration.TASK_REQUEST_DELAY)
-              .build();
-
-      for (int i = 0; i < containerDef.getCount(); i++) {
-        containers.add(ContainerSimulator.
-            createFromTaskContainerDefinition(containerDef));
-      }
-    }
-    return containers;
-  }
-
-  private static Resource getResourceForContainer(Map<String, String> jsonTask,
-      SLSRunner slsRunner) {
-    Resource res = slsRunner.getDefaultContainerResource();
-    ResourceInformation[] infors = ResourceUtils.getResourceTypesArray();
-    for (ResourceInformation info : infors) {
-      if (jsonTask.containsKey(SLSConfiguration.TASK_PREFIX + info.getName())) {
-        long value = Long.parseLong(
-            jsonTask.get(SLSConfiguration.TASK_PREFIX + info.getName()));
-        res.setResourceValue(info.getName(), value);
-      }
-    }
-    return res;
-  }
-
-  public static final class Builder extends AmDefinitionBuilder {
-    private final Map<String, String> jsonJob;
-
-    private Builder(Map<String, String> jsonJob) {
-      this.jsonJob = jsonJob;
-    }
-
-    public static Builder create(Map<String, String> jsonJob) {
-      return new Builder(jsonJob);
-    }
-
-    public Builder withAmType(String key) {
-      if (jsonJob.containsKey(key)) {
-        String amType = jsonJob.get(key);
-        if (amType != null) {
-          this.amType = amType;
-        }
-      }
-      return this;
-    }
-
-    public Builder withUser(String key) {
-      if (jsonJob.containsKey(key)) {
-        String user = jsonJob.get(key);
-        if (user != null) {
-          this.user = user;
-        }
-      }
-      return this;
-    }
-
-    public Builder withQueue(String key) {
-      if (jsonJob.containsKey(key)) {
-        this.queue = jsonJob.get(key);
-      }
-      return this;
-    }
-
-    public Builder withJobId(String key) {
-      if (jsonJob.containsKey(key)) {
-        this.jobId = jsonJob.get(key);
-      }
-      return this;
-    }
-
-    public Builder withJobCount(String key) {
-      if (jsonJob.containsKey(key)) {
-        jobCount = Integer.parseInt(jsonJob.get(key));
-        jobCount = Math.max(jobCount, 1);
-      }
-      return this;
-    }
-
-    public Builder withJobStartTime(String key) {
-      if (jsonJob.containsKey(key)) {
-        this.jobStartTime = Long.parseLong(jsonJob.get(key));
-      }
-      return this;
-    }
-
-    public Builder withJobFinishTime(String key) {
-      if (jsonJob.containsKey(key)) {
-        this.jobFinishTime = Long.parseLong(jsonJob.get(key));
-      }
-      return this;
-    }
-
-    public Builder withLabelExpression(String key) {
-      if (jsonJob.containsKey(key)) {
-        this.labelExpression = jsonJob.get(key);
-      }
-      return this;
-    }
-
-    public AMDefinitionSLS.Builder withTaskContainers(
-        List<ContainerSimulator> taskContainers) {
-      this.taskContainers = taskContainers;
-      return this;
-    }
-
-    public AMDefinitionSLS.Builder withAmResource(Resource amResource) {
-      this.amResource = amResource;
-      return this;
-    }
-
-    public AMDefinitionSLS build() {
-      AMDefinitionSLS amDef = new AMDefinitionSLS(this);
-      // Job id is generated automatically if this job configuration allows
-      // multiple job instances
-      if (jobCount > 1) {
-        amDef.oldAppId = null;
-      } else {
-        amDef.oldAppId = jobId;
-      }
-      amDef.jobCount = jobCount;
-      return amDef;
-    }
-  }
-
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSynth.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSynth.java
deleted file mode 100644
index db736f06f72..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMDefinitionSynth.java
+++ /dev/null
@@ -1,146 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import static org.apache.hadoop.yarn.sls.AMDefinitionFactory.adjustTimeValuesToBaselineTime;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Random;
-
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.apache.hadoop.yarn.sls.synthetic.SynthJob;
-
-public class AMDefinitionSynth extends AMDefinition {
-  public AMDefinitionSynth(AmDefinitionBuilder builder) {
-    super(builder);
-  }
-
-  public static List<ContainerSimulator> getTaskContainers(
-      SynthJob job, SLSRunner slsRunner) throws YarnException {
-    List<ContainerSimulator> containerList = new ArrayList<>();
-    ArrayList<NodeId> keyAsArray = new ArrayList<>(
-        slsRunner.getNmMap().keySet());
-    Random rand = new Random(slsRunner.getStjp().getSeed());
-
-    for (SynthJob.SynthTask task : job.getTasks()) {
-      RMNode node = getRandomNode(slsRunner, keyAsArray, rand);
-      TaskContainerDefinition containerDef =
-          TaskContainerDefinition.Builder.create()
-              .withCount(1)
-              .withHostname("/" + node.getRackName() + "/" + node.getHostName())
-              .withDuration(task.getTime())
-              .withResource(Resource
-                  .newInstance((int) task.getMemory(), (int) task.getVcores()))
-              .withPriority(task.getPriority())
-              .withType(task.getType())
-              .withExecutionType(task.getExecutionType())
-              .withAllocationId(-1)
-              .withRequestDelay(0)
-              .build();
-      containerList.add(
-          ContainerSimulator.createFromTaskContainerDefinition(containerDef));
-    }
-
-    return containerList;
-  }
-
-  private static RMNode getRandomNode(SLSRunner slsRunner,
-      ArrayList<NodeId> keyAsArray, Random rand) {
-    int randomIndex = rand.nextInt(keyAsArray.size());
-    return slsRunner.getNmMap().get(keyAsArray.get(randomIndex)).getNode();
-  }
-
-  public static final class Builder extends AmDefinitionBuilder {
-    private long baselineTimeMs;
-
-    private Builder() {
-    }
-
-    public static Builder create() {
-      return new Builder();
-    }
-
-    public Builder withAmType(String amType) {
-      this.amType = amType;
-      return this;
-    }
-
-    public Builder withUser(String user) {
-      if (user != null) {
-        this.user = user;
-      }
-      return this;
-    }
-
-    public Builder withQueue(String queue) {
-      this.queue = queue;
-      return this;
-    }
-
-    public Builder withJobId(String oldJobId) {
-      this.jobId = oldJobId;
-      return this;
-    }
-
-    public Builder withJobStartTime(long time) {
-      this.jobStartTime = time;
-      return this;
-    }
-
-    public Builder withJobFinishTime(long time) {
-      this.jobFinishTime = time;
-      return this;
-    }
-
-    public Builder withBaseLineTimeMs(long baselineTimeMs) {
-      this.baselineTimeMs = baselineTimeMs;
-      return this;
-    }
-
-    public AMDefinitionSynth.Builder withLabelExpression(String expr) {
-      this.labelExpression = expr;
-      return this;
-    }
-
-    public AMDefinitionSynth.Builder withTaskContainers(
-        List<ContainerSimulator> taskContainers) {
-      this.taskContainers = taskContainers;
-      return this;
-    }
-
-    public AMDefinitionSynth.Builder withAmResource(Resource amResource) {
-      this.amResource = amResource;
-      return this;
-    }
-
-    public AMDefinitionSynth build() {
-      AMDefinitionSynth amDef = new AMDefinitionSynth(this);
-
-      if (baselineTimeMs == 0) {
-        baselineTimeMs = jobStartTime;
-      }
-      adjustTimeValuesToBaselineTime(amDef, this, baselineTimeMs);
-      return amDef;
-    }
-  }
-
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMRunner.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMRunner.java
deleted file mode 100644
index 2dc09de6653..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/AMRunner.java
+++ /dev/null
@@ -1,299 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import com.fasterxml.jackson.core.JsonFactory;
-import com.fasterxml.jackson.databind.JavaType;
-import com.fasterxml.jackson.databind.ObjectMapper;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.tools.rumen.JobTraceReader;
-import org.apache.hadoop.tools.rumen.LoggedJob;
-import org.apache.hadoop.util.ReflectionUtils;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.ReservationId;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.sls.SLSRunner.TraceType;
-import org.apache.hadoop.yarn.sls.appmaster.AMSimulator;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.scheduler.TaskRunner;
-import org.apache.hadoop.yarn.sls.synthetic.SynthJob;
-import org.apache.hadoop.yarn.sls.synthetic.SynthTraceJobProducer;
-import org.apache.hadoop.yarn.util.UTCClock;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.io.Reader;
-import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.ConcurrentHashMap;
-
-
-public class AMRunner {
-  private static final Logger LOG = LoggerFactory.getLogger(AMRunner.class);
-  int remainingApps = 0;
-
-  private final Configuration conf;
-  private int AM_ID;
-  private Map<String, AMSimulator> amMap;
-  private Map<ApplicationId, AMSimulator> appIdAMSim;
-  private Set<String> trackedApps;
-  private Map<String, Class> amClassMap;
-  private TraceType inputType;
-  private String[] inputTraces;
-  private final TaskRunner runner;
-  private final SLSRunner slsRunner;
-  private int numAMs, numTasks;
-  private long maxRuntime;
-  private ResourceManager rm;
-
-  public AMRunner(TaskRunner runner, SLSRunner slsRunner) {
-    this.runner = runner;
-    this.slsRunner = slsRunner;
-    this.conf = slsRunner.getConf();
-  }
-
-
-  public void init(Configuration conf) throws ClassNotFoundException {
-    amMap = new ConcurrentHashMap<>();
-    amClassMap = new HashMap<>();
-    appIdAMSim = new ConcurrentHashMap<>();
-    // <AMType, Class> map
-    for (Map.Entry<String, String> e : conf) {
-      String key = e.getKey();
-      if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {
-        String amType = key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());
-        amClassMap.put(amType, Class.forName(conf.get(key)));
-      }
-    }
-  }
-
-  public void startAM() throws YarnException, IOException {
-    switch (inputType) {
-      case SLS:
-        for (String inputTrace : inputTraces) {
-          startAMFromSLSTrace(inputTrace);
-        }
-        break;
-      case RUMEN:
-        long baselineTimeMS = 0;
-        for (String inputTrace : inputTraces) {
-          startAMFromRumenTrace(inputTrace, baselineTimeMS);
-        }
-        break;
-      case SYNTH:
-        startAMFromSynthGenerator();
-        break;
-      default:
-        throw new YarnException("Input configuration not recognized, "
-            + "trace type should be SLS, RUMEN, or SYNTH");
-    }
-
-    numAMs = amMap.size();
-    remainingApps = numAMs;
-  }
-
-  /**
-   * Parse workload from a SLS trace file.
-   */
-  private void startAMFromSLSTrace(String inputTrace) throws IOException {
-    JsonFactory jsonF = new JsonFactory();
-    ObjectMapper mapper = new ObjectMapper();
-
-    try (Reader input = new InputStreamReader(
-        new FileInputStream(inputTrace), StandardCharsets.UTF_8)) {
-      JavaType type = mapper.getTypeFactory().
-          constructMapType(Map.class, String.class, String.class);
-      Iterator<Map<String, String>> jobIter = mapper.readValues(
-          jsonF.createParser(input), type);
-
-      while (jobIter.hasNext()) {
-        try {
-          Map<String, String> jsonJob = jobIter.next();
-          AMDefinitionSLS amDef = AMDefinitionFactory.createFromSlsTrace(jsonJob, slsRunner);
-          startAMs(amDef);
-        } catch (Exception e) {
-          LOG.error("Failed to create an AM: {}", e.getMessage());
-        }
-      }
-    }
-  }
-
-  /**
-   * parse workload information from synth-generator trace files.
-   */
-  private void startAMFromSynthGenerator() throws YarnException, IOException {
-    Configuration localConf = new Configuration();
-    localConf.set("fs.defaultFS", "file:///");
-    //if we use the nodeFile this could have been not initialized yet.
-    if (slsRunner.getStjp() == null) {
-      slsRunner.setStjp(new SynthTraceJobProducer(conf, new Path(inputTraces[0])));
-    }
-
-    SynthJob job;
-    // we use stjp, a reference to the job producer instantiated during node
-    // creation
-    while ((job = (SynthJob) slsRunner.getStjp().getNextJob()) != null) {
-      ReservationId reservationId = null;
-      if (job.hasDeadline()) {
-        reservationId = ReservationId
-            .newInstance(rm.getStartTime(), AM_ID);
-      }
-      AMDefinitionSynth amDef = AMDefinitionFactory.createFromSynth(job, slsRunner);
-      startAMs(amDef, reservationId, job.getParams(), job.getDeadline());
-    }
-  }
-
-  /**
-   * Parse workload from a rumen trace file.
-   */
-  private void startAMFromRumenTrace(String inputTrace, long baselineTimeMS)
-      throws IOException {
-    Configuration conf = new Configuration();
-    conf.set("fs.defaultFS", "file:///");
-    File fin = new File(inputTrace);
-
-    try (JobTraceReader reader = new JobTraceReader(
-        new Path(fin.getAbsolutePath()), conf)) {
-      LoggedJob job = reader.getNext();
-
-      while (job != null) {
-        try {
-          AMDefinitionRumen amDef =
-              AMDefinitionFactory.createFromRumenTrace(job, baselineTimeMS,
-                  slsRunner);
-          startAMs(amDef);
-        } catch (Exception e) {
-          LOG.error("Failed to create an AM", e);
-        }
-        job = reader.getNext();
-      }
-    }
-  }
-
-  private void startAMs(AMDefinition amDef) {
-    for (int i = 0; i < amDef.getJobCount(); i++) {
-      JobDefinition jobDef = JobDefinition.Builder.create()
-          .withAmDefinition(amDef)
-          .withDeadline(-1)
-          .withReservationId(null)
-          .withParams(null)
-          .build();
-      runNewAM(jobDef);
-    }
-  }
-
-  private void startAMs(AMDefinition amDef,
-      ReservationId reservationId,
-      Map<String, String> params, long deadline) {
-    for (int i = 0; i < amDef.getJobCount(); i++) {
-      JobDefinition jobDef = JobDefinition.Builder.create()
-          .withAmDefinition(amDef)
-          .withReservationId(reservationId)
-          .withParams(params)
-          .withDeadline(deadline)
-          .build();
-      runNewAM(jobDef);
-    }
-  }
-
-  private void runNewAM(JobDefinition jobDef) {
-    AMDefinition amDef = jobDef.getAmDefinition();
-    String oldJobId = amDef.getOldAppId();
-    AMSimulator amSim =
-        createAmSimulator(amDef.getAmType());
-
-    if (amSim != null) {
-      int heartbeatInterval = conf.getInt(
-          SLSConfiguration.AM_HEARTBEAT_INTERVAL_MS,
-          SLSConfiguration.AM_HEARTBEAT_INTERVAL_MS_DEFAULT);
-      boolean isTracked = trackedApps.contains(oldJobId);
-
-      if (oldJobId == null) {
-        oldJobId = Integer.toString(AM_ID);
-      }
-      AM_ID++;
-      amSim.init(amDef, rm, slsRunner, isTracked, runner.getStartTimeMS(), heartbeatInterval, appIdAMSim);
-      if (jobDef.getReservationId() != null) {
-        // if we have a ReservationId, delegate reservation creation to
-        // AMSim (reservation shape is impl specific)
-        UTCClock clock = new UTCClock();
-        amSim.initReservation(jobDef.getReservationId(), jobDef.getDeadline(), clock.getTime());
-      }
-      runner.schedule(amSim);
-      maxRuntime = Math.max(maxRuntime, amDef.getJobFinishTime());
-      numTasks += amDef.getTaskContainers().size();
-      amMap.put(oldJobId, amSim);
-    }
-  }
-
-  private AMSimulator createAmSimulator(String jobType) {
-    return (AMSimulator) ReflectionUtils.newInstance(
-        amClassMap.get(jobType), new Configuration());
-  }
-
-  public AMSimulator getAMSimulator(ApplicationId appId) {
-    return appIdAMSim.get(appId);
-  }
-
-  public void setInputType(TraceType inputType) {
-    this.inputType = inputType;
-  }
-
-  public void setInputTraces(String[] inputTraces) {
-    this.inputTraces = inputTraces.clone();
-  }
-
-  public void setResourceManager(ResourceManager rm) {
-    this.rm = rm;
-  }
-
-  public Set<String> getTrackedApps() {
-    return trackedApps;
-  }
-
-  public void setTrackedApps(Set<String> trackApps) {
-    this.trackedApps = trackApps;
-  }
-
-  public int getNumAMs() {
-    return numAMs;
-  }
-
-  public int getNumTasks() {
-    return numTasks;
-  }
-
-  public long getMaxRuntime() {
-    return maxRuntime;
-  }
-
-  public Map<String, AMSimulator> getAmMap() {
-    return amMap;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/JobDefinition.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/JobDefinition.java
deleted file mode 100644
index 4a39d3710c9..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/JobDefinition.java
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.yarn.api.records.ReservationId;
-import java.util.Map;
-
-public class JobDefinition {
-  private AMDefinition amDefinition;
-  private ReservationId reservationId;
-  private long deadline;
-  private Map<String, String> params;
-
-  public AMDefinition getAmDefinition() {
-    return amDefinition;
-  }
-
-  public ReservationId getReservationId() {
-    return reservationId;
-  }
-
-  public long getDeadline() {
-    return deadline;
-  }
-
-  //Currently unused
-  public Map<String, String> getParams() {
-    return params;
-  }
-
-  public static final class Builder {
-    private AMDefinition amDefinition;
-    private ReservationId reservationId;
-    private long deadline;
-    private Map<String, String> params;
-
-    private Builder() {
-    }
-
-    public static Builder create() {
-      return new Builder();
-    }
-
-    public Builder withAmDefinition(AMDefinition amDefinition) {
-      this.amDefinition = amDefinition;
-      return this;
-    }
-
-    public Builder withReservationId(ReservationId reservationId) {
-      this.reservationId = reservationId;
-      return this;
-    }
-
-    public Builder withDeadline(long deadline) {
-      this.deadline = deadline;
-      return this;
-    }
-
-    public Builder withParams(Map<String, String> params) {
-      this.params = params;
-      return this;
-    }
-
-    public JobDefinition build() {
-      JobDefinition jobDef = new JobDefinition();
-      jobDef.params = this.params;
-      jobDef.amDefinition = this.amDefinition;
-      jobDef.reservationId = this.reservationId;
-      jobDef.deadline = this.deadline;
-      return jobDef;
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/NMRunner.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/NMRunner.java
deleted file mode 100644
index 14524a4e04a..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/NMRunner.java
+++ /dev/null
@@ -1,238 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.NodeLabel;
-import org.apache.hadoop.yarn.api.records.NodeState;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceInformation;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode;
-import org.apache.hadoop.yarn.sls.SLSRunner.TraceType;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.nodemanager.NMSimulator;
-import org.apache.hadoop.yarn.sls.scheduler.TaskRunner;
-import org.apache.hadoop.yarn.sls.synthetic.SynthTraceJobProducer;
-import org.apache.hadoop.yarn.sls.utils.SLSUtils;
-import org.apache.hadoop.yarn.util.resource.ResourceUtils;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.IOException;
-import java.util.Map;
-import java.util.Random;
-import java.util.Set;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import java.util.concurrent.TimeUnit;
-
-public class NMRunner {
-  private static final Logger LOG = LoggerFactory.getLogger(NMRunner.class);
-  
-  // other simulation information
-  private int numNMs, numRacks;
-
-  // NM simulator
-  private Map<NodeId, NMSimulator> nmMap;
-  private Resource nodeManagerResource;
-  private String nodeFile;
-  private TaskRunner taskRunner;
-  private Configuration conf;
-  private ResourceManager rm;
-  private String tableMapping;
-  private int threadPoolSize;
-  private TraceType inputType;
-  private String[] inputTraces;
-  private SynthTraceJobProducer stjp;
-
-  public NMRunner(TaskRunner taskRunner, Configuration conf, ResourceManager rm, String tableMapping, int threadPoolSize) {
-    this.taskRunner = taskRunner;
-    this.conf = conf;
-    this.rm = rm;
-    this.tableMapping = tableMapping;
-    this.threadPoolSize = threadPoolSize;
-    this.nmMap = new ConcurrentHashMap<>();
-    this.nodeManagerResource = getNodeManagerResourceFromConf();
-  }
-
-  public void startNM() throws YarnException, IOException,
-      InterruptedException {
-    // nm configuration
-    int heartbeatInterval = conf.getInt(
-        SLSConfiguration.NM_HEARTBEAT_INTERVAL_MS,
-        SLSConfiguration.NM_HEARTBEAT_INTERVAL_MS_DEFAULT);
-    float resourceUtilizationRatio = conf.getFloat(
-        SLSConfiguration.NM_RESOURCE_UTILIZATION_RATIO,
-        SLSConfiguration.NM_RESOURCE_UTILIZATION_RATIO_DEFAULT);
-    // nm information (fetch from topology file, or from sls/rumen json file)
-    Set<SLSRunner.NodeDetails> nodeSet = null;
-    if (nodeFile.isEmpty()) {
-      for (String inputTrace : inputTraces) {
-        switch (inputType) {
-          case SLS:
-            nodeSet = SLSUtils.parseNodesFromSLSTrace(inputTrace);
-            break;
-          case RUMEN:
-            nodeSet = SLSUtils.parseNodesFromRumenTrace(inputTrace);
-            break;
-          case SYNTH:
-            stjp = new SynthTraceJobProducer(conf, new Path(inputTraces[0]));
-            nodeSet = SLSUtils.generateNodes(stjp.getNumNodes(),
-                stjp.getNumNodes()/stjp.getNodesPerRack());
-            break;
-          default:
-            throw new YarnException("Input configuration not recognized, "
-                + "trace type should be SLS, RUMEN, or SYNTH");
-        }
-      }
-    } else {
-      nodeSet = SLSUtils.parseNodesFromNodeFile(nodeFile,
-          nodeManagerResource);
-    }
-
-    if (nodeSet == null || nodeSet.isEmpty()) {
-      throw new YarnException("No node! Please configure nodes.");
-    }
-
-    SLSUtils.generateNodeTableMapping(nodeSet, tableMapping);
-
-    // create NM simulators
-    Random random = new Random();
-    Set<String> rackSet = ConcurrentHashMap.newKeySet();
-    int threadPoolSize = Math.max(this.threadPoolSize,
-        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);
-    ExecutorService executorService = Executors.
-        newFixedThreadPool(threadPoolSize);
-    for (SLSRunner.NodeDetails nodeDetails : nodeSet) {
-      executorService.submit(new Runnable() {
-        @Override public void run() {
-          try {
-            // we randomize the heartbeat start time from zero to 1 interval
-            NMSimulator nm = new NMSimulator();
-            Resource nmResource = nodeManagerResource;
-            String hostName = nodeDetails.getHostname();
-            if (nodeDetails.getNodeResource() != null) {
-              nmResource = nodeDetails.getNodeResource();
-            }
-            Set<NodeLabel> nodeLabels = nodeDetails.getLabels();
-            nm.init(hostName, nmResource,
-                random.nextInt(heartbeatInterval),
-                heartbeatInterval, rm, resourceUtilizationRatio, nodeLabels);
-            nmMap.put(nm.getNode().getNodeID(), nm);
-            taskRunner.schedule(nm);
-            rackSet.add(nm.getNode().getRackName());
-          } catch (IOException | YarnException e) {
-            LOG.error("Got an error while adding node", e);
-          }
-        }
-      });
-    }
-    executorService.shutdown();
-    executorService.awaitTermination(10, TimeUnit.MINUTES);
-    numRacks = rackSet.size();
-    numNMs = nmMap.size();
-  }
-
-  void waitForNodesRunning() throws InterruptedException {
-    long startTimeMS = System.currentTimeMillis();
-    while (true) {
-      int numRunningNodes = 0;
-      for (RMNode node : rm.getRMContext().getRMNodes().values()) {
-        if (node.getState() == NodeState.RUNNING) {
-          numRunningNodes++;
-        }
-      }
-      if (numRunningNodes == numNMs) {
-        break;
-      }
-      LOG.info("SLSRunner is waiting for all nodes RUNNING."
-          + " {} of {} NMs initialized.", numRunningNodes, numNMs);
-      Thread.sleep(1000);
-    }
-    LOG.info("SLSRunner takes {} ms to launch all nodes.",
-        System.currentTimeMillis() - startTimeMS);
-  }
-
-  private Resource getNodeManagerResourceFromConf() {
-    Resource resource = Resources.createResource(0);
-    ResourceInformation[] infors = ResourceUtils.getResourceTypesArray();
-    for (ResourceInformation info : infors) {
-      long value;
-      if (info.getName().equals(ResourceInformation.MEMORY_URI)) {
-        value = conf.getInt(SLSConfiguration.NM_MEMORY_MB,
-            SLSConfiguration.NM_MEMORY_MB_DEFAULT);
-      } else if (info.getName().equals(ResourceInformation.VCORES_URI)) {
-        value = conf.getInt(SLSConfiguration.NM_VCORES,
-            SLSConfiguration.NM_VCORES_DEFAULT);
-      } else {
-        value = conf.getLong(SLSConfiguration.NM_PREFIX +
-            info.getName(), SLSConfiguration.NM_RESOURCE_DEFAULT);
-      }
-
-      resource.setResourceValue(info.getName(), value);
-    }
-
-    return resource;
-  }
-
-  public void setNodeFile(String nodeFile) {
-    this.nodeFile = nodeFile;
-  }
-
-
-  public void setInputType(TraceType inputType) {
-    this.inputType = inputType;
-  }
-
-  public void setInputTraces(String[] inputTraces) {
-    this.inputTraces = inputTraces.clone();
-  }
-
-  public int getNumNMs() {
-    return numNMs;
-  }
-
-  public int getNumRacks() {
-    return numRacks;
-  }
-
-  public Resource getNodeManagerResource() {
-    return nodeManagerResource;
-  }
-
-  public Map<NodeId, NMSimulator> getNmMap() {
-    return nmMap;
-  }
-
-  public SynthTraceJobProducer getStjp() {
-    return stjp;
-  }
-
-  public void setTableMapping(String tableMapping) {
-    this.tableMapping = tableMapping;
-  }
-
-  public void setRm(ResourceManager rm) {
-    this.rm = rm;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RMRunner.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RMRunner.java
deleted file mode 100644
index dbded4b306e..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RMRunner.java
+++ /dev/null
@@ -1,137 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.CommonConfigurationKeysPublic;
-import org.apache.hadoop.metrics2.source.JvmMetrics;
-import org.apache.hadoop.net.DNSToSwitchMapping;
-import org.apache.hadoop.net.TableMapping;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.server.resourcemanager.amlauncher.ApplicationMasterLauncher;
-import org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.resourcemanager.MockAMLauncher;
-import org.apache.hadoop.yarn.sls.scheduler.SLSCapacityScheduler;
-import org.apache.hadoop.yarn.sls.scheduler.SLSFairScheduler;
-import org.apache.hadoop.yarn.sls.scheduler.SchedulerMetrics;
-import org.apache.hadoop.yarn.sls.scheduler.SchedulerWrapper;
-import java.util.HashMap;
-import java.util.Map;
-
-public class RMRunner {
-  private ResourceManager rm;
-  private String metricsOutputDir;
-  private Configuration conf;
-  private SLSRunner slsRunner;
-  private String tableMapping;
-  private Map<String, Integer> queueAppNumMap;
-
-  public RMRunner(Configuration conf, SLSRunner slsRunner) {
-    this.conf = conf;
-    this.slsRunner = slsRunner;
-    this.queueAppNumMap = new HashMap<>();
-  }
-
-  public void startRM() throws ClassNotFoundException, YarnException {
-    Configuration rmConf = new YarnConfiguration(conf);
-    String schedulerClass = rmConf.get(YarnConfiguration.RM_SCHEDULER);
-
-    if (Class.forName(schedulerClass) == CapacityScheduler.class) {
-      rmConf.set(YarnConfiguration.RM_SCHEDULER,
-          SLSCapacityScheduler.class.getName());
-      rmConf.setBoolean(YarnConfiguration.RM_SCHEDULER_ENABLE_MONITORS, true);
-      rmConf.set(YarnConfiguration.RM_SCHEDULER_MONITOR_POLICIES,
-          ProportionalCapacityPreemptionPolicy.class.getName());
-    } else if (Class.forName(schedulerClass) == FairScheduler.class) {
-      rmConf.set(YarnConfiguration.RM_SCHEDULER,
-          SLSFairScheduler.class.getName());
-    } else if (Class.forName(schedulerClass) == FifoScheduler.class) {
-      // TODO add support for FifoScheduler
-      throw new YarnException("Fifo Scheduler is not supported yet.");
-    }
-    rmConf.setClass(
-        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY,
-        TableMapping.class, DNSToSwitchMapping.class);
-    rmConf.set(
-        CommonConfigurationKeysPublic.NET_TOPOLOGY_TABLE_MAPPING_FILE_KEY,
-        tableMapping);
-    rmConf.set(SLSConfiguration.METRICS_OUTPUT_DIR, metricsOutputDir);
-
-    rm = new ResourceManager() {
-      @Override
-      protected ApplicationMasterLauncher createAMLauncher() {
-        return new MockAMLauncher(slsRunner, this.rmContext);
-      }
-    };
-
-    // Across runs of parametrized tests, the JvmMetrics objects is retained,
-    // but is not registered correctly
-    JvmMetrics jvmMetrics = JvmMetrics.initSingleton("ResourceManager", null);
-    jvmMetrics.registerIfNeeded();
-
-    // Init and start the actual ResourceManager
-    rm.init(rmConf);
-    rm.start();
-  }
-
-  public void increaseQueueAppNum(String queue) throws YarnException {
-    SchedulerWrapper wrapper = (SchedulerWrapper)rm.getResourceScheduler();
-    String queueName = wrapper.getRealQueueName(queue);
-    Integer appNum = queueAppNumMap.get(queueName);
-    if (appNum == null) {
-      appNum = 1;
-    } else {
-      appNum = appNum + 1;
-    }
-
-    queueAppNumMap.put(queueName, appNum);
-    SchedulerMetrics metrics = wrapper.getSchedulerMetrics();
-    if (metrics != null) {
-      metrics.trackQueue(queueName);
-    }
-  }
-
-  public void setMetricsOutputDir(String metricsOutputDir) {
-    this.metricsOutputDir = metricsOutputDir;
-  }
-
-  public String getTableMapping() {
-    return tableMapping;
-  }
-
-  public void setTableMapping(String tableMapping) {
-    this.tableMapping = tableMapping;
-  }
-
-  public void stop() {
-    rm.stop();
-  }
-
-  public ResourceManager getRm() {
-    return rm;
-  }
-
-  public Map<String, Integer> getQueueAppNumMap() {
-    return queueAppNumMap;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/ReservationClientUtil.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/ReservationClientUtil.java
deleted file mode 100644
index 2d04bb240c1..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/ReservationClientUtil.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.yarn.api.protocolrecords.ReservationSubmissionRequest;
-import org.apache.hadoop.yarn.api.records.*;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Simple support class, used to create reservation requests.
- */
-public final class ReservationClientUtil {
-
-  private ReservationClientUtil(){
-    //avoid instantiation
-  }
-
-  /**
-   * Creates a request that envelopes a MR jobs, picking max number of maps and
-   * reducers, max durations, and max resources per container.
-   *
-   * @param reservationId the id of the reservation
-   * @param name the name of a reservation
-   * @param maxMapRes maximum resources used by any mapper
-   * @param numberMaps number of mappers
-   * @param maxMapDur maximum duration of any mapper
-   * @param maxRedRes maximum resources used by any reducer
-   * @param numberReduces number of reducers
-   * @param maxRedDur maximum duration of any reducer
-   * @param arrival start time of valid range for reservation
-   * @param deadline deadline for this reservation
-   * @param queueName queue to submit to
-   * @return a submission request
-   */
-  @SuppressWarnings("checkstyle:parameternumber")
-  public static ReservationSubmissionRequest createMRReservation(
-      ReservationId reservationId, String name, Resource maxMapRes,
-      int numberMaps, long maxMapDur, Resource maxRedRes, int numberReduces,
-      long maxRedDur, long arrival, long deadline, String queueName) {
-
-    ReservationRequest mapRR = ReservationRequest.newInstance(maxMapRes,
-        numberMaps, numberMaps, maxMapDur);
-    ReservationRequest redRR = ReservationRequest.newInstance(maxRedRes,
-        numberReduces, numberReduces, maxRedDur);
-
-    List<ReservationRequest> listResReq = new ArrayList<ReservationRequest>();
-    listResReq.add(mapRR);
-    listResReq.add(redRR);
-
-    ReservationRequests reservationRequests = ReservationRequests
-        .newInstance(listResReq, ReservationRequestInterpreter.R_ORDER_NO_GAP);
-    ReservationDefinition resDef = ReservationDefinition.newInstance(arrival,
-        deadline, reservationRequests, name);
-
-    // outermost request
-    return ReservationSubmissionRequest
-        .newInstance(resDef, queueName, reservationId);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java
deleted file mode 100644
index 2cdfe236c41..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java
+++ /dev/null
@@ -1,235 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.io.OutputStreamWriter;
-import java.io.Reader;
-import java.io.Writer;
-import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.TreeMap;
-import java.util.TreeSet;
-
-import com.fasterxml.jackson.core.JsonFactory;
-import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.databind.ObjectWriter;
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.CommandLineParser;
-import org.apache.commons.cli.GnuParser;
-import org.apache.commons.cli.Options;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.sls.utils.SLSUtils;
-
-@Private
-@Unstable
-public class RumenToSLSConverter {
-  private static final String EOL = System.getProperty("line.separator");
-
-  private static long baseline = 0;
-  private static Map<String, Set<String>> rackNodeMap =
-          new TreeMap<String, Set<String>>();
-
-  public static void main(String[] args) throws Exception {
-    Options options = new Options();
-    options.addOption("input", true, "input rumen json file");
-    options.addOption("outputJobs", true, "output jobs file");
-    options.addOption("outputNodes", true, "output nodes file");
-
-    CommandLineParser parser = new GnuParser();
-    CommandLine cmd = parser.parse(options, args);
-
-    if (! cmd.hasOption("input") ||
-            ! cmd.hasOption("outputJobs") ||
-            ! cmd.hasOption("outputNodes")) {
-      System.err.println();
-      System.err.println("ERROR: Missing input or output file");
-      System.err.println();
-      System.err.println("LoadGenerator creates a SLS script " +
-              "from a Hadoop Rumen output");
-      System.err.println();
-      System.err.println("Options: -input FILE -outputJobs FILE " +
-              "-outputNodes FILE");
-      System.err.println();
-      System.exit(1);
-    }
-
-    String inputFile = cmd.getOptionValue("input");
-    String outputJsonFile = cmd.getOptionValue("outputJobs");
-    String outputNodeFile = cmd.getOptionValue("outputNodes");
-
-    // check existing
-    if (! new File(inputFile).exists()) {
-      System.err.println();
-      System.err.println("ERROR: input does not exist");
-      System.exit(1);
-    }
-    if (new File(outputJsonFile).exists()) {
-      System.err.println();
-      System.err.println("ERROR: output job file is existing");
-      System.exit(1);
-    }
-    if (new File(outputNodeFile).exists()) {
-      System.err.println();
-      System.err.println("ERROR: output node file is existing");
-      System.exit(1);
-    }
-
-    File jsonFile = new File(outputJsonFile);
-    if (! jsonFile.getParentFile().exists()
-            && ! jsonFile.getParentFile().mkdirs()) {
-      System.err.println("ERROR: Cannot create output directory in path: "
-              + jsonFile.getParentFile().getAbsoluteFile());
-      System.exit(1);
-    }
-    File nodeFile = new File(outputNodeFile);
-    if (! nodeFile.getParentFile().exists()
-            && ! nodeFile.getParentFile().mkdirs()) {
-      System.err.println("ERROR: Cannot create output directory in path: "
-              + nodeFile.getParentFile().getAbsoluteFile());
-      System.exit(1);
-    }
-
-    generateSLSLoadFile(inputFile, outputJsonFile);
-    generateSLSNodeFile(outputNodeFile);
-  }
-
-  private static void generateSLSLoadFile(String inputFile, String outputFile)
-          throws IOException {
-    try (Reader input =
-        new InputStreamReader(new FileInputStream(inputFile),
-            StandardCharsets.UTF_8)) {
-      try (Writer output =
-          new OutputStreamWriter(new FileOutputStream(outputFile), StandardCharsets.UTF_8)) {
-        ObjectMapper mapper = new ObjectMapper();
-        ObjectWriter writer = mapper.writerWithDefaultPrettyPrinter();
-        Iterator<Map> i = mapper.readValues(
-            new JsonFactory().createParser(input), Map.class);
-        while (i.hasNext()) {
-          Map m = i.next();
-          output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);
-        }
-      }
-    }
-  }
-
-  @SuppressWarnings("unchecked")
-  private static void generateSLSNodeFile(String outputFile)
-          throws IOException {
-    try (Writer output =
-        new OutputStreamWriter(new FileOutputStream(outputFile), StandardCharsets.UTF_8)) {
-      ObjectMapper mapper = new ObjectMapper();
-      ObjectWriter writer = mapper.writerWithDefaultPrettyPrinter();
-      for (Map.Entry<String, Set<String>> entry : rackNodeMap.entrySet()) {
-        Map rack = new LinkedHashMap();
-        rack.put("rack", entry.getKey());
-        List nodes = new ArrayList();
-        for (String name : entry.getValue()) {
-          Map node = new LinkedHashMap();
-          node.put("node", name);
-          nodes.add(node);
-        }
-        rack.put("nodes", nodes);
-        output.write(writer.writeValueAsString(rack) + EOL);
-      }
-    }
-  }
-
-  @SuppressWarnings("unchecked")
-  private static Map createSLSJob(Map rumenJob) {
-    Map json = new LinkedHashMap();
-    long jobStart = (Long) rumenJob.get("submitTime");
-    long jobFinish = (Long) rumenJob.get("finishTime");
-    String jobId = rumenJob.get("jobID").toString();
-    String queue = rumenJob.get("queue").toString();
-    String user = rumenJob.get("user").toString();
-    if (baseline == 0) {
-      baseline = jobStart;
-    }
-    jobStart -= baseline;
-    jobFinish -= baseline;
-    long offset = 0;
-    if (jobStart < 0) {
-      System.out.println("Warning: reset job " + jobId + " start time to 0.");
-      offset = -jobStart;
-      jobFinish = jobFinish - jobStart;
-      jobStart = 0;
-    }
-
-    json.put("am.type", "mapreduce");
-    json.put("job.start.ms", jobStart);
-    json.put("job.end.ms", jobFinish);
-    json.put("job.queue.name", queue);
-    json.put("job.id", jobId);
-    json.put("job.user", user);
-
-    List maps = createSLSTasks("map",
-            (List) rumenJob.get("mapTasks"), offset);
-    List reduces = createSLSTasks("reduce",
-            (List) rumenJob.get("reduceTasks"), offset);
-    List tasks = new ArrayList();
-    tasks.addAll(maps);
-    tasks.addAll(reduces);
-    json.put("job.tasks", tasks);
-    return json;
-  }
-
-  @SuppressWarnings("unchecked")
-  private static List createSLSTasks(String taskType,
-                                     List rumenTasks, long offset) {
-    int priority = taskType.equals("reduce") ? 10 : 20;
-    List array = new ArrayList();
-    for (Object e : rumenTasks) {
-      Map rumenTask = (Map) e;
-      for (Object ee : (List) rumenTask.get("attempts"))  {
-        Map rumenAttempt = (Map) ee;
-        long taskStart = (Long) rumenAttempt.get("startTime");
-        long taskFinish = (Long) rumenAttempt.get("finishTime");
-        String hostname = (String) rumenAttempt.get("hostName");
-        taskStart = taskStart - baseline + offset;
-        taskFinish = taskFinish - baseline + offset;
-        Map task = new LinkedHashMap();
-        task.put("container.host", hostname);
-        task.put("container.start.ms", taskStart);
-        task.put("container.end.ms", taskFinish);
-        task.put("container.priority", priority);
-        task.put("container.type", taskType);
-        array.add(task);
-        String[] rackHost = SLSUtils.getRackHostName(hostname);
-        if (rackNodeMap.containsKey(rackHost[0])) {
-          rackNodeMap.get(rackHost[0]).add(rackHost[1]);
-        } else {
-          Set<String> hosts = new TreeSet<String>();
-          hosts.add(rackHost[1]);
-          rackNodeMap.put(rackHost[0], hosts);
-        }
-      }
-    }
-    return array;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java
deleted file mode 100644
index c14d5685b7d..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java
+++ /dev/null
@@ -1,519 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls;
-
-import java.io.File;
-import java.io.IOException;
-import java.security.Security;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Objects;
-import java.util.Random;
-import java.util.Set;
-import java.util.Collections;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import java.util.concurrent.TimeUnit;
-
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.CommandLineParser;
-import org.apache.commons.cli.GnuParser;
-import org.apache.commons.cli.Options;
-import org.apache.commons.cli.ParseException;
-import org.apache.commons.collections.SetUtils;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.util.Tool;
-import org.apache.hadoop.util.ToolRunner;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.NodeLabel;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceInformation;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.sls.appmaster.AMSimulator;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.nodemanager.NMSimulator;
-import org.apache.hadoop.yarn.sls.scheduler.SchedulerWrapper;
-import org.apache.hadoop.yarn.sls.scheduler.TaskRunner;
-import org.apache.hadoop.yarn.sls.scheduler.Tracker;
-import org.apache.hadoop.yarn.sls.synthetic.SynthTraceJobProducer;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public class SLSRunner extends Configured implements Tool {
-  private static final TaskRunner runner = new TaskRunner();
-  private String[] inputTraces;
-
-  // metrics
-  private boolean printSimulation;
-
-  private final static Map<String, Object> simulateInfoMap =
-      new HashMap<>();
-
-  // logger
-  public final static Logger LOG = LoggerFactory.getLogger(SLSRunner.class);
-
-  private static boolean exitAtTheFinish = false;
-  private AMRunner amRunner;
-  private RMRunner rmRunner;
-  private NMRunner nmRunner;
-
-  private TraceType inputType;
-  private SynthTraceJobProducer stjp;
-
-  /**
-   * The type of trace in input.
-   */
-  public enum TraceType {
-    SLS, RUMEN, SYNTH
-  }
-
-  public static final String NETWORK_CACHE_TTL = "networkaddress.cache.ttl";
-  public static final String NETWORK_NEGATIVE_CACHE_TTL =
-      "networkaddress.cache.negative.ttl";
-
-  public int getRemainingApps() {
-    return amRunner.remainingApps;
-  }
-
-  public SLSRunner() throws ClassNotFoundException, YarnException {
-    Configuration tempConf = new Configuration(false);
-    init(tempConf);
-  }
-
-  public SLSRunner(Configuration tempConf) throws ClassNotFoundException, YarnException {
-    init(tempConf);
-  }
-
-  @Override
-  public void setConf(Configuration conf) {
-    if (null != conf) {
-      // Override setConf to make sure all conf added load sls-runner.xml, see
-      // YARN-6560
-      conf.addResource("sls-runner.xml");
-    }
-    super.setConf(conf);
-  }
-
-  private void init(Configuration tempConf) throws ClassNotFoundException, YarnException {
-    // runner configuration
-    setConf(tempConf);
-    
-    int poolSize = tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,
-        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);
-    SLSRunner.runner.setQueueSize(poolSize);
-
-    rmRunner = new RMRunner(getConf(), this);
-    nmRunner = new NMRunner(runner, getConf(), rmRunner.getRm(), rmRunner.getTableMapping(), poolSize);
-    amRunner = new AMRunner(runner, this);
-    amRunner.init(tempConf);
-  }
-
-  private SynthTraceJobProducer getSynthJobTraceProducer() throws YarnException {
-    // if we use the nodeFile this could have been not initialized yet.
-    if (nmRunner.getStjp() != null) {
-      return nmRunner.getStjp();
-    } else {
-      try {
-        return new SynthTraceJobProducer(getConf(), new Path(inputTraces[0]));
-      } catch (IOException e) {
-        throw new YarnException("Failed to initialize SynthTraceJobProducer", e);
-      }
-    }
-  }
-
-  /**
-   * @return an unmodifiable view of the simulated info map.
-   */
-  public static Map<String, Object> getSimulateInfoMap() {
-    return Collections.unmodifiableMap(simulateInfoMap);
-  }
-
-  /**
-   * This is invoked before start.
-   * @param inputType The trace type
-   * @param inTraces Input traces
-   * @param nodes The node file
-   * @param metricsOutputDir Output dir for metrics
-   * @param trackApps Track these applications
-   * @param printSimulation Whether to print the simulation
-   */
-  public void setSimulationParams(TraceType inputType, String[] inTraces,
-      String nodes, String metricsOutputDir, Set<String> trackApps,
-      boolean printSimulation) throws YarnException {
-    this.inputType = inputType;
-    this.inputTraces = inTraces.clone();
-    this.amRunner.setInputType(inputType);
-    this.amRunner.setInputTraces(this.inputTraces);
-    this.amRunner.setTrackedApps(trackApps);
-    this.nmRunner.setNodeFile(nodes);
-    this.nmRunner.setInputType(inputType);
-    this.nmRunner.setInputTraces(this.inputTraces);
-    this.printSimulation = printSimulation;
-    this.rmRunner.setMetricsOutputDir(metricsOutputDir);
-    String tableMapping = metricsOutputDir + "/tableMapping.csv";
-    this.rmRunner.setTableMapping(tableMapping);
-    this.nmRunner.setTableMapping(tableMapping);
-    
-    //We need this.inputTraces to set before creating SynthTraceJobProducer
-    if (inputType == TraceType.SYNTH) {
-      this.stjp = getSynthJobTraceProducer();
-    }
-  }
-
-  public void start() throws IOException, ClassNotFoundException, YarnException,
-      InterruptedException {
-    enableDNSCaching(getConf());
-
-    // start resource manager
-    rmRunner.startRM();
-    nmRunner.setRm(rmRunner.getRm());
-    amRunner.setResourceManager(rmRunner.getRm());
-    
-    // start node managers
-    nmRunner.startNM();
-    // start application masters
-    amRunner.startAM();
-
-    // set queue & tracked apps information
-    SchedulerWrapper resourceScheduler =
-        (SchedulerWrapper) rmRunner.getRm().getResourceScheduler();
-    resourceScheduler.setSLSRunner(this);
-    Tracker tracker = resourceScheduler.getTracker();
-    tracker.setQueueSet(rmRunner.getQueueAppNumMap().keySet());
-    tracker.setTrackedAppSet(amRunner.getTrackedApps());
-    // print out simulation info
-    printSimulationInfo();
-    // blocked until all nodes RUNNING
-    nmRunner.waitForNodesRunning();
-    // starting the runner once everything is ready to go,
-    runner.start();
-  }
-
-  /**
-   * Enables DNS Caching based on config. If DNS caching is enabled, then set
-   * the DNS cache to infinite time. Since in SLS random nodes are added, DNS
-   * resolution can take significant time which can cause erroneous results.
-   * For more details, check <a href=
-   * "https://docs.oracle.com/javase/8/docs/technotes/guides/net/properties.html">
-   * Java Networking Properties</a>
-   * @param conf Configuration object.
-   */
-  static void enableDNSCaching(Configuration conf) {
-    if (conf.getBoolean(SLSConfiguration.DNS_CACHING_ENABLED,
-        SLSConfiguration.DNS_CACHING_ENABLED_DEFAULT)) {
-      Security.setProperty(NETWORK_CACHE_TTL, "-1");
-      Security.setProperty(NETWORK_NEGATIVE_CACHE_TTL, "-1");
-    }
-  }
-
-  Resource getDefaultContainerResource() {
-    int containerMemory = getConf().getInt(SLSConfiguration.CONTAINER_MEMORY_MB,
-        SLSConfiguration.CONTAINER_MEMORY_MB_DEFAULT);
-    int containerVCores = getConf().getInt(SLSConfiguration.CONTAINER_VCORES,
-        SLSConfiguration.CONTAINER_VCORES_DEFAULT);
-    return Resources.createResource(containerMemory, containerVCores);
-  }
-
-  public void increaseQueueAppNum(String queue) throws YarnException {
-    rmRunner.increaseQueueAppNum(queue);
-  }
-
-  private void printSimulationInfo() {
-    final int numAMs = amRunner.getNumAMs();
-    final int numTasks = amRunner.getNumTasks();
-    final long maxRuntime = amRunner.getMaxRuntime();
-    Map<String, AMSimulator> amMap = amRunner.getAmMap();
-    Map<String, Integer> queueAppNumMap = rmRunner.getQueueAppNumMap();
-
-    if (printSimulation) {
-      // node
-      LOG.info("------------------------------------");
-      LOG.info("# nodes = {}, # racks = {}, capacity " +
-              "of each node {}.",
-              nmRunner.getNumNMs(), nmRunner.getNumRacks(), nmRunner.getNodeManagerResource());
-      LOG.info("------------------------------------");
-      // job
-      LOG.info("# applications = {}, # total " +
-              "tasks = {}, average # tasks per application = {}",
-              numAMs, numTasks, (int)(Math.ceil((numTasks + 0.0) / numAMs)));
-      LOG.info("JobId\tQueue\tAMType\tDuration\t#Tasks");
-      for (Map.Entry<String, AMSimulator> entry : amMap.entrySet()) {
-        AMSimulator am = entry.getValue();
-        LOG.info(entry.getKey() + "\t" + am.getQueue() + "\t" + am.getAMType()
-            + "\t" + am.getDuration() + "\t" + am.getNumTasks());
-      }
-      LOG.info("------------------------------------");
-      // queue
-      LOG.info("number of queues = {}  average number of apps = {}",
-          queueAppNumMap.size(),
-          (int)(Math.ceil((numAMs + 0.0) / queueAppNumMap.size())));
-      LOG.info("------------------------------------");
-      // runtime
-      LOG.info("estimated simulation time is {} seconds",
-          (long)(Math.ceil(maxRuntime / 1000.0)));
-      LOG.info("------------------------------------");
-    }
-    // package these information in the simulateInfoMap used by other places
-    simulateInfoMap.put("Number of racks", nmRunner.getNumRacks());
-    simulateInfoMap.put("Number of nodes", nmRunner.getNumNMs());
-    simulateInfoMap.put("Node memory (MB)",
-        nmRunner.getNodeManagerResource().getResourceValue(ResourceInformation.MEMORY_URI));
-    simulateInfoMap.put("Node VCores",
-        nmRunner.getNodeManagerResource().getResourceValue(ResourceInformation.VCORES_URI));
-    simulateInfoMap.put("Number of applications", numAMs);
-    simulateInfoMap.put("Number of tasks", numTasks);
-    simulateInfoMap.put("Average tasks per applicaion",
-            (int)(Math.ceil((numTasks + 0.0) / numAMs)));
-    simulateInfoMap.put("Number of queues", queueAppNumMap.size());
-    simulateInfoMap.put("Average applications per queue",
-            (int)(Math.ceil((numAMs + 0.0) / queueAppNumMap.size())));
-    simulateInfoMap.put("Estimated simulate time (s)",
-            (long)(Math.ceil(maxRuntime / 1000.0)));
-  }
-
-  public Map<NodeId, NMSimulator> getNmMap() {
-    return nmRunner.getNmMap();
-  }
-
-  public void decreaseRemainingApps() {
-    amRunner.remainingApps--;
-    if (amRunner.remainingApps == 0) {
-      exitSLSRunner();
-    }
-  }
-
-  public static void exitSLSRunner() {
-    LOG.info("SLSRunner tears down.");
-    if (exitAtTheFinish) {
-      System.exit(0);
-    }
-  }
-
-  public void stop() throws InterruptedException {
-    rmRunner.stop();
-    runner.stop();
-  }
-
-  public int run(final String[] argv) throws IOException, InterruptedException,
-      ParseException, ClassNotFoundException, YarnException {
-    Options options = new Options();
-
-    // Left for compatibility
-    options.addOption("inputrumen", true, "input rumen files");
-    options.addOption("inputsls", true, "input sls files");
-
-    // New more general format
-    options.addOption("tracetype", true, "the type of trace");
-    options.addOption("tracelocation", true, "input trace files");
-
-    options.addOption("nodes", true, "input topology");
-    options.addOption("output", true, "output directory");
-    options.addOption("trackjobs", true,
-        "jobs to be tracked during simulating");
-    options.addOption("printsimulation", false,
-        "print out simulation information");
-
-    CommandLineParser parser = new GnuParser();
-    CommandLine cmd = parser.parse(options, argv);
-
-    // compatibility with old commandline
-    boolean hasInputRumenOption = cmd.hasOption("inputrumen");
-    boolean hasInputSlsOption = cmd.hasOption("inputsls");
-    boolean hasTraceTypeOption = cmd.hasOption("tracetype");
-    TraceType traceType = determineTraceType(cmd, hasInputRumenOption,
-        hasInputSlsOption, hasTraceTypeOption);
-    String traceLocation = determineTraceLocation(cmd, hasInputRumenOption,
-        hasInputSlsOption, hasTraceTypeOption);
-    
-    String output = cmd.getOptionValue("output");
-
-    File outputFile = new File(output);
-    if (!outputFile.exists() && !outputFile.mkdirs()) {
-      System.err.println("ERROR: Cannot create output directory "
-          + outputFile.getAbsolutePath());
-      throw new YarnException("Cannot create output directory");
-    }
-
-    Set<String> trackedJobSet = new HashSet<>();
-    if (cmd.hasOption("trackjobs")) {
-      String trackjobs = cmd.getOptionValue("trackjobs");
-      String[] jobIds = trackjobs.split(",");
-      trackedJobSet.addAll(Arrays.asList(jobIds));
-    }
-
-    String tempNodeFile =
-        cmd.hasOption("nodes") ? cmd.getOptionValue("nodes") : "";
-
-    String[] inputFiles = traceLocation.split(",");
-
-    setSimulationParams(traceType, inputFiles, tempNodeFile, output,
-        trackedJobSet, cmd.hasOption("printsimulation"));
-    
-    start();
-
-    return 0;
-  }
-
-  private TraceType determineTraceType(CommandLine cmd, boolean hasInputRumenOption,
-      boolean hasInputSlsOption, boolean hasTraceTypeOption) throws YarnException {
-    String traceType = null;
-    if (hasInputRumenOption) {
-      traceType = "RUMEN";
-    }
-    if (hasInputSlsOption) {
-      traceType = "SLS";
-    }
-    if (hasTraceTypeOption) {
-      traceType = cmd.getOptionValue("tracetype");
-    }
-    if (traceType == null) {
-      throw new YarnException("Misconfigured input");
-    }
-    switch (traceType) {
-    case "SLS":
-      return TraceType.SLS;
-    case "RUMEN":
-      return TraceType.RUMEN;
-    case "SYNTH":
-      return TraceType.SYNTH;
-    default:
-      printUsage();
-      throw new YarnException("Misconfigured input");
-    }
-  }
-
-  private String determineTraceLocation(CommandLine cmd, boolean hasInputRumenOption,
-      boolean hasInputSlsOption, boolean hasTraceTypeOption) throws YarnException {
-    if (hasInputRumenOption) {
-      return cmd.getOptionValue("inputrumen");
-    }
-    if (hasInputSlsOption) {
-      return cmd.getOptionValue("inputsls");
-    }
-    if (hasTraceTypeOption) {
-      return cmd.getOptionValue("tracelocation");
-    }
-    throw new YarnException("Misconfigured input! ");
-  }
-
-  public static void main(String[] argv) throws Exception {
-    exitAtTheFinish = true;
-    ToolRunner.run(new Configuration(), new SLSRunner(), argv);
-  }
-
-  static void printUsage() {
-    System.err.println();
-    System.err.println("ERROR: Wrong tracetype");
-    System.err.println();
-    System.err.println(
-        "Options: -tracetype " + "SLS|RUMEN|SYNTH -tracelocation FILE,FILE... "
-            + "(deprecated alternative options --inputsls FILE, FILE,... "
-            + " | --inputrumen FILE,FILE,...)"
-            + "-output FILE [-nodes FILE] [-trackjobs JobId,JobId...] "
-            + "[-printsimulation]");
-    System.err.println();
-  }
-
-  /**
-   * Class to encapsulate all details about the node.
-   */
-  @Private
-  @Unstable
-  public static class NodeDetails {
-    private String hostname;
-    private Resource nodeResource;
-    private Set<NodeLabel> labels;
-
-    public NodeDetails(String nodeHostname) {
-      this.hostname = nodeHostname;
-    }
-
-    public String getHostname() {
-      return hostname;
-    }
-
-    public void setHostname(String hostname) {
-      this.hostname = hostname;
-    }
-
-    public Resource getNodeResource() {
-      return nodeResource;
-    }
-
-    public void setNodeResource(Resource nodeResource) {
-      this.nodeResource = nodeResource;
-    }
-
-    public Set<NodeLabel> getLabels() {
-      return labels;
-    }
-
-    public void setLabels(Set<NodeLabel> labels) {
-      this.labels = labels;
-    }
-
-    @Override
-    public boolean equals(Object o) {
-      if (this == o) {
-        return true;
-      }
-      if (!(o instanceof NodeDetails)) {
-        return false;
-      }
-
-      NodeDetails that = (NodeDetails) o;
-
-      return StringUtils.equals(hostname, that.hostname) && (
-          Objects.equals(nodeResource, that.nodeResource)) && SetUtils
-          .isEqualSet(labels, that.labels);
-    }
-
-    @Override
-    public int hashCode() {
-      int result = hostname == null ? 0 : hostname.hashCode();
-      result =
-          31 * result + (nodeResource == null ? 0 : nodeResource.hashCode());
-      result = 31 * result + (labels == null ? 0 : labels.hashCode());
-      return result;
-    }
-  }
-
-  public SynthTraceJobProducer getStjp() {
-    return stjp;
-  }
-
-  public void setStjp(SynthTraceJobProducer stjp) {
-    this.stjp = stjp;
-  }
-
-  public AMSimulator getAMSimulatorByAppId(ApplicationId appId) {
-    return amRunner.getAMSimulator(appId);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/TaskContainerDefinition.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/TaskContainerDefinition.java
deleted file mode 100644
index 04bea3ab2cd..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/TaskContainerDefinition.java
+++ /dev/null
@@ -1,247 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import java.util.Map;
-
-import static org.apache.hadoop.yarn.sls.AMDefinitionRumen.DEFAULT_MAPPER_PRIORITY;
-
-public class TaskContainerDefinition {
-  private long duration;
-  private Resource resource;
-  private int priority;
-  private String type;
-  private int count;
-  private ExecutionType executionType;
-  private long allocationId = -1;
-  private long requestDelay = 0;
-  private String hostname;
-
-  public long getDuration() {
-    return duration;
-  }
-
-  public Resource getResource() {
-    return resource;
-  }
-
-  public int getPriority() {
-    return priority;
-  }
-
-  public String getType() {
-    return type;
-  }
-
-  public int getCount() {
-    return count;
-  }
-
-  public ExecutionType getExecutionType() {
-    return executionType;
-  }
-
-  public long getAllocationId() {
-    return allocationId;
-  }
-
-  public long getRequestDelay() {
-    return requestDelay;
-  }
-
-  public String getHostname() {
-    return hostname;
-  }
-
-  public static final class Builder {
-    private long duration = -1;
-    private long durationLegacy = -1;
-    private long taskStart = -1;
-    private long taskFinish = -1;
-    private Resource resource;
-    private int priority = DEFAULT_MAPPER_PRIORITY;
-    private String type = "map";
-    private int count = 1;
-    private ExecutionType executionType = ExecutionType.GUARANTEED;
-    private long allocationId = -1;
-    private long requestDelay = 0;
-    private String hostname;
-
-    public static Builder create() {
-      return new Builder();
-    }
-
-    public Builder withDuration(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.duration = Integer.parseInt(jsonTask.get(key));
-      }
-      return this;
-    }
-
-    public Builder withDuration(long duration) {
-      this.duration = duration;
-      return this;
-    }
-
-    /**
-     * Also support "duration.ms" for backward compatibility.
-     * @param jsonTask the json representation of the task.
-     * @param key The json key.
-     * @return the builder
-     */
-    public Builder withDurationLegacy(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.durationLegacy = Integer.parseInt(jsonTask.get(key));
-      }
-      return this;
-    }
-
-    public Builder withTaskStart(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.taskStart = Long.parseLong(jsonTask.get(key));
-      }
-      return this;
-    }
-
-    public Builder withTaskFinish(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.taskFinish = Long.parseLong(jsonTask.get(key));
-      }
-      return this;
-    }
-
-    public Builder withResource(Resource resource) {
-      this.resource = resource;
-      return this;
-    }
-
-    public Builder withPriority(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.priority = Integer.parseInt(jsonTask.get(key));
-      }
-      return this;
-    }
-
-    public Builder withPriority(int priority) {
-      this.priority = priority;
-      return this;
-    }
-
-    public Builder withType(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.type = jsonTask.get(key);
-      }
-      return this;
-    }
-
-    public Builder withType(String type) {
-      this.type = type;
-      return this;
-    }
-
-    public Builder withCount(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        count = Integer.parseInt(jsonTask.get(key));
-        count = Math.max(count, 1);
-      }
-      return this;
-    }
-
-    public Builder withCount(int count) {
-      this.count = count;
-      return this;
-    }
-
-    public Builder withExecutionType(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.executionType = ExecutionType.valueOf(jsonTask.get(key));
-      }
-      return this;
-    }
-
-    public Builder withExecutionType(ExecutionType executionType) {
-      this.executionType = executionType;
-      return this;
-    }
-
-    public Builder withAllocationId(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        this.allocationId = Long.parseLong(jsonTask.get(key));
-      }
-      return this;
-    }
-
-    public Builder withAllocationId(long allocationId) {
-      this.allocationId = allocationId;
-      return this;
-    }
-
-    public Builder withRequestDelay(Map<String, String> jsonTask, String key) {
-      if (jsonTask.containsKey(key)) {
-        requestDelay = Long.parseLong(jsonTask.get(key));
-        requestDelay = Math.max(requestDelay, 0);
-      }
-      return this;
-    }
-
-    public Builder withRequestDelay(long requestDelay) {
-      this.requestDelay = requestDelay;
-      return this;
-    }
-
-    public Builder withHostname(String hostname) {
-      this.hostname = hostname;
-      return this;
-    }
-
-    public TaskContainerDefinition build() throws YarnException {
-      TaskContainerDefinition taskContainerDef =
-          new TaskContainerDefinition();
-      taskContainerDef.duration = validateAndGetDuration(this);
-      taskContainerDef.resource = this.resource;
-      taskContainerDef.type = this.type;
-      taskContainerDef.requestDelay = this.requestDelay;
-      taskContainerDef.priority = this.priority;
-      taskContainerDef.count = this.count;
-      taskContainerDef.allocationId = this.allocationId;
-      taskContainerDef.executionType = this.executionType;
-      taskContainerDef.hostname = this.hostname;
-      return taskContainerDef;
-    }
-
-    private long validateAndGetDuration(Builder builder) throws YarnException {
-      long duration = 0;
-
-      if (builder.duration != -1) {
-        duration = builder.duration;
-      } else if (builder.durationLegacy != -1) {
-        duration = builder.durationLegacy;
-      } else if (builder.taskStart != -1 && builder.taskFinish != -1) {
-        duration = builder.taskFinish - builder.taskStart;
-      }
-
-      if (duration <= 0) {
-        throw new YarnException("Duration of a task shouldn't be less or equal"
-            + " to 0!");
-      }
-      return duration;
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java
deleted file mode 100644
index 0a87a6c2070..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java
+++ /dev/null
@@ -1,524 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.appmaster;
-
-import java.io.IOException;
-import java.lang.reflect.UndeclaredThrowableException;
-import java.security.PrivilegedExceptionAction;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.BlockingQueue;
-import java.util.concurrent.ConcurrentSkipListSet;
-import java.util.concurrent.LinkedBlockingQueue;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.token.Token;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ReservationSubmissionRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.SubmitApplicationRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.GetNewApplicationRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.GetNewApplicationResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse;
-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerLaunchContext;
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.yarn.api.records.ExecutionTypeRequest;
-import org.apache.hadoop.yarn.api.records.FinalApplicationStatus;
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.Priority;
-import org.apache.hadoop.yarn.api.records.ReservationId;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.factories.RecordFactory;
-import org.apache.hadoop.yarn.factory.providers.RecordFactoryProvider;
-import org.apache.hadoop.yarn.security.AMRMTokenIdentifier;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.sls.AMDefinition;
-import org.apache.hadoop.yarn.sls.scheduler.SchedulerMetrics;
-import org.apache.hadoop.yarn.util.Records;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.apache.hadoop.yarn.sls.scheduler.SchedulerWrapper;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.sls.scheduler.TaskRunner;
-import org.apache.hadoop.yarn.sls.utils.SLSUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public abstract class AMSimulator extends TaskRunner.Task {
-  private static final long FINISH_TIME_NOT_INITIALIZED = Long.MIN_VALUE;
-  // resource manager
-  protected ResourceManager rm;
-  // main
-  protected SLSRunner se;
-  // application
-  protected ApplicationId appId;
-  protected ApplicationAttemptId appAttemptId;
-  protected String oldAppId;    // jobId from the jobhistory file
-  // record factory
-  protected final static RecordFactory recordFactory =
-          RecordFactoryProvider.getRecordFactory(null);
-  // response queue
-  protected final BlockingQueue<AllocateResponse> responseQueue;
-  private int responseId = 0;
-  // user name
-  private String user;
-  // nodelabel expression
-  private String nodeLabelExpression;
-  // queue name
-  protected String queue;
-  // am type
-  protected String amtype;
-  // job start/end time
-  private long baselineTimeMS;
-  protected long traceStartTimeMS;
-  protected long traceFinishTimeMS;
-  protected long simulateStartTimeMS;
-  protected long simulateFinishTimeMS = FINISH_TIME_NOT_INITIALIZED;
-  // whether tracked in Metrics
-  protected boolean isTracked;
-  // progress
-  protected int totalContainers;
-  protected int finishedContainers;
-
-  // waiting for AM container
-  volatile boolean isAMContainerRunning = false;
-  volatile Container amContainer;
-
-  private static final Logger LOG = LoggerFactory.getLogger(AMSimulator.class);
-
-  private Resource amContainerResource;
-
-  private ReservationSubmissionRequest reservationRequest;
-
-  private Map<ApplicationId, AMSimulator> appIdToAMSim;
-
-  private Set<NodeId> ranNodes = new ConcurrentSkipListSet<NodeId>();
-
-  public AMSimulator() {
-    this.responseQueue = new LinkedBlockingQueue<>();
-  }
-
-  public void init(AMDefinition amDef, ResourceManager rm, SLSRunner slsRunner,
-      boolean tracked, long baselineTimeMS, long heartbeatInterval,
-      Map<ApplicationId, AMSimulator> appIdToAMSim) {
-    long startTime = amDef.getJobStartTime();
-    long endTime = startTime + 1000000L * heartbeatInterval;
-    super.init(startTime, endTime, heartbeatInterval);
-
-    this.user = amDef.getUser();
-    this.queue = amDef.getQueue();
-    this.oldAppId = amDef.getOldAppId();
-    this.amContainerResource = amDef.getAmResource();
-    this.nodeLabelExpression = amDef.getLabelExpression();
-    this.traceStartTimeMS = amDef.getJobStartTime();
-    this.traceFinishTimeMS = amDef.getJobFinishTime();
-    this.rm = rm;
-    this.se = slsRunner;
-    this.isTracked = tracked;
-    this.baselineTimeMS = baselineTimeMS;
-    this.appIdToAMSim = appIdToAMSim;
-  }
-
-  /**
-   * register with RM
-   */
-  @Override
-  public void firstStep() throws Exception {
-    simulateStartTimeMS = System.currentTimeMillis() - baselineTimeMS;
-
-    ReservationId reservationId = null;
-
-    // submit a reservation if one is required, exceptions naturally happen
-    // when the reservation does not fit, catch, log, and move on running job
-    // without reservation.
-    try {
-      reservationId = submitReservationWhenSpecified();
-    } catch (UndeclaredThrowableException y) {
-      LOG.warn("Unable to place reservation: " + y.getMessage());
-    }
-
-    // submit application, waiting until ACCEPTED
-    submitApp(reservationId);
-
-    // add submitted app to mapping
-    appIdToAMSim.put(appId, this);
-
-    // track app metrics
-    trackApp();
-  }
-
-  public synchronized void notifyAMContainerLaunched(Container masterContainer)
-      throws Exception {
-    this.amContainer = masterContainer;
-    this.appAttemptId = masterContainer.getId().getApplicationAttemptId();
-    registerAM();
-    isAMContainerRunning = true;
-  }
-
-  protected void setReservationRequest(ReservationSubmissionRequest rr){
-    this.reservationRequest = rr;
-  }
-
-  private ReservationId submitReservationWhenSpecified()
-      throws IOException, InterruptedException {
-    if (reservationRequest != null) {
-      UserGroupInformation ugi = UserGroupInformation.createRemoteUser(user);
-      ugi.doAs(new PrivilegedExceptionAction<Object>() {
-        @Override
-        public Object run() throws YarnException, IOException {
-          rm.getClientRMService().submitReservation(reservationRequest);
-          LOG.info("RESERVATION SUCCESSFULLY SUBMITTED "
-              + reservationRequest.getReservationId());
-          return null;
-
-        }
-      });
-      return reservationRequest.getReservationId();
-    } else {
-      return null;
-    }
-  }
-
-  @Override
-  public void middleStep() throws Exception {
-    if (isAMContainerRunning) {
-      // process responses in the queue
-      processResponseQueue();
-
-      // send out request
-      sendContainerRequest();
-
-      // check whether finish
-      checkStop();
-    }
-  }
-
-  @Override
-  public void lastStep() throws Exception {
-    if (simulateFinishTimeMS != FINISH_TIME_NOT_INITIALIZED) {
-      // The finish time is already recorded.
-      // Different value from zero means lastStep was called before.
-      // We want to prevent lastStep to be called more than once.
-      // See YARN-10427 for more details.
-      LOG.warn("Method AMSimulator#lastStep was already called. " +
-          "Skipping execution of method for application: {}", appId);
-      return;
-    }
-
-    LOG.info("Application {} is shutting down.", appId);
-    // unregister tracking
-    if (isTracked) {
-      untrackApp();
-    }
-
-    // Finish AM container
-    if (amContainer != null) {
-      LOG.info("AM container = {} reported to finish", amContainer.getId());
-      se.getNmMap().get(amContainer.getNodeId()).cleanupContainer(
-          amContainer.getId());
-    } else {
-      LOG.info("AM container is null");
-    }
-
-    // Clear runningApps for ranNodes of this app
-    for (NodeId nodeId : ranNodes) {
-      se.getNmMap().get(nodeId).finishApplication(getApplicationId());
-    }
-
-    if (null == appAttemptId) {
-      // If appAttemptId == null, AM is not launched from RM's perspective, so
-      // it's unnecessary to finish am as well
-      return;
-    }
-
-    // unregister application master
-    final FinishApplicationMasterRequest finishAMRequest = recordFactory
-                  .newRecordInstance(FinishApplicationMasterRequest.class);
-    finishAMRequest.setFinalApplicationStatus(FinalApplicationStatus.SUCCEEDED);
-
-    UserGroupInformation ugi =
-        UserGroupInformation.createRemoteUser(appAttemptId.toString());
-    Token<AMRMTokenIdentifier> token = rm.getRMContext().getRMApps().get(appId)
-        .getRMAppAttempt(appAttemptId).getAMRMToken();
-    ugi.addTokenIdentifier(token.decodeIdentifier());
-    ugi.doAs(new PrivilegedExceptionAction<Object>() {
-      @Override
-      public Object run() throws Exception {
-        rm.getApplicationMasterService()
-            .finishApplicationMaster(finishAMRequest);
-        return null;
-      }
-    });
-
-    simulateFinishTimeMS = System.currentTimeMillis() - baselineTimeMS;
-    // record job running information
-    SchedulerMetrics schedulerMetrics =
-            ((SchedulerWrapper)rm.getResourceScheduler()).getSchedulerMetrics();
-    if (schedulerMetrics != null) {
-      schedulerMetrics.addAMRuntime(appId, traceStartTimeMS, traceFinishTimeMS,
-              simulateStartTimeMS, simulateFinishTimeMS);
-    }
-  }
-
-  protected ResourceRequest createResourceRequest(Resource resource,
-      ExecutionType executionType, String host, int priority, long
-      allocationId, int numContainers) {
-    ResourceRequest request = recordFactory
-        .newRecordInstance(ResourceRequest.class);
-    request.setCapability(resource);
-    request.setResourceName(host);
-    request.setNumContainers(numContainers);
-    request.setExecutionTypeRequest(
-        ExecutionTypeRequest.newInstance(executionType));
-    Priority prio = recordFactory.newRecordInstance(Priority.class);
-    prio.setPriority(priority);
-    request.setPriority(prio);
-    request.setAllocationRequestId(allocationId);
-    return request;
-  }
-
-  protected AllocateRequest createAllocateRequest(List<ResourceRequest> ask,
-      List<ContainerId> toRelease) {
-    AllocateRequest allocateRequest =
-            recordFactory.newRecordInstance(AllocateRequest.class);
-    allocateRequest.setResponseId(responseId++);
-    allocateRequest.setAskList(ask);
-    allocateRequest.setReleaseList(toRelease);
-    return allocateRequest;
-  }
-
-  protected AllocateRequest createAllocateRequest(List<ResourceRequest> ask) {
-    return createAllocateRequest(ask, new ArrayList<ContainerId>());
-  }
-
-  protected abstract void processResponseQueue() throws Exception;
-
-  protected abstract void sendContainerRequest() throws Exception;
-
-  public abstract void initReservation(
-      ReservationId reservationId, long deadline, long now);
-
-  protected abstract void checkStop();
-
-  private void submitApp(ReservationId reservationId)
-          throws YarnException, InterruptedException, IOException {
-    // ask for new application
-    GetNewApplicationRequest newAppRequest =
-        Records.newRecord(GetNewApplicationRequest.class);
-    GetNewApplicationResponse newAppResponse =
-        rm.getClientRMService().getNewApplication(newAppRequest);
-    appId = newAppResponse.getApplicationId();
-
-    // submit the application
-    final SubmitApplicationRequest subAppRequest =
-        Records.newRecord(SubmitApplicationRequest.class);
-    ApplicationSubmissionContext appSubContext =
-        Records.newRecord(ApplicationSubmissionContext.class);
-    appSubContext.setApplicationId(appId);
-    appSubContext.setMaxAppAttempts(1);
-    appSubContext.setQueue(queue);
-    appSubContext.setPriority(Priority.newInstance(0));
-    ContainerLaunchContext conLauContext =
-        Records.newRecord(ContainerLaunchContext.class);
-    conLauContext.setApplicationACLs(new HashMap<>());
-    conLauContext.setCommands(new ArrayList<>());
-    conLauContext.setEnvironment(new HashMap<>());
-    conLauContext.setLocalResources(new HashMap<>());
-    conLauContext.setServiceData(new HashMap<>());
-    appSubContext.setAMContainerSpec(conLauContext);
-    appSubContext.setResource(amContainerResource);
-    if (nodeLabelExpression != null) {
-      appSubContext.setNodeLabelExpression(nodeLabelExpression);
-    }
-
-    if(reservationId != null) {
-      appSubContext.setReservationID(reservationId);
-    }
-
-    subAppRequest.setApplicationSubmissionContext(appSubContext);
-    UserGroupInformation ugi = UserGroupInformation.createRemoteUser(user);
-    ugi.doAs(new PrivilegedExceptionAction<Object>() {
-      @Override
-      public Object run() throws YarnException, IOException {
-        rm.getClientRMService().submitApplication(subAppRequest);
-        return null;
-      }
-    });
-    LOG.info("Submit a new application {}", appId);
-  }
-
-  private void registerAM()
-          throws YarnException, IOException, InterruptedException {
-    // register application master
-    final RegisterApplicationMasterRequest amRegisterRequest =
-            Records.newRecord(RegisterApplicationMasterRequest.class);
-    amRegisterRequest.setHost("localhost");
-    amRegisterRequest.setRpcPort(1000);
-    amRegisterRequest.setTrackingUrl("localhost:1000");
-
-    UserGroupInformation ugi =
-        UserGroupInformation.createRemoteUser(appAttemptId.toString());
-    Token<AMRMTokenIdentifier> token = rm.getRMContext().getRMApps().get(appId)
-        .getRMAppAttempt(appAttemptId).getAMRMToken();
-    ugi.addTokenIdentifier(token.decodeIdentifier());
-
-    ugi.doAs(
-            new PrivilegedExceptionAction<RegisterApplicationMasterResponse>() {
-      @Override
-      public RegisterApplicationMasterResponse run() throws Exception {
-        return rm.getApplicationMasterService()
-                .registerApplicationMaster(amRegisterRequest);
-      }
-    });
-
-    LOG.info("Register the application master for application {}", appId);
-  }
-
-  private void trackApp() {
-    if (isTracked) {
-      SchedulerMetrics schedulerMetrics =
-          ((SchedulerWrapper)rm.getResourceScheduler()).getSchedulerMetrics();
-      if (schedulerMetrics != null) {
-        schedulerMetrics.addTrackedApp(appId, oldAppId);
-      }
-    }
-  }
-  public void untrackApp() {
-    if (isTracked) {
-      SchedulerMetrics schedulerMetrics =
-          ((SchedulerWrapper)rm.getResourceScheduler()).getSchedulerMetrics();
-      if (schedulerMetrics != null) {
-        schedulerMetrics.removeTrackedApp(oldAppId);
-      }
-    }
-  }
-
-  protected List<ResourceRequest> packageRequests(
-          List<ContainerSimulator> csList, int priority) {
-    // create requests
-    Map<Long, Map<String, ResourceRequest>> rackLocalRequests =
-        new HashMap<>();
-    Map<Long, Map<String, ResourceRequest>> nodeLocalRequests =
-        new HashMap<>();
-    Map<Long, ResourceRequest> anyRequests = new HashMap<>();
-    for (ContainerSimulator cs : csList) {
-      long allocationId = cs.getAllocationId();
-      ResourceRequest anyRequest = anyRequests.get(allocationId);
-      if (cs.getHostname() != null) {
-        Map<String, ResourceRequest> rackLocalRequestMap;
-        if (rackLocalRequests.containsKey(allocationId)) {
-          rackLocalRequestMap = rackLocalRequests.get(allocationId);
-        } else {
-          rackLocalRequestMap = new HashMap<>();
-          rackLocalRequests.put(allocationId, rackLocalRequestMap);
-        }
-        String[] rackHostNames = SLSUtils.getRackHostName(cs.getHostname());
-        // check rack local
-        String rackname = "/" + rackHostNames[0];
-        if (rackLocalRequestMap.containsKey(rackname)) {
-          rackLocalRequestMap.get(rackname).setNumContainers(
-              rackLocalRequestMap.get(rackname).getNumContainers() + 1);
-        } else {
-          ResourceRequest request = createResourceRequest(cs.getResource(),
-              cs.getExecutionType(), rackname, priority,
-              cs.getAllocationId(), 1);
-          rackLocalRequestMap.put(rackname, request);
-        }
-        // check node local
-        Map<String, ResourceRequest> nodeLocalRequestMap;
-        if (nodeLocalRequests.containsKey(allocationId)) {
-          nodeLocalRequestMap = nodeLocalRequests.get(allocationId);
-        } else {
-          nodeLocalRequestMap = new HashMap<>();
-          nodeLocalRequests.put(allocationId, nodeLocalRequestMap);
-        }
-        String hostname = rackHostNames[1];
-        if (nodeLocalRequestMap.containsKey(hostname)) {
-          nodeLocalRequestMap.get(hostname).setNumContainers(
-              nodeLocalRequestMap.get(hostname).getNumContainers() + 1);
-        } else {
-          ResourceRequest request = createResourceRequest(cs.getResource(),
-              cs.getExecutionType(), hostname, priority,
-              cs.getAllocationId(), 1);
-          nodeLocalRequestMap.put(hostname, request);
-        }
-      }
-      // any
-      if (anyRequest == null) {
-        anyRequest = createResourceRequest(cs.getResource(),
-            cs.getExecutionType(), ResourceRequest.ANY, priority,
-            cs.getAllocationId(), 1);
-        anyRequests.put(allocationId, anyRequest);
-      } else {
-        anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);
-      }
-    }
-    List<ResourceRequest> ask = new ArrayList<ResourceRequest>();
-    for (Map<String, ResourceRequest> nodeLocalRequestMap :
-        nodeLocalRequests.values()) {
-      ask.addAll(nodeLocalRequestMap.values());
-    }
-    for (Map<String, ResourceRequest> rackLocalRequestMap :
-        rackLocalRequests.values()) {
-      ask.addAll(rackLocalRequestMap.values());
-    }
-    ask.addAll(anyRequests.values());
-    return ask;
-  }
-
-  public String getQueue() {
-    return queue;
-  }
-  public String getAMType() {
-    return amtype;
-  }
-  public long getDuration() {
-    return simulateFinishTimeMS - simulateStartTimeMS;
-  }
-  public int getNumTasks() {
-    return totalContainers;
-  }
-
-  public ApplicationId getApplicationId() {
-    return appId;
-  }
-
-  public ApplicationAttemptId getApplicationAttemptId() {
-    return appAttemptId;
-  }
-
-  public Set<NodeId> getRanNodes() {
-    return this.ranNodes;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/DAGAMSimulator.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/DAGAMSimulator.java
deleted file mode 100644
index 418408db9fb..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/DAGAMSimulator.java
+++ /dev/null
@@ -1,285 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-
-package org.apache.hadoop.yarn.sls.appmaster;
-
-import org.apache.hadoop.classification.VisibleForTesting;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.token.Token;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerExitStatus;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.api.records.ReservationId;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.security.AMRMTokenIdentifier;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.sls.AMDefinition;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.security.PrivilegedExceptionAction;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-
-/**
- * AMSimulator that simulates DAG - it requests for containers
- * based on the delay specified. It finishes when all the tasks
- * are completed.
- * Vocabulary Used:
- * <dl>
- * <dt>Pending</dt><dd>requests which are NOT yet sent to RM.</dd>
- * <dt>Scheduled</dt>
- * <dd>requests which are sent to RM but not yet assigned.</dd>
- * <dt>Assigned</dt><dd>requests which are assigned to a container.</dd>
- * <dt>Completed</dt>
- * <dd>request corresponding to which container has completed.</dd>
- * </dl>
- * Containers are requested based on the request delay.
- */
-
-@InterfaceAudience.Private
-@InterfaceStability.Unstable
-public class DAGAMSimulator extends AMSimulator {
-
-  private static final int PRIORITY = 20;
-
-  private List<ContainerSimulator> pendingContainers =
-      new LinkedList<>();
-
-  private List<ContainerSimulator> scheduledContainers =
-      new LinkedList<>();
-
-  private Map<ContainerId, ContainerSimulator> assignedContainers =
-      new HashMap<>();
-
-  private List<ContainerSimulator> completedContainers =
-      new LinkedList<>();
-
-  private List<ContainerSimulator> allContainers =
-      new LinkedList<>();
-
-  private boolean isFinished = false;
-
-  private long amStartTime;
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(DAGAMSimulator.class);
-
-  @SuppressWarnings("checkstyle:parameternumber")
-  public void init(AMDefinition amDef, ResourceManager rm, SLSRunner slsRunner,
-      boolean tracked, long baselineTimeMS, long heartbeatInterval,
-      Map<ApplicationId, AMSimulator> appIdToAMSim) {
-    super.init(amDef, rm, slsRunner, tracked, baselineTimeMS, heartbeatInterval,
-        appIdToAMSim);
-    super.amtype = "dag";
-
-    allContainers.addAll(amDef.getTaskContainers());
-    pendingContainers.addAll(amDef.getTaskContainers());
-    totalContainers = allContainers.size();
-
-    LOG.info("Added new job with {} containers", allContainers.size());
-  }
-
-  @Override
-  public void firstStep() throws Exception {
-    super.firstStep();
-    amStartTime = System.currentTimeMillis();
-  }
-
-  @Override
-  public void initReservation(ReservationId reservationId,
-      long deadline, long now) {
-    // DAG AM doesn't support reservation
-    setReservationRequest(null);
-  }
-
-  @Override
-  public synchronized void notifyAMContainerLaunched(Container masterContainer)
-      throws Exception {
-    if (null != masterContainer) {
-      restart();
-      super.notifyAMContainerLaunched(masterContainer);
-    }
-  }
-
-  protected void processResponseQueue() throws Exception {
-    while (!responseQueue.isEmpty()) {
-      AllocateResponse response = responseQueue.take();
-
-      // check completed containers
-      if (!response.getCompletedContainersStatuses().isEmpty()) {
-        for (ContainerStatus cs : response.getCompletedContainersStatuses()) {
-          ContainerId containerId = cs.getContainerId();
-          if (cs.getExitStatus() == ContainerExitStatus.SUCCESS) {
-            if (assignedContainers.containsKey(containerId)) {
-              LOG.debug("Application {} has one container finished ({}).",
-                  appId, containerId);
-              ContainerSimulator containerSimulator =
-                  assignedContainers.remove(containerId);
-              finishedContainers++;
-              completedContainers.add(containerSimulator);
-            } else if (amContainer.getId().equals(containerId)) {
-              // am container released event
-              isFinished = true;
-              LOG.info("Application {} goes to finish.", appId);
-            }
-            if (finishedContainers >= totalContainers) {
-              lastStep();
-            }
-          } else {
-            // container to be killed
-            if (assignedContainers.containsKey(containerId)) {
-              LOG.error("Application {} has one container killed ({}).", appId,
-                  containerId);
-              pendingContainers.add(assignedContainers.remove(containerId));
-            } else if (amContainer.getId().equals(containerId)) {
-              LOG.error("Application {}'s AM is "
-                  + "going to be killed. Waiting for rescheduling...", appId);
-            }
-          }
-        }
-      }
-
-      // check finished
-      if (isAMContainerRunning &&
-          (finishedContainers >= totalContainers)) {
-        isAMContainerRunning = false;
-        LOG.info("Application {} sends out event to clean up"
-            + " its AM container.", appId);
-        isFinished = true;
-        break;
-      }
-
-      // check allocated containers
-      for (Container container : response.getAllocatedContainers()) {
-        if (!scheduledContainers.isEmpty()) {
-          ContainerSimulator cs = scheduledContainers.remove(0);
-          LOG.debug("Application {} starts to launch a container ({}).",
-              appId, container.getId());
-          assignedContainers.put(container.getId(), cs);
-          se.getNmMap().get(container.getNodeId())
-              .addNewContainer(container, cs.getLifeTime(), appId);
-          getRanNodes().add(container.getNodeId());
-        }
-      }
-    }
-  }
-
-  @Override
-  protected void sendContainerRequest() throws Exception {
-    if (isFinished) {
-      return;
-    }
-    // send out request
-    List<ResourceRequest> ask = null;
-    if (finishedContainers != totalContainers) {
-      if (!pendingContainers.isEmpty()) {
-        List<ContainerSimulator> toBeScheduled =
-            getToBeScheduledContainers(pendingContainers, amStartTime);
-        if (toBeScheduled.size() > 0) {
-          ask = packageRequests(toBeScheduled, PRIORITY);
-          LOG.info("Application {} sends out request for {} containers.",
-              appId, toBeScheduled.size());
-          scheduledContainers.addAll(toBeScheduled);
-          pendingContainers.removeAll(toBeScheduled);
-          toBeScheduled.clear();
-        }
-      }
-    }
-
-    if (ask == null) {
-      ask = new ArrayList<>();
-    }
-
-    final AllocateRequest request = createAllocateRequest(ask);
-    if (totalContainers == 0) {
-      request.setProgress(1.0f);
-    } else {
-      request.setProgress((float) finishedContainers / totalContainers);
-    }
-
-    UserGroupInformation ugi =
-        UserGroupInformation.createRemoteUser(appAttemptId.toString());
-    Token<AMRMTokenIdentifier> token = rm.getRMContext().getRMApps()
-        .get(appAttemptId.getApplicationId())
-        .getRMAppAttempt(appAttemptId).getAMRMToken();
-    ugi.addTokenIdentifier(token.decodeIdentifier());
-    AllocateResponse response = ugi.doAs(
-        (PrivilegedExceptionAction<AllocateResponse>) () -> rm
-            .getApplicationMasterService().allocate(request));
-    if (response != null) {
-      responseQueue.put(response);
-    }
-  }
-
-  @VisibleForTesting
-  public List<ContainerSimulator> getToBeScheduledContainers(
-      List<ContainerSimulator> containers, long startTime) {
-    List<ContainerSimulator> toBeScheduled = new LinkedList<>();
-    for (ContainerSimulator cs : containers) {
-      // only request for the container if it is time to request
-      if (cs.getRequestDelay() + startTime <=
-          System.currentTimeMillis()) {
-        toBeScheduled.add(cs);
-      }
-    }
-    return toBeScheduled;
-  }
-
-  @Override
-  protected void checkStop() {
-    if (isFinished) {
-      super.setEndTime(System.currentTimeMillis());
-    }
-  }
-
-  @Override
-  public void lastStep() throws Exception {
-    super.lastStep();
-
-    //clear data structures.
-    allContainers.clear();
-    pendingContainers.clear();
-    scheduledContainers.clear();
-    assignedContainers.clear();
-    completedContainers.clear();
-  }
-
-  /**
-   * restart running because of the am container killed.
-   */
-  private void restart() {
-    isFinished = false;
-    pendingContainers.clear();
-    pendingContainers.addAll(allContainers);
-    pendingContainers.removeAll(completedContainers);
-    amContainer = null;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/MRAMSimulator.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/MRAMSimulator.java
deleted file mode 100644
index 976c0229b86..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/MRAMSimulator.java
+++ /dev/null
@@ -1,415 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.appmaster;
-
-import java.io.IOException;
-import java.security.PrivilegedExceptionAction;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.token.Token;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.ReservationSubmissionRequest;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ReservationId;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ContainerExitStatus;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.security.AMRMTokenIdentifier;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.sls.AMDefinition;
-import org.apache.hadoop.yarn.sls.ReservationClientUtil;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public class MRAMSimulator extends AMSimulator {
-  /*
-  Vocabulary Used:
-  pending -> requests which are NOT yet sent to RM
-  scheduled -> requests which are sent to RM but not yet assigned
-  assigned -> requests which are assigned to a container
-  completed -> request corresponding to which container has completed
-
-  Maps are scheduled as soon as their requests are received. Reduces are
-  scheduled when all maps have finished (not support slow-start currently).
-  */
-
-  public static final String MAP_TYPE = "map";
-  public static final String REDUCE_TYPE = "reduce";
-
-  private static final int PRIORITY_REDUCE = 10;
-  private static final int PRIORITY_MAP = 20;
-
-  // pending maps
-  private LinkedList<ContainerSimulator> pendingMaps =
-          new LinkedList<>();
-
-  // pending failed maps
-  private LinkedList<ContainerSimulator> pendingFailedMaps =
-          new LinkedList<ContainerSimulator>();
-
-  // scheduled maps
-  private LinkedList<ContainerSimulator> scheduledMaps =
-          new LinkedList<ContainerSimulator>();
-
-  // assigned maps
-  private Map<ContainerId, ContainerSimulator> assignedMaps =
-          new HashMap<ContainerId, ContainerSimulator>();
-
-  // reduces which are not yet scheduled
-  private LinkedList<ContainerSimulator> pendingReduces =
-          new LinkedList<ContainerSimulator>();
-
-  // pending failed reduces
-  private LinkedList<ContainerSimulator> pendingFailedReduces =
-          new LinkedList<ContainerSimulator>();
-
-  // scheduled reduces
-  private LinkedList<ContainerSimulator> scheduledReduces =
-          new LinkedList<ContainerSimulator>();
-
-  // assigned reduces
-  private Map<ContainerId, ContainerSimulator> assignedReduces =
-          new HashMap<ContainerId, ContainerSimulator>();
-
-  // all maps & reduces
-  private LinkedList<ContainerSimulator> allMaps =
-          new LinkedList<ContainerSimulator>();
-  private LinkedList<ContainerSimulator> allReduces =
-          new LinkedList<ContainerSimulator>();
-
-  // counters
-  private int mapFinished = 0;
-  private int mapTotal = 0;
-  private int reduceFinished = 0;
-  private int reduceTotal = 0;
-
-  // finished
-  private boolean isFinished = false;
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(MRAMSimulator.class);
-
-  @SuppressWarnings("checkstyle:parameternumber")
-  public void init(AMDefinition amDef, ResourceManager rm, SLSRunner slsRunner,
-      boolean tracked, long baselineTimeMS, long heartbeatInterval,
-      Map<ApplicationId, AMSimulator> appIdToAMSim) {
-    super.init(amDef, rm, slsRunner, tracked, baselineTimeMS,
-        heartbeatInterval, appIdToAMSim);
-    amtype = "mapreduce";
-
-    // get map/reduce tasks
-    for (ContainerSimulator cs : amDef.getTaskContainers()) {
-      if (cs.getType().equals("map")) {
-        cs.setPriority(PRIORITY_MAP);
-        allMaps.add(cs);
-      } else if (cs.getType().equals("reduce")) {
-        cs.setPriority(PRIORITY_REDUCE);
-        allReduces.add(cs);
-      }
-    }
-
-    LOG.info("Added new job with {} mapper and {} reducers",
-        allMaps.size(), allReduces.size());
-
-    mapTotal = allMaps.size();
-    reduceTotal = allReduces.size();
-    totalContainers = mapTotal + reduceTotal;
-  }
-
-  @Override
-  public synchronized void notifyAMContainerLaunched(Container masterContainer)
-      throws Exception {
-    if (null != masterContainer) {
-      restart();
-      super.notifyAMContainerLaunched(masterContainer);
-    }
-  }
-
-  @Override
-  @SuppressWarnings("unchecked")
-  protected void processResponseQueue() throws Exception {
-    while (! responseQueue.isEmpty()) {
-      AllocateResponse response = responseQueue.take();
-
-      // check completed containers
-      if (! response.getCompletedContainersStatuses().isEmpty()) {
-        for (ContainerStatus cs : response.getCompletedContainersStatuses()) {
-          ContainerId containerId = cs.getContainerId();
-          if (cs.getExitStatus() == ContainerExitStatus.SUCCESS) {
-            if (assignedMaps.containsKey(containerId)) {
-              LOG.debug("Application {} has one mapper finished ({}).",
-                  appId, containerId);
-              assignedMaps.remove(containerId);
-              mapFinished ++;
-              finishedContainers ++;
-            } else if (assignedReduces.containsKey(containerId)) {
-              LOG.debug("Application {} has one reducer finished ({}).",
-                  appId, containerId);
-              assignedReduces.remove(containerId);
-              reduceFinished ++;
-              finishedContainers ++;
-            } else if (amContainer.getId().equals(containerId)){
-              // am container released event
-              isFinished = true;
-              LOG.info("Application {} goes to finish.", appId);
-            }
-
-            if (mapFinished >= mapTotal && reduceFinished >= reduceTotal) {
-              lastStep();
-            }
-          } else {
-            // container to be killed
-            if (assignedMaps.containsKey(containerId)) {
-              LOG.debug("Application {} has one mapper killed ({}).",
-                  appId, containerId);
-              pendingFailedMaps.add(assignedMaps.remove(containerId));
-            } else if (assignedReduces.containsKey(containerId)) {
-              LOG.debug("Application {} has one reducer killed ({}).",
-                  appId, containerId);
-              pendingFailedReduces.add(assignedReduces.remove(containerId));
-            } else if (amContainer.getId().equals(containerId)){
-              LOG.info("Application {}'s AM is " +
-                  "going to be killed. Waiting for rescheduling...", appId);
-            }
-          }
-        }
-      }
-
-      // check finished
-      if (isAMContainerRunning &&
-              (mapFinished >= mapTotal) &&
-              (reduceFinished >= reduceTotal)) {
-        isAMContainerRunning = false;
-        LOG.debug("Application {} sends out event to clean up"
-            + " its AM container.", appId);
-        isFinished = true;
-        break;
-      }
-
-      // check allocated containers
-      for (Container container : response.getAllocatedContainers()) {
-        if (! scheduledMaps.isEmpty()) {
-          ContainerSimulator cs = scheduledMaps.remove();
-          LOG.debug("Application {} starts to launch a mapper ({}).",
-              appId, container.getId());
-          assignedMaps.put(container.getId(), cs);
-          se.getNmMap().get(container.getNodeId())
-              .addNewContainer(container, cs.getLifeTime(), appId);
-          getRanNodes().add(container.getNodeId());
-        } else if (! this.scheduledReduces.isEmpty()) {
-          ContainerSimulator cs = scheduledReduces.remove();
-          LOG.debug("Application {} starts to launch a reducer ({}).",
-              appId, container.getId());
-          assignedReduces.put(container.getId(), cs);
-          se.getNmMap().get(container.getNodeId())
-              .addNewContainer(container, cs.getLifeTime(), appId);
-          getRanNodes().add(container.getNodeId());
-        }
-      }
-    }
-  }
-
-  /**
-   * restart running because of the am container killed
-   */
-  private void restart()
-          throws YarnException, IOException, InterruptedException {
-    // clear
-    isFinished = false;
-    pendingFailedMaps.clear();
-    pendingMaps.clear();
-    pendingReduces.clear();
-    pendingFailedReduces.clear();
-
-    // Only add totalMaps - finishedMaps
-    int added = 0;
-    for (ContainerSimulator cs : allMaps) {
-      if (added >= mapTotal - mapFinished) {
-        break;
-      }
-      pendingMaps.add(cs);
-    }
-
-    // And same, only add totalReduces - finishedReduces
-    added = 0;
-    for (ContainerSimulator cs : allReduces) {
-      if (added >= reduceTotal - reduceFinished) {
-        break;
-      }
-      pendingReduces.add(cs);
-    }
-    amContainer = null;
-  }
-
-  private List<ContainerSimulator> mergeLists(List<ContainerSimulator> left, List<ContainerSimulator> right) {
-    List<ContainerSimulator> list = new ArrayList<>();
-    list.addAll(left);
-    list.addAll(right);
-    return list;
-  }
-
-  @Override
-  protected void sendContainerRequest()
-          throws YarnException, IOException, InterruptedException {
-    if (isFinished) {
-      return;
-    }
-
-    // send out request
-    List<ResourceRequest> ask = null;
-    if (mapFinished != mapTotal) {
-      // map phase
-      if (!pendingMaps.isEmpty()) {
-        ask = packageRequests(mergeLists(pendingMaps, scheduledMaps),
-            PRIORITY_MAP);
-        LOG.debug("Application {} sends out request for {} mappers.",
-            appId, pendingMaps.size());
-        scheduledMaps.addAll(pendingMaps);
-        pendingMaps.clear();
-      } else if (!pendingFailedMaps.isEmpty()) {
-        ask = packageRequests(mergeLists(pendingFailedMaps, scheduledMaps),
-            PRIORITY_MAP);
-        LOG.debug("Application {} sends out requests for {} failed mappers.",
-            appId, pendingFailedMaps.size());
-        scheduledMaps.addAll(pendingFailedMaps);
-        pendingFailedMaps.clear();
-      }
-    } else if (reduceFinished != reduceTotal) {
-      // reduce phase
-      if (!pendingReduces.isEmpty()) {
-        ask = packageRequests(mergeLists(pendingReduces, scheduledReduces),
-            PRIORITY_REDUCE);
-        LOG.debug("Application {} sends out requests for {} reducers.",
-                appId, pendingReduces.size());
-        scheduledReduces.addAll(pendingReduces);
-        pendingReduces.clear();
-      } else if (!pendingFailedReduces.isEmpty()) {
-        ask = packageRequests(mergeLists(pendingFailedReduces, scheduledReduces),
-            PRIORITY_REDUCE);
-        LOG.debug("Application {} sends out request for {} failed reducers.",
-            appId, pendingFailedReduces.size());
-        scheduledReduces.addAll(pendingFailedReduces);
-        pendingFailedReduces.clear();
-      }
-    }
-
-    if (ask == null) {
-      ask = new ArrayList<>();
-    }
-
-    final AllocateRequest request = createAllocateRequest(ask);
-    if (totalContainers == 0) {
-      request.setProgress(1.0f);
-    } else {
-      request.setProgress((float) finishedContainers / totalContainers);
-    }
-
-    UserGroupInformation ugi =
-            UserGroupInformation.createRemoteUser(appAttemptId.toString());
-    Token<AMRMTokenIdentifier> token = rm.getRMContext().getRMApps()
-            .get(appAttemptId.getApplicationId())
-            .getRMAppAttempt(appAttemptId).getAMRMToken();
-    ugi.addTokenIdentifier(token.decodeIdentifier());
-    AllocateResponse response = ugi.doAs(
-            new PrivilegedExceptionAction<AllocateResponse>() {
-      @Override
-      public AllocateResponse run() throws Exception {
-        return rm.getApplicationMasterService().allocate(request);
-      }
-    });
-    if (response != null) {
-      responseQueue.put(response);
-    }
-  }
-
-  @Override
-  public void initReservation(ReservationId reservationId, long deadline,
-      long now) {
-
-    Resource mapRes = getMaxResource(allMaps);
-    long mapDur = getMaxDuration(allMaps);
-    Resource redRes = getMaxResource(allReduces);
-    long redDur = getMaxDuration(allReduces);
-
-    ReservationSubmissionRequest rr = ReservationClientUtil.
-        createMRReservation(reservationId,
-            "reservation_" + reservationId.getId(), mapRes, allMaps.size(),
-            mapDur, redRes, allReduces.size(), redDur, now + traceStartTimeMS,
-            now + deadline, queue);
-
-    setReservationRequest(rr);
-  }
-
-  // Helper to compute the component-wise maximum resource used by any container
-  private Resource getMaxResource(Collection<ContainerSimulator> containers) {
-    return containers.parallelStream()
-        .map(ContainerSimulator::getResource)
-        .reduce(Resource.newInstance(0, 0), Resources::componentwiseMax);
-  }
-
-  // Helper to compute the maximum resource used by any map container
-  private long getMaxDuration(Collection<ContainerSimulator> containers) {
-    return containers.parallelStream()
-        .mapToLong(ContainerSimulator::getLifeTime)
-        .reduce(0L, Long::max);
-  }
-
-  @Override
-  protected void checkStop() {
-    if (isFinished) {
-      super.setEndTime(System.currentTimeMillis());
-    }
-  }
-
-  @Override
-  public void lastStep() throws Exception {
-    super.lastStep();
-
-    // clear data structures
-    allMaps.clear();
-    allReduces.clear();
-    assignedMaps.clear();
-    assignedReduces.clear();
-    pendingFailedMaps.clear();
-    pendingFailedReduces.clear();
-    pendingMaps.clear();
-    pendingReduces.clear();
-    scheduledMaps.clear();
-    scheduledReduces.clear();
-    responseQueue.clear();
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java
deleted file mode 100644
index 09297afd4d0..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java
+++ /dev/null
@@ -1,269 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.appmaster;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.security.token.Token;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerExitStatus;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.api.records.ReservationId;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.security.AMRMTokenIdentifier;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.sls.AMDefinition;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.IOException;
-import java.security.PrivilegedExceptionAction;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-
-/**
- * AMSimulator that simulates streaming services - it keeps tasks
- * running and resubmits them whenever they fail or complete. It finishes
- * when the specified duration expires.
- */
-
-@Private
-@Unstable
-public class StreamAMSimulator extends AMSimulator {
-  /*
-  Vocabulary Used:
-  pending -> requests which are NOT yet sent to RM
-  scheduled -> requests which are sent to RM but not yet assigned
-  assigned -> requests which are assigned to a container
-  completed -> request corresponding to which container has completed
-
-  streams are constantly scheduled. If a streaming job is killed, we restart it
-  */
-
-  private static final int PRIORITY_MAP = 20;
-
-  // pending streams
-  private LinkedList<ContainerSimulator> pendingStreams =
-          new LinkedList<>();
-
-  // scheduled streams
-  private LinkedList<ContainerSimulator> scheduledStreams =
-          new LinkedList<ContainerSimulator>();
-
-  // assigned streams
-  private Map<ContainerId, ContainerSimulator> assignedStreams =
-          new HashMap<ContainerId, ContainerSimulator>();
-
-  // all streams
-  private LinkedList<ContainerSimulator> allStreams =
-          new LinkedList<ContainerSimulator>();
-
-  // finished
-  private boolean isFinished = false;
-  private long duration = 0;
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(StreamAMSimulator.class);
-
-  @SuppressWarnings("checkstyle:parameternumber")
-  public void init(AMDefinition amDef, ResourceManager rm, SLSRunner slsRunner,
-      boolean tracked, long baselineTimeMS, long heartbeatInterval,
-      Map<ApplicationId, AMSimulator> appIdToAMSim) {
-    super.init(amDef, rm, slsRunner, tracked, baselineTimeMS,
-        heartbeatInterval, appIdToAMSim);
-    amtype = "stream";
-    allStreams.addAll(amDef.getTaskContainers());
-    duration = amDef.getJobFinishTime() - amDef.getJobStartTime();
-    LOG.info("Added new job with {} streams, running for {}",
-        allStreams.size(), duration);
-  }
-
-  @Override
-  public synchronized void notifyAMContainerLaunched(Container masterContainer)
-      throws Exception {
-    if (null != masterContainer) {
-      restart();
-      super.notifyAMContainerLaunched(masterContainer);
-    }
-  }
-
-  @Override
-  @SuppressWarnings("unchecked")
-  protected void processResponseQueue() throws Exception {
-    while (!responseQueue.isEmpty()) {
-      AllocateResponse response = responseQueue.take();
-
-      // check completed containers
-      if (!response.getCompletedContainersStatuses().isEmpty()) {
-        for (ContainerStatus cs : response.getCompletedContainersStatuses()) {
-          ContainerId containerId = cs.getContainerId();
-          if(assignedStreams.containsKey(containerId)){
-            // One of our containers completed. Regardless of reason,
-            // we want to maintain our streaming process
-            LOG.debug("Application {} has one streamer finished ({}).", appId,
-                containerId);
-            pendingStreams.add(assignedStreams.remove(containerId));
-          } else if (amContainer.getId().equals(containerId)){
-            // Our am container completed
-            if(cs.getExitStatus() == ContainerExitStatus.SUCCESS){
-              // am container released event (am container completed on success)
-              isAMContainerRunning = false;
-              isFinished = true;
-              LOG.info("Application {} goes to finish.", appId);
-            } else {
-              // am container killed - wait for re allocation
-              LOG.info("Application {}'s AM is "
-                  + "going to be killed. Waiting for rescheduling...", appId);
-              isAMContainerRunning = false;
-            }
-          }
-        }
-      }
-
-      // check finished
-      if (isAMContainerRunning &&
-          (System.currentTimeMillis() - simulateStartTimeMS >= duration)) {
-        LOG.debug("Application {} sends out event to clean up"
-                + " its AM container.", appId);
-        isAMContainerRunning = false;
-        isFinished = true;
-        break;
-      }
-
-      // check allocated containers
-      for (Container container : response.getAllocatedContainers()) {
-        if (!scheduledStreams.isEmpty()) {
-          ContainerSimulator cs = scheduledStreams.remove();
-          LOG.debug("Application {} starts to launch a stream ({}).", appId,
-              container.getId());
-          assignedStreams.put(container.getId(), cs);
-          se.getNmMap().get(container.getNodeId()).addNewContainer(container,
-              cs.getLifeTime(), appId);
-          getRanNodes().add(container.getNodeId());
-        }
-      }
-    }
-  }
-
-  /**
-   * restart running because of the am container killed.
-   */
-  private void restart()
-          throws YarnException, IOException, InterruptedException {
-    // clear
-    isFinished = false;
-    pendingStreams.clear();
-    pendingStreams.addAll(allStreams);
-
-    amContainer = null;
-  }
-
-  private List<ContainerSimulator> mergeLists(List<ContainerSimulator> left,
-      List<ContainerSimulator> right) {
-    List<ContainerSimulator> list = new ArrayList<>();
-    list.addAll(left);
-    list.addAll(right);
-    return list;
-  }
-
-  @Override
-  protected void sendContainerRequest()
-          throws YarnException, IOException, InterruptedException {
-
-    // send out request
-    List<ResourceRequest> ask = new ArrayList<>();
-    List<ContainerId> release = new ArrayList<>();
-    if (!isFinished) {
-      if (!pendingStreams.isEmpty()) {
-        ask = packageRequests(mergeLists(pendingStreams, scheduledStreams),
-            PRIORITY_MAP);
-        LOG.debug("Application {} sends out request for {} streams.",
-            appId, pendingStreams.size());
-        scheduledStreams.addAll(pendingStreams);
-        pendingStreams.clear();
-      }
-    }
-
-    if(isFinished){
-      release.addAll(assignedStreams.keySet());
-      ask.clear();
-    }
-
-    final AllocateRequest request = createAllocateRequest(ask, release);
-    if (totalContainers == 0) {
-      request.setProgress(1.0f);
-    } else {
-      request.setProgress((float) finishedContainers / totalContainers);
-    }
-
-    UserGroupInformation ugi =
-        UserGroupInformation.createRemoteUser(appAttemptId.toString());
-    Token<AMRMTokenIdentifier> token = rm.getRMContext().getRMApps()
-        .get(appAttemptId.getApplicationId())
-        .getRMAppAttempt(appAttemptId).getAMRMToken();
-    ugi.addTokenIdentifier(token.decodeIdentifier());
-    AllocateResponse response = ugi.doAs(
-        new PrivilegedExceptionAction<AllocateResponse>() {
-          @Override
-          public AllocateResponse run() throws Exception {
-            return rm.getApplicationMasterService().allocate(request);
-          }
-        });
-    if (response != null) {
-      responseQueue.put(response);
-    }
-  }
-
-  @Override
-  public void initReservation(
-      ReservationId reservationId, long deadline, long now){
-    // Streaming AM currently doesn't do reservations
-    setReservationRequest(null);
-  }
-
-  @Override
-  protected void checkStop() {
-    if (isFinished) {
-      super.setEndTime(System.currentTimeMillis());
-    }
-  }
-
-  @Override
-  public void lastStep() throws Exception {
-    super.lastStep();
-
-    // clear data structures
-    allStreams.clear();
-    assignedStreams.clear();
-    pendingStreams.clear();
-    scheduledStreams.clear();
-    responseQueue.clear();
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/package-info.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/package-info.java
deleted file mode 100644
index ead315be5bd..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * Application Master simulators for the SLS.
- */
-package org.apache.hadoop.yarn.sls.appmaster;
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/conf/SLSConfiguration.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/conf/SLSConfiguration.java
deleted file mode 100644
index 119960c92a4..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/conf/SLSConfiguration.java
+++ /dev/null
@@ -1,134 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.conf;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.api.records.Resource;
-
-@Private
-@Unstable
-public class SLSConfiguration {
-  // sls
-  public static final String PREFIX = "yarn.sls.";
-  public static final String DNS_CACHING_ENABLED = PREFIX
-      + "dns.caching.enabled";
-  public static final boolean DNS_CACHING_ENABLED_DEFAULT = false;
-  // runner
-  public static final String RUNNER_PREFIX = PREFIX + "runner.";
-  public static final String RUNNER_POOL_SIZE = RUNNER_PREFIX + "pool.size";
-  public static final int RUNNER_POOL_SIZE_DEFAULT = 10;
-  // scheduler
-  public static final String SCHEDULER_PREFIX = PREFIX + "scheduler.";
-  public static final String RM_SCHEDULER = SCHEDULER_PREFIX + "class";
-  // metrics
-  public static final String METRICS_PREFIX = PREFIX + "metrics.";
-  public static final String METRICS_SWITCH = METRICS_PREFIX + "switch"; 
-  public static final String METRICS_WEB_ADDRESS_PORT = METRICS_PREFIX
-                                                  + "web.address.port";
-  public static final String METRICS_OUTPUT_DIR = METRICS_PREFIX + "output";
-  public static final int METRICS_WEB_ADDRESS_PORT_DEFAULT = 10001;
-  public static final String METRICS_TIMER_WINDOW_SIZE = METRICS_PREFIX
-                                                  + "timer.window.size";
-  public static final int METRICS_TIMER_WINDOW_SIZE_DEFAULT = 100;
-  public static final String METRICS_RECORD_INTERVAL_MS = METRICS_PREFIX
-                                                  + "record.interval.ms";
-  public static final int METRICS_RECORD_INTERVAL_MS_DEFAULT = 1000;
-  // nm
-  public static final String NM_PREFIX = PREFIX + "nm.";
-  public static final String NM_MEMORY_MB = NM_PREFIX + "memory.mb";
-  public static final int NM_MEMORY_MB_DEFAULT = 10240;
-  public static final String NM_VCORES = NM_PREFIX + "vcores";
-  public static final int NM_VCORES_DEFAULT = 10;
-  public static final int NM_RESOURCE_DEFAULT = 0;
-  public static final String NM_HEARTBEAT_INTERVAL_MS = NM_PREFIX
-                                                  + "heartbeat.interval.ms";
-  public static final int NM_HEARTBEAT_INTERVAL_MS_DEFAULT = 1000;
-  // am
-  public static final String AM_PREFIX = PREFIX + "am.";
-  public static final String AM_HEARTBEAT_INTERVAL_MS = AM_PREFIX
-                                                  + "heartbeat.interval.ms";
-  public static final String NM_RESOURCE_UTILIZATION_RATIO = NM_PREFIX
-      + "resource.utilization.ratio";
-  public static final int AM_HEARTBEAT_INTERVAL_MS_DEFAULT = 1000;
-  public static final String AM_TYPE = AM_PREFIX + "type";
-  public static final String AM_TYPE_PREFIX = AM_TYPE + ".";
-
-  public static final String AM_CONTAINER_MEMORY = AM_PREFIX +
-      "container.memory";
-  public static final int AM_CONTAINER_MEMORY_DEFAULT = 1024;
-
-  public static final String AM_CONTAINER_VCORES = AM_PREFIX +
-      "container.vcores";
-  public static final int AM_CONTAINER_VCORES_DEFAULT = 1;
-
-  public static final float NM_RESOURCE_UTILIZATION_RATIO_DEFAULT = -1F;
-
-  // container
-  public static final String CONTAINER_PREFIX = PREFIX + "container.";
-  public static final String CONTAINER_MEMORY_MB = CONTAINER_PREFIX
-          + "memory.mb";
-  public static final int CONTAINER_MEMORY_MB_DEFAULT = 1024;
-  public static final String CONTAINER_VCORES = CONTAINER_PREFIX + "vcores";
-  public static final int CONTAINER_VCORES_DEFAULT = 1;
-
-  public static Resource getAMContainerResource(Configuration conf) {
-    return Resource.newInstance(
-        conf.getLong(AM_CONTAINER_MEMORY, AM_CONTAINER_MEMORY_DEFAULT),
-        conf.getInt(AM_CONTAINER_VCORES, AM_CONTAINER_VCORES_DEFAULT));
-  }
-
-  // input file
-
-  // nodes
-  public static final String NUM_NODES = "num.nodes";
-  public static final String NUM_RACKS = "num.racks";
-
-  // job
-  public static final String JOB_PREFIX = "job.";
-  public static final String JOB_ID = JOB_PREFIX + "id";
-  public static final String JOB_START_MS = JOB_PREFIX + "start.ms";
-  public static final String JOB_END_MS = JOB_PREFIX + "end.ms";
-  public static final String JOB_QUEUE_NAME = JOB_PREFIX + "queue.name";
-  public static final String JOB_LABEL_EXPR = JOB_PREFIX + "label.expression";
-  public static final String JOB_USER = JOB_PREFIX + "user";
-  public static final String JOB_COUNT = JOB_PREFIX + "count";
-  public static final String JOB_TASKS = JOB_PREFIX + "tasks";
-  public static final String JOB_AM_PREFIX = "am.";
-
-  // task
-  public static final String TASK_PREFIX = "container.";
-  public static final String COUNT = "count";
-  public static final String TASK_CONTAINER = "container.";
-  public static final String TASK_HOST = TASK_CONTAINER + "host";
-  public static final String TASK_START_MS = TASK_CONTAINER + "start.ms";
-  public static final String TASK_END_MS = TASK_CONTAINER + "end.ms";
-  public static final String DURATION_MS = "duration.ms";
-  public static final String TASK_DURATION_MS = TASK_CONTAINER + DURATION_MS;
-  public static final String TASK_PRIORITY = TASK_CONTAINER + "priority";
-  public static final String TASK_TYPE = TASK_CONTAINER + "type";
-  public static final String TASK_EXECUTION_TYPE = TASK_CONTAINER
-      + "execution.type";
-  public static final String TASK_ALLOCATION_ID = TASK_CONTAINER
-      + "allocation.id";
-  public static final String TASK_REQUEST_DELAY = TASK_CONTAINER
-      + "request.delay";
-
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java
deleted file mode 100644
index 4898ea736f9..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java
+++ /dev/null
@@ -1,318 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.nodemanager;
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.DelayQueue;
-
-import org.apache.hadoop.classification.VisibleForTesting;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerExitStatus;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerState;
-import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.api.records.NodeLabel;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceUtilization;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatRequest;
-import org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse;
-import org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerRequest;
-import org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerResponse;
-import org.apache.hadoop.yarn.server.api.records.MasterKey;
-import org.apache.hadoop.yarn.server.api.records.NodeAction;
-import org.apache.hadoop.yarn.server.api.records.NodeHealthStatus;
-import org.apache.hadoop.yarn.server.api.records.NodeStatus;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode;
-import org.apache.hadoop.yarn.util.Records;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.apache.hadoop.yarn.sls.scheduler.TaskRunner;
-import org.apache.hadoop.yarn.sls.utils.SLSUtils;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public class NMSimulator extends TaskRunner.Task {
-  // node resource
-  private RMNode node;
-  // master key
-  private MasterKey masterKey;
-  // containers with various STATE
-  private List<ContainerId> completedContainerList;
-  private List<ContainerId> releasedContainerList;
-  private DelayQueue<ContainerSimulator> containerQueue;
-  private Map<ContainerId, ContainerSimulator> runningContainers;
-  private List<ContainerId> amContainerList;
-  // resource manager
-  private ResourceManager rm;
-  // heart beat response id
-  private int responseId = 0;
-  private float resourceUtilizationRatio;
-  private final static Logger LOG = LoggerFactory.getLogger(NMSimulator.class);
-  
-  public void init(String nodeIdStr, Resource nodeResource, int dispatchTime,
-      int heartBeatInterval, ResourceManager pRm,
-      float pResourceUtilizationRatio, Set<NodeLabel> labels)
-      throws IOException, YarnException {
-    super.init(dispatchTime, dispatchTime + 1000000L * heartBeatInterval,
-        heartBeatInterval);
-    // create resource
-    String[] rackHostName = SLSUtils.getRackHostName(nodeIdStr);
-    this.node = NodeInfo.newNodeInfo(rackHostName[0], rackHostName[1],
-        Resources.clone(nodeResource));
-    this.rm = pRm;
-    // init data structures
-    completedContainerList =
-            Collections.synchronizedList(new ArrayList<ContainerId>());
-    releasedContainerList =
-            Collections.synchronizedList(new ArrayList<ContainerId>());
-    containerQueue = new DelayQueue<ContainerSimulator>();
-    amContainerList =
-            Collections.synchronizedList(new ArrayList<ContainerId>());
-    runningContainers =
-            new ConcurrentHashMap<ContainerId, ContainerSimulator>();
-    // register NM with RM
-    RegisterNodeManagerRequest req =
-            Records.newRecord(RegisterNodeManagerRequest.class);
-    req.setNodeId(node.getNodeID());
-    req.setResource(node.getTotalCapability());
-    req.setNodeLabels(labels);
-    req.setHttpPort(80);
-    RegisterNodeManagerResponse response = this.rm.getResourceTrackerService()
-            .registerNodeManager(req);
-    masterKey = response.getNMTokenMasterKey();
-    this.resourceUtilizationRatio = pResourceUtilizationRatio;
-  }
-
-  public void init(String nodeIdStr, Resource nodeResource, int dispatchTime,
-      int heartBeatInterval, ResourceManager pRm,
-      float pResourceUtilizationRatio)
-      throws IOException, YarnException {
-    init(nodeIdStr, nodeResource, dispatchTime, heartBeatInterval, pRm,
-        pResourceUtilizationRatio, null);
-  }
-
-  @Override
-  public void firstStep() {
-    // do nothing
-  }
-
-  @Override
-  public void middleStep() throws Exception {
-    // we check the lifetime for each running containers
-    ContainerSimulator cs;
-    synchronized(completedContainerList) {
-      while ((cs = containerQueue.poll()) != null) {
-        runningContainers.remove(cs.getId());
-        completedContainerList.add(cs.getId());
-        LOG.debug("Container {} has completed", cs.getId());
-      }
-    }
-    
-    // send heart beat
-    NodeHeartbeatRequest beatRequest =
-            Records.newRecord(NodeHeartbeatRequest.class);
-    beatRequest.setLastKnownNMTokenMasterKey(masterKey);
-    NodeStatus ns = Records.newRecord(NodeStatus.class);
-    
-    ns.setContainersStatuses(generateContainerStatusList());
-    ns.setNodeId(node.getNodeID());
-    ns.setKeepAliveApplications(new ArrayList<ApplicationId>());
-    ns.setResponseId(responseId++);
-    ns.setNodeHealthStatus(NodeHealthStatus.newInstance(true, "", 0));
-
-    //set node & containers utilization
-    if (resourceUtilizationRatio > 0 && resourceUtilizationRatio <=1) {
-      int pMemUsed = Math.round(node.getTotalCapability().getMemorySize()
-          * resourceUtilizationRatio);
-      float cpuUsed = node.getTotalCapability().getVirtualCores()
-          * resourceUtilizationRatio;
-      ResourceUtilization resourceUtilization = ResourceUtilization.newInstance(
-          pMemUsed, pMemUsed, cpuUsed);
-      ns.setContainersUtilization(resourceUtilization);
-      ns.setNodeUtilization(resourceUtilization);
-    }
-    beatRequest.setNodeStatus(ns);
-    NodeHeartbeatResponse beatResponse =
-        rm.getResourceTrackerService().nodeHeartbeat(beatRequest);
-    if (! beatResponse.getContainersToCleanup().isEmpty()) {
-      // remove from queue
-      synchronized(releasedContainerList) {
-        for (ContainerId containerId : beatResponse.getContainersToCleanup()){
-          if (amContainerList.contains(containerId)) {
-            // AM container (not killed?, only release)
-            synchronized(amContainerList) {
-              amContainerList.remove(containerId);
-            }
-            LOG.debug("NodeManager {} releases an AM ({}).",
-                node.getNodeID(), containerId);
-          } else {
-            cs = runningContainers.remove(containerId);
-            containerQueue.remove(cs);
-            releasedContainerList.add(containerId);
-            LOG.debug("NodeManager {} releases a container ({}).",
-                node.getNodeID(), containerId);
-          }
-        }
-      }
-    }
-    if (beatResponse.getNodeAction() == NodeAction.SHUTDOWN) {
-      lastStep();
-    }
-  }
-
-  @Override
-  public void lastStep() {
-    // do nothing
-  }
-
-  /**
-   * catch status of all containers located on current node
-   */
-  private ArrayList<ContainerStatus> generateContainerStatusList() {
-    ArrayList<ContainerStatus> csList = new ArrayList<ContainerStatus>();
-    // add running containers
-    for (ContainerSimulator container : runningContainers.values()) {
-      csList.add(newContainerStatus(container.getId(),
-        ContainerState.RUNNING, ContainerExitStatus.SUCCESS));
-    }
-    synchronized(amContainerList) {
-      for (ContainerId cId : amContainerList) {
-        csList.add(newContainerStatus(cId,
-            ContainerState.RUNNING, ContainerExitStatus.SUCCESS));
-      }
-    }
-    // add complete containers
-    synchronized(completedContainerList) {
-      for (ContainerId cId : completedContainerList) {
-        LOG.debug("NodeManager {} completed container ({}).",
-            node.getNodeID(), cId);
-        csList.add(newContainerStatus(
-                cId, ContainerState.COMPLETE, ContainerExitStatus.SUCCESS));
-      }
-      completedContainerList.clear();
-    }
-    // released containers
-    synchronized(releasedContainerList) {
-      for (ContainerId cId : releasedContainerList) {
-        LOG.debug("NodeManager {} released container ({}).",
-            node.getNodeID(), cId);
-        csList.add(newContainerStatus(
-                cId, ContainerState.COMPLETE, ContainerExitStatus.ABORTED));
-      }
-      releasedContainerList.clear();
-    }
-    return csList;
-  }
-
-  private ContainerStatus newContainerStatus(ContainerId cId, 
-                                             ContainerState state,
-                                             int exitState) {
-    ContainerStatus cs = Records.newRecord(ContainerStatus.class);
-    cs.setContainerId(cId);
-    cs.setState(state);
-    cs.setExitStatus(exitState);
-    return cs;
-  }
-
-  public RMNode getNode() {
-    return node;
-  }
-
-  /**
-   * launch a new container with the given life time
-   */
-  public void addNewContainer(Container container, long lifeTimeMS,
-      ApplicationId applicationId) {
-    LOG.debug("NodeManager {} launches a new container ({}).",
-        node.getNodeID(), container.getId());
-    if (lifeTimeMS != -1) {
-      // normal container
-      ContainerSimulator cs = new ContainerSimulator(container.getId(),
-              container.getResource(), lifeTimeMS + System.currentTimeMillis(),
-              lifeTimeMS, container.getAllocationRequestId());
-      containerQueue.add(cs);
-      runningContainers.put(cs.getId(), cs);
-    } else {
-      // AM container
-      // -1 means AMContainer
-      synchronized(amContainerList) {
-        amContainerList.add(container.getId());
-      }
-    }
-
-    // update runningApplications on the node
-    if (applicationId != null
-        && !getNode().getRunningApps().contains(applicationId)) {
-      getNode().getRunningApps().add(applicationId);
-    }
-    LOG.debug("Adding running app: {} on node: {}. " +
-            "Updated runningApps on this node are: {}",
-        applicationId, getNode().getNodeID(), getNode().getRunningApps());
-  }
-
-  /**
-   * clean up an AM container and add to completed list
-   * @param containerId id of the container to be cleaned
-   */
-  public void cleanupContainer(ContainerId containerId) {
-    synchronized(amContainerList) {
-      amContainerList.remove(containerId);
-    }
-    synchronized(completedContainerList) {
-      completedContainerList.add(containerId);
-    }
-  }
-
-  @VisibleForTesting
-  Map<ContainerId, ContainerSimulator> getRunningContainers() {
-    return runningContainers;
-  }
-
-  @VisibleForTesting
-  List<ContainerId> getAMContainers() {
-    return amContainerList;
-  }
-
-  @VisibleForTesting
-  List<ContainerId> getCompletedContainers() {
-    return completedContainerList;
-  }
-
-  public void finishApplication(ApplicationId applicationId) {
-    if (getNode().getRunningApps().contains(applicationId)) {
-      getNode().getRunningApps().remove(applicationId);
-      LOG.debug("Removed running app: {} from node: {}. " +
-              "Updated runningApps on this node are: {}",
-          applicationId, getNode().getNodeID(), getNode().getRunningApps());
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NodeInfo.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NodeInfo.java
deleted file mode 100644
index 5d1069a5ca2..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NodeInfo.java
+++ /dev/null
@@ -1,271 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.nodemanager;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.net.Node;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerExitStatus;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerState;
-import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.api.records.NodeAttribute;
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.NodeState;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceUtilization;
-import org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse;
-import org.apache.hadoop.yarn.server.api.records.OpportunisticContainersStatus;
-import org.apache.hadoop.yarn.server.resourcemanager.RMContext;
-import org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsManager;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode
-        .UpdatedContainerInfo;
-
-@Private
-@Unstable
-public class NodeInfo {
-  private static int NODE_ID = 0;
-
-  public static NodeId newNodeID(String host, int port) {
-    return NodeId.newInstance(host, port);
-  }
-
-  @Private
-  @Unstable
-  private static class FakeRMNodeImpl implements RMNode {
-    private NodeId nodeId;
-    private String hostName;
-    private String nodeAddr;
-    private String httpAddress;
-    private int cmdPort;
-    private volatile Resource perNode;
-    private String rackName;
-    private String healthReport;
-    private NodeState state;
-    private List<ContainerId> toCleanUpContainers;
-    private List<ApplicationId> toCleanUpApplications;
-    private List<ApplicationId> runningApplications;
-
-    public FakeRMNodeImpl(NodeId nodeId, String nodeAddr, String httpAddress,
-        Resource perNode, String rackName, String healthReport,
-        int cmdPort, String hostName, NodeState state) {
-      this.nodeId = nodeId;
-      this.nodeAddr = nodeAddr;
-      this.httpAddress = httpAddress;
-      this.perNode = perNode;
-      this.rackName = rackName;
-      this.healthReport = healthReport;
-      this.cmdPort = cmdPort;
-      this.hostName = hostName;
-      this.state = state;
-      toCleanUpApplications = new ArrayList<ApplicationId>();
-      toCleanUpContainers = new ArrayList<ContainerId>();
-      runningApplications = new ArrayList<ApplicationId>();
-    }
-
-    public NodeId getNodeID() {
-      return nodeId;
-    }
-    
-    public String getHostName() {
-      return hostName;
-    }
-    
-    public int getCommandPort() {
-      return cmdPort;
-    }
-    
-    public int getHttpPort() {
-      return 0;
-    }
-
-    public String getNodeAddress() {
-      return nodeAddr;
-    }
-
-    public String getHttpAddress() {
-      return httpAddress;
-    }
-
-    public String getHealthReport() {
-      return healthReport;
-    }
-
-    public long getLastHealthReportTime() {
-      return 0; 
-    }
-
-    public Resource getTotalCapability() {
-      return perNode;
-    }
-
-    public String getRackName() {
-      return rackName;
-    }
-
-    public Node getNode() {
-      throw new UnsupportedOperationException("Not supported yet.");
-    }
-
-    public NodeState getState() {
-      return state;
-    }
-
-    public List<ContainerId> getContainersToCleanUp() {
-      return toCleanUpContainers;
-    }
-
-    public List<ApplicationId> getAppsToCleanup() {
-      return toCleanUpApplications;
-    }
-
-    public List<ApplicationId> getRunningApps() {
-      return runningApplications;
-    }
-
-    public void setAndUpdateNodeHeartbeatResponse(
-        NodeHeartbeatResponse response) {
-    }
-
-    public NodeHeartbeatResponse getLastNodeHeartBeatResponse() {
-      return null;
-    }
-
-    public void resetLastNodeHeartBeatResponse() {
-    }
-
-    public List<UpdatedContainerInfo> pullContainerUpdates() {
-      ArrayList<UpdatedContainerInfo> list = new ArrayList<UpdatedContainerInfo>();
-      
-      ArrayList<ContainerStatus> list2 = new ArrayList<ContainerStatus>();
-      for(ContainerId cId : this.toCleanUpContainers) {
-        list2.add(ContainerStatus.newInstance(cId, ContainerState.RUNNING, "", 
-          ContainerExitStatus.SUCCESS));
-      }
-      List<Map.Entry<ApplicationId, ContainerStatus>> needUpdateContainers =
-          new ArrayList<Map.Entry<ApplicationId, ContainerStatus>>();
-      list.add(new UpdatedContainerInfo(new ArrayList<ContainerStatus>(),
-          list2, needUpdateContainers));
-      return list;
-    }
-
-    @Override
-    public String getNodeManagerVersion() {
-      return null;
-    }
-
-    @Override
-    public Set<String> getNodeLabels() {
-      return RMNodeLabelsManager.EMPTY_STRING_SET;
-    }
-
-    @Override
-    public List<Container> pullNewlyIncreasedContainers() {
-      return null;
-    }
-
-    public OpportunisticContainersStatus getOpportunisticContainersStatus() {
-      return null;
-    }
-
-    @Override
-    public ResourceUtilization getAggregatedContainersUtilization() {
-      return null;
-    }
-
-    @Override
-    public ResourceUtilization getNodeUtilization() {
-      return null;
-    }
-
-    @Override
-    public long getUntrackedTimeStamp() {
-      return 0;
-    }
-
-    @Override
-    public void setUntrackedTimeStamp(long timeStamp) {
-    }
-
-    @Override
-    public Integer getDecommissioningTimeout() {
-      return null;
-    }
-
-    @Override
-    public Map<String, Long> getAllocationTagsWithCount() {
-      return null;
-    }
-
-    @Override
-    public Set<NodeAttribute> getAllNodeAttributes() {
-      return Collections.emptySet();
-    }
-
-    @Override
-    public RMContext getRMContext() {
-      return null;
-    }
-
-    @Override
-    public Resource getPhysicalResource() {
-      return null;
-    }
-
-    @Override
-    public boolean isUpdatedCapability() {
-      return false;
-    }
-
-    @Override
-    public void resetUpdatedCapability() {
-    }
-
-    @Override
-    public long calculateHeartBeatInterval(
-        long defaultInterval, long minInterval, long maxInterval,
-        float speedupFactor, float slowdownFactor) {
-      return defaultInterval;
-    }
-  }
-
-  public static RMNode newNodeInfo(String rackName, String hostName,
-                              final Resource resource, int port) {
-    final NodeId nodeId = newNodeID(hostName, port);
-    final String nodeAddr = hostName + ":" + port;
-
-    return new FakeRMNodeImpl(nodeId, nodeAddr, hostName,
-        resource, rackName, "Me good",
-        port, hostName, null);
-  }
-  
-  public static RMNode newNodeInfo(String rackName, String hostName,
-                              final Resource resource) {
-    return newNodeInfo(rackName, hostName, resource, NODE_ID++);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java
deleted file mode 100644
index aec9f0f105b..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java
+++ /dev/null
@@ -1,117 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- * <p/>
- * http://www.apache.org/licenses/LICENSE-2.0
- * <p/>
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.resourcemanager;
-
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.security.token.Token;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.event.EventHandler;
-import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
-import org.apache.hadoop.yarn.security.AMRMTokenIdentifier;
-import org.apache.hadoop.yarn.server.resourcemanager.RMContext;
-import org.apache.hadoop.yarn.server.resourcemanager.amlauncher.AMLauncherEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.amlauncher.ApplicationMasterLauncher;
-import org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttempt;
-import org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEventType;
-import org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.sls.appmaster.AMSimulator;
-
-
-public class MockAMLauncher extends ApplicationMasterLauncher
-    implements EventHandler<AMLauncherEvent> {
-  private static final Logger LOG = LoggerFactory.getLogger(
-      MockAMLauncher.class);
-
-  private SLSRunner slsRunner;
-
-  public MockAMLauncher(SLSRunner slsRunner, RMContext rmContext) {
-    super(rmContext);
-    this.slsRunner = slsRunner;
-  }
-
-  @Override
-  protected void serviceInit(Configuration conf) throws Exception {
-    // Do nothing
-  }
-
-  @Override
-  protected void serviceStart() throws Exception {
-    // Do nothing
-  }
-
-  @Override
-  protected void serviceStop() throws Exception {
-    // Do nothing
-  }
-
-  private void setupAMRMToken(RMAppAttempt appAttempt) {
-    // Setup AMRMToken
-    Token<AMRMTokenIdentifier> amrmToken =
-        super.context.getAMRMTokenSecretManager().createAndGetAMRMToken(
-            appAttempt.getAppAttemptId());
-    ((RMAppAttemptImpl) appAttempt).setAMRMToken(amrmToken);
-  }
-
-  @Override
-  public void handle(AMLauncherEvent event) {
-    ApplicationId appId =
-        event.getAppAttempt().getAppAttemptId().getApplicationId();
-    // find AMSimulator
-    AMSimulator ams = slsRunner.getAMSimulatorByAppId(appId);
-    if (ams == null) {
-      throw new YarnRuntimeException(
-          "Didn't find any AMSimulator for applicationId=" + appId);
-    }
-    Container amContainer = event.getAppAttempt().getMasterContainer();
-    switch (event.getType()) {
-    case LAUNCH:
-      try {
-        setupAMRMToken(event.getAppAttempt());
-        // Notify RMAppAttempt to change state
-        super.context.getDispatcher().getEventHandler().handle(
-            new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),
-                RMAppAttemptEventType.LAUNCHED));
-
-        ams.notifyAMContainerLaunched(
-            event.getAppAttempt().getMasterContainer());
-        LOG.info("Notify AM launcher launched:" + amContainer.getId());
-
-        slsRunner.getNmMap().get(amContainer.getNodeId())
-            .addNewContainer(amContainer, -1, appId);
-        ams.getRanNodes().add(amContainer.getNodeId());
-        return;
-      } catch (Exception e) {
-        throw new YarnRuntimeException(e);
-      }
-    case CLEANUP:
-      slsRunner.getNmMap().get(amContainer.getNodeId())
-          .cleanupContainer(amContainer.getId());
-      break;
-    default:
-      throw new YarnRuntimeException(
-          "Didn't find any AMSimulator for applicationId=" + appId);
-    }
-  }
-
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/CapacitySchedulerMetrics.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/CapacitySchedulerMetrics.java
deleted file mode 100644
index 89b44c68d61..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/CapacitySchedulerMetrics.java
+++ /dev/null
@@ -1,31 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-
-@Private
-@Unstable
-public class CapacitySchedulerMetrics extends SchedulerMetrics {
-
-  public CapacitySchedulerMetrics() {
-    super();
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/ContainerSimulator.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/ContainerSimulator.java
deleted file mode 100644
index 8f119943570..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/ContainerSimulator.java
+++ /dev/null
@@ -1,147 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import java.util.concurrent.Delayed;
-import java.util.concurrent.TimeUnit;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.sls.TaskContainerDefinition;
-
-@Private
-@Unstable
-public class ContainerSimulator implements Delayed {
-  private ContainerId id;
-  private Resource resource;
-  private long endTime;
-  // life time (ms)
-  private long lifeTime;
-  // time(ms) after which container would be requested by AM
-  private long requestDelay;
-  private String hostname;
-  private int priority;
-  private String type;
-  private ExecutionType executionType = ExecutionType.GUARANTEED;
-  private long allocationId;
-
-  /**
-   * Invoked when AM schedules containers to allocate.
-   * @param def The task's definition object.
-   * @return ContainerSimulator object
-   */
-  public static ContainerSimulator createFromTaskContainerDefinition(
-      TaskContainerDefinition def) {
-    return new ContainerSimulator(def.getResource(), def.getDuration(),
-        def.getHostname(), def.getPriority(), def.getType(),
-        def.getExecutionType(), def.getAllocationId(), def.getRequestDelay());
-  }
-
-  /**
-   * Invoked when AM schedules containers to allocate.
-   */
-  @SuppressWarnings("checkstyle:parameternumber")
-  private ContainerSimulator(Resource resource, long lifeTime,
-      String hostname, int priority, String type, ExecutionType executionType,
-      long allocationId, long requestDelay) {
-    this.resource = resource;
-    this.lifeTime = lifeTime;
-    this.hostname = hostname;
-    this.priority = priority;
-    this.type = type;
-    this.executionType = executionType;
-    this.requestDelay = requestDelay;
-    this.allocationId = allocationId;
-  }
-
-  /**
-   * Invoked when NM schedules containers to run.
-   */
-  public ContainerSimulator(ContainerId id, Resource resource, long endTime,
-      long lifeTime, long allocationId) {
-    this.id = id;
-    this.resource = resource;
-    this.endTime = endTime;
-    this.lifeTime = lifeTime;
-    this.allocationId = allocationId;
-  }
-  
-  public Resource getResource() {
-    return resource;
-  }
-  
-  public ContainerId getId() {
-    return id;
-  }
-
-  @Override
-  public int compareTo(Delayed o) {
-    if (!(o instanceof ContainerSimulator)) {
-      throw new IllegalArgumentException(
-              "Parameter must be a ContainerSimulator instance");
-    }
-    ContainerSimulator other = (ContainerSimulator) o;
-    return (int) Math.signum(endTime - other.endTime);
-  }
-
-  @Override
-  public long getDelay(TimeUnit unit) {
-    return unit.convert(endTime - System.currentTimeMillis(),
-          TimeUnit.MILLISECONDS);
-  }
-  
-  public long getLifeTime() {
-    return lifeTime;
-  }
-  
-  public String getHostname() {
-    return hostname;
-  }
-  
-  public long getEndTime() {
-    return endTime;
-  }
-  
-  public int getPriority() {
-    return priority;
-  }
-  
-  public String getType() {
-    return type;
-  }
-  
-  public void setPriority(int p) {
-    priority = p;
-  }
-
-  public ExecutionType getExecutionType() {
-    return executionType;
-  }
-
-  public long getAllocationId() {
-    return allocationId;
-  }
-
-  public long getRequestDelay() {
-    return requestDelay;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java
deleted file mode 100644
index 23f79bf53ab..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java
+++ /dev/null
@@ -1,213 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.VisibleForTesting;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.Schedulable;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-
-import com.codahale.metrics.Gauge;
-
-@Private
-@Unstable
-public class FairSchedulerMetrics extends SchedulerMetrics {
-
-  private int totalMemoryMB = Integer.MAX_VALUE;
-  private int totalVCores = Integer.MAX_VALUE;
-  private boolean maxReset = false;
-
-  @VisibleForTesting
-  public enum Metric {
-    DEMAND("demand"),
-    USAGE("usage"),
-    MINSHARE("minshare"),
-    MAXSHARE("maxshare"),
-    FAIRSHARE("fairshare");
-
-    private String value;
-
-    Metric(String value) {
-      this.value = value;
-    }
-
-    @VisibleForTesting
-    public String getValue() {
-      return value;
-    }
-  }
-
-  public FairSchedulerMetrics() {
-    super();
-
-    for (Metric metric: Metric.values()) {
-      appTrackedMetrics.add(metric.value + ".memory");
-      appTrackedMetrics.add(metric.value + ".vcores");
-      queueTrackedMetrics.add(metric.value + ".memory");
-      queueTrackedMetrics.add(metric.value + ".vcores");
-    }
-  }
-
-  private long getMemorySize(Schedulable schedulable, Metric metric) {
-    if (schedulable != null) {
-      switch (metric) {
-      case DEMAND:
-        return schedulable.getDemand().getMemorySize();
-      case USAGE:
-        return schedulable.getResourceUsage().getMemorySize();
-      case MINSHARE:
-        return schedulable.getMinShare().getMemorySize();
-      case MAXSHARE:
-        return schedulable.getMaxShare().getMemorySize();
-      case FAIRSHARE:
-        return schedulable.getFairShare().getMemorySize();
-      default:
-        return 0L;
-      }
-    }
-
-    return 0L;
-  }
-
-  private int getVirtualCores(Schedulable schedulable, Metric metric) {
-    if (schedulable != null) {
-      switch (metric) {
-      case DEMAND:
-        return schedulable.getDemand().getVirtualCores();
-      case USAGE:
-        return schedulable.getResourceUsage().getVirtualCores();
-      case MINSHARE:
-        return schedulable.getMinShare().getVirtualCores();
-      case MAXSHARE:
-        return schedulable.getMaxShare().getVirtualCores();
-      case FAIRSHARE:
-        return schedulable.getFairShare().getVirtualCores();
-      default:
-        return 0;
-      }
-    }
-
-    return 0;
-  }
-
-  private void registerAppMetrics(ApplicationId appId, String oldAppId,
-      Metric metric) {
-    metrics.register(
-        "variable.app." + oldAppId + "." + metric.value + ".memory",
-        new Gauge<Long>() {
-          @Override
-          public Long getValue() {
-            return getMemorySize((FSAppAttempt)getSchedulerAppAttempt(appId),
-                metric);
-          }
-        }
-    );
-
-    metrics.register(
-        "variable.app." + oldAppId + "." + metric.value + ".vcores",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            return getVirtualCores((FSAppAttempt)getSchedulerAppAttempt(appId),
-                metric);
-          }
-        }
-    );
-  }
-
-  @Override
-  public void trackApp(ApplicationId appId, String oldAppId) {
-    super.trackApp(appId, oldAppId);
-
-    for (Metric metric: Metric.values()) {
-      registerAppMetrics(appId, oldAppId, metric);
-    }
-  }
-
-  private void registerQueueMetrics(FSQueue queue, Metric metric) {
-    metrics.register(
-        "variable.queue." + queue.getName() + "." + metric.value + ".memory",
-        new Gauge<Long>() {
-          @Override
-          public Long getValue() {
-            return getMemorySize(queue, metric);
-          }
-        }
-    );
-    metrics.register(
-        "variable.queue." + queue.getName() + "." + metric.value + ".vcores",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            return getVirtualCores(queue, metric);
-          }
-        }
-    );
-  }
-
-  @Override
-  protected void registerQueueMetrics(String queueName) {
-    super.registerQueueMetrics(queueName);
-
-    FairScheduler fair = (FairScheduler) scheduler;
-    final FSQueue queue = fair.getQueueManager().getQueue(queueName);
-    registerQueueMetrics(queue, Metric.DEMAND);
-    registerQueueMetrics(queue, Metric.USAGE);
-    registerQueueMetrics(queue, Metric.MINSHARE);
-    registerQueueMetrics(queue, Metric.FAIRSHARE);
-
-    metrics.register("variable.queue." + queueName + ".maxshare.memory",
-      new Gauge<Long>() {
-        @Override
-        public Long getValue() {
-          if (! maxReset
-              && SLSRunner.getSimulateInfoMap().containsKey("Number of nodes")
-              && SLSRunner.getSimulateInfoMap().containsKey("Node memory (MB)")
-              && SLSRunner.getSimulateInfoMap().containsKey("Node VCores")) {
-            int numNMs = Integer.parseInt(SLSRunner.getSimulateInfoMap()
-                .get("Number of nodes").toString());
-            int numMemoryMB = Integer.parseInt(SLSRunner.getSimulateInfoMap()
-                .get("Node memory (MB)").toString());
-            int numVCores = Integer.parseInt(SLSRunner.getSimulateInfoMap()
-                .get("Node VCores").toString());
-
-            totalMemoryMB = numNMs * numMemoryMB;
-            totalVCores = numNMs * numVCores;
-            maxReset = false;
-          }
-
-          return Math.min(queue.getMaxShare().getMemorySize(), totalMemoryMB);
-        }
-      }
-    );
-    metrics.register("variable.queue." + queueName + ".maxshare.vcores",
-      new Gauge<Integer>() {
-        @Override
-        public Integer getValue() {
-          return Math.min(queue.getMaxShare().getVirtualCores(), totalVCores);
-        }
-      }
-    );
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FifoSchedulerMetrics.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FifoSchedulerMetrics.java
deleted file mode 100644
index 427b5972699..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FifoSchedulerMetrics.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.api.records.QueueInfo;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo
-        .FifoScheduler;
-
-import com.codahale.metrics.Gauge;
-
-@Private
-@Unstable
-public class FifoSchedulerMetrics extends SchedulerMetrics {
-  
-  public FifoSchedulerMetrics() {
-    super();
-  }
-
-  @Override
-  protected void registerQueueMetrics(String queueName) {
-    super.registerQueueMetrics(queueName);
-
-    FifoScheduler fifo = (FifoScheduler) scheduler;
-    // for FifoScheduler, only DEFAULT_QUEUE
-    // here the three parameters doesn't affect results
-    final QueueInfo queue = fifo.getQueueInfo(queueName, false, false);
-    // track currentCapacity, maximumCapacity (always 1.0f)
-    metrics.register("variable.queue." + queueName + ".currentcapacity",
-      new Gauge<Float>() {
-        @Override
-        public Float getValue() {
-          return queue.getCurrentCapacity();
-        }
-      }
-    );
-    metrics.register("variable.queue." + queueName + ".",
-      new Gauge<Float>() {
-        @Override
-        public Float getValue() {
-          return queue.getCurrentCapacity();
-        }
-      }
-    );
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/NodeUpdateSchedulerEventWrapper.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/NodeUpdateSchedulerEventWrapper.java
deleted file mode 100644
index 12dfe8baa16..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/NodeUpdateSchedulerEventWrapper.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event
-        .NodeUpdateSchedulerEvent;
-
-@Private
-@Unstable
-public class NodeUpdateSchedulerEventWrapper extends NodeUpdateSchedulerEvent {
-  
-  public NodeUpdateSchedulerEventWrapper(NodeUpdateSchedulerEvent event) {
-    super(new RMNodeWrapper(event.getRMNode()));
-  }
-  
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/RMNodeWrapper.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/RMNodeWrapper.java
deleted file mode 100644
index dbbc88fb52d..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/RMNodeWrapper.java
+++ /dev/null
@@ -1,245 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.net.Node;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.NodeAttribute;
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.NodeState;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceUtilization;
-import org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse;
-import org.apache.hadoop.yarn.server.api.records.OpportunisticContainersStatus;
-import org.apache.hadoop.yarn.server.resourcemanager.RMContext;
-import org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsManager;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode
-        .UpdatedContainerInfo;
-
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-@Private
-@Unstable
-public class RMNodeWrapper implements RMNode {
-  private RMNode node;
-  private List<UpdatedContainerInfo> updates;
-  private boolean pulled = false;
-  
-  public RMNodeWrapper(RMNode node) {
-    this.node = node;
-    updates = node.pullContainerUpdates();
-  }
-  
-  @Override
-  public NodeId getNodeID() {
-    return node.getNodeID();
-  }
-
-  @Override
-  public String getHostName() {
-    return node.getHostName();
-  }
-
-  @Override
-  public int getCommandPort() {
-    return node.getCommandPort();
-  }
-
-  @Override
-  public int getHttpPort() {
-    return node.getHttpPort();
-  }
-
-  @Override
-  public String getNodeAddress() {
-    return node.getNodeAddress();
-  }
-
-  @Override
-  public String getHttpAddress() {
-    return node.getHttpAddress();
-  }
-
-  @Override
-  public String getHealthReport() {
-    return node.getHealthReport();
-  }
-
-  @Override
-  public long getLastHealthReportTime() {
-    return node.getLastHealthReportTime();
-  }
-
-  @Override
-  public Resource getTotalCapability() {
-    return node.getTotalCapability();
-  }
-
-  @Override
-  public Resource getAllocatedContainerResource() {
-    return node.getAllocatedContainerResource();
-  }
-
-  @Override
-  public String getRackName() {
-    return node.getRackName();
-  }
-
-  @Override
-  public Node getNode() {
-    return node.getNode();
-  }
-
-  @Override
-  public NodeState getState() {
-    return node.getState();
-  }
-
-  @Override
-  public List<ContainerId> getContainersToCleanUp() {
-    return node.getContainersToCleanUp();
-  }
-
-  @Override
-  public List<ApplicationId> getAppsToCleanup() {
-    return node.getAppsToCleanup();
-  }
-
-  @Override
-  public List<ApplicationId> getRunningApps() {
-    return node.getRunningApps();
-  }
-
-  @Override
-  public void setAndUpdateNodeHeartbeatResponse(
-      NodeHeartbeatResponse nodeHeartbeatResponse) {
-    node.setAndUpdateNodeHeartbeatResponse(nodeHeartbeatResponse);
-  }
-
-  @Override
-  public NodeHeartbeatResponse getLastNodeHeartBeatResponse() {
-    return node.getLastNodeHeartBeatResponse();
-  }
-
-  @Override
-  public void resetLastNodeHeartBeatResponse() {
-    node.getLastNodeHeartBeatResponse().setResponseId(0);
-  }
-
-  @Override
-  public List<UpdatedContainerInfo> pullContainerUpdates() {
-    List<UpdatedContainerInfo> list = Collections.emptyList();
-    if (! pulled) {
-      list = updates;
-      pulled = true;
-    }
-    return list;    
-  }
-  
-  List<UpdatedContainerInfo> getContainerUpdates() {
-    return updates;
-  }
-
-  @Override
-  public String getNodeManagerVersion() {
-    return node.getNodeManagerVersion();
-  }
-
-  @Override
-  public Set<String> getNodeLabels() {
-    return RMNodeLabelsManager.EMPTY_STRING_SET;
-  }
-
-  @Override
-  public List<Container> pullNewlyIncreasedContainers() {
-    return Collections.emptyList();
-  }
-
-  public OpportunisticContainersStatus getOpportunisticContainersStatus() {
-    return null;
-  }
-
-  @Override
-  public ResourceUtilization getAggregatedContainersUtilization() {
-    return node.getAggregatedContainersUtilization();
-  }
-
-  @Override
-  public ResourceUtilization getNodeUtilization() {
-    return node.getNodeUtilization();
-  }
-
-  @Override
-  public long getUntrackedTimeStamp() {
-    return 0;
-  }
-
-  @Override
-  public void setUntrackedTimeStamp(long timeStamp) {
-  }
-
-  @Override
-  public Integer getDecommissioningTimeout() {
-    return null;
-  }
-
-  @Override
-  public Map<String, Long> getAllocationTagsWithCount() {
-    return node.getAllocationTagsWithCount();
-  }
-
-  @Override
-  public Set<NodeAttribute> getAllNodeAttributes() {
-    return node.getAllNodeAttributes();
-  }
-
-  @Override
-  public RMContext getRMContext() {
-    return node.getRMContext();
-  }
-
-  @Override
-  public Resource getPhysicalResource() {
-    return null;
-  }
-
-  @Override
-  public boolean isUpdatedCapability() {
-    return false;
-  }
-
-  @Override
-  public void resetUpdatedCapability() {
-  }
-
-  @Override
-  public long calculateHeartBeatInterval(
-      long defaultInterval, long minInterval, long maxInterval,
-      float speedupFactor, float slowdownFactor) {
-    return defaultInterval;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java
deleted file mode 100644
index 6cc4cf7597e..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java
+++ /dev/null
@@ -1,162 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import java.util.List;
-import java.util.concurrent.TimeUnit;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.conf.Configurable;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.api.records.SchedulingRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.Allocation;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEvent;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public class SLSCapacityScheduler extends CapacityScheduler implements
-        SchedulerWrapper, Configurable {
-
-  private final SLSSchedulerCommons schedulerCommons;
-  private Configuration conf;
-  private SLSRunner runner;
-  private static final Logger LOG = LoggerFactory.getLogger(SLSCapacityScheduler.class);
-
-  public SLSCapacityScheduler() {
-    schedulerCommons = new SLSSchedulerCommons(this);
-  }
-
-  @Override
-  public void setConf(Configuration conf) {
-    this.conf = conf;
-    super.setConf(conf);
-    schedulerCommons.initMetrics(CapacityScheduler.class, conf);
-  }
-
-  @Override
-  public Allocation allocate(ApplicationAttemptId attemptId,
-      List<ResourceRequest> resourceRequests,
-      List<SchedulingRequest> schedulingRequests, List<ContainerId> containerIds,
-      List<String> blacklistAdditions, List<String> blacklistRemovals,
-      ContainerUpdates updateRequests) {
-    return schedulerCommons.allocate(attemptId, resourceRequests, schedulingRequests,
-        containerIds, blacklistAdditions, blacklistRemovals, updateRequests);
-  }
-
-  @Override
-  public Allocation allocatePropagated(ApplicationAttemptId attemptId,
-      List<ResourceRequest> resourceRequests,
-      List<SchedulingRequest> schedulingRequests,
-      List<ContainerId> containerIds, List<String> blacklistAdditions,
-      List<String> blacklistRemovals, ContainerUpdates updateRequests) {
-    return super.allocate(attemptId, resourceRequests, schedulingRequests,
-        containerIds, blacklistAdditions, blacklistRemovals, updateRequests);
-  }
-
-  @Override
-  public boolean tryCommit(Resource cluster, ResourceCommitRequest r,
-      boolean updatePending) {
-    if (schedulerCommons.isMetricsON()) {
-      boolean isSuccess = false;
-      long startTimeNs = System.nanoTime();
-      try {
-        isSuccess = super.tryCommit(cluster, r, updatePending);
-        return isSuccess;
-      } finally {
-        long elapsedNs = System.nanoTime() - startTimeNs;
-        if (isSuccess) {
-          getSchedulerMetrics().getSchedulerCommitSuccessTimer()
-              .update(elapsedNs, TimeUnit.NANOSECONDS);
-          getSchedulerMetrics().increaseSchedulerCommitSuccessCounter();
-        } else {
-          getSchedulerMetrics().getSchedulerCommitFailureTimer()
-              .update(elapsedNs, TimeUnit.NANOSECONDS);
-          getSchedulerMetrics().increaseSchedulerCommitFailureCounter();
-        }
-      }
-    } else {
-      return super.tryCommit(cluster, r, updatePending);
-    }
-  }
-
-  @Override
-  public void handle(SchedulerEvent schedulerEvent) {
-    try {
-      schedulerCommons.handle(schedulerEvent);
-    } catch(Exception e) {
-      LOG.error("Caught exception while handling scheduler event", e);
-      throw e;
-    }
-  }
-
-  @Override
-  public void propagatedHandle(SchedulerEvent schedulerEvent) {
-    super.handle(schedulerEvent);
-  }
-
-  @Override
-  public void serviceStop() throws Exception {
-    schedulerCommons.stopMetrics();
-    super.serviceStop();
-  }
-
-
-  public String getRealQueueName(String queue) throws YarnException {
-    if (getQueue(queue) == null) {
-      throw new YarnException("Can't find the queue by the given name: " + queue
-          + "! Please check if queue " + queue + " is in the allocation file.");
-    }
-    return getQueue(queue).getQueuePath();
-  }
-
-  public SchedulerMetrics getSchedulerMetrics() {
-    return schedulerCommons.getSchedulerMetrics();
-  }
-
-  @Override
-  public Configuration getConf() {
-    return conf;
-  }
-
-  public Tracker getTracker() {
-    return schedulerCommons.getTracker();
-  }
-
-  @Override
-  public void setSLSRunner(SLSRunner runner) {
-    this.runner = runner;
-  }
-
-  @Override
-  public SLSRunner getSLSRunner() {
-    return this.runner;
-  }
-}
-
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSFairScheduler.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSFairScheduler.java
deleted file mode 100644
index beb411025f8..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSFairScheduler.java
+++ /dev/null
@@ -1,123 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.conf.Configurable;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.api.records.SchedulingRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.Allocation;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.util.List;
-
-@Private
-@Unstable
-public class SLSFairScheduler extends FairScheduler
-    implements SchedulerWrapper, Configurable {
-  private final SLSSchedulerCommons schedulerCommons;
-  private SLSRunner runner;
-  private static final Logger LOG = LoggerFactory.getLogger(SLSFairScheduler.class);
-
-  public SLSFairScheduler() {
-    schedulerCommons = new SLSSchedulerCommons(this);
-  }
-
-  @Override
-  public void setConf(Configuration conf) {
-    super.setConfig(conf);
-    schedulerCommons.initMetrics(FairScheduler.class, conf);
-  }
-
-  @Override
-  public Allocation allocate(ApplicationAttemptId attemptId,
-      List<ResourceRequest> resourceRequests,
-      List<SchedulingRequest> schedulingRequests, List<ContainerId> containerIds,
-      List<String> blacklistAdditions, List<String> blacklistRemovals,
-      ContainerUpdates updateRequests) {
-    return schedulerCommons.allocate(attemptId, resourceRequests, schedulingRequests,
-        containerIds, blacklistAdditions, blacklistRemovals, updateRequests);
-  }
-
-  @Override
-  public void handle(SchedulerEvent schedulerEvent) {
-    try {
-      schedulerCommons.handle(schedulerEvent);
-    } catch (Exception e){
-      LOG.error("Caught exception while handling scheduler event", e);
-      throw e;
-    }
-  }
-
-  @Override
-  public void propagatedHandle(SchedulerEvent schedulerEvent) {
-    super.handle(schedulerEvent);
-  }
-
-  @Override
-  public Allocation allocatePropagated(ApplicationAttemptId attemptId,
-      List<ResourceRequest> resourceRequests,
-      List<SchedulingRequest> schedulingRequests,
-      List<ContainerId> containerIds, List<String> blacklistAdditions,
-      List<String> blacklistRemovals, ContainerUpdates updateRequests) {
-    return super.allocate(attemptId, resourceRequests, schedulingRequests,
-        containerIds, blacklistAdditions, blacklistRemovals, updateRequests);
-  }
-
-  @Override
-  public void serviceStop() throws Exception {
-    schedulerCommons.stopMetrics();
-    super.serviceStop();
-  }
-
-  public String getRealQueueName(String queue) throws YarnException {
-    if (!getQueueManager().exists(queue)) {
-      throw new YarnException("Can't find the queue by the given name: " + queue
-          + "! Please check if queue " + queue + " is in the allocation file.");
-    }
-    return getQueueManager().getQueue(queue).getQueueName();
-  }
-
-  public SchedulerMetrics getSchedulerMetrics() {
-    return schedulerCommons.getSchedulerMetrics();
-  }
-
-  public Tracker getTracker() {
-    return schedulerCommons.getTracker();
-  }
-
-  @Override
-  public void setSLSRunner(SLSRunner runner) {
-    this.runner = runner;
-  }
-
-  @Override
-  public SLSRunner getSLSRunner() {
-    return this.runner;
-  }
-}
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSSchedulerCommons.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSSchedulerCommons.java
deleted file mode 100644
index a99fe53eff9..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSSchedulerCommons.java
+++ /dev/null
@@ -1,343 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *     http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import com.codahale.metrics.Timer;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerExitStatus;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.api.records.SchedulingRequest;
-import org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.UpdatedContainerInfo;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.Allocation;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerAppReport;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplication;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.AppAttemptAddedSchedulerEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.AppAttemptRemovedSchedulerEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.NodeUpdateSchedulerEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.IOException;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.ConcurrentHashMap;
-
-public class SLSSchedulerCommons {
-  private static final Logger LOG = LoggerFactory.getLogger(SLSSchedulerCommons.class);
-
-  private final AbstractYarnScheduler<?, ?> scheduler;
-  private boolean metricsON;
-  private SchedulerMetrics schedulerMetrics;
-  private final Map<ContainerId, Resource> preemptionContainerMap = new ConcurrentHashMap<>();
-  private final Map<ApplicationAttemptId, String> appQueueMap = new ConcurrentHashMap<>();
-  private final Tracker tracker;
-  
-  public SLSSchedulerCommons(AbstractYarnScheduler<?, ?> scheduler) {
-    this.scheduler = scheduler;
-    this.tracker = new Tracker();
-  }
-
-  public void initMetrics(Class<? extends AbstractYarnScheduler<?, ?>> schedulerClass, Configuration conf) {
-    metricsON = conf.getBoolean(SLSConfiguration.METRICS_SWITCH, true);
-    if (metricsON) {
-      try {
-        schedulerMetrics = SchedulerMetrics.getInstance(conf, schedulerClass);
-        schedulerMetrics.init(scheduler, conf);
-      } catch (Exception e) {
-        LOG.error("Caught exception while initializing schedulerMetrics", e);
-      }
-    }
-  }
-
-  void stopMetrics() {
-    try {
-      if (metricsON) {
-        schedulerMetrics.tearDown();
-      }
-    } catch (Exception e) {
-      LOG.error("Caught exception while stopping service", e);
-    }
-  }
-  
-  public Allocation allocate(ApplicationAttemptId attemptId,
-      List<ResourceRequest> resourceRequests,
-      List<SchedulingRequest> schedulingRequests,
-      List<ContainerId> containerIds,
-      List<String> blacklistAdditions,
-      List<String> blacklistRemovals,
-      ContainerUpdates updateRequests) {
-    if (metricsON) {
-      final Timer.Context context = schedulerMetrics.getSchedulerAllocateTimer()
-          .time();
-      Allocation allocation = null;
-      try {
-        allocation = ((SchedulerWrapper)scheduler).allocatePropagated(
-            attemptId, resourceRequests,
-            schedulingRequests, containerIds,
-            blacklistAdditions, blacklistRemovals, updateRequests);
-        return allocation;
-      } catch (Exception e) {
-        LOG.error("Caught exception from allocate", e);
-        throw e;
-      } finally {
-        context.stop();
-        schedulerMetrics.increaseSchedulerAllocationCounter();
-        try {
-          updateQueueWithAllocateRequest(allocation, attemptId,
-              resourceRequests, containerIds);
-        } catch (IOException e) {
-          LOG.error("Caught exception while executing finally block", e);
-        }
-      }
-    } else {
-      return ((SchedulerWrapper)scheduler).allocatePropagated(
-          attemptId, resourceRequests, schedulingRequests,
-          containerIds,
-          blacklistAdditions, blacklistRemovals, updateRequests);
-    }
-  }
-
-  private void updateQueueWithAllocateRequest(Allocation allocation,
-      ApplicationAttemptId attemptId,
-      List<ResourceRequest> resourceRequests,
-      List<ContainerId> containerIds) throws IOException {
-    // update queue information
-    Resource pendingResource = Resources.createResource(0, 0);
-    Resource allocatedResource = Resources.createResource(0, 0);
-    String queueName = appQueueMap.get(attemptId);
-    // container requested
-    for (ResourceRequest request : resourceRequests) {
-      if (request.getResourceName().equals(ResourceRequest.ANY)) {
-        Resources.addTo(pendingResource,
-            Resources.multiply(request.getCapability(),
-                request.getNumContainers()));
-      }
-    }
-    // container allocated
-    for (Container container : allocation.getContainers()) {
-      Resources.addTo(allocatedResource, container.getResource());
-      Resources.subtractFrom(pendingResource, container.getResource());
-    }
-    // container released from AM
-    SchedulerAppReport report = scheduler.getSchedulerAppInfo(attemptId);
-    for (ContainerId containerId : containerIds) {
-      Container container = null;
-      for (RMContainer c : report.getLiveContainers()) {
-        if (c.getContainerId().equals(containerId)) {
-          container = c.getContainer();
-          break;
-        }
-      }
-      if (container != null) {
-        // released allocated containers
-        Resources.subtractFrom(allocatedResource, container.getResource());
-      } else {
-        for (RMContainer c : report.getReservedContainers()) {
-          if (c.getContainerId().equals(containerId)) {
-            container = c.getContainer();
-            break;
-          }
-        }
-        if (container != null) {
-          // released reserved containers
-          Resources.subtractFrom(pendingResource, container.getResource());
-        }
-      }
-    }
-    // containers released/preemption from scheduler
-    Set<ContainerId> preemptionContainers = new HashSet<>();
-    if (allocation.getContainerPreemptions() != null) {
-      preemptionContainers.addAll(allocation.getContainerPreemptions());
-    }
-    if (allocation.getStrictContainerPreemptions() != null) {
-      preemptionContainers.addAll(allocation.getStrictContainerPreemptions());
-    }
-    if (!preemptionContainers.isEmpty()) {
-      for (ContainerId containerId : preemptionContainers) {
-        if (!preemptionContainerMap.containsKey(containerId)) {
-          Container container = null;
-          for (RMContainer c : report.getLiveContainers()) {
-            if (c.getContainerId().equals(containerId)) {
-              container = c.getContainer();
-              break;
-            }
-          }
-          if (container != null) {
-            preemptionContainerMap.put(containerId, container.getResource());
-          }
-        }
-
-      }
-    }
-
-    // update metrics
-    schedulerMetrics.updateQueueMetrics(pendingResource, allocatedResource,
-        queueName);
-  }
-
-  public void handle(SchedulerEvent schedulerEvent) {
-    SchedulerWrapper wrapper = (SchedulerWrapper) scheduler;
-    if (!metricsON) {
-      ((SchedulerWrapper)scheduler).propagatedHandle(schedulerEvent);
-      return;
-    }
-
-    if (!schedulerMetrics.isRunning()) {
-      schedulerMetrics.setRunning(true);
-    }
-
-    Timer.Context handlerTimer = null;
-    Timer.Context operationTimer = null;
-
-    NodeUpdateSchedulerEventWrapper eventWrapper;
-    try {
-      if (schedulerEvent.getType() == SchedulerEventType.NODE_UPDATE
-          && schedulerEvent instanceof NodeUpdateSchedulerEvent) {
-        eventWrapper = new NodeUpdateSchedulerEventWrapper(
-            (NodeUpdateSchedulerEvent) schedulerEvent);
-        schedulerEvent = eventWrapper;
-        updateQueueWithNodeUpdate(eventWrapper);
-      } else if (
-          schedulerEvent.getType() == SchedulerEventType.APP_ATTEMPT_REMOVED
-              && schedulerEvent instanceof AppAttemptRemovedSchedulerEvent) {
-        // check if having AM Container, update resource usage information
-        AppAttemptRemovedSchedulerEvent appRemoveEvent =
-            (AppAttemptRemovedSchedulerEvent) schedulerEvent;
-        ApplicationAttemptId appAttemptId =
-            appRemoveEvent.getApplicationAttemptID();
-        String queue = appQueueMap.get(appAttemptId);
-        SchedulerAppReport app = scheduler.getSchedulerAppInfo(appAttemptId);
-        if (!app.getLiveContainers().isEmpty()) {  // have 0 or 1
-          // should have one container which is AM container
-          RMContainer rmc = app.getLiveContainers().iterator().next();
-          schedulerMetrics.updateQueueMetricsByRelease(
-              rmc.getContainer().getResource(), queue);
-        }
-      }
-
-      handlerTimer = schedulerMetrics.getSchedulerHandleTimer().time();
-      operationTimer = schedulerMetrics.getSchedulerHandleTimer(
-          schedulerEvent.getType()).time();
-
-      ((SchedulerWrapper)scheduler).propagatedHandle(schedulerEvent);
-    } finally {
-      if (handlerTimer != null) {
-        handlerTimer.stop();
-      }
-      if (operationTimer != null) {
-        operationTimer.stop();
-      }
-      schedulerMetrics.increaseSchedulerHandleCounter(schedulerEvent.getType());
-
-      if (schedulerEvent.getType() == SchedulerEventType.APP_ATTEMPT_REMOVED
-          && schedulerEvent instanceof AppAttemptRemovedSchedulerEvent) {
-        wrapper.getSLSRunner().decreaseRemainingApps();
-        AppAttemptRemovedSchedulerEvent appRemoveEvent =
-            (AppAttemptRemovedSchedulerEvent) schedulerEvent;
-        appQueueMap.remove(appRemoveEvent.getApplicationAttemptID());
-        if (wrapper.getSLSRunner().getRemainingApps() == 0) {
-          try {
-            schedulerMetrics.tearDown();
-            SLSRunner.exitSLSRunner();
-          } catch (Exception e) {
-            LOG.error("Scheduler Metrics failed to tear down.", e);
-          }
-        }
-      } else if (schedulerEvent.getType() ==
-          SchedulerEventType.APP_ATTEMPT_ADDED
-          && schedulerEvent instanceof AppAttemptAddedSchedulerEvent) {
-        AppAttemptAddedSchedulerEvent appAddEvent =
-            (AppAttemptAddedSchedulerEvent) schedulerEvent;
-        SchedulerApplication app =
-            scheduler.getSchedulerApplications()
-                .get(appAddEvent.getApplicationAttemptId().getApplicationId());
-        appQueueMap.put(appAddEvent.getApplicationAttemptId(), app.getQueue()
-            .getQueueName());
-      }
-    }
-  }
-
-  private void updateQueueWithNodeUpdate(
-      NodeUpdateSchedulerEventWrapper eventWrapper) {
-    RMNodeWrapper node = (RMNodeWrapper) eventWrapper.getRMNode();
-    List<UpdatedContainerInfo> containerList = node.getContainerUpdates();
-    for (UpdatedContainerInfo info : containerList) {
-      for (ContainerStatus status : info.getCompletedContainers()) {
-        ContainerId containerId = status.getContainerId();
-        SchedulerAppReport app = scheduler.getSchedulerAppInfo(
-            containerId.getApplicationAttemptId());
-
-        if (app == null) {
-          // this happens for the AM container
-          // The app have already removed when the NM sends the release
-          // information.
-          continue;
-        }
-
-        int releasedMemory = 0, releasedVCores = 0;
-        if (status.getExitStatus() == ContainerExitStatus.SUCCESS) {
-          for (RMContainer rmc : app.getLiveContainers()) {
-            if (rmc.getContainerId() == containerId) {
-              Resource resource = rmc.getContainer().getResource();
-              releasedMemory += resource.getMemorySize();
-              releasedVCores += resource.getVirtualCores();
-              break;
-            }
-          }
-        } else if (status.getExitStatus() == ContainerExitStatus.ABORTED) {
-          if (preemptionContainerMap.containsKey(containerId)) {
-            Resource preResource = preemptionContainerMap.get(containerId);
-            releasedMemory += preResource.getMemorySize();
-            releasedVCores += preResource.getVirtualCores();
-            preemptionContainerMap.remove(containerId);
-          }
-        }
-        // update queue counters
-        String queue = appQueueMap.get(containerId.getApplicationAttemptId());
-        schedulerMetrics.updateQueueMetricsByRelease(
-            Resource.newInstance(releasedMemory, releasedVCores), queue);
-      }
-    }
-  }
-  
-  public SchedulerMetrics getSchedulerMetrics() {
-    return schedulerMetrics;
-  }
-
-  public boolean isMetricsON() {
-    return metricsON;
-  }
-
-  public Tracker getTracker() {
-    return tracker;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java
deleted file mode 100644
index f66cf4384d9..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java
+++ /dev/null
@@ -1,736 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import java.io.BufferedWriter;
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.OutputStreamWriter;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.SortedMap;
-import java.util.Locale;
-import java.util.concurrent.ScheduledExecutorService;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.locks.ReentrantLock;
-import java.util.concurrent.locks.Lock;
-
-import com.codahale.metrics.Counter;
-import com.codahale.metrics.CsvReporter;
-import com.codahale.metrics.Gauge;
-import com.codahale.metrics.Histogram;
-import com.codahale.metrics.MetricRegistry;
-import com.codahale.metrics.SlidingWindowReservoir;
-import com.codahale.metrics.Timer;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.util.ReflectionUtils;
-import org.apache.hadoop.util.concurrent.HadoopScheduledThreadPoolExecutor;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplication;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.utils.NodeUsageRanges;
-import org.apache.hadoop.yarn.sls.web.SLSWebApp;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public abstract class SchedulerMetrics {
-  private static final String EOL = System.getProperty("line.separator");
-  private static final int SAMPLING_SIZE = 60;
-  private static final Logger LOG =
-      LoggerFactory.getLogger(SchedulerMetrics.class);
-
-  protected ResourceScheduler scheduler;
-  protected Set<String> trackedQueues;
-  protected MetricRegistry metrics;
-  protected Set<String> appTrackedMetrics;
-  protected Set<String> queueTrackedMetrics;
-
-  private Configuration conf;
-  private ScheduledExecutorService pool;
-  private SLSWebApp web;
-
-  // metrics
-  private String metricsOutputDir;
-  private BufferedWriter metricsLogBW;
-  private BufferedWriter jobRuntimeLogBW;
-  private boolean running = false;
-
-  // counters for scheduler allocate/handle operations
-  private Counter schedulerAllocateCounter;
-  private Counter schedulerCommitSuccessCounter;
-  private Counter schedulerCommitFailureCounter;
-  private Counter schedulerHandleCounter;
-  private Map<SchedulerEventType, Counter> schedulerHandleCounterMap;
-
-  // Timers for scheduler allocate/handle operations
-  private Timer schedulerAllocateTimer;
-  private Timer schedulerCommitSuccessTimer;
-  private Timer schedulerCommitFailureTimer;
-  private Timer schedulerHandleTimer;
-  private Map<SchedulerEventType, Timer> schedulerHandleTimerMap;
-  private List<Histogram> schedulerHistogramList;
-  private Map<Histogram, Timer> histogramTimerMap;
-  private Lock samplerLock;
-  private Lock queueLock;
-
-  static Class getSchedulerMetricsClass(Configuration conf,
-      Class schedulerClass) throws ClassNotFoundException {
-    Class metricClass = null;
-    String schedulerMetricsType = conf.get(schedulerClass.getName());
-    if (schedulerMetricsType != null) {
-      metricClass = Class.forName(schedulerMetricsType);
-    }
-
-    if (schedulerClass.equals(FairScheduler.class)) {
-      metricClass = FairSchedulerMetrics.class;
-    } else if (schedulerClass.equals(CapacityScheduler.class)) {
-      metricClass = CapacitySchedulerMetrics.class;
-    } else if (schedulerClass.equals(FifoScheduler.class)) {
-      metricClass = FifoSchedulerMetrics.class;
-    }
-
-    return metricClass;
-  }
-
-  static SchedulerMetrics getInstance(Configuration conf, Class schedulerClass)
-      throws ClassNotFoundException {
-    Class schedulerMetricClass = getSchedulerMetricsClass(conf, schedulerClass);
-    return (SchedulerMetrics) ReflectionUtils
-        .newInstance(schedulerMetricClass, new Configuration());
-  }
-
-  public SchedulerMetrics() {
-    metrics = new MetricRegistry();
-
-    appTrackedMetrics = new HashSet<>();
-    appTrackedMetrics.add("live.containers");
-    appTrackedMetrics.add("reserved.containers");
-
-    queueTrackedMetrics = new HashSet<>();
-    trackedQueues = new HashSet<>();
-
-    samplerLock = new ReentrantLock();
-    queueLock = new ReentrantLock();
-  }
-
-  void init(ResourceScheduler resourceScheduler, Configuration config)
-      throws Exception {
-    this.scheduler = resourceScheduler;
-    this.conf = config;
-
-    metricsOutputDir = conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);
-
-    // register various metrics
-    registerJvmMetrics();
-    registerClusterResourceMetrics();
-    registerContainerAppNumMetrics();
-    registerSchedulerMetrics();
-    registerNodesUsageMetrics("memory");
-    registerNodesUsageMetrics("vcores");
-
-    // .csv output
-    initMetricsCSVOutput();
-
-    // start web app to provide real-time tracking
-    int metricsWebAddressPort = conf.getInt(
-        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,
-        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);
-    web = new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);
-    web.start();
-
-    // a thread to update histogram timer
-    pool = new HadoopScheduledThreadPoolExecutor(2);
-    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,
-        TimeUnit.MILLISECONDS);
-
-    // a thread to output metrics for real-time tracking
-    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,
-        TimeUnit.MILLISECONDS);
-
-    // application running information
-    jobRuntimeLogBW =
-        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(
-            metricsOutputDir + "/jobruntime.csv"), StandardCharsets.UTF_8));
-    jobRuntimeLogBW.write("JobID,real_start_time,real_end_time," +
-        "simulate_start_time,simulate_end_time" + EOL);
-    jobRuntimeLogBW.flush();
-  }
-
-  public MetricRegistry getMetrics() {
-    return metrics;
-  }
-
-  protected SchedulerApplicationAttempt getSchedulerAppAttempt(
-      ApplicationId appId) {
-    AbstractYarnScheduler yarnScheduler = (AbstractYarnScheduler)scheduler;
-    SchedulerApplication app = (SchedulerApplication)yarnScheduler
-        .getSchedulerApplications().get(appId);
-    if (app == null) {
-      return null;
-    }
-    return app.getCurrentAppAttempt();
-  }
-
-  public void trackApp(final ApplicationId appId, String oldAppId) {
-    metrics.register("variable.app." + oldAppId + ".live.containers",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            SchedulerApplicationAttempt appAttempt =
-                getSchedulerAppAttempt(appId);
-            if (appAttempt != null) {
-              return appAttempt.getLiveContainers().size();
-            } else {
-              return 0;
-            }
-          }
-        }
-    );
-    metrics.register("variable.app." + oldAppId + ".reserved.containers",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            SchedulerApplicationAttempt appAttempt =
-                getSchedulerAppAttempt(appId);
-            if (appAttempt != null) {
-              return appAttempt.getReservedContainers().size();
-            } else {
-              return 0;
-            }
-          }
-        }
-    );
-  }
-
-  public void untrackApp(String oldAppId) {
-    for (String m : appTrackedMetrics) {
-      metrics.remove("variable.app." + oldAppId + "." + m);
-    }
-  }
-
-  /**
-   * Track a queue by registering its metrics.
-   *
-   * @param queue queue name
-   */
-  public void trackQueue(String queue) {
-    queueLock.lock();
-    try {
-      if (!isTracked(queue)) {
-        trackedQueues.add(queue);
-        registerQueueMetrics(queue);
-      }
-    } finally {
-      queueLock.unlock();
-    }
-  }
-
-  protected void registerQueueMetrics(String queueName) {
-    SortedMap<String, Counter> counterMap = metrics.getCounters();
-
-    for (QueueMetric queueMetric : QueueMetric.values()) {
-      String metricName = getQueueMetricName(queueName, queueMetric);
-      if (!counterMap.containsKey(metricName)) {
-        metrics.counter(metricName);
-        queueTrackedMetrics.add(metricName);
-      }
-    }
-  }
-
-  public boolean isTracked(String queueName) {
-    return trackedQueues.contains(queueName);
-  }
-  
-  public Set<String> getAppTrackedMetrics() {
-    return appTrackedMetrics;
-  }
-
-  public Set<String> getQueueTrackedMetrics() {
-    return queueTrackedMetrics;
-  }
-
-  private void registerJvmMetrics() {
-    // add JVM gauges
-    metrics.register("variable.jvm.free.memory",
-        new Gauge<Long>() {
-          @Override
-          public Long getValue() {
-            return Runtime.getRuntime().freeMemory();
-          }
-        }
-    );
-    metrics.register("variable.jvm.max.memory",
-        new Gauge<Long>() {
-          @Override
-          public Long getValue() {
-            return Runtime.getRuntime().maxMemory();
-          }
-        }
-    );
-    metrics.register("variable.jvm.total.memory",
-        new Gauge<Long>() {
-          @Override
-          public Long getValue() {
-            return Runtime.getRuntime().totalMemory();
-          }
-        }
-    );
-  }
-
-  private void registerClusterResourceMetrics() {
-    metrics.register("variable.cluster.allocated.memory",
-        new Gauge<Long>() {
-          @Override
-          public Long getValue() {
-            if (isMetricsAvailable()) {
-              return 0L;
-            } else {
-              return scheduler.getRootQueueMetrics().getAllocatedMB();
-            }
-          }
-        }
-    );
-    metrics.register("variable.cluster.allocated.vcores",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            if (isMetricsAvailable()) {
-              return 0;
-            } else {
-              return scheduler.getRootQueueMetrics().getAllocatedVirtualCores();
-            }
-          }
-        }
-    );
-    metrics.register("variable.cluster.available.memory",
-        new Gauge<Long>() {
-          @Override
-          public Long getValue() {
-            if (isMetricsAvailable()) {
-              return 0L;
-            } else {
-              return scheduler.getRootQueueMetrics().getAvailableMB();
-            }
-          }
-        }
-    );
-    metrics.register("variable.cluster.available.vcores",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            if (isMetricsAvailable()) {
-              return 0;
-            } else {
-              return scheduler.getRootQueueMetrics().getAvailableVirtualCores();
-            }
-          }
-        }
-    );
-  }
-
-  private boolean isMetricsAvailable() {
-    return scheduler.getRootQueueMetrics() == null;
-  }
-
-  private void registerContainerAppNumMetrics() {
-    metrics.register("variable.running.application",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            if (scheduler.getRootQueueMetrics() == null) {
-              return 0;
-            } else {
-              return scheduler.getRootQueueMetrics().getAppsRunning();
-            }
-          }
-        }
-    );
-    metrics.register("variable.running.container",
-        new Gauge<Integer>() {
-          @Override
-          public Integer getValue() {
-            if (scheduler.getRootQueueMetrics() == null) {
-              return 0;
-            } else {
-              return scheduler.getRootQueueMetrics().getAllocatedContainers();
-            }
-          }
-        }
-    );
-  }
-
-  private void registerSchedulerMetrics() {
-    samplerLock.lock();
-    try {
-      // counters for scheduler operations
-      schedulerAllocateCounter = metrics.counter(
-          "counter.scheduler.operation.allocate");
-      schedulerCommitSuccessCounter = metrics.counter(
-          "counter.scheduler.operation.commit.success");
-      schedulerCommitFailureCounter = metrics.counter(
-          "counter.scheduler.operation.commit.failure");
-      schedulerHandleCounter = metrics.counter(
-          "counter.scheduler.operation.handle");
-      schedulerHandleCounterMap = new HashMap<>();
-      for (SchedulerEventType e : SchedulerEventType.values()) {
-        Counter counter = metrics.counter(
-            "counter.scheduler.operation.handle." + e);
-        schedulerHandleCounterMap.put(e, counter);
-      }
-      // timers for scheduler operations
-      int timeWindowSize = conf.getInt(
-          SLSConfiguration.METRICS_TIMER_WINDOW_SIZE,
-          SLSConfiguration.METRICS_TIMER_WINDOW_SIZE_DEFAULT);
-      schedulerAllocateTimer = new Timer(
-          new SlidingWindowReservoir(timeWindowSize));
-      schedulerCommitSuccessTimer = new Timer(
-          new SlidingWindowReservoir(timeWindowSize));
-      schedulerCommitFailureTimer = new Timer(
-          new SlidingWindowReservoir(timeWindowSize));
-      schedulerHandleTimer = new Timer(
-          new SlidingWindowReservoir(timeWindowSize));
-      schedulerHandleTimerMap = new HashMap<>();
-      for (SchedulerEventType e : SchedulerEventType.values()) {
-        Timer timer = new Timer(new SlidingWindowReservoir(timeWindowSize));
-        schedulerHandleTimerMap.put(e, timer);
-      }
-      // histogram for scheduler operations (Samplers)
-      schedulerHistogramList = new ArrayList<>();
-      histogramTimerMap = new HashMap<>();
-      Histogram schedulerAllocateHistogram = new Histogram(
-          new SlidingWindowReservoir(SAMPLING_SIZE));
-      metrics.register("sampler.scheduler.operation.allocate.timecost",
-          schedulerAllocateHistogram);
-      schedulerHistogramList.add(schedulerAllocateHistogram);
-      histogramTimerMap.put(schedulerAllocateHistogram, schedulerAllocateTimer);
-      Histogram schedulerCommitHistogram = new Histogram(
-          new SlidingWindowReservoir(SAMPLING_SIZE));
-      metrics.register("sampler.scheduler.operation.commit.success.timecost",
-          schedulerCommitHistogram);
-      schedulerHistogramList.add(schedulerCommitHistogram);
-      histogramTimerMap
-          .put(schedulerCommitHistogram, schedulerCommitSuccessTimer);
-      Histogram schedulerCommitFailureHistogram =
-          new Histogram(new SlidingWindowReservoir(SAMPLING_SIZE));
-      metrics.register("sampler.scheduler.operation.commit.failure.timecost",
-          schedulerCommitFailureHistogram);
-      schedulerHistogramList.add(schedulerCommitFailureHistogram);
-      histogramTimerMap
-          .put(schedulerCommitFailureHistogram, schedulerCommitFailureTimer);
-      Histogram schedulerHandleHistogram = new Histogram(
-          new SlidingWindowReservoir(SAMPLING_SIZE));
-      metrics.register("sampler.scheduler.operation.handle.timecost",
-          schedulerHandleHistogram);
-      schedulerHistogramList.add(schedulerHandleHistogram);
-      histogramTimerMap.put(schedulerHandleHistogram, schedulerHandleTimer);
-      for (SchedulerEventType e : SchedulerEventType.values()) {
-        Histogram histogram = new Histogram(
-            new SlidingWindowReservoir(SAMPLING_SIZE));
-        metrics.register(
-            "sampler.scheduler.operation.handle." + e + ".timecost",
-            histogram);
-        schedulerHistogramList.add(histogram);
-        histogramTimerMap.put(histogram, schedulerHandleTimerMap.get(e));
-      }
-    } catch (Exception e) {
-      LOG.error("Caught exception while registering scheduler metrics", e);
-      throw e;
-    } finally {
-      samplerLock.unlock();
-    }
-  }
-
-  private void registerNodesUsageMetrics(String resourceType) {
-    samplerLock.lock();
-    try {
-      for (NodeUsageRanges.Range range : NodeUsageRanges.getRanges()) {
-        String metricName = "nodes." + resourceType + "." + range.getKeyword();
-        metrics.register(metricName,
-            new Gauge<Integer>() {
-              @Override
-              public Integer getValue() {
-                if (!(scheduler instanceof AbstractYarnScheduler)) {
-                  return 0;
-                } else {
-                  int count = 0;
-                  AbstractYarnScheduler sch = (AbstractYarnScheduler) scheduler;
-                  for (Object node : sch.getNodeTracker().getAllNodes()) {
-                    SchedulerNode sNode = (SchedulerNode) node;
-                    long allocated = 0, total = 0;
-                    if (resourceType.equals("memory")) {
-                      allocated = sNode.getAllocatedResource().getMemorySize();
-                      total = sNode.getTotalResource().getMemorySize();
-                    } else if (resourceType.equals("vcores")) {
-                      allocated =
-                          sNode.getAllocatedResource().getVirtualCores();
-                      total =
-                          sNode.getTotalResource().getVirtualCores();
-                    }
-                    float usedPct = allocated * 100f / total;
-                    if (range.getLowerLimit() <= usedPct
-                        && usedPct <= range.getUpperLimit()) {
-                      count++;
-                    }
-                  }
-                  return count;
-                }
-              }
-            }
-        );
-      }
-    } catch (Exception e) {
-      LOG.error("Caught exception while registering nodes usage metrics", e);
-      throw e;
-    } finally {
-      samplerLock.unlock();
-    }
-  }
-
-  private void initMetricsCSVOutput() {
-    int timeIntervalMS = conf.getInt(
-        SLSConfiguration.METRICS_RECORD_INTERVAL_MS,
-        SLSConfiguration.METRICS_RECORD_INTERVAL_MS_DEFAULT);
-    File dir = new File(metricsOutputDir + "/metrics");
-    if(!dir.exists() && !dir.mkdirs()) {
-      LOG.error("Cannot create directory {}", dir.getAbsoluteFile());
-    }
-    final CsvReporter reporter = CsvReporter.forRegistry(metrics)
-        .formatFor(Locale.US)
-        .convertRatesTo(TimeUnit.SECONDS)
-        .convertDurationsTo(TimeUnit.MILLISECONDS)
-        .build(new File(metricsOutputDir + "/metrics"));
-    reporter.start(timeIntervalMS, TimeUnit.MILLISECONDS);
-  }
-
-  boolean isRunning() {
-    return running;
-  }
-
-  void setRunning(boolean running) {
-    this.running = running;
-  }
-
-  class HistogramsRunnable implements Runnable {
-    @Override
-    public void run() {
-      samplerLock.lock();
-      try {
-        for (Histogram histogram : schedulerHistogramList) {
-          Timer timer = histogramTimerMap.get(histogram);
-          histogram.update((int) timer.getSnapshot().getMean());
-        }
-      } finally {
-        samplerLock.unlock();
-      }
-    }
-  }
-
-  class MetricsLogRunnable implements Runnable {
-    private boolean firstLine = true;
-
-    MetricsLogRunnable() {
-      try {
-        metricsLogBW =
-            new BufferedWriter(new OutputStreamWriter(new FileOutputStream(
-                metricsOutputDir + "/realtimetrack.json"), StandardCharsets.UTF_8));
-        metricsLogBW.write("[");
-      } catch (IOException e) {
-        LOG.info(e.getMessage());
-      }
-    }
-
-    @Override
-    public void run() {
-      SchedulerWrapper wrapper = (SchedulerWrapper) scheduler;
-      if(running && wrapper.getTracker().getQueueSet() != null) {
-        // all WebApp to get real tracking json
-        String trackingMetrics = web.generateRealTimeTrackingMetrics();
-        // output
-        try {
-          if(firstLine) {
-            metricsLogBW.write(trackingMetrics + EOL);
-            firstLine = false;
-          } else {
-            metricsLogBW.write("," + trackingMetrics + EOL);
-          }
-          metricsLogBW.flush();
-        } catch (IOException e) {
-          LOG.info(e.getMessage());
-        }
-      }
-    }
-  }
-
-  void tearDown() throws Exception {
-    setRunning(false);
-    LOG.info("Scheduler Metrics tears down");
-    if (metricsLogBW != null)  {
-      metricsLogBW.write("]");
-      metricsLogBW.close();
-      //metricsLogBW is nullified to prevent the usage after closing
-      metricsLogBW = null;
-    }
-
-    if (web != null) {
-      web.stop();
-    }
-
-    if (jobRuntimeLogBW != null) {
-      jobRuntimeLogBW.close();
-    }
-
-    if (pool != null) {
-      pool.shutdown();
-    }
-  }
-
-  void increaseSchedulerAllocationCounter() {
-    schedulerAllocateCounter.inc();
-  }
-
-  void increaseSchedulerCommitSuccessCounter() {
-    schedulerCommitSuccessCounter.inc();
-  }
-
-  void increaseSchedulerCommitFailureCounter() {
-    schedulerCommitFailureCounter.inc();
-  }
-
-  void increaseSchedulerHandleCounter(SchedulerEventType schedulerEventType) {
-    schedulerHandleCounter.inc();
-    schedulerHandleCounterMap.get(schedulerEventType).inc();
-  }
-
-  Timer getSchedulerAllocateTimer() {
-    return schedulerAllocateTimer;
-  }
-
-  Timer getSchedulerCommitSuccessTimer() {
-    return schedulerCommitSuccessTimer;
-  }
-
-  Timer getSchedulerCommitFailureTimer() {
-    return schedulerCommitFailureTimer;
-  }
-
-  Timer getSchedulerHandleTimer() {
-    return schedulerHandleTimer;
-  }
-
-  Timer getSchedulerHandleTimer(SchedulerEventType schedulerEventType) {
-    return schedulerHandleTimerMap.get(schedulerEventType);
-  }
-
-  private enum QueueMetric {
-    PENDING_MEMORY("pending.memory"),
-    PENDING_VCORES("pending.cores"),
-    ALLOCATED_MEMORY("allocated.memory"),
-    ALLOCATED_VCORES("allocated.cores");
-
-    private String value;
-
-    QueueMetric(String value) {
-      this.value = value;
-    }
-  }
-
-  private String getQueueMetricName(String queue, QueueMetric metric) {
-    return "counter.queue." + queue + "." + metric.value;
-  }
-
-  void updateQueueMetrics(Resource pendingResource, Resource allocatedResource,
-      String queueName) {
-    trackQueue(queueName);
-
-    SortedMap<String, Counter> counterMap = metrics.getCounters();
-    for(QueueMetric metric : QueueMetric.values()) {
-      String metricName = getQueueMetricName(queueName, metric);
-
-      if (metric == QueueMetric.PENDING_MEMORY) {
-        counterMap.get(metricName).inc(pendingResource.getMemorySize());
-      } else if (metric == QueueMetric.PENDING_VCORES) {
-        counterMap.get(metricName).inc(pendingResource.getVirtualCores());
-      } else if (metric == QueueMetric.ALLOCATED_MEMORY) {
-        counterMap.get(metricName).inc(allocatedResource.getMemorySize());
-      } else if (metric == QueueMetric.ALLOCATED_VCORES){
-        counterMap.get(metricName).inc(allocatedResource.getVirtualCores());
-      }
-    }
-  }
-
-  void updateQueueMetricsByRelease(Resource releaseResource, String queue) {
-    SortedMap<String, Counter> counterMap = metrics.getCounters();
-    String name = getQueueMetricName(queue, QueueMetric.ALLOCATED_MEMORY);
-    if (!counterMap.containsKey(name)) {
-      metrics.counter(name);
-      counterMap = metrics.getCounters();
-    }
-    counterMap.get(name).inc(-releaseResource.getMemorySize());
-
-    String vcoreMetric =
-        getQueueMetricName(queue, QueueMetric.ALLOCATED_VCORES);
-    if (!counterMap.containsKey(vcoreMetric)) {
-      metrics.counter(vcoreMetric);
-      counterMap = metrics.getCounters();
-    }
-    counterMap.get(vcoreMetric).inc(-releaseResource.getVirtualCores());
-  }
-
-  public void addTrackedApp(ApplicationId appId,
-      String oldAppId) {
-    trackApp(appId, oldAppId);
-  }
-
-  public void removeTrackedApp(String oldAppId) {
-    untrackApp(oldAppId);
-  }
-
-  public void addAMRuntime(ApplicationId appId, long traceStartTimeMS,
-      long traceEndTimeMS, long simulateStartTimeMS, long simulateEndTimeMS) {
-    try {
-      // write job runtime information
-      String runtimeInfo = appId + "," + traceStartTimeMS + "," +
-          traceEndTimeMS + "," + simulateStartTimeMS +
-          "," + simulateEndTimeMS;
-      jobRuntimeLogBW.write(runtimeInfo + EOL);
-      jobRuntimeLogBW.flush();
-    } catch (IOException e) {
-      LOG.info(e.getMessage());
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerWrapper.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerWrapper.java
deleted file mode 100644
index cc9844a8f2a..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerWrapper.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.api.records.SchedulingRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.Allocation;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEvent;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-
-import java.util.List;
-
-@Private
-@Unstable
-public interface SchedulerWrapper {
-  SchedulerMetrics getSchedulerMetrics();
-
-  Tracker getTracker();
-
-  String getRealQueueName(String queue) throws YarnException;
-
-  void propagatedHandle(SchedulerEvent schedulerEvent);
-
-  Allocation allocatePropagated(ApplicationAttemptId attemptId,
-      List<ResourceRequest> resourceRequests,
-      List<SchedulingRequest> schedulingRequests,
-      List<ContainerId> containerIds,
-      List<String> blacklistAdditions,
-      List<String> blacklistRemovals,
-      ContainerUpdates updateRequests);
-
-  void setSLSRunner(SLSRunner runner);
-
-  SLSRunner getSLSRunner();
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/TaskRunner.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/TaskRunner.java
deleted file mode 100644
index 167845522b0..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/TaskRunner.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import java.text.MessageFormat;
-import java.util.Queue;
-import java.util.concurrent.DelayQueue;
-import java.util.concurrent.Delayed;
-import java.util.concurrent.ThreadPoolExecutor;
-import java.util.concurrent.TimeUnit;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public class TaskRunner {
-  private static final Logger LOG = LoggerFactory.getLogger(TaskRunner.class);
-
-  @Private
-  @Unstable
-  public abstract static class Task implements Runnable, Delayed {
-    private long start;
-    private long end;
-    private long nextRun;
-    private long startTime;
-    private long endTime;
-    private long repeatInterval;
-    private Queue<Task> queue;
-
-    public Task(){}
-    
-    //values in milliseconds, start/end are milliseconds from now
-    public void init(long startTime, long endTime, long repeatInterval) {
-      if (endTime - startTime < 0) {
-        throw new IllegalArgumentException(MessageFormat.format(
-          "endTime[{0}] cannot be smaller than startTime[{1}]", endTime, 
-          startTime));
-      }
-      if (repeatInterval < 0) {
-        throw new IllegalArgumentException(MessageFormat.format(
-          "repeatInterval[{0}] cannot be less than 1", repeatInterval));
-      }
-      if ((endTime - startTime) % repeatInterval != 0) {
-        throw new IllegalArgumentException(MessageFormat.format(
-          "Invalid parameters: (endTime[{0}] - startTime[{1}]) " +
-                  "% repeatInterval[{2}] != 0",
-          endTime, startTime, repeatInterval));        
-      }
-      start = startTime;
-      end = endTime;
-      this.repeatInterval = repeatInterval;
-    }
-
-    private void timeRebase(long now) {
-      startTime = now + start;
-      endTime = now + end;
-      this.nextRun = startTime;
-    }
-    
-    //values in milliseconds, start is milliseconds from now
-    //it only executes firstStep()
-    public void init(long startTime) {
-      init(startTime, startTime, 1);
-    }
-
-    private void setQueue(Queue<Task> queue) {
-      this.queue = queue;
-    }
-
-    @Override
-    public final void run() {
-      try {
-        if (nextRun == startTime) {
-          firstStep();
-          nextRun += repeatInterval;
-          if (nextRun <= endTime) {
-            queue.add(this);          
-          }
-        } else if (nextRun < endTime) {
-          middleStep();
-          nextRun += repeatInterval;
-          queue.add(this);
-        } else {
-          lastStep();
-        }
-      } catch (Exception e) {
-        LOG.error("Caught exception while executing Taskrunner", e);
-        Thread.getDefaultUncaughtExceptionHandler()
-            .uncaughtException(Thread.currentThread(), e);
-      }
-    }
-
-    @Override
-    public long getDelay(TimeUnit unit) {
-      return unit.convert(nextRun - System.currentTimeMillis(),
-        TimeUnit.MILLISECONDS);
-    }
-
-    @Override
-    public int compareTo(Delayed o) {
-      if (!(o instanceof Task)) {
-        throw new IllegalArgumentException("Parameter must be a Task instance");
-      }
-      Task other = (Task) o;
-      return (int) Math.signum(nextRun - other.nextRun);
-    }
-
-
-    public abstract void firstStep() throws Exception;
-
-    public abstract void middleStep() throws Exception;
-
-    public abstract void lastStep() throws Exception;
-
-    public void setEndTime(long et) {
-      endTime = et;
-    }
-  }
-
-  private DelayQueue queue;
-  private int threadPoolSize;
-  private ThreadPoolExecutor executor;
-  private long startTimeMS = 0;
-  
-  public TaskRunner() {
-    queue = new DelayQueue();
-  }
-
-  public void setQueueSize(int threadPoolSize) {
-    this.threadPoolSize = threadPoolSize;
-  }
-
-  @SuppressWarnings("unchecked")
-  public void start() {
-    if (executor != null && !executor.isTerminated()) {
-      throw new IllegalStateException("Executor already running");
-    }
-    DelayQueue preStartQueue = queue;
-
-    queue = new DelayQueue();
-    executor = new ThreadPoolExecutor(threadPoolSize, threadPoolSize, 0,
-      TimeUnit.MILLISECONDS, queue);
-    executor.prestartAllCoreThreads();
-
-    startTimeMS = System.currentTimeMillis();
-    for (Object d : preStartQueue) {
-      schedule((Task) d, startTimeMS);
-    }
-  }
-  
-  public void stop() throws InterruptedException {
-    executor.shutdownNow();
-    executor.awaitTermination(20, TimeUnit.SECONDS);
-  }
-
-  @SuppressWarnings("unchecked")
-  private void schedule(Task task, long timeNow) {
-    task.timeRebase(timeNow);
-    task.setQueue(queue);
-    queue.add(task);
-  }
-
-  public void schedule(Task task) {
-    schedule(task, System.currentTimeMillis());
-  }
-
-  public long getStartTimeMS() {
-    return this.startTimeMS;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/Tracker.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/Tracker.java
deleted file mode 100644
index 42a5c3c894d..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/Tracker.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-
-import java.util.Set;
-
-@Private
-@Unstable
-public class Tracker {
-  private Set<String> queueSet;
-  private Set<String> trackedAppSet;
-
-  public void setQueueSet(Set<String> queues) {
-    queueSet = queues;
-  }
-
-  public Set<String> getQueueSet() {
-    return queueSet;
-  }
-
-  public void setTrackedAppSet(Set<String> apps) {
-    trackedAppSet = apps;
-  }
-
-  public Set<String> getTrackedAppSet() {
-    return trackedAppSet;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthJob.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthJob.java
deleted file mode 100644
index eea0a8b6426..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthJob.java
+++ /dev/null
@@ -1,377 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.synthetic;
-
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.commons.math3.random.JDKRandomGenerator;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.mapred.JobConf;
-import org.apache.hadoop.mapred.TaskStatus.State;
-import org.apache.hadoop.mapreduce.InputSplit;
-import org.apache.hadoop.mapreduce.JobID;
-import org.apache.hadoop.mapreduce.TaskType;
-import org.apache.hadoop.tools.rumen.JobStory;
-import org.apache.hadoop.tools.rumen.MapTaskAttemptInfo;
-import org.apache.hadoop.tools.rumen.ReduceTaskAttemptInfo;
-import org.apache.hadoop.tools.rumen.TaskAttemptInfo;
-import org.apache.hadoop.tools.rumen.TaskInfo;
-import org.apache.hadoop.tools.rumen.Pre21JobHistoryConstants.Values;
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.yarn.sls.appmaster.MRAMSimulator;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.atomic.AtomicInteger;
-
-import static java.util.concurrent.TimeUnit.MILLISECONDS;
-import static java.util.concurrent.TimeUnit.SECONDS;
-import static org.apache.hadoop.mapreduce.MRJobConfig.QUEUE_NAME;
-
-/**
- * Generates random task data for a synthetic job.
- */
-public class SynthJob implements JobStory {
-
-  @SuppressWarnings("StaticVariableName")
-  private static Logger LOG = LoggerFactory.getLogger(SynthJob.class);
-
-  private static final long MIN_MEMORY = 1024;
-  private static final long MIN_VCORES = 1;
-
-  private final Configuration conf;
-  private final int id;
-
-  @SuppressWarnings("ConstantName")
-  private static final AtomicInteger sequence = new AtomicInteger(0);
-  private final String name;
-  private final String queueName;
-  private final SynthTraceJobProducer.JobDefinition jobDef;
-
-  private String type;
-
-  // job timing
-  private final long submitTime;
-  private final long duration;
-  private final long deadline;
-
-  private Map<String, String> params;
-
-  private long totalSlotTime = 0;
-
-  // task information
-  private List<SynthTask> tasks = new ArrayList<>();
-  private Map<String, List<SynthTask>> taskByType = new HashMap<>();
-  private Map<String, Integer> taskCounts = new HashMap<>();
-  private Map<String, Long> taskMemory = new HashMap<>();
-  private Map<String, Long> taskVcores = new HashMap<>();
-
-  /**
-   * Nested class used to represent a task instance in a job. Each task
-   * corresponds to one container allocation for the job.
-   */
-  public static final class SynthTask{
-    private String type;
-    private long time;
-    private long maxMemory;
-    private long maxVcores;
-    private int priority;
-    private ExecutionType executionType;
-
-    private SynthTask(String type, long time, long maxMemory, long maxVcores,
-        int priority, ExecutionType executionType){
-      this.type = type;
-      this.time = time;
-      this.maxMemory = maxMemory;
-      this.maxVcores = maxVcores;
-      this.priority = priority;
-      this.executionType = executionType;
-    }
-
-    public String getType(){
-      return type;
-    }
-
-    public long getTime(){
-      return time;
-    }
-
-    public long getMemory(){
-      return maxMemory;
-    }
-
-    public long getVcores(){
-      return maxVcores;
-    }
-
-    public int getPriority(){
-      return priority;
-    }
-
-    public ExecutionType getExecutionType() {
-      return executionType;
-    }
-
-    @Override
-    public String toString(){
-      return String.format("[task]\ttype: %1$-10s\ttime: %2$3s\tmemory: "
-              + "%3$4s\tvcores: %4$2s\texecution_type: %5$-10s%n", getType(),
-          getTime(), getMemory(), getVcores(), getExecutionType().toString());
-    }
-  }
-
-
-  protected SynthJob(JDKRandomGenerator rand, Configuration conf,
-      SynthTraceJobProducer.JobDefinition jobDef,
-      String queue, long actualSubmissionTime) {
-
-    this.conf = conf;
-    this.jobDef = jobDef;
-
-    this.queueName = queue;
-
-    this.duration = MILLISECONDS.convert(jobDef.duration.getInt(),
-        SECONDS);
-
-    boolean hasDeadline =
-        (rand.nextDouble() <= jobDef.reservation.getDouble());
-
-    double deadlineFactorSample = jobDef.deadline_factor.getDouble();
-
-    this.type = jobDef.type;
-
-    this.submitTime = MILLISECONDS.convert(actualSubmissionTime, SECONDS);
-
-    this.deadline =
-        hasDeadline ? MILLISECONDS.convert(actualSubmissionTime, SECONDS)
-            + (long) Math.ceil(deadlineFactorSample * duration) : -1;
-
-    this.params = jobDef.params;
-
-    conf.set(QUEUE_NAME, queueName);
-
-    // name and initialize job randomness
-    final long seed = rand.nextLong();
-    rand.setSeed(seed);
-    id = sequence.getAndIncrement();
-
-    name = String.format(jobDef.class_name + "_%06d", id);
-    LOG.debug(name + " (" + seed + ")");
-
-    LOG.info("JOB TIMING`: job: " + name + " submission:" + submitTime
-        + " deadline:" + deadline + " duration:" + duration
-        + " deadline-submission: " + (deadline - submitTime));
-
-    // Expand tasks
-    for(SynthTraceJobProducer.TaskDefinition task : jobDef.tasks){
-      int num = task.count.getInt();
-      String taskType = task.type;
-      long memory = task.max_memory.getLong();
-      memory = Math.max(memory, MIN_MEMORY);
-      long vcores = task.max_vcores.getLong();
-      vcores = Math.max(vcores, MIN_VCORES);
-      int priority = task.priority;
-      ExecutionType executionType = task.executionType == null
-          ? ExecutionType.GUARANTEED
-          : ExecutionType.valueOf(task.executionType);
-
-      // Save task information by type
-      taskByType.put(taskType, new ArrayList<>());
-      taskCounts.put(taskType, num);
-      taskMemory.put(taskType, memory);
-      taskVcores.put(taskType, vcores);
-
-      for(int i = 0; i < num; ++i){
-        long time = task.time.getLong();
-        totalSlotTime += time;
-        SynthTask t = new SynthTask(taskType, time, memory, vcores,
-            priority, executionType);
-        tasks.add(t);
-        taskByType.get(taskType).add(t);
-      }
-    }
-
-  }
-
-  public String getType(){
-    return type;
-  }
-
-  public List<SynthTask> getTasks(){
-    return tasks;
-  }
-
-  public boolean hasDeadline() {
-    return deadline > 0;
-  }
-
-  public String getName() {
-    return name;
-  }
-
-  public String getUser() {
-    return jobDef.user_name;
-  }
-
-  public JobID getJobID() {
-    return new JobID("job_mock_" + name, id);
-  }
-
-  public long getSubmissionTime() {
-    return submitTime;
-  }
-
-  public String getQueueName() {
-    return queueName;
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    String res = "\nSynthJob [" + jobDef.class_name + "]: \n"
-        + "\tname: " + getName() + "\n"
-        + "\ttype: " + getType() + "\n"
-        + "\tid: " + id + "\n"
-        + "\tqueue: " + getQueueName() + "\n"
-        + "\tsubmission: " + getSubmissionTime() + "\n"
-        + "\tduration: " + getDuration() + "\n"
-        + "\tdeadline: " + getDeadline() + "\n";
-    sb.append(res);
-    int taskno = 0;
-    for(SynthJob.SynthTask t : getTasks()){
-      sb.append("\t");
-      sb.append(taskno);
-      sb.append(": \t");
-      sb.append(t.toString());
-      taskno++;
-    }
-    return sb.toString();
-  }
-
-  public long getTotalSlotTime() {
-    return totalSlotTime;
-  }
-
-  public long getDuration() {
-    return duration;
-  }
-
-  public long getDeadline() {
-    return deadline;
-  }
-
-  public Map<String, String> getParams() {
-    return params;
-  }
-
-  @Override
-  public boolean equals(Object other) {
-    if (!(other instanceof SynthJob)) {
-      return false;
-    }
-    SynthJob o = (SynthJob) other;
-    return tasks.equals(o.tasks)
-        && submitTime == o.submitTime
-        && type.equals(o.type)
-        && queueName.equals(o.queueName)
-        && jobDef.class_name.equals(o.jobDef.class_name);
-  }
-
-  @Override
-  public int hashCode() {
-    return jobDef.class_name.hashCode()
-        * (int) submitTime * (int) duration;
-  }
-
-
-  @Override
-  public JobConf getJobConf() {
-    return new JobConf(conf);
-  }
-
-  @Override
-  public int getNumberMaps() {
-    return taskCounts.get(MRAMSimulator.MAP_TYPE);
-  }
-
-  @Override
-  public int getNumberReduces() {
-    return taskCounts.get(MRAMSimulator.REDUCE_TYPE);
-  }
-
-  @Override
-  public InputSplit[] getInputSplits() {
-    throw new UnsupportedOperationException();
-  }
-
-  @Override
-  public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {
-    switch(taskType){
-    case MAP:
-      return new TaskInfo(-1, -1, -1, -1,
-          taskMemory.get(MRAMSimulator.MAP_TYPE),
-          taskVcores.get(MRAMSimulator.MAP_TYPE));
-    case REDUCE:
-      return new TaskInfo(-1, -1, -1, -1,
-          taskMemory.get(MRAMSimulator.REDUCE_TYPE),
-          taskVcores.get(MRAMSimulator.REDUCE_TYPE));
-    default:
-      break;
-    }
-    throw new UnsupportedOperationException();
-  }
-
-  @Override
-  public TaskAttemptInfo getTaskAttemptInfo(TaskType taskType, int taskNumber,
-      int taskAttemptNumber) {
-    switch (taskType) {
-    case MAP:
-      return new MapTaskAttemptInfo(State.SUCCEEDED,
-          getTaskInfo(taskType, taskNumber),
-          taskByType.get(MRAMSimulator.MAP_TYPE).get(taskNumber).time,
-          null);
-    case REDUCE:
-      // We assume uniform split between pull/sort/reduce
-      // aligned with naive progress reporting assumptions
-      return new ReduceTaskAttemptInfo(State.SUCCEEDED,
-          getTaskInfo(taskType, taskNumber),
-          taskByType.get(MRAMSimulator.MAP_TYPE)
-              .get(taskNumber).time / 3,
-          taskByType.get(MRAMSimulator.MAP_TYPE)
-              .get(taskNumber).time / 3,
-          taskByType.get(MRAMSimulator.MAP_TYPE)
-              .get(taskNumber).time / 3, null);
-    default:
-      break;
-    }
-    throw new UnsupportedOperationException();
-  }
-
-  @Override
-  public TaskAttemptInfo getMapTaskAttemptInfoAdjusted(int taskNumber,
-      int taskAttemptNumber, int locality) {
-    throw new UnsupportedOperationException();
-  }
-
-  @Override
-  public Values getOutcome() {
-    return Values.SUCCESS;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthTraceJobProducer.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthTraceJobProducer.java
deleted file mode 100644
index 18b1c034bdf..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthTraceJobProducer.java
+++ /dev/null
@@ -1,665 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- * <p/>
- * http://www.apache.org/licenses/LICENSE-2.0
- * <p/>
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.synthetic;
-
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.core.JsonFactory;
-import com.fasterxml.jackson.core.JsonFactoryBuilder;
-import com.fasterxml.jackson.core.JsonParser;
-import com.fasterxml.jackson.databind.JsonMappingException;
-import com.fasterxml.jackson.databind.ObjectMapper;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.commons.math3.distribution.AbstractRealDistribution;
-import org.apache.commons.math3.random.JDKRandomGenerator;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.FSDataInputStream;
-import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.tools.rumen.JobStory;
-import org.apache.hadoop.tools.rumen.JobStoryProducer;
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
-import org.apache.hadoop.yarn.sls.appmaster.MRAMSimulator;
-
-import javax.xml.bind.annotation.XmlRootElement;
-import java.io.IOException;
-import java.util.*;
-import java.util.concurrent.atomic.AtomicInteger;
-
-import static com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;
-
-/**
- * This is a JobStoryProducer that operates from distribution of different
- * workloads. The .json input file is used to determine how many weight, which
- * size, number of maps/reducers and their duration, as well as the temporal
- * distributed of submissions. For each parameter we control avg and stdev, and
- * generate values via normal or log-normal distributions.
- */
-public class SynthTraceJobProducer implements JobStoryProducer {
-
-  @SuppressWarnings("StaticVariableName")
-  private static final Logger LOG = LoggerFactory.getLogger(SynthTraceJobProducer.class);
-
-  private final Configuration conf;
-  private final AtomicInteger numJobs;
-  private final Trace trace;
-  private final long seed;
-
-  private int totalWeight;
-
-  private final Queue<StoryParams> listStoryParams;
-
-  private final JDKRandomGenerator rand;
-
-  public static final String SLS_SYNTHETIC_TRACE_FILE =
-      "sls.synthetic" + ".trace_file";
-
-  private final static int DEFAULT_MAPPER_PRIORITY = 20;
-  private final static int DEFAULT_REDUCER_PRIORITY = 10;
-
-  public SynthTraceJobProducer(Configuration conf) throws IOException {
-    this(conf, new Path(conf.get(SLS_SYNTHETIC_TRACE_FILE)));
-  }
-
-  public SynthTraceJobProducer(Configuration conf, Path path)
-      throws IOException {
-
-    LOG.info("SynthTraceJobProducer");
-
-    this.conf = conf;
-    this.rand = new JDKRandomGenerator();
-
-    JsonFactoryBuilder jsonFactoryBuilder = new JsonFactoryBuilder();
-    jsonFactoryBuilder.configure(JsonFactory.Feature.INTERN_FIELD_NAMES, true);
-    ObjectMapper mapper = new ObjectMapper(jsonFactoryBuilder.build());
-    mapper.configure(FAIL_ON_UNKNOWN_PROPERTIES, false);
-
-    FileSystem ifs = path.getFileSystem(conf);
-    FSDataInputStream fileIn = ifs.open(path);
-
-    // Initialize the random generator and the seed
-    this.trace = mapper.readValue(fileIn.getWrappedStream(), Trace.class);
-    this.seed = trace.rand_seed;
-    this.rand.setSeed(seed);
-    // Initialize the trace
-    this.trace.init(rand);
-
-    this.numJobs = new AtomicInteger(trace.num_jobs);
-
-    for (Double w : trace.workload_weights) {
-      totalWeight += w;
-    }
-
-    // Initialize our story parameters
-    listStoryParams = createStory();
-
-    LOG.info("Generated " + listStoryParams.size() + " deadlines for "
-        + this.numJobs.get() + " jobs");
-  }
-
-  // StoryParams hold the minimum amount of information needed to completely
-  // specify a job run: job definition, start time, and queue.
-  // This allows us to create "jobs" and then order them according to start time
-  static class StoryParams {
-    // Time the job gets submitted to
-    private long actualSubmissionTime;
-    // The queue the job gets submitted to
-    private String queue;
-    // Definition to construct the job from
-    private JobDefinition jobDef;
-
-    StoryParams(long actualSubmissionTime, String queue, JobDefinition jobDef) {
-      this.actualSubmissionTime = actualSubmissionTime;
-      this.queue = queue;
-      this.jobDef = jobDef;
-    }
-  }
-
-
-  private Queue<StoryParams> createStory() {
-    // create priority queue to keep start-time sorted
-    Queue<StoryParams> storyQueue =
-        new PriorityQueue<>(this.numJobs.get(), new Comparator<StoryParams>() {
-          @Override
-          public int compare(StoryParams o1, StoryParams o2) {
-            return Math
-                .toIntExact(o1.actualSubmissionTime - o2.actualSubmissionTime);
-          }
-        });
-    for (int i = 0; i < numJobs.get(); i++) {
-      // Generate a workload
-      Workload wl = trace.generateWorkload();
-      // Save all the parameters needed to completely define a job
-      long actualSubmissionTime = wl.generateSubmissionTime();
-      String queue = wl.queue_name;
-      JobDefinition job = wl.generateJobDefinition();
-      storyQueue.add(new StoryParams(actualSubmissionTime, queue, job));
-    }
-    return storyQueue;
-  }
-
-  @Override
-  public JobStory getNextJob() throws IOException {
-    if (numJobs.decrementAndGet() < 0) {
-      return null;
-    }
-    StoryParams storyParams = listStoryParams.poll();
-    return new SynthJob(rand, conf, storyParams.jobDef, storyParams.queue,
-        storyParams.actualSubmissionTime);
-  }
-
-  @Override
-  public void close(){
-  }
-
-  @Override
-  public String toString() {
-    return "SynthTraceJobProducer [ conf=" + conf + ", numJobs=" + numJobs
-        + ", r=" + rand + ", totalWeight="
-        + totalWeight + ", workloads=" + trace.workloads + "]";
-  }
-
-  public int getNumJobs() {
-    return trace.num_jobs;
-  }
-
-  // Helper to parse and maintain backwards compatibility with
-  // syn json formats
-  private static void validateJobDef(JobDefinition jobDef){
-    if(jobDef.tasks == null) {
-      LOG.info("Detected old JobDefinition format. Converting.");
-      try {
-        jobDef.tasks = new ArrayList<>();
-        jobDef.type = "mapreduce";
-        jobDef.deadline_factor = new Sample(jobDef.deadline_factor_avg,
-            jobDef.deadline_factor_stddev);
-        jobDef.duration = new Sample(jobDef.dur_avg,
-            jobDef.dur_stddev);
-        jobDef.reservation = new Sample(jobDef.chance_of_reservation);
-
-        TaskDefinition map = new TaskDefinition();
-        map.type = MRAMSimulator.MAP_TYPE;
-        map.count = new Sample(jobDef.mtasks_avg, jobDef.mtasks_stddev);
-        map.time = new Sample(jobDef.mtime_avg, jobDef.mtime_stddev);
-        map.max_memory = new Sample((double) jobDef.map_max_memory_avg,
-            jobDef.map_max_memory_stddev);
-        map.max_vcores = new Sample((double) jobDef.map_max_vcores_avg,
-            jobDef.map_max_vcores_stddev);
-        map.priority = DEFAULT_MAPPER_PRIORITY;
-        map.executionType = jobDef.map_execution_type;
-
-        jobDef.tasks.add(map);
-        TaskDefinition reduce = new TaskDefinition();
-        reduce.type = MRAMSimulator.REDUCE_TYPE;
-        reduce.count = new Sample(jobDef.rtasks_avg, jobDef.rtasks_stddev);
-        reduce.time = new Sample(jobDef.rtime_avg, jobDef.rtime_stddev);
-        reduce.max_memory = new Sample((double) jobDef.reduce_max_memory_avg,
-            jobDef.reduce_max_memory_stddev);
-        reduce.max_vcores = new Sample((double) jobDef.reduce_max_vcores_avg,
-            jobDef.reduce_max_vcores_stddev);
-        reduce.priority = DEFAULT_REDUCER_PRIORITY;
-        reduce.executionType = jobDef.reduce_execution_type;
-
-        jobDef.tasks.add(reduce);
-      } catch (JsonMappingException e) {
-        LOG.warn("Error converting old JobDefinition format", e);
-      }
-    }
-  }
-
-  public long getSeed() {
-    return seed;
-  }
-
-  public int getNodesPerRack() {
-    return trace.nodes_per_rack < 1 ? 1: trace.nodes_per_rack;
-  }
-
-  public int getNumNodes() {
-    return trace.num_nodes;
-  }
-
-  /**
-   * Class used to parse a trace configuration file.
-   */
-  @SuppressWarnings({ "membername", "checkstyle:visibilitymodifier" })
-  @XmlRootElement
-  public static class Trace {
-    @JsonProperty("description")
-    String description;
-    @JsonProperty("num_nodes")
-    int num_nodes;
-    @JsonProperty("nodes_per_rack")
-    int nodes_per_rack;
-    @JsonProperty("num_jobs")
-    int num_jobs;
-
-    // in sec (selects a portion of time_distribution
-    @JsonProperty("rand_seed")
-    long rand_seed;
-    @JsonProperty("workloads")
-    List<Workload> workloads;
-
-    List<Double> workload_weights;
-    JDKRandomGenerator rand;
-
-    public void init(JDKRandomGenerator random){
-      this.rand = random;
-      // Pass rand forward
-      for(Workload w : workloads){
-        w.init(rand);
-      }
-      // Initialize workload weights
-      workload_weights = new ArrayList<>();
-      for(Workload w : workloads){
-        workload_weights.add(w.workload_weight);
-      }
-    }
-
-    Workload generateWorkload(){
-      return workloads.get(SynthUtils.getWeighted(workload_weights, rand));
-    }
-  }
-
-  /**
-   * Class used to parse a workload from file.
-   */
-  @SuppressWarnings({ "membername", "checkstyle:visibilitymodifier" })
-  public static class Workload {
-    @JsonProperty("workload_name")
-    String workload_name;
-    // used to change probability this workload is picked for each job
-    @JsonProperty("workload_weight")
-    double workload_weight;
-    @JsonProperty("queue_name")
-    String queue_name;
-    @JsonProperty("job_classes")
-    List<JobDefinition> job_classes;
-    @JsonProperty("time_distribution")
-    List<TimeSample> time_distribution;
-
-    JDKRandomGenerator rand;
-
-    List<Double> job_weights;
-    List<Double> time_weights;
-
-    public void init(JDKRandomGenerator random){
-      this.rand = random;
-      // Validate and pass rand forward
-      for(JobDefinition def : job_classes){
-        validateJobDef(def);
-        def.init(rand);
-      }
-
-      // Initialize job weights
-      job_weights = new ArrayList<>();
-      for(JobDefinition j : job_classes){
-        job_weights.add(j.class_weight);
-      }
-
-      // Initialize time weights
-      time_weights = new ArrayList<>();
-      for(TimeSample ts : time_distribution){
-        time_weights.add(ts.weight);
-      }
-    }
-
-    public long generateSubmissionTime(){
-      int index = SynthUtils.getWeighted(time_weights, rand);
-      // Retrieve the lower and upper bounds for this time "bucket"
-      int start = time_distribution.get(index).time;
-      // Get the beginning of the next time sample (if it exists)
-      index = (index+1)<time_distribution.size() ? index+1 : index;
-      int end = time_distribution.get(index).time;
-      int range = end-start;
-      // Within this time "bucket", uniformly pick a time if our
-      // range is non-zero, otherwise just use the start time of the bucket
-      return start + (range>0 ? rand.nextInt(range) : 0);
-    }
-
-    public JobDefinition generateJobDefinition(){
-      return job_classes.get(SynthUtils.getWeighted(job_weights, rand));
-    }
-
-    @Override
-    public String toString(){
-      return "\nWorkload " + workload_name + ", weight: " + workload_weight
-          + ", queue: " + queue_name + " "
-          + job_classes.toString().replace("\n", "\n\t");
-    }
-  }
-
-  /**
-   * Class used to parse a job class from file.
-   */
-  @SuppressWarnings({ "membername", "checkstyle:visibilitymodifier" })
-  public static class JobDefinition {
-
-    @JsonProperty("class_name")
-    String class_name;
-    @JsonProperty("user_name")
-    String user_name;
-
-    // used to change probability this class is chosen
-    @JsonProperty("class_weight")
-    double class_weight;
-
-    // am type to launch
-    @JsonProperty("type")
-    String type;
-    @JsonProperty("deadline_factor")
-    Sample deadline_factor;
-    @JsonProperty("duration")
-    Sample duration;
-    @JsonProperty("reservation")
-    Sample reservation;
-
-    @JsonProperty("tasks")
-    List<TaskDefinition> tasks;
-
-    @JsonProperty("params")
-    Map<String, String> params;
-
-    // Old JSON fields for backwards compatibility
-    // reservation related params
-    @JsonProperty("chance_of_reservation")
-    double chance_of_reservation;
-    @JsonProperty("deadline_factor_avg")
-    double deadline_factor_avg;
-    @JsonProperty("deadline_factor_stddev")
-    double deadline_factor_stddev;
-
-    // durations in sec
-    @JsonProperty("dur_avg")
-    double dur_avg;
-    @JsonProperty("dur_stddev")
-    double dur_stddev;
-    @JsonProperty("mtime_avg")
-    double mtime_avg;
-    @JsonProperty("mtime_stddev")
-    double mtime_stddev;
-    @JsonProperty("rtime_avg")
-    double rtime_avg;
-    @JsonProperty("rtime_stddev")
-    double rtime_stddev;
-
-    // number of tasks
-    @JsonProperty("mtasks_avg")
-    double mtasks_avg;
-    @JsonProperty("mtasks_stddev")
-    double mtasks_stddev;
-    @JsonProperty("rtasks_avg")
-    double rtasks_avg;
-    @JsonProperty("rtasks_stddev")
-    double rtasks_stddev;
-
-    // memory in MB
-    @JsonProperty("map_max_memory_avg")
-    long map_max_memory_avg;
-    @JsonProperty("map_max_memory_stddev")
-    double map_max_memory_stddev;
-    @JsonProperty("reduce_max_memory_avg")
-    long reduce_max_memory_avg;
-    @JsonProperty("reduce_max_memory_stddev")
-    double reduce_max_memory_stddev;
-
-    // vcores
-    @JsonProperty("map_max_vcores_avg")
-    long map_max_vcores_avg;
-    @JsonProperty("map_max_vcores_stddev")
-    double map_max_vcores_stddev;
-    @JsonProperty("reduce_max_vcores_avg")
-    long reduce_max_vcores_avg;
-    @JsonProperty("reduce_max_vcores_stddev")
-    double reduce_max_vcores_stddev;
-
-    //container execution type
-    @JsonProperty("map_execution_type")
-    String map_execution_type = ExecutionType.GUARANTEED.name();
-    @JsonProperty("reduce_execution_type")
-    String reduce_execution_type = ExecutionType.GUARANTEED.name();
-
-    public void init(JDKRandomGenerator rand){
-      deadline_factor.init(rand);
-      duration.init(rand);
-      reservation.init(rand);
-
-      for(TaskDefinition t : tasks){
-        t.count.init(rand);
-        t.time.init(rand);
-        t.max_memory.init(rand);
-        t.max_vcores.init(rand);
-      }
-    }
-
-    @Override
-    public String toString(){
-      return "\nJobDefinition " + class_name + ", weight: " + class_weight
-          + ", type: " + type + " "
-          + tasks.toString().replace("\n", "\n\t");
-    }
-  }
-
-  /**
-   * A task representing a type of container - e.g. "map" in mapreduce
-   */
-  @SuppressWarnings({ "membername", "checkstyle:visibilitymodifier" })
-  public static class TaskDefinition {
-
-    @JsonProperty("type")
-    String type;
-    @JsonProperty("count")
-    Sample count;
-    @JsonProperty("time")
-    Sample time;
-    @JsonProperty("max_memory")
-    Sample max_memory;
-    @JsonProperty("max_vcores")
-    Sample max_vcores;
-    @JsonProperty("priority")
-    int priority;
-    @JsonProperty("execution_type")
-    String executionType = ExecutionType.GUARANTEED.name();
-
-    @Override
-    public String toString(){
-      return "\nTaskDefinition " + type
-          + " Count[" + count + "] Time[" + time + "] Memory[" + max_memory
-          + "] Vcores[" + max_vcores + "] Priority[" + priority
-          + "] ExecutionType[" + executionType + "]";
-    }
-  }
-
-  /**
-   * Class used to parse value sample information.
-   */
-  @SuppressWarnings({ "membername", "checkstyle:visibilitymodifier" })
-  public static class Sample {
-    private static final Dist DEFAULT_DIST = Dist.LOGNORM;
-
-    private final double val;
-    private final double std;
-    private final Dist dist;
-    private AbstractRealDistribution dist_instance;
-    private final List<String> discrete;
-    private final List<Double> weights;
-    private final Mode mode;
-
-    private JDKRandomGenerator rand;
-
-    private enum Mode{
-      CONST,
-      DIST,
-      DISC
-    }
-
-    private enum Dist{
-      LOGNORM,
-      NORM
-    }
-
-    public Sample(Double val) throws JsonMappingException{
-      this(val, null);
-    }
-
-    public Sample(Double val, Double std) throws JsonMappingException{
-      this(val, std, null, null, null);
-    }
-
-    @JsonCreator
-    public Sample(@JsonProperty("val") Double val,
-        @JsonProperty("std") Double std, @JsonProperty("dist") String dist,
-        @JsonProperty("discrete") List<String> discrete,
-        @JsonProperty("weights") List<Double> weights)
-        throws JsonMappingException{
-      // Different Modes
-      // - Constant: val must be specified, all else null. Sampling will
-      // return val.
-      // - Distribution: val, std specified, dist optional (defaults to
-      // LogNormal). Sampling will sample from the appropriate distribution
-      // - Discrete: discrete must be set to a list of strings or numbers,
-      // weights optional (defaults to uniform)
-
-      if(val!=null){
-        if(std==null){
-          // Constant
-          if (dist != null || discrete != null || weights != null) {
-            throw JsonMappingException
-                .from((JsonParser) null, "Instantiation of " + Sample.class + " failed");
-          }
-          mode = Mode.CONST;
-          this.val = val;
-          this.std = 0;
-          this.dist = null;
-          this.discrete = null;
-          this.weights = null;
-        } else {
-          // Distribution
-          if (discrete != null || weights != null) {
-            throw JsonMappingException
-                .from((JsonParser) null, "Instantiation of " + Sample.class + " failed");
-          }
-          mode = Mode.DIST;
-          this.val = val;
-          this.std = std;
-          this.dist = dist!=null ? Dist.valueOf(dist) : DEFAULT_DIST;
-          this.discrete = null;
-          this.weights = null;
-        }
-      } else {
-        // Discrete
-        if (discrete == null) {
-          throw JsonMappingException
-              .from((JsonParser) null, "Instantiation of " + Sample.class + " failed");
-        }
-        mode = Mode.DISC;
-        this.val = 0;
-        this.std = 0;
-        this.dist = null;
-        this.discrete = discrete;
-        if(weights == null){
-          weights = new ArrayList<>(Collections.nCopies(
-              discrete.size(), 1.0));
-        }
-        if (weights.size() != discrete.size()) {
-          throw JsonMappingException
-              .from((JsonParser) null, "Instantiation of " + Sample.class + " failed");
-        }
-        this.weights = weights;
-      }
-    }
-
-    public void init(JDKRandomGenerator random){
-      if(this.rand != null){
-        throw new YarnRuntimeException("init called twice");
-      }
-      this.rand = random;
-      if(mode == Mode.DIST){
-        switch(this.dist){
-        case LOGNORM:
-          this.dist_instance = SynthUtils.getLogNormalDist(rand, val, std);
-          return;
-        case NORM:
-          this.dist_instance = SynthUtils.getNormalDist(rand, val, std);
-          return;
-        default:
-          throw new YarnRuntimeException("Unknown distribution " + dist.name());
-        }
-      }
-    }
-
-    public int getInt(){
-      return Math.toIntExact(getLong());
-    }
-
-    public long getLong(){
-      return Math.round(getDouble());
-    }
-
-    public double getDouble(){
-      return Double.parseDouble(getString());
-    }
-
-    public String getString(){
-      if(this.rand == null){
-        throw new YarnRuntimeException("getValue called without init");
-      }
-      switch(mode){
-      case CONST:
-        return Double.toString(val);
-      case DIST:
-        return Double.toString(dist_instance.sample());
-      case DISC:
-        return this.discrete.get(SynthUtils.getWeighted(this.weights, rand));
-      default:
-        throw new YarnRuntimeException("Unknown sampling mode " + mode.name());
-      }
-    }
-
-    @Override
-    public String toString(){
-      switch(mode){
-      case CONST:
-        return "value: " + val;
-      case DIST:
-        return "value: " + this.val + " std: " + this.std + " dist: "
-            + this.dist.name();
-      case DISC:
-        return "discrete: " + this.discrete + ", weights: " + this.weights;
-      default:
-        throw new YarnRuntimeException("Unknown sampling mode " + mode.name());
-      }
-    }
-
-  }
-
-  /**
-   * This is used to define time-varying probability of a job start-time (e.g.,
-   * to simulate daily patterns).
-   */
-  @SuppressWarnings({ "membername", "checkstyle:visibilitymodifier" })
-  public static class TimeSample {
-    // in sec
-    @JsonProperty("time")
-    int time;
-    @JsonProperty("weight")
-    double weight;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthUtils.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthUtils.java
deleted file mode 100644
index a7f8c7f1933..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthUtils.java
+++ /dev/null
@@ -1,101 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.synthetic;
-
-import org.apache.commons.math3.distribution.LogNormalDistribution;
-import org.apache.commons.math3.distribution.NormalDistribution;
-import org.apache.commons.math3.random.JDKRandomGenerator;
-
-import java.util.Collection;
-import java.util.Random;
-
-/**
- * Utils for the Synthetic generator.
- */
-public final class SynthUtils {
-
-  private SynthUtils(){
-    //class is not meant to be instantiated
-  }
-
-  public static int getWeighted(Collection<Double> weights, Random rr) {
-
-    double totalWeight = 0;
-    for (Double i : weights) {
-      totalWeight += i;
-    }
-
-    double rand = rr.nextDouble() * totalWeight;
-
-    double cur = 0;
-    int ind = 0;
-    for (Double i : weights) {
-      cur += i;
-      if (cur > rand) {
-        break;
-      }
-      ind++;
-    }
-
-    return ind;
-  }
-
-  public static NormalDistribution getNormalDist(JDKRandomGenerator rand,
-      double average, double stdDev) {
-
-    if (average <= 0) {
-      return null;
-    }
-
-    // set default for missing param
-    if (stdDev == 0) {
-      stdDev = average / 6;
-    }
-
-    NormalDistribution ret = new NormalDistribution(average, stdDev,
-        NormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
-    ret.reseedRandomGenerator(rand.nextLong());
-    return ret;
-  }
-
-  public static LogNormalDistribution getLogNormalDist(JDKRandomGenerator rand,
-      double mean, double stdDev) {
-
-    if (mean <= 0) {
-      return null;
-    }
-
-    // set default for missing param
-    if (stdDev == 0) {
-      stdDev = mean / 6;
-    }
-
-    // derive lognormal parameters for X = LogNormal(mu, sigma)
-    // sigma^2 = ln (1+Var[X]/(E[X])^2)
-    // mu = ln(E[X]) - 1/2 * sigma^2
-    double var = stdDev * stdDev;
-    double sigmasq = Math.log1p(var / (mean * mean));
-    double sigma = Math.sqrt(sigmasq);
-    double mu = Math.log(mean) - 0.5 * sigmasq;
-
-    LogNormalDistribution ret = new LogNormalDistribution(mu, sigma,
-        LogNormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
-    ret.reseedRandomGenerator(rand.nextLong());
-    return ret;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/package-info.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/package-info.java
deleted file mode 100644
index e06961069df..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/package-info.java
+++ /dev/null
@@ -1,22 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/**
- * Classes comprising the synthetic load generator for SLS.
- */
-package org.apache.hadoop.yarn.sls.synthetic;
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/NodeUsageRanges.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/NodeUsageRanges.java
deleted file mode 100644
index e7add944f46..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/NodeUsageRanges.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.utils;
-
-import java.util.LinkedHashSet;
-import java.util.Set;
-
-public final class NodeUsageRanges {
-  private NodeUsageRanges() {}
-
-  /**
-   * Class to store the keyword, lower-limit and upper-limit of a resource
-   * within the specified lower-limit (inclusive) and upper-limit (inclusive).
-   */
-  public static class Range {
-    private String keyword;
-    private float lowerLimit, upperLimit;
-    public Range(String keyword, float lowerLimit, float upperLimit) {
-      this.keyword = keyword;
-      this.lowerLimit = lowerLimit;
-      this.upperLimit = upperLimit;
-    }
-
-    public String getKeyword() {
-      return keyword;
-    }
-
-    public float getLowerLimit() {
-      return lowerLimit;
-    }
-
-    public float getUpperLimit() {
-      return upperLimit;
-    }
-  }
-
-  private static final Set<Range> RANGES;
-  static {
-    RANGES = new LinkedHashSet<>();
-    RANGES.add(new Range("unused", 0, 0));
-    RANGES.add(new Range("1to19pctUsed", 1, 19));
-    RANGES.add(new Range("20to39pctUsed", 20, 39));
-    RANGES.add(new Range("40to59pctUsed", 40, 59));
-    RANGES.add(new Range("60to79pctUsed", 60, 79));
-    RANGES.add(new Range("80to99pctUsed", 80, 99));
-    RANGES.add(new Range("full", 100, 100));
-  }
-
-  public static Set<Range> getRanges() {
-    return RANGES;
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java
deleted file mode 100644
index af0b4f6caf3..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java
+++ /dev/null
@@ -1,253 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.utils;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.io.Reader;
-
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import java.nio.file.StandardOpenOption;
-import java.util.ArrayList;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import com.fasterxml.jackson.core.JsonFactory;
-import com.fasterxml.jackson.databind.ObjectMapper;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.net.NodeBase;
-import org.apache.hadoop.tools.rumen.JobTraceReader;
-import org.apache.hadoop.tools.rumen.LoggedJob;
-import org.apache.hadoop.tools.rumen.LoggedTask;
-import org.apache.hadoop.tools.rumen.LoggedTaskAttempt;
-import org.apache.hadoop.yarn.api.records.NodeLabel;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceInformation;
-import org.apache.hadoop.yarn.client.util.YarnClientUtils;
-import org.apache.hadoop.yarn.sls.SLSRunner.NodeDetails;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.util.resource.ResourceUtils;
-import org.apache.hadoop.yarn.util.resource.Resources;
-
-@Private
-@Unstable
-public class SLSUtils {
-  private static final String LABEL_FORMAT_ERR_MSG =
-      "Input format for adding node-labels is not correct, it should be "
-          + "labelName1[(exclusive=true/false)],labelName2[] ..";
-
-  // hostname includes the network path and the host name. for example
-  // "/default-rack/hostFoo" or "/coreSwitchA/TORSwitchB/hostBar".
-  // the function returns two Strings, the first element is the network
-  // location without "/", the second element is the host name. for example,
-  // {"default-rack", "hostFoo"} or "coreSwitchA/TORSwitchB", "hostBar"
-  public static String[] getRackHostName(String hostname) {
-    NodeBase node = new NodeBase(hostname);
-    return new String[] {node.getNetworkLocation().substring(1),
-        node.getName()};
-  }
-
-  /**
-   * parse the rumen trace file, return each host name
-   */
-  public static Set<NodeDetails> parseNodesFromRumenTrace(
-      String jobTrace) throws IOException {
-    Set<NodeDetails> nodeSet = new HashSet<>();
-
-    File fin = new File(jobTrace);
-    Configuration conf = new Configuration();
-    conf.set("fs.defaultFS", "file:///");
-    JobTraceReader reader = new JobTraceReader(
-            new Path(fin.getAbsolutePath()), conf);
-    try {
-      LoggedJob job;
-      while ((job = reader.getNext()) != null) {
-        for(LoggedTask mapTask : job.getMapTasks()) {
-          // select the last attempt
-          if (mapTask.getAttempts().size() == 0) {
-            continue;
-          }
-          LoggedTaskAttempt taskAttempt = mapTask.getAttempts()
-                  .get(mapTask.getAttempts().size() - 1);
-          nodeSet.add(new NodeDetails(
-              taskAttempt.getHostName().getValue()));
-        }
-        for(LoggedTask reduceTask : job.getReduceTasks()) {
-          if (reduceTask.getAttempts().size() == 0) {
-            continue;
-          }
-          LoggedTaskAttempt taskAttempt = reduceTask.getAttempts()
-                  .get(reduceTask.getAttempts().size() - 1);
-          nodeSet.add(new NodeDetails(
-              taskAttempt.getHostName().getValue()));
-        }
-      }
-    } finally {
-      reader.close();
-    }
-
-    return nodeSet;
-  }
-
-  /**
-   * parse the sls trace file, return each host name
-   */
-  public static Set<NodeDetails> parseNodesFromSLSTrace(
-      String jobTrace) throws IOException {
-    Set<NodeDetails> nodeSet = new HashSet<>();
-    JsonFactory jsonF = new JsonFactory();
-    ObjectMapper mapper = new ObjectMapper();
-    Reader input =
-        new InputStreamReader(new FileInputStream(jobTrace), StandardCharsets.UTF_8);
-    try {
-      Iterator<Map> i = mapper.readValues(jsonF.createParser(input), Map.class);
-      while (i.hasNext()) {
-        addNodes(nodeSet, i.next());
-      }
-    } finally {
-      input.close();
-    }
-    return nodeSet;
-  }
-
-  private static void addNodes(Set<NodeDetails> nodeSet,
-      Map jsonEntry) {
-    if (jsonEntry.containsKey(SLSConfiguration.NUM_NODES)) {
-      int numNodes = Integer.parseInt(
-          jsonEntry.get(SLSConfiguration.NUM_NODES).toString());
-      int numRacks = 1;
-      if (jsonEntry.containsKey(SLSConfiguration.NUM_RACKS)) {
-        numRacks = Integer.parseInt(
-            jsonEntry.get(SLSConfiguration.NUM_RACKS).toString());
-      }
-      nodeSet.addAll(generateNodes(numNodes, numRacks));
-    }
-
-    if (jsonEntry.containsKey(SLSConfiguration.JOB_TASKS)) {
-      List tasks = (List) jsonEntry.get(SLSConfiguration.JOB_TASKS);
-      for (Object o : tasks) {
-        Map jsonTask = (Map) o;
-        String hostname = (String) jsonTask.get(SLSConfiguration.TASK_HOST);
-        if (hostname != null) {
-          nodeSet.add(new NodeDetails(hostname));
-        }
-      }
-    }
-  }
-
-  /**
-   * parse the input node file, return each host name
-   * sample input: label1(exclusive=true),label2(exclusive=false),label3
-   */
-  public static Set<NodeDetails> parseNodesFromNodeFile(
-      String nodeFile, Resource nmDefaultResource) throws IOException {
-    Set<NodeDetails> nodeSet = new HashSet<>();
-    JsonFactory jsonF = new JsonFactory();
-    ObjectMapper mapper = new ObjectMapper();
-    Reader input =
-        new InputStreamReader(new FileInputStream(nodeFile), StandardCharsets.UTF_8);
-    try {
-      Iterator<Map> i = mapper.readValues(jsonF.createParser(input), Map.class);
-      while (i.hasNext()) {
-        Map jsonE = i.next();
-        String rack = "/" + jsonE.get("rack");
-        List tasks = (List) jsonE.get("nodes");
-        for (Object o : tasks) {
-          Map jsonNode = (Map) o;
-          NodeDetails nodeDetails = new NodeDetails(
-              rack + "/" + jsonNode.get("node"));
-          Resource nodeResource = Resources.clone(nmDefaultResource);
-          ResourceInformation[] infors = ResourceUtils.getResourceTypesArray();
-          for (ResourceInformation info : infors) {
-            if (jsonNode.get(info.getName()) != null) {
-              nodeResource.setResourceValue(info.getName(),
-                  Integer.parseInt(jsonNode.get(info.getName()).toString()));
-            }
-          }
-          nodeDetails.setNodeResource(nodeResource);
-          if (jsonNode.get("labels") != null) {
-            Set<NodeLabel> nodeLabels =  new HashSet<>(
-                YarnClientUtils.buildNodeLabelsFromStr(
-                    jsonNode.get("labels").toString()));
-            nodeDetails.setLabels(nodeLabels);
-          }
-          nodeSet.add(nodeDetails);
-        }
-      }
-    } finally {
-      input.close();
-    }
-    return nodeSet;
-  }
-
-  public static Set<NodeDetails> generateNodes(int numNodes,
-      int numRacks){
-    Set<NodeDetails> nodeSet = new HashSet<>();
-    if (numRacks < 1) {
-      numRacks = 1;
-    }
-
-    if (numRacks > numNodes) {
-      numRacks = numNodes;
-    }
-
-    for (int i = 0; i < numNodes; i++) {
-      nodeSet.add(new NodeDetails(
-          "/rack" + i % numRacks + "/node" + i));
-    }
-    return nodeSet;
-  }
-
-  /**
-   * Generates a node to rack mapping file based on node details.
-   * This file is then being used by TableMapping to resolve rack names.
-   * The format required by TableMapping is a two column text file
-   * where first column specifies node name
-   * and second column specifies rack name.
-   * @param nodeDetails Set of node details.
-   * @param filePath File path where to write table mapping.
-   * @throws IOException
-   */
-  public static void generateNodeTableMapping(Set<NodeDetails> nodeDetails,
-      String filePath) throws IOException {
-    List<String> entries = new ArrayList<>();
-    for (NodeDetails nodeDetail : nodeDetails) {
-      if (nodeDetail.getHostname().contains("/")) {
-        String hostname = nodeDetail.getHostname();
-        int lIndex = hostname.lastIndexOf("/");
-        String node = hostname.substring(lIndex + 1);
-        String rack = hostname.substring(0, lIndex);
-        entries.add(node + " " + rack);
-      }
-    }
-    Files.write(Paths.get(filePath),
-        entries,
-        StandardCharsets.UTF_8,
-        StandardOpenOption.CREATE);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/package-info.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/package-info.java
deleted file mode 100644
index f6ccf720250..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * Utility classes for SLS.
- */
-package org.apache.hadoop.yarn.sls.utils;
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java b/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java
deleted file mode 100644
index ce36854bca2..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java
+++ /dev/null
@@ -1,651 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.web;
-
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.nio.charset.StandardCharsets;
-import java.text.MessageFormat;
-import java.util.HashMap;
-import java.util.Map;
-import java.util.Set;
-
-import javax.servlet.ServletException;
-import javax.servlet.http.HttpServlet;
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-
-import org.apache.commons.io.IOUtils;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Unstable;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.sls.scheduler.FairSchedulerMetrics;
-import org.apache.hadoop.yarn.sls.scheduler.SchedulerMetrics;
-import org.apache.hadoop.yarn.sls.scheduler.SchedulerWrapper;
-
-import org.apache.hadoop.yarn.sls.utils.NodeUsageRanges;
-import org.eclipse.jetty.http.MimeTypes;
-import org.eclipse.jetty.server.Handler;
-import org.eclipse.jetty.server.Request;
-import org.eclipse.jetty.server.Server;
-import org.eclipse.jetty.server.handler.AbstractHandler;
-import org.eclipse.jetty.server.handler.ResourceHandler;
-import com.codahale.metrics.Counter;
-import com.codahale.metrics.Gauge;
-import com.codahale.metrics.Histogram;
-import com.codahale.metrics.MetricRegistry;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-@Private
-@Unstable
-public class SLSWebApp extends HttpServlet {
-  private static final Logger LOG = LoggerFactory.getLogger(SLSWebApp.class);
-
-  private static final long serialVersionUID = 1905162041950251407L;
-  private transient Server server;
-  private transient SchedulerWrapper wrapper;
-  private transient MetricRegistry metrics;
-  private transient SchedulerMetrics schedulerMetrics;
-  // metrics objects
-  private transient Gauge jvmFreeMemoryGauge;
-  private transient Gauge jvmMaxMemoryGauge;
-  private transient Gauge jvmTotalMemoryGauge;
-  private transient Gauge numRunningAppsGauge;
-  private transient Gauge numRunningContainersGauge;
-  private transient Gauge allocatedMemoryGauge;
-  private transient Gauge allocatedVCoresGauge;
-  private transient Gauge availableMemoryGauge;
-  private transient Gauge availableVCoresGauge;
-  private transient Map<String, Gauge> perNodeUsageGaugeMap;
-  private transient Histogram allocateTimecostHistogram;
-  private transient Histogram commitSuccessTimecostHistogram;
-  private transient Histogram commitFailureTimecostHistogram;
-  private transient Histogram handleTimecostHistogram;
-  private transient Map<SchedulerEventType, Histogram>
-     handleOperTimecostHistogramMap;
-  private transient Map<String, Counter> queueAllocatedMemoryCounterMap;
-  private transient Map<String, Counter> queueAllocatedVCoresCounterMap;
-  private int port;
-  private int ajaxUpdateTimeMS = 1000;
-  // html page templates
-  private String simulateInfoTemplate;
-  private String simulateTemplate;
-  private String trackTemplate;
-
-  private transient Counter schedulerCommitSuccessCounter;
-  private transient Counter schedulerCommitFailureCounter;
-  private Long lastTrackingTime;
-  private Long lastSchedulerCommitSuccessCount;
-  private Long lastSchedulerCommitFailureCount;
-
-  {
-    // load templates
-    ClassLoader cl = Thread.currentThread().getContextClassLoader();
-    try {
-      simulateInfoTemplate = IOUtils.toString(
-          cl.getResourceAsStream("html/simulate.info.html.template"), StandardCharsets.UTF_8);
-      simulateTemplate = IOUtils.toString(
-          cl.getResourceAsStream("html/simulate.html.template"), StandardCharsets.UTF_8);
-      trackTemplate = IOUtils.toString(
-          cl.getResourceAsStream("html/track.html.template"), StandardCharsets.UTF_8);
-    } catch (IOException e) {
-      LOG.error("Caught exception while initializing templates", e);
-    }
-  }
-
-  private void readObject(ObjectInputStream in) throws IOException,
-      ClassNotFoundException {
-    in.defaultReadObject();
-    handleOperTimecostHistogramMap = new HashMap<>();
-    queueAllocatedMemoryCounterMap = new HashMap<>();
-    queueAllocatedVCoresCounterMap = new HashMap<>();
-  }
-
-  public SLSWebApp(SchedulerWrapper wrapper, int metricsAddressPort) {
-    this.wrapper = wrapper;
-    handleOperTimecostHistogramMap = new HashMap<>();
-    queueAllocatedMemoryCounterMap = new HashMap<>();
-    queueAllocatedVCoresCounterMap = new HashMap<>();
-    perNodeUsageGaugeMap = new HashMap<>();
-    schedulerMetrics = wrapper.getSchedulerMetrics();
-    metrics = schedulerMetrics.getMetrics();
-    port = metricsAddressPort;
-  }
-
-  public void start() throws Exception {
-    final ResourceHandler staticHandler = new ResourceHandler();
-    staticHandler.setMimeTypes(new MimeTypes());
-    String webRootDir = getClass().getClassLoader().getResource("html").
-        toExternalForm();
-    staticHandler.setResourceBase(webRootDir);
-    staticHandler.start();
-
-    Handler handler = new AbstractHandler() {
-      @Override
-      public void handle(String target, Request baseRequest,
-                         HttpServletRequest request,
-                         HttpServletResponse response)
-          throws IOException, ServletException {
-        try{
-          // timeunit
-          int timeunit = 1000;   // second, divide millionsecond / 1000
-          String timeunitLabel = "second";
-          if (request.getParameter("u")!= null &&
-                  request.getParameter("u").equalsIgnoreCase("m")) {
-            timeunit = 1000 * 60;
-            timeunitLabel = "minute";
-          }
-
-          // http request
-          if (target.equals("/")) {
-            printPageIndex(request, response);
-          } else if (target.equals("/simulate")) {
-            printPageSimulate(request, response, timeunit, timeunitLabel);
-          } else if (target.equals("/track")) {
-            printPageTrack(request, response, timeunit, timeunitLabel);
-          } else
-            // js/css request
-            if (target.startsWith("/js") || target.startsWith("/css")) {
-              response.setCharacterEncoding("utf-8");
-              staticHandler.handle(target, baseRequest, request, response);
-            } else
-              // json request
-              if (target.equals("/simulateMetrics")) {
-                printJsonMetrics(request, response);
-              } else if (target.equals("/trackMetrics")) {
-                printJsonTrack(request, response);
-              }
-        } catch (Exception e) {
-          LOG.error("Caught exception while starting SLSWebApp", e);
-        }
-      }
-    };
-
-    server = new Server(port);
-    server.setHandler(handler);
-
-    server.start();
-  }
-
-  public void stop() throws Exception {
-    if (server != null) {
-      server.stop();
-    }
-  }
-
-  /**
-   * index html page, show simulation info
-   * path ""
-   * @param request http request
-   * @param response http response
-   * @throws java.io.IOException
-   */
-  private void printPageIndex(HttpServletRequest request,
-                              HttpServletResponse response) throws IOException {
-    response.setContentType("text/html");
-    response.setStatus(HttpServletResponse.SC_OK);
-
-    String simulateInfo;
-    if (SLSRunner.getSimulateInfoMap().isEmpty()) {
-      String empty = "<tr><td colspan='2' align='center'>" +
-              "No information available</td></tr>";
-      simulateInfo = MessageFormat.format(simulateInfoTemplate, empty);
-    } else {
-      StringBuilder info = new StringBuilder();
-      for (Map.Entry<String, Object> entry :
-              SLSRunner.getSimulateInfoMap().entrySet()) {
-        info.append("<tr>");
-        info.append("<td class='td1'>").append(entry.getKey()).append("</td>");
-        info.append("<td class='td2'>").append(entry.getValue())
-                .append("</td>");
-        info.append("</tr>");
-      }
-      simulateInfo =
-              MessageFormat.format(simulateInfoTemplate, info.toString());
-    }
-    response.getWriter().println(simulateInfo);
-
-    ((Request) request).setHandled(true);
-  }
-
-  /**
-   * simulate html page, show several real-runtime chart
-   * path "/simulate"
-   * use d3.js
-   * @param request http request
-   * @param response http response
-   * @throws java.io.IOException
-   */
-  private void printPageSimulate(HttpServletRequest request,
-                                 HttpServletResponse response, int timeunit,
-                                 String timeunitLabel)
-          throws IOException {
-    response.setContentType("text/html");
-    response.setStatus(HttpServletResponse.SC_OK);
-
-    // queues {0}
-    Set<String> queues = wrapper.getTracker().getQueueSet();
-    StringBuilder queueInfo = new StringBuilder();
-
-    int i = 0;
-    for (String queue : queues) {
-      queueInfo.append("legends[4][").append(i).append("] = 'queue.")
-              .append(queue).append(".allocated.memory';");
-      queueInfo.append("legends[5][").append(i).append("] = 'queue.")
-              .append(queue).append(".allocated.vcores';");
-      i ++;
-    }
-
-    // time unit label {1}
-    // time unit {2}
-    // ajax update time interval {3}
-    String simulateInfo = MessageFormat.format(simulateTemplate,
-            queueInfo.toString(), timeunitLabel, "" + timeunit,
-            "" + ajaxUpdateTimeMS);
-    response.getWriter().println(simulateInfo);
-
-    ((Request) request).setHandled(true);
-  }
-
-  /**
-   * html page for tracking one queue or job
-   * use d3.js
-   * @param request http request
-   * @param response http response
-   * @throws java.io.IOException
-   */
-  private void printPageTrack(HttpServletRequest request,
-                               HttpServletResponse response, int timeunit,
-                               String timeunitLabel)
-          throws IOException {
-    response.setContentType("text/html");
-    response.setStatus(HttpServletResponse.SC_OK);
-
-    // tracked queues {0}
-    StringBuilder trackedQueueInfo = new StringBuilder();
-    Set<String> trackedQueues = wrapper.getTracker().getQueueSet();
-    for(String queue : trackedQueues) {
-      trackedQueueInfo.append("<option value='Queue ").append(queue)
-              .append("'>").append(queue).append("</option>");
-    }
-
-    // tracked apps {1}
-    StringBuilder trackedAppInfo = new StringBuilder();
-    Set<String> trackedApps = wrapper.getTracker().getTrackedAppSet();
-    for(String job : trackedApps) {
-      trackedAppInfo.append("<option value='Job ").append(job)
-              .append("'>").append(job).append("</option>");
-    }
-
-    // timeunit label {2}
-    // time unit {3}
-    // ajax update time {4}
-    // final html
-    String trackInfo = MessageFormat.format(trackTemplate,
-            trackedQueueInfo.toString(), trackedAppInfo.toString(),
-            timeunitLabel, "" + timeunit, "" + ajaxUpdateTimeMS);
-    response.getWriter().println(trackInfo);
-
-    ((Request) request).setHandled(true);
-  }
-
-  /**
-   * package metrics information in a json and return
-   * @param request http request
-   * @param response http response
-   * @throws java.io.IOException
-   */
-  private void printJsonMetrics(HttpServletRequest request,
-                                HttpServletResponse response)
-          throws IOException {
-    response.setContentType("text/json");
-    response.setStatus(HttpServletResponse.SC_OK);
-
-    response.getWriter().println(generateRealTimeTrackingMetrics());
-    ((Request) request).setHandled(true);
-  }
-
-  public String generateRealTimeTrackingMetrics() {
-    // JVM
-    double jvmFreeMemoryGB, jvmMaxMemoryGB, jvmTotalMemoryGB;
-    if (jvmFreeMemoryGauge == null &&
-            metrics.getGauges().containsKey("variable.jvm.free.memory")) {
-      jvmFreeMemoryGauge = metrics.getGauges().get("variable.jvm.free.memory");
-    }
-    if (jvmMaxMemoryGauge == null &&
-            metrics.getGauges().containsKey("variable.jvm.max.memory")) {
-      jvmMaxMemoryGauge = metrics.getGauges().get("variable.jvm.max.memory");
-    }
-    if (jvmTotalMemoryGauge == null &&
-            metrics.getGauges().containsKey("variable.jvm.total.memory")) {
-      jvmTotalMemoryGauge = metrics.getGauges()
-              .get("variable.jvm.total.memory");
-    }
-    jvmFreeMemoryGB = jvmFreeMemoryGauge == null ? 0 :
-            Double.parseDouble(jvmFreeMemoryGauge.getValue().toString())
-                    /1024/1024/1024;
-    jvmMaxMemoryGB = jvmMaxMemoryGauge == null ? 0 :
-            Double.parseDouble(jvmMaxMemoryGauge.getValue().toString())
-                    /1024/1024/1024;
-    jvmTotalMemoryGB = jvmTotalMemoryGauge == null ? 0 :
-            Double.parseDouble(jvmTotalMemoryGauge.getValue().toString())
-                    /1024/1024/1024;
-
-    // number of running applications/containers
-    String numRunningApps, numRunningContainers;
-    if (numRunningAppsGauge == null &&
-            metrics.getGauges().containsKey("variable.running.application")) {
-      numRunningAppsGauge =
-              metrics.getGauges().get("variable.running.application");
-    }
-    if (numRunningContainersGauge == null &&
-            metrics.getGauges().containsKey("variable.running.container")) {
-      numRunningContainersGauge =
-              metrics.getGauges().get("variable.running.container");
-    }
-    numRunningApps = numRunningAppsGauge == null ? "0" :
-            numRunningAppsGauge.getValue().toString();
-    numRunningContainers = numRunningContainersGauge == null ? "0" :
-            numRunningContainersGauge.getValue().toString();
-
-    // cluster available/allocate resource
-    double allocatedMemoryGB, allocatedVCoresGB,
-            availableMemoryGB, availableVCoresGB;
-    if (allocatedMemoryGauge == null &&
-            metrics.getGauges()
-                    .containsKey("variable.cluster.allocated.memory")) {
-      allocatedMemoryGauge = metrics.getGauges()
-              .get("variable.cluster.allocated.memory");
-    }
-    if (allocatedVCoresGauge == null &&
-            metrics.getGauges()
-                    .containsKey("variable.cluster.allocated.vcores")) {
-      allocatedVCoresGauge = metrics.getGauges()
-              .get("variable.cluster.allocated.vcores");
-    }
-    if (availableMemoryGauge == null &&
-            metrics.getGauges()
-                    .containsKey("variable.cluster.available.memory")) {
-      availableMemoryGauge = metrics.getGauges()
-              .get("variable.cluster.available.memory");
-    }
-    if (availableVCoresGauge == null &&
-            metrics.getGauges()
-                    .containsKey("variable.cluster.available.vcores")) {
-      availableVCoresGauge = metrics.getGauges()
-              .get("variable.cluster.available.vcores");
-    }
-    allocatedMemoryGB = allocatedMemoryGauge == null ? 0 :
-            Double.parseDouble(allocatedMemoryGauge.getValue().toString())/1024;
-    allocatedVCoresGB = allocatedVCoresGauge == null ? 0 :
-            Double.parseDouble(allocatedVCoresGauge.getValue().toString());
-    availableMemoryGB = availableMemoryGauge == null ? 0 :
-            Double.parseDouble(availableMemoryGauge.getValue().toString())/1024;
-    availableVCoresGB = availableVCoresGauge == null ? 0 :
-            Double.parseDouble(availableVCoresGauge.getValue().toString());
-
-    // scheduler operation
-    double allocateTimecost, commitSuccessTimecost, commitFailureTimecost,
-        handleTimecost;
-    if (allocateTimecostHistogram == null &&
-            metrics.getHistograms().containsKey(
-                    "sampler.scheduler.operation.allocate.timecost")) {
-      allocateTimecostHistogram = metrics.getHistograms()
-              .get("sampler.scheduler.operation.allocate.timecost");
-    }
-    if (commitSuccessTimecostHistogram == null &&
-        metrics.getHistograms().containsKey(
-            "sampler.scheduler.operation.commit.success.timecost")) {
-      commitSuccessTimecostHistogram = metrics.getHistograms()
-          .get("sampler.scheduler.operation.commit.success.timecost");
-    }
-    if (commitFailureTimecostHistogram == null &&
-        metrics.getHistograms().containsKey(
-            "sampler.scheduler.operation.commit.failure.timecost")) {
-      commitFailureTimecostHistogram = metrics.getHistograms()
-          .get("sampler.scheduler.operation.commit.failure.timecost");
-    }
-    if (handleTimecostHistogram == null &&
-            metrics.getHistograms().containsKey(
-                    "sampler.scheduler.operation.handle.timecost")) {
-      handleTimecostHistogram = metrics.getHistograms()
-              .get("sampler.scheduler.operation.handle.timecost");
-    }
-    allocateTimecost = allocateTimecostHistogram == null ? 0.0 :
-            allocateTimecostHistogram.getSnapshot().getMean()/1000000;
-    commitSuccessTimecost = commitSuccessTimecostHistogram == null ? 0.0 :
-            commitSuccessTimecostHistogram.getSnapshot().getMean()/1000000;
-    commitFailureTimecost = commitFailureTimecostHistogram == null ? 0.0 :
-            commitFailureTimecostHistogram.getSnapshot().getMean()/1000000;
-    handleTimecost = handleTimecostHistogram == null ? 0.0 :
-            handleTimecostHistogram.getSnapshot().getMean()/1000000;
-    // various handle operation
-    Map<SchedulerEventType, Double> handleOperTimecostMap =
-            new HashMap<SchedulerEventType, Double>();
-    for (SchedulerEventType e : SchedulerEventType.values()) {
-      String key = "sampler.scheduler.operation.handle." + e + ".timecost";
-      if (! handleOperTimecostHistogramMap.containsKey(e) &&
-              metrics.getHistograms().containsKey(key)) {
-        handleOperTimecostHistogramMap.put(e, metrics.getHistograms().get(key));
-      }
-      double timecost = handleOperTimecostHistogramMap.containsKey(e) ?
-          handleOperTimecostHistogramMap.get(e).getSnapshot().getMean()/1000000
-              : 0;
-      handleOperTimecostMap.put(e, timecost);
-    }
-
-    // allocated resource for each queue
-    Map<String, Double> queueAllocatedMemoryMap = new HashMap<String, Double>();
-    Map<String, Long> queueAllocatedVCoresMap = new HashMap<String, Long>();
-    for (String queue : wrapper.getTracker().getQueueSet()) {
-      // memory
-      String key = "counter.queue." + queue + ".allocated.memory";
-      if (! queueAllocatedMemoryCounterMap.containsKey(queue) &&
-              metrics.getCounters().containsKey(key)) {
-        queueAllocatedMemoryCounterMap.put(queue,
-                metrics.getCounters().get(key));
-      }
-      double queueAllocatedMemoryGB =
-              queueAllocatedMemoryCounterMap.containsKey(queue) ?
-                  queueAllocatedMemoryCounterMap.get(queue).getCount()/1024.0
-                      : 0;
-      queueAllocatedMemoryMap.put(queue, queueAllocatedMemoryGB);
-      // vCores
-      key = "counter.queue." + queue + ".allocated.cores";
-      if (! queueAllocatedVCoresCounterMap.containsKey(queue) &&
-              metrics.getCounters().containsKey(key)) {
-        queueAllocatedVCoresCounterMap.put(
-                queue, metrics.getCounters().get(key));
-      }
-      long queueAllocatedVCores =
-              queueAllocatedVCoresCounterMap.containsKey(queue) ?
-                      queueAllocatedVCoresCounterMap.get(queue).getCount(): 0;
-      queueAllocatedVCoresMap.put(queue, queueAllocatedVCores);
-    }
-
-    // calculate commit throughput, unit is number/second
-    if (schedulerCommitSuccessCounter == null && metrics.getCounters()
-        .containsKey("counter.scheduler.operation.commit.success")) {
-      schedulerCommitSuccessCounter = metrics.getCounters()
-          .get("counter.scheduler.operation.commit.success");
-    }
-    if (schedulerCommitFailureCounter == null && metrics.getCounters()
-        .containsKey("counter.scheduler.operation.commit.failure")) {
-      schedulerCommitFailureCounter = metrics.getCounters()
-          .get("counter.scheduler.operation.commit.failure");
-    }
-    long schedulerCommitSuccessThroughput = 0;
-    long schedulerCommitFailureThroughput = 0;
-    if (schedulerCommitSuccessCounter != null
-        && schedulerCommitFailureCounter != null) {
-      long currentTrackingTime = System.currentTimeMillis();
-      long currentSchedulerCommitSucessCount =
-          schedulerCommitSuccessCounter.getCount();
-      long currentSchedulerCommitFailureCount =
-          schedulerCommitFailureCounter.getCount();
-      if (lastTrackingTime != null) {
-        double intervalSeconds =
-            (double) (currentTrackingTime - lastTrackingTime) / 1000;
-        schedulerCommitSuccessThroughput = Math.round(
-            (currentSchedulerCommitSucessCount
-                - lastSchedulerCommitSuccessCount) / intervalSeconds);
-        schedulerCommitFailureThroughput = Math.round(
-            (currentSchedulerCommitFailureCount
-                - lastSchedulerCommitFailureCount) / intervalSeconds);
-      }
-      lastTrackingTime = currentTrackingTime;
-      lastSchedulerCommitSuccessCount = currentSchedulerCommitSucessCount;
-      lastSchedulerCommitFailureCount = currentSchedulerCommitFailureCount;
-    }
-
-    // package results
-    StringBuilder sb = new StringBuilder();
-    sb.append("{");
-    sb.append("\"time\":" ).append(System.currentTimeMillis())
-            .append(",\"jvm.free.memory\":").append(jvmFreeMemoryGB)
-            .append(",\"jvm.max.memory\":").append(jvmMaxMemoryGB)
-            .append(",\"jvm.total.memory\":").append(jvmTotalMemoryGB)
-            .append(",\"running.applications\":").append(numRunningApps)
-            .append(",\"running.containers\":").append(numRunningContainers)
-            .append(",\"cluster.allocated.memory\":").append(allocatedMemoryGB)
-            .append(",\"cluster.allocated.vcores\":").append(allocatedVCoresGB)
-            .append(",\"cluster.available.memory\":").append(availableMemoryGB)
-            .append(",\"cluster.available.vcores\":").append(availableVCoresGB);
-
-    for (String queue : wrapper.getTracker().getQueueSet()) {
-      sb.append(",\"queue.").append(queue).append(".allocated.memory\":")
-              .append(queueAllocatedMemoryMap.get(queue));
-      sb.append(",\"queue.").append(queue).append(".allocated.vcores\":")
-              .append(queueAllocatedVCoresMap.get(queue));
-    }
-    // scheduler allocate & handle
-    sb.append(",\"scheduler.allocate.timecost\":").append(allocateTimecost);
-    sb.append(",\"scheduler.commit.success.timecost\":")
-        .append(commitSuccessTimecost);
-    sb.append(",\"scheduler.commit.failure.timecost\":")
-        .append(commitFailureTimecost);
-    sb.append(",\"scheduler.commit.success.throughput\":")
-        .append(schedulerCommitSuccessThroughput);
-    sb.append(",\"scheduler.commit.failure.throughput\":")
-        .append(schedulerCommitFailureThroughput);
-    sb.append(",\"scheduler.handle.timecost\":").append(handleTimecost);
-    for (SchedulerEventType e : SchedulerEventType.values()) {
-      sb.append(",\"scheduler.handle-").append(e).append(".timecost\":")
-              .append(handleOperTimecostMap.get(e));
-    }
-    sb.append(generateNodeUsageMetrics("memory"));
-    sb.append(generateNodeUsageMetrics("vcores"));
-    sb.append("}");
-    return sb.toString();
-  }
-
-  private String generateNodeUsageMetrics(String resourceType) {
-    StringBuilder sb = new StringBuilder();
-    Map<String, Integer> perNodeUsageMap = new HashMap<>();
-    for (NodeUsageRanges.Range range : NodeUsageRanges.getRanges()) {
-      String metricName = "nodes." + resourceType + "." + range.getKeyword();
-      if (!perNodeUsageGaugeMap.containsKey(metricName) &&
-          metrics.getGauges().containsKey(metricName)) {
-        perNodeUsageGaugeMap.put(metricName,
-            metrics.getGauges().get(metricName));
-      }
-
-      int perNodeUsageCount =
-          perNodeUsageGaugeMap.containsKey(metricName) ?
-              Integer.parseInt(
-                  perNodeUsageGaugeMap.get(metricName).getValue().toString()) : 0;
-
-      perNodeUsageMap.put(metricName, perNodeUsageCount);
-    }
-
-    // per node memory and vcores used
-    for (NodeUsageRanges.Range range : NodeUsageRanges.getRanges()) {
-      String metricName = "nodes." + resourceType + "." + range.getKeyword();
-      sb.append(",\"").append(metricName).append("\":")
-          .append(perNodeUsageMap.get(metricName));
-    }
-    return sb.toString();
-  }
-
-  /**
-   * package metrics information for one tracked queue/app
-   * only support FairScheduler currently
-   * @throws java.io.IOException
-   */
-  private void printJsonTrack(HttpServletRequest request,
-                              HttpServletResponse response) throws IOException {
-    response.setContentType("text/json");
-    response.setStatus(HttpServletResponse.SC_OK);
-
-    StringBuilder sb = new StringBuilder();
-    if(schedulerMetrics instanceof FairSchedulerMetrics) {
-      String para = request.getParameter("t");
-      if (para.startsWith("Job ")) {
-        String appId = para.substring("Job ".length());
-
-        sb.append("{");
-        sb.append("\"time\": ").append(System.currentTimeMillis()).append(",");
-        sb.append("\"appId\": \"").append(appId).append("\"");
-        for(String metric : this.schedulerMetrics.getAppTrackedMetrics()) {
-          String key = "variable.app." + appId + "." + metric;
-          sb.append(",\"").append(metric).append("\": ");
-          if (metrics.getGauges().containsKey(key)) {
-            double memoryGB =
-                    Double.parseDouble(
-                            metrics.getGauges().get(key).getValue().toString())
-                            / 1024;
-            sb.append(memoryGB);
-          } else {
-            sb.append(-1);
-          }
-        }
-        sb.append("}");
-
-      } else if(para.startsWith("Queue ")) {
-        String queueName = para.substring("Queue ".length());
-        sb.append("{");
-        sb.append("\"time\": ").append(System.currentTimeMillis()).append(",");
-        sb.append("\"queueName\": \"").append(queueName).append("\"");
-        for(String metric : this.schedulerMetrics.getQueueTrackedMetrics()) {
-          String key = "variable.queue." + queueName + "." + metric;
-          sb.append(",\"").append(metric).append("\": ");
-          if (metrics.getGauges().containsKey(key)) {
-            double memoryGB =
-                    Double.parseDouble(
-                            metrics.getGauges().get(key).getValue().toString())
-                            / 1024;
-            sb.append(memoryGB);
-          } else {
-            sb.append(-1);
-          }
-        }
-        sb.append("}");
-      }
-    }
-    String output = sb.toString();
-    if (output.isEmpty()) {
-      output = "[]";
-    }
-    response.getWriter().println(output);
-    // package result
-    ((Request) request).setHandled(true);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/main/sample-conf/capacity-scheduler.xml b/hadoop-tools/hadoop-sls/src/main/sample-conf/capacity-scheduler.xml
deleted file mode 100644
index d9ae8ec78c5..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/sample-conf/capacity-scheduler.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<!--
-  This file contains queue allocations for the Capacity Scheduler.
-  Its format is explained in the Capacity Scheduler documentation at
-  http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/CapacityScheduler.html.
-  The documentation also includes a sample config file.
--->
-
-<configuration>
-  <property>
-    <name>yarn.scheduler.capacity.root.queues</name>
-    <value>sls_queue_1,sls_queue_2,sls_queue_3</value>
-    <description>The queues at the this level (root is the root queue).
-    </description>
-  </property>
-  
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_1.capacity</name>
-    <value>25</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_1.maximum-capacity</name>
-    <value>100</value>
-  </property>
-  
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_2.capacity</name>
-    <value>25</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_2.maximum-capacity</name>
-    <value>100</value>
-  </property>
-  
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_3.capacity</name>
-    <value>50</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_3.maximum-capacity</name>
-    <value>100</value>
-  </property>
-</configuration>
diff --git a/hadoop-tools/hadoop-sls/src/main/sample-conf/fair-scheduler.xml b/hadoop-tools/hadoop-sls/src/main/sample-conf/fair-scheduler.xml
deleted file mode 100644
index fa10359c501..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/sample-conf/fair-scheduler.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<!--
-  This file contains pool and user allocations for the Fair Scheduler.
-  Its format is explained in the Fair Scheduler documentation at
-  http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/FairScheduler.html.
-  The documentation also includes a sample config file.
--->
-
-<allocations>
-  <user name="jenkins">
-    <!-- Limit on running jobs for the user across all pools. If more
-      jobs than this are submitted, only the first <maxRunningJobs> will
-      be scheduled at any given time. Defaults to infinity or the
-      userMaxJobsDefault value set below. -->
-    <maxRunningJobs>1000</maxRunningJobs>
-  </user>
-  <userMaxAppsDefault>1000</userMaxAppsDefault>
-  <queue name="sls_queue_1">
-    <minResources>1024 mb, 1 vcores</minResources>
-    <schedulingMode>fair</schedulingMode>
-    <weight>0.25</weight>
-    <minSharePreemptionTimeout>2</minSharePreemptionTimeout>
-  </queue>
-  <queue name="sls_queue_2">
-    <minResources>1024 mb, 1 vcores</minResources>
-    <schedulingMode>fair</schedulingMode>
-    <weight>0.25</weight>
-    <minSharePreemptionTimeout>2</minSharePreemptionTimeout>
-  </queue>
-  <queue name="sls_queue_3">
-    <minResources>1024 mb, 1 vcores</minResources>
-    <weight>0.5</weight>
-    <schedulingMode>fair</schedulingMode>
-    <minSharePreemptionTimeout>2</minSharePreemptionTimeout>
-  </queue>
-</allocations>
diff --git a/hadoop-tools/hadoop-sls/src/main/sample-conf/log4j.properties b/hadoop-tools/hadoop-sls/src/main/sample-conf/log4j.properties
deleted file mode 100644
index b2a63bc0a96..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/sample-conf/log4j.properties
+++ /dev/null
@@ -1,19 +0,0 @@
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License. See accompanying LICENSE file.
-#
-log4j.appender.test=org.apache.log4j.ConsoleAppender
-log4j.appender.test.Target=System.out
-log4j.appender.test.layout=org.apache.log4j.PatternLayout
-log4j.appender.test.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
-
-log4j.rootLogger=WARN, test
diff --git a/hadoop-tools/hadoop-sls/src/main/sample-conf/sls-runner.xml b/hadoop-tools/hadoop-sls/src/main/sample-conf/sls-runner.xml
deleted file mode 100644
index d7acc98ffc3..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/sample-conf/sls-runner.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<configuration>
-
-  <!-- SLSRunner configuration -->
-  <property>
-    <name>yarn.sls.runner.pool.size</name>
-    <value>100</value>
-  </property>
-  
-  <!-- Nodes configuration -->
-  <property>
-    <name>yarn.sls.nm.memory.mb</name>
-    <value>10240</value>
-  </property>
-  <property>
-    <name>yarn.sls.nm.vcores</name>
-    <value>10</value>
-  </property>
-  <property>
-    <name>yarn.sls.nm.heartbeat.interval.ms</name>
-    <value>1000</value>
-  </property>
-  
-  <!-- Apps configuration -->
-  <property>
-    <name>yarn.sls.am.heartbeat.interval.ms</name>
-    <value>1000</value>
-  </property>
-  <property>
-    <name>yarn.sls.am.type.mapreduce</name>
-    <value>org.apache.hadoop.yarn.sls.appmaster.MRAMSimulator</value>
-  </property>
-
-  <!-- Containers configuration -->
-  <property>
-    <name>yarn.sls.container.memory.mb</name>
-    <value>1024</value>
-  </property>
-  <property>
-    <name>yarn.sls.container.vcores</name>
-    <value>1</value>
-  </property>
-
-  <!--  metrics  -->
-  <property>
-    <name>yarn.sls.metrics.switch</name>
-    <value>ON</value>
-  </property>
-  <property>
-    <name>yarn.sls.metrics.web.address.port</name>
-    <value>10001</value>
-  </property>
-  <property>
-    <name>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler</name>
-    <value>org.apache.hadoop.yarn.sls.scheduler.FifoSchedulerMetrics</value>
-  </property>
-  <property>
-    <name>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</name>
-    <value>org.apache.hadoop.yarn.sls.scheduler.FairSchedulerMetrics</value>
-  </property>
-  <property>
-    <name>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</name>
-    <value>org.apache.hadoop.yarn.sls.scheduler.CapacitySchedulerMetrics</value>
-  </property>
-  
-</configuration>
diff --git a/hadoop-tools/hadoop-sls/src/main/sample-conf/yarn-site.xml b/hadoop-tools/hadoop-sls/src/main/sample-conf/yarn-site.xml
deleted file mode 100644
index 6ab11573499..00000000000
--- a/hadoop-tools/hadoop-sls/src/main/sample-conf/yarn-site.xml
+++ /dev/null
@@ -1,80 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<configuration>
-  <property>
-    <name>yarn.resourcemanager.scheduler.class</name>
-    <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</value>
-    <!-- <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler</value> -->
-    <!-- <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value> -->
-  </property>
-
-  <property>
-    <description>The address of the RM web application.</description>
-    <name>yarn.resourcemanager.webapp.address</name>
-    <value>localhost:18088</value>
-  </property>
-
-  <property>
-    <name>yarn.resourcemanager.resource-tracker.address</name>
-    <value>localhost:18031</value>
-  </property>
-
-  <property>
-    <description>The address of the scheduler interface.</description>
-    <name>yarn.resourcemanager.scheduler.address</name>
-    <value>localhost:18030</value>
-  </property>
-
-  <property>
-    <description>The address of the applications manager interface in the RM.</description>
-    <name>yarn.resourcemanager.address</name>
-    <value>localhost:18032</value>
-  </property>
-
-  <property>
-    <description>The address of the RM admin interface.</description>
-    <name>yarn.resourcemanager.admin.address</name>
-    <value>localhost:18033</value>
-  </property>
-
-  <property>
-    <description>Set to false, to avoid ip check</description>
-    <name>hadoop.security.token.service.use_ip</name>
-    <value>false</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.maximum-applications</name>
-    <value>1000</value>
-    <description>Maximum number of applications in the system which
-      can be concurrently active both running and pending</description>
-  </property>
-
-  <property>
-    <description>Whether to use preemption. Note that preemption is experimental
-      in the current version. Defaults to false.</description>
-    <name>yarn.scheduler.fair.preemption</name>
-    <value>true</value>
-  </property>
-
-  <property>
-    <description>Whether to allow multiple container assignments in one
-      heartbeat. Defaults to false.</description>
-    <name>yarn.scheduler.fair.assignmultiple</name>
-    <value>true</value>
-  </property>
-</configuration>
diff --git a/hadoop-tools/hadoop-sls/src/site/markdown/SchedulerLoadSimulator.md b/hadoop-tools/hadoop-sls/src/site/markdown/SchedulerLoadSimulator.md
deleted file mode 100644
index e487267e02e..00000000000
--- a/hadoop-tools/hadoop-sls/src/site/markdown/SchedulerLoadSimulator.md
+++ /dev/null
@@ -1,524 +0,0 @@
-<!---
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-   http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-YARN Scheduler Load Simulator (SLS)
-===================================
-
-* [YARN Scheduler Load Simulator (SLS)](#Yarn_Scheduler_Load_Simulator_SLS)
-    * [Overview](#Overview)
-        * [Overview](#Overview)
-        * [Goals](#Goals)
-        * [Architecture](#Architecture)
-        * [Usecases](#Usecases)
-    * [Usage](#Usage)
-        * [Step 1: Configure Hadoop and the simulator](#Step_1:_Configure_Hadoop_and_the_simulator)
-        * [Step 2: Run the simulator](#Step_2:_Run_the_simulator)
-    * [Metrics](#Metrics)
-        * [Real-time Tracking](#Real-time_Tracking)
-        * [Offline Analysis](#Offline_Analysis)
-    * [Synthetic Load Generator](#Synthetic_Load_Generator)
-    * [Appendix](#Appendix)
-        * [Resources](#Resources)
-        * [SLS JSON input file format](#SLS_JSON_input_file_format)
-        * [SYNTH JSON input file format](#SYNTH_JSON_input_file_format)
-        * [Simulator input topology file format](#Simulator_input_topology_file_format)
-
-Overview
---------
-
-### Overview
-
-The YARN scheduler is a fertile area of interest with different implementations, e.g., Fifo, Capacity and Fair schedulers. Meanwhile, several optimizations are also made to improve scheduler performance for different scenarios and workload. Each scheduler algorithm has its own set of features, and drives scheduling decisions by many factors, such as fairness, capacity guarantee, resource availability, etc. It is very important to evaluate a scheduler algorithm very well before we deploy in a production cluster. Unfortunately, currently it is non-trivial to evaluate a scheduler algorithm. Evaluating in a real cluster is always time and cost consuming, and it is also very hard to find a large-enough cluster. Hence, a simulator which can predict how well a scheduler algorithm for some specific workload would be quite useful.
-
-The YARN Scheduler Load Simulator (SLS) is such a tool, which can simulate large-scale YARN clusters and application loads in a single machine.This simulator would be invaluable in furthering YARN by providing a tool for researchers and developers to prototype new scheduler features and predict their behavior and performance with reasonable amount of confidence, thereby aiding rapid innovation.
-o
-The simulator will exercise the real YARN `ResourceManager` removing the network factor by simulating `NodeManagers` and `ApplicationMasters` via handling and dispatching `NM`/`AMs` heartbeat events from within the same JVM. To keep tracking of scheduler behavior and performance, a scheduler wrapper will wrap the real scheduler.
-
-The size of the cluster and the application load can be loaded from configuration files, which are generated from job history files directly by adopting [Apache Rumen](../hadoop-rumen/Rumen.html).
-
-The simulator will produce real time metrics while executing, including:
-
-*   Resource usages for whole cluster and each queue, which can be utilized to
-    configure cluster and queue's capacity.
-
-*   The detailed application execution trace (recorded in relation to simulated
-    time), which can be analyzed to understand/validate the scheduler behavior
-    (individual jobs turn around time, throughput, fairness, capacity guarantee,
-    etc.).
-
-*   Several key metrics of scheduler algorithm, such as time cost of each
-    scheduler operation (allocate, handle, etc.), which can be utilized by Hadoop
-    developers to find the code spots and scalability limits.
-
-### Goals
-
-*   Exercise the scheduler at scale without a real cluster using real job
-    traces.
-
-*   Being able to simulate real workloads.
-
-### Architecture
-
-The following figure illustrates the implementation architecture of the simulator.
-
-![The architecture of the simulator](images/sls_arch.png)
-
-The simulator takes input of workload traces, or synthetic load distributions and generaters the cluster and applications information. For each NM and AM, the simulator builds a simulator to simulate their running. All NM/AM simulators run in a thread pool. The simulator reuses YARN Resource Manager, and builds a wrapper out of the scheduler. The Scheduler Wrapper can track the scheduler behaviors and generates several logs, which are the outputs of the simulator and can be further analyzed.
-
-### Usecases
-
-*   Engineering
-    *   Verify correctness of scheduler algorithm under load
-    *   Cheap/practical way for finding code hotspots/critical-path.
-    *   Validate the impact of changes and new features.
-    *   Determine what drives the scheduler scalability limits.
-
-*   QA
-    *   Validate scheduler behavior for "large" clusters and several workload profiles.
-
-*   Solutions/Sales.
-    *   Sizing model for predefined/typical workloads.
-    *   Cluster sizing tool using real customer data (job traces).
-    *   Determine minimum SLAs under a particular workload.
-
-Usage
------
-
-This section will show how to use the simulator. Here let `$HADOOP_ROOT` represent the Hadoop install directory. If you build Hadoop yourself, `$HADOOP_ROOT` is `hadoop-dist/target/hadoop-$VERSION`. The simulator is located at `$HADOOP_ROOT/share/hadoop/tools/sls`. The fold `sls` containers four directories: `bin`, `html`, `sample-conf`, and `sample-data`
-
-*   `bin`: contains running scripts for the simulator.
-
-*   `html`: Users can also reproduce those real-time tracking charts in offline mode. Just upload the `realtimetrack.json` to `$HADOOP_ROOT/share/hadoop/tools/sls/html/showSimulationTrace.html`. For browser security problem, need to put files `realtimetrack.json` and `showSimulationTrace.html` in the same directory.
-
-*   `sample-conf`: specifies the simulator configurations.
-
-*   `sample-data`: provides an example rumen trace, which can be used to
-    generate inputs of the simulator.
-
-The following sections will describe how to use the simulator step by step. Before start, make sure that command `hadoop` is included in your `$PATH` environment parameter.
-
-### Step 1: Configure Hadoop and the simulator
-
-Before we start, make sure Hadoop and the simulator are configured well. All configuration files for Hadoop and the simulator should be placed in directory `$HADOOP_ROOT/etc/hadoop`, where the `ResourceManager` and YARN scheduler load their configurations. Directory `$HADOOP_ROOT/share/hadoop/tools/sls/sample-conf/` provides several example configurations, that can be used to start a demo.
-
-For configuration of Hadoop and YARN scheduler, users can refer to Yarn’s website (<http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/>).
-
-For the simulator, it loads configuration information from file `$HADOOP_ROOT/etc/hadoop/sls-runner.xml`.
-
-Here we illustrate each configuration parameter in `sls-runner.xml`. Note that `$HADOOP_ROOT/share/hadoop/tools/sls/sample-conf/sls-runner.xml` contains all the default values for these configuration parameters.
-
-*   `yarn.sls.runner.pool.size`
-
-    The simulator uses a thread pool to simulate the `NM` and `AM` running,
-    and this parameter specifies the number of threads in the pool.
-
-*   `yarn.sls.nm.memory.mb`
-
-    The total memory for each `NMSimulator`.
-
-*   `yarn.sls.nm.vcores`
-
-    The total vCores for each `NMSimulator`.
-
-*   `yarn.sls.nm.heartbeat.interval.ms`
-
-    The heartbeat interval for each `NMSimulator`.
-
-*   `yarn.sls.am.heartbeat.interval.ms`
-
-    The heartbeat interval for each `AMSimulator`.
-
-*   `yarn.sls.am.type.mapreduce`
-
-    The `AMSimulator` implementation for MapReduce-like applications.
-    Users can specify implementations for other type of applications.
-
-*   `yarn.sls.container.memory.mb`
-
-    The memory required for each container simulator.
-
-*   `yarn.sls.container.vcores`
-
-    The vCores required for each container simulator.
-
-*   `yarn.sls.runner.metrics.switch`
-
-    The simulator introduces [Metrics](http://metrics.codahale.com/) to measure
-    the behaviors of critical components and operations. This field specifies
-    whether we open (`ON`) or close (`OFF`) the Metrics running.
-
-*   `yarn.sls.metrics.web.address.port`
-
-    The port used by simulator to provide real-time tracking. The default value is
-    10001.
-
-*   `org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler`
-
-    The implementation of scheduler metrics of Fifo Scheduler.
-
-*   `org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler`
-
-    The implementation of scheduler metrics of Fair Scheduler.
-
-*   `org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler`
-
-    The implementation of scheduler metrics of Capacity Scheduler.
-
-### Step 2: Run the simulator
-
-The simulator supports two types of input files: the rumen traces and its own input traces. The script to start the simulator is `slsrun.sh`.
-
-    $ cd $HADOOP_ROOT/share/hadoop/tools/sls
-    $ bin/slsrun.sh
-      Usage: slsrun.sh <OPTIONS>
-                 --tracetype=<SYNTH | SLS | RUMEN>
-                 --tracelocation=<FILE1,FILE2,...>
-                 (deprecated --input-rumen=<FILE1,FILE2,...>  | --input-sls=<FILE1,FILE2,...>)
-                 --output-dir=<SLS_SIMULATION_OUTPUT_DIRECTORY>
-                 [--nodes=<SLS_NODES_FILE>]
-                 [--track-jobs=<JOBID1,JOBID2,...>]
-                 [--print-simulation]
-
-
-*   `--input-rumen`: The input rumen trace files. Users can input multiple
-    files, separated by comma. One example trace is provided in
-    `$HADOOP_ROOT/share/hadoop/tools/sls/sample-data/2jobs2min-rumen-jh.json`.
-    This is equivalent to `--tracetype=RUMEN --tracelocation=<path_to_trace>`.
-
-*   `--input-sls`: Simulator its own file format. The simulator also
-    provides a tool to convert rumen traces to sls traces (`rumen2sls.sh`).
-    Refer to appendix for an example of sls input json file.
-    This is equivalent to `--tracetype=SLS --tracelocation=<path_to_trace>`.
-
-*   `--tracetype`: This is the new way to configure the trace generation and
-    takes values RUMEN, SLS, or SYNTH, to trigger the three type of load generation
-
-*   `--tracelocation`: Path to the input file, matching the tracetype above.
-
-*   `--output-dir`: The output directory for generated running logs and
-    metrics.
-
-*   `--nodes`: The cluster topology. By default, the simulator will use the
-    topology fetched from the input json files. Users can specifies a new topology
-    by setting this parameter. Refer to the appendix for the topology file format.
-
-*   `--track-jobs`: The particular jobs that will be tracked during
-    simulator running, spearated by comma.
-
-*   `--print-simulation`: Whether to print out simulation information
-    before simulator running, including number of nodes, applications, tasks,
-    and information for each application.
-
-    In comparison to rumen format, here the sls format is much simpler and users
-    can easily generate various workload. The simulator also provides a tool to
-    convert rumen traces to sls traces.
-
-        $ bin/rumen2sls.sh
-          --rumen-file=<RUMEN_FILE>
-          --output-dir=<SLS_OUTPUT_DIRECTORY>
-            [--output-prefix=<SLS_FILE_PREFIX>]
-
-*   `--rumen-file`: The rumen format file. One example trace is provided
-    in directory `sample-data`.
-
-*   `--output-dir`: The output directory of generated simulation traces.
-    Two files will be generated in this output directory, including one trace
-    file including all job and task information, and another file showing the
-    topology information.
-
-*   `--output-prefix`: The prefix of the generated files. The default value
-    is "sls", and the two generated files are `sls-jobs.json` and
-    `sls-nodes.json`.
-
-Metrics
--------
-
-The YARN Scheduler Load Simulator has integrated [Metrics](http://metrics.codahale.com/) to measure the behaviors of critical components and operations, including running applications and containers, cluster available resources, scheduler operation timecost, et al. If the switch `yarn.sls.runner.metrics.switch` is set `ON`, `Metrics` will run and output it logs in `--output-dir` directory specified by users. Users can track these information during simulator running, and can also analyze these logs after running to evaluate the scheduler performance.
-
-### Real-time Tracking
-
-The simulator provides an interface for tracking its running in real-time. Users can go to `http://host:port/simulate` to track whole running, and `http://host:port/track` to track a particular job or queue. Here the `host` is the place when we run the simulator, and `port` is the value configured by `yarn.sls.metrics.web.address.port` (default value is 10001).
-
-Here we'll illustrate each chart shown in the webpage.
-
-The first figure describes the number of running applications and containers.
-
-![Number of running applications/containers](images/sls_running_apps_containers.png)
-
-The second figure describes the allocated and available resources (memory) in the cluster.
-
-![Cluster Resource (Memory)](images/sls_cluster_memory.png)
-
-The third figure describes the allocated resource for each queue. Here we have three queues: sls\_queue\_1, sls\_queue\_2, and sls\_queue\_3.The first two queues are configured with 25% share, while the last one has 50% share.
-
-![Queue Allocated Resource (Memory)](images/sls_queue_allocated_memory.png)
-
-The fourth figure describes the timecost for each scheduler operation.
-
-![Scheduler Opertion Timecost](images/sls_scheduler_operation_timecost.png)
-
-Finally, we measure the memory used by the simulator.
-
-![JVM Memory](images/sls_JVM.png)
-
-The simulator also provides an interface for tracking some particular jobs and queues. Go to `http://<Host>:<Port>/track` to get these information.
-
-Here the first figure illustrates the resource usage information for queue `SLS_Queue_1`.
-
-![Tracking Queue `sls_queue_3`](images/sls_track_queue.png)
-
-The second figure illustrates the resource usage information for job `job_1369942127770_0653`.
-
-![Tracking Job `job_1369942127770_0653`](images/sls_track_job.png)
-
-### Offline Analysis
-
-After the simulator finishes, all logs are saved in the output directory specified by `--output-dir` in `$HADOOP_ROOT/share/hadoop/tools/sls/bin/slsrun.sh`.
-
-*   File `realtimetrack.json`: records all real-time tracking logs every 1
-    second.
-
-*   File `jobruntime.csv`: records all jobs’ start and end time in the
-    simulator.
-
-*   Folder `metrics`: logs generated by the Metrics.
-
-Users can also reproduce those real-time tracking charts in offline mode. Just upload the `realtimetrack.json` to `$HADOOP_ROOT/share/hadoop/tools/sls/html/showSimulationTrace.html`. For browser security problem, need to put files `realtimetrack.json` and `showSimulationTrace.html` in the same directory.
-
-
-Synthetic Load Generator
-------------------------
-The Synthetic Load Generator complements the extensive nature of SLS-native and RUMEN traces, by providing a
-distribution-driven generation of load. The load generator is organized as a JobStoryProducer
-(compatible with rumen, and thus gridmix for later integration). We seed the Random number generator so
-that results randomized but deterministic---hence reproducible.
-We organize the jobs being generated around */workloads/job_class* hierarchy, which allow to easily
-group jobs with similar behaviors and categorize them (e.g., jobs with long running containers, or maponly
-computations, etc..). The user can control average and standard deviations for many of the
-important parameters, such as number of mappers/reducers, duration of mapper/reducers, size
-(mem/cpu) of containers, chance of reservation, etc. We use weighted-random sampling (whenever we
-pick among a small number of options) or LogNormal distributions (to avoid negative values) when we
-pick from wide ranges of values---see appendix on LogNormal distributions.
-
-The SYNTH mode of SLS is very convenient to generate very large loads without the need for extensive input
-files. This allows to easily explore wide range of use cases (e.g., imagine simulating 100k jobs, and in different
-runs simply tune the average number of mappers, or average task duration), in an efficient and compact way.
-
-Resource Type in SLS
-------------------------
-This section talks about how to use resource type in SLS.
-
-## Configure Resource Manager
-This is the same to how to configure resource type for a real cluster. Configure
-item `yarn.resource-types` in yarn-site.xml as the following example does.
-
-     <property>
-       <name>yarn.resource-types</name>
-       <value>resource-type1, resource-type2</value>
-     </property>
-
-## Configure Node Manager
-Specify the size of resource in each node by adding relevant items into
-sls-runner.xml like the following example does. The values apply for every node
-in SLS. The default values for resources other than memory and vcores are 0.
-
-     <property>
-       <name>yarn.sls.nm.resource-type1</name>
-       <value>10</value>
-     </property>
-     <property>
-       <name>yarn.sls.nm.resource-type2</name>
-       <value>10</value>
-     </property>
-
-## Specify Resource in SLS JSON input
-Resource Type is supported in SLS JSON input format, but not in other two
-formats(SYNTH and RUMEN). To make it work in SLS JSON input format, you can
-specify resource sizes for both task containers and the AM container. Here is an
-example.
-
-    {
-      "job.start.ms" : 0,
-      "am.memory-mb": 2048,
-      "am.vcores": 2,
-      "am.resource-type1": 2,
-      "am.resource-type2": 2,
-      "job.tasks" : [ {
-        "container.duration.ms":  5000
-        "container.memory-mb": 1024,
-        "container.vcores": 1,
-        "container.resource-type1": 1,
-        "container.resource-type2": 1
-      }
-    }
-
-Appendix
---------
-
-### Resources
-
-[YARN-1021](https://issues.apache.org/jira/browse/YARN-1021) is the main JIRA that introduces YARN Scheduler Load Simulator to Hadoop YARN project.
-[YARN-6363](https://issues.apache.org/jira/browse/YARN-6363) is the main JIRA that introduces the Synthetic Load Generator to SLS.
-
-### SLS JSON input file format
-
-Here we provide an example format of the sls json file, which contains 2 jobs. The first job has 3 map tasks and the second one has 2 map tasks.
-
-    {
-      "num.nodes": 3,  // total number of nodes in the cluster
-      "num.racks": 1   // total number of racks in the cluster, it divides num.nodes into the racks evenly, optional, the default value is 1
-    }
-    {
-      "am.type" : "mapreduce", // type of AM, optional, the default value is "mapreduce"
-      "job.start.ms" : 0,      // job start time
-      "job.end.ms" : 95375,    // job finish time, optional, the default value is 0
-      "job.queue.name" : "sls_queue_1", // the queue job will be submitted to
-      "job.id" : "job_1",      // the job id used to track the job, optional. The default value, an zero-based integer increasing with number of jobs, is used if this is not specified or job.count > 1
-      "job.user" : "default",  // user, optional, the default value is "default"
-      "job.count" : 1,         // number of jobs, optional, the default value is 1
-      "job.tasks" : [ {
-        "count": 1,    // number of tasks, optional, the default value is 1
-        "container.host" : "/default-rack/node1",  // host the container asks for
-        "container.start.ms" : 6664,  // container start time, optional
-        "container.end.ms" : 23707,   // container finish time, optional
-        "container.duration.ms":  50000, // duration of the container, optional if start and end time is specified
-        "container.priority" : 20,    // priority of the container, optional, the default value is 20
-        "container.type" : "map"      // type of the container, could be "map" or "reduce", optional, the default value is "map"
-      }, {
-        "container.host" : "/default-rack/node3",
-        "container.start.ms" : 6665,
-        "container.end.ms" : 21593,
-        "container.priority" : 20,
-        "container.type" : "map"
-      }, {
-        "container.host" : "/default-rack/node2",
-        "container.start.ms" : 68770,
-        "container.end.ms" : 86613,
-        "container.priority" : 20,
-        "container.type" : "map"
-      } ]
-    }
-    {
-      "am.type" : "mapreduce",
-      "job.start.ms" : 105204,
-      "job.end.ms" : 197256,
-      "job.queue.name" : "sls_queue_2",
-      "job.id" : "job_2",
-      "job.user" : "default",
-      "job.tasks" : [ {
-        "container.host" : "/default-rack/node1",
-        "container.start.ms" : 111822,
-        "container.end.ms" : 133985,
-        "container.priority" : 20,
-        "container.type" : "map"
-      }, {
-        "container.host" : "/default-rack/node2",
-        "container.start.ms" : 111788,
-        "container.end.ms" : 131377,
-        "container.priority" : 20,
-        "container.type" : "map"
-      } ]
-    }
-
-
-### SYNTH JSON input file format
-Here we provide an example format of the synthetic generator json file. We use *(json-non-conforming)* inline comments to explain the use of each parameter.
-
-    {
-      "description" : "tiny jobs workload",    //description of the meaning of this collection of workloads
-      "num_nodes" : 10,  //total nodes in the simulated cluster
-      "nodes_per_rack" : 4, //number of nodes in each simulated rack
-      "num_jobs" : 10, // total number of jobs being simulated
-      "rand_seed" : 2, //the random seed used for deterministic randomized runs
-
-      // a list of “workloads”, each of which has job classes, and temporal properties
-      "workloads" : [
-        {
-          "workload_name" : "tiny-test", // name of the workload
-          "workload_weight": 0.5,  // used for weighted random selection of which workload to sample from
-          "queue_name" : "sls_queue_1", //queue the job will be submitted to
-
-        //different classes of jobs for this workload
-           "job_classes" : [
-            {
-              "class_name" : "class_1", //name of the class
-              "class_weight" : 1.0, //used for weighted random selection of class within workload
-
-              //nextr group controls average and standard deviation of a LogNormal distribution that
-              //determines the number of mappers and reducers for thejob.
-              "mtasks_avg" : 5,
-              "mtasks_stddev" : 1,
-              "rtasks_avg" : 5,
-              "rtasks_stddev" : 1,
-
-              //averge and stdev input param of LogNormal distribution controlling job duration
-              "dur_avg" : 60,
-              "dur_stddev" : 5,
-
-              //averge and stdev input param of LogNormal distribution controlling mappers and reducers durations
-              "mtime_avg" : 10,
-              "mtime_stddev" : 2,
-              "rtime_avg" : 20,
-              "rtime_stddev" : 4,
-
-              //averge and stdev input param of LogNormal distribution controlling memory and cores for map and reduce
-              "map_max_memory_avg" : 1024,
-              "map_max_memory_stddev" : 0.001,
-              "reduce_max_memory_avg" : 2048,
-              "reduce_max_memory_stddev" : 0.001,
-              "map_max_vcores_avg" : 1,
-              "map_max_vcores_stddev" : 0.001,
-              "reduce_max_vcores_avg" : 2,
-              "reduce_max_vcores_stddev" : 0.001,
-
-              //probability of running this job with a reservation
-              "chance_of_reservation" : 0.5,
-              //input parameters of LogNormal distribution that determines the deadline slack (as a multiplier of job duration)
-              "deadline_factor_avg" : 10.0,
-              "deadline_factor_stddev" : 0.001,
-            }
-           ],
-        // for each workload determines with what probability each time bucket is picked to choose the job starttime.
-        // In the example below the jobs have twice as much chance to start in the first minute than in the second minute
-        // of simulation, and then zero chance thereafter.
-          "time_distribution" : [
-            { "time" : 1, "weight" : 66 },
-            { "time" : 60, "weight" : 33 },
-            { "time" : 120, "jobs" : 0 }
-         ]
-        }
-     ]
-    }
-
-
-### Simulator input topology file format
-
-Here is an example input topology file which has 3 nodes organized in 1 rack.
-
-    {
-      "rack" : "default-rack",
-      "nodes" : [ {
-        "node" : "node1"
-      }, {
-        "node" : "node2"
-      }, {
-        "node" : "node3"
-      }]
-    }
-
-### Notes on LogNormal distribution:
-LogNormal distributions represent well many of the parameters we see in practice (e.g., most jobs have
-a small number of mappers, but few might be very large, and few very small, but greater than zero. It is
-however worth noticing that it might be tricky to use, as the average is typically on the right side of the
-peak (most common value) of the distribution, because the distribution has a one-side tail.
diff --git a/hadoop-tools/hadoop-sls/src/site/resources/css/site.css b/hadoop-tools/hadoop-sls/src/site/resources/css/site.css
deleted file mode 100644
index f830baafa8c..00000000000
--- a/hadoop-tools/hadoop-sls/src/site/resources/css/site.css
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
-* Licensed to the Apache Software Foundation (ASF) under one or more
-* contributor license agreements.  See the NOTICE file distributed with
-* this work for additional information regarding copyright ownership.
-* The ASF licenses this file to You under the Apache License, Version 2.0
-* (the "License"); you may not use this file except in compliance with
-* the License.  You may obtain a copy of the License at
-*
-*     http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
-#banner {
-  height: 93px;
-  background: none;
-}
-
-#bannerLeft img {
-  margin-left: 30px;
-  margin-top: 10px;
-}
-
-#bannerRight img {
-  margin: 17px;
-}
-
diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_JVM.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_JVM.png
deleted file mode 100644
index 22c8aead355a0d52f67de87ddc53f60f729498a4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 50386
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
M07*qoM6N<$g7Y7xEdT%j

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_arch.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_arch.png
deleted file mode 100644
index 4ff58556bce710e888e980eb074e07bc51d76623..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 45943
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

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_cluster_memory.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_cluster_memory.png
deleted file mode 100644
index 9d40a5a14f877fac13f22843db643a9229823edd..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 82526
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
G;Qs?4w2H<6

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_cluster_vcores.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_cluster_vcores.png
deleted file mode 100644
index e5c4b376d3b48bf036580d299aa028819f5921a3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 84663
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
Tc$z`v00000NkvXXu0mjf%R|}k

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_queue_allocated_memory.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_queue_allocated_memory.png
deleted file mode 100644
index aee7165fffc61843dbaf7df41eb530e0e209ebe5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 79779
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
QMgRZ+07*qoM6N<$f|4jfbN~PV

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_queue_allocated_vcores.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_queue_allocated_vcores.png
deleted file mode 100644
index a311cc39acb0d8cad58b4f5676fd80a28a0d2a3a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 78569
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
DCI&#i

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_running_apps_containers.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_running_apps_containers.png
deleted file mode 100644
index eacd23a4d66d8da64ef969324b355748dcec0a31..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 68920
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

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_scheduler_operation_timecost.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_scheduler_operation_timecost.png
deleted file mode 100644
index fdb1a1c639b38bf8533eb1e998b33e3a7b5fb9a9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 112727
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

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_track_job.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_track_job.png
deleted file mode 100644
index 5e6e9e724aa543759067efe1ad40418a13bd8512..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 59384
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
Xm+0b{AAIA100000NkvXXu0mjfizzeC

diff --git a/hadoop-tools/hadoop-sls/src/site/resources/images/sls_track_queue.png b/hadoop-tools/hadoop-sls/src/site/resources/images/sls_track_queue.png
deleted file mode 100644
index f608f9f013162ee6c4ac8a0a5094927e8924dcfd..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 55261
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
N002ovPDHLkV1gVX(;)x=

diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/BaseSLSRunnerTest.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/BaseSLSRunnerTest.java
deleted file mode 100644
index 513dbe5a436..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/BaseSLSRunnerTest.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls;
-
-import net.jcip.annotations.NotThreadSafe;
-import org.apache.commons.lang3.ArrayUtils;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.server.resourcemanager.monitor.invariants.MetricsInvariantChecker;
-import org.junit.After;
-import org.junit.Assert;
-import org.junit.Before;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.junit.runners.Parameterized.Parameter;
-
-import java.io.File;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.UUID;
-
-/**
- * This is a base class to ease the implementation of SLS-based tests.
- */
-@RunWith(value = Parameterized.class)
-@NotThreadSafe
-@SuppressWarnings("VisibilityModifier")
-public abstract class BaseSLSRunnerTest {
-
-  @Parameter(value = 0)
-  public String schedulerType;
-
-  @Parameter(value = 1)
-  public String traceType;
-
-  @Parameter(value = 2)
-  public String traceLocation;
-
-  @Parameter(value = 3)
-  public String nodeFile;
-
-  protected SLSRunner sls;
-  protected String ongoingInvariantFile;
-  protected String exitInvariantFile;
-
-  @Before
-  public abstract void setup();
-
-  @After
-  public void tearDown() throws InterruptedException {
-    if (sls != null) {
-      sls.stop();
-    }
-  }
-
-  public void runSLS(Configuration conf, long timeout) throws Exception {
-    File tempDir = new File("target", UUID.randomUUID().toString());
-    final List<Throwable> exceptionList =
-        Collections.synchronizedList(new ArrayList<Throwable>());
-
-    Thread.setDefaultUncaughtExceptionHandler(
-        new Thread.UncaughtExceptionHandler() {
-          @Override
-          public void uncaughtException(Thread t, Throwable e) {
-            e.printStackTrace();
-            exceptionList.add(e);
-          }
-        });
-
-    // start the simulator
-    File slsOutputDir = new File(tempDir.getAbsolutePath() + "/slsoutput/");
-
-    String[] args;
-
-    switch (traceType) {
-    case "OLD_SLS":
-      args = new String[] {"-inputsls", traceLocation, "-output",
-          slsOutputDir.getAbsolutePath() };
-      break;
-    case "OLD_RUMEN":
-      args = new String[] {"-inputrumen", traceLocation, "-output",
-          slsOutputDir.getAbsolutePath() };
-      break;
-    default:
-      args = new String[] {"-tracetype", traceType, "-tracelocation",
-          traceLocation, "-output", slsOutputDir.getAbsolutePath() };
-    }
-
-    if (nodeFile != null) {
-      args = ArrayUtils.addAll(args, "-nodes", nodeFile);
-    }
-
-    // enable continuous invariant checks
-    conf.set(YarnConfiguration.RM_SCHEDULER, schedulerType);
-    if (ongoingInvariantFile != null) {
-      conf.set(YarnConfiguration.RM_SCHEDULER_MONITOR_POLICIES,
-          MetricsInvariantChecker.class.getCanonicalName());
-      conf.set(MetricsInvariantChecker.INVARIANTS_FILE, ongoingInvariantFile);
-      conf.setBoolean(MetricsInvariantChecker.THROW_ON_VIOLATION, true);
-    }
-
-    sls = new SLSRunner(conf);
-    sls.run(args);
-
-    // wait for timeout seconds before stop, unless there is an uncaught
-    // exception in which
-    // case fail fast.
-    while (timeout >= 0) {
-      Thread.sleep(1000);
-
-      if (!exceptionList.isEmpty()) {
-        sls.stop();
-        Assert.fail("TestSLSRunner caught exception from child thread "
-            + "(TaskRunner.TaskDefinition): " + exceptionList);
-        break;
-      }
-      timeout--;
-    }
-    shutdownHookInvariantCheck();
-  }
-
-  /**
-   * Checks exit invariants (e.g., number of apps submitted, completed, etc.).
-   */
-  private void shutdownHookInvariantCheck() {
-
-    if(exitInvariantFile!=null) {
-      MetricsInvariantChecker ic = new MetricsInvariantChecker();
-      Configuration conf = new Configuration();
-      conf.set(MetricsInvariantChecker.INVARIANTS_FILE, exitInvariantFile);
-      conf.setBoolean(MetricsInvariantChecker.THROW_ON_VIOLATION, true);
-      ic.init(conf, null, null);
-      ic.editSchedule();
-    }
-  }
-
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestDagAMSimulator.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestDagAMSimulator.java
deleted file mode 100644
index e458b860e4d..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestDagAMSimulator.java
+++ /dev/null
@@ -1,92 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.hadoop.yarn.sls.appmaster.DAGAMSimulator;
-import org.apache.hadoop.yarn.sls.scheduler.ContainerSimulator;
-import org.junit.Test;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
-
-/**
- * Tests for DagAMSimulator.
- */
-public class TestDagAMSimulator {
-
-  /**
-   * Test to check whether containers are scheduled based on request delay.
-   * @throws Exception
-   */
-  @Test
-  public void testGetToBeScheduledContainers() throws Exception {
-    DAGAMSimulator dagamSimulator = new DAGAMSimulator();
-    List<ContainerSimulator> containerSimulators = new ArrayList<>();
-
-    // containers are requested with 0, 1000, 1500 and 4000ms delay.
-    containerSimulators.add(createContainerSim(1, 0));
-    containerSimulators.add(createContainerSim(2, 1000));
-    containerSimulators.add(createContainerSim(3, 1500));
-    containerSimulators.add(createContainerSim(4, 4000));
-
-    long startTime = System.currentTimeMillis();
-    List<ContainerSimulator> res = dagamSimulator.getToBeScheduledContainers(
-        containerSimulators, startTime);
-    // we should get only one container with request delay set to 0
-    assertEquals(1, res.size());
-    assertEquals(1, res.get(0).getAllocationId());
-
-    startTime -= 1000;
-    res = dagamSimulator.getToBeScheduledContainers(
-        containerSimulators, startTime);
-    // we should get containers with request delay set < 1000
-    assertEquals(2, res.size());
-    assertEquals(1, res.get(0).getAllocationId());
-    assertEquals(2, res.get(1).getAllocationId());
-
-    startTime -= 2000;
-    res = dagamSimulator.getToBeScheduledContainers(
-        containerSimulators, startTime);
-    // we should get containers with request delay set < 2000
-    assertEquals(3, res.size());
-    assertEquals(1, res.get(0).getAllocationId());
-    assertEquals(2, res.get(1).getAllocationId());
-    assertEquals(3, res.get(2).getAllocationId());
-  }
-
-  private ContainerSimulator createContainerSim(long allocationId,
-      long requestDelay) {
-    TaskContainerDefinition taskContainerDef =
-        mock(TaskContainerDefinition.class);
-    when(taskContainerDef.getResource()).thenReturn(null);
-    when(taskContainerDef.getDuration()).thenReturn(1000L);
-    when(taskContainerDef.getHostname()).thenReturn("*");
-    when(taskContainerDef.getPriority()).thenReturn(1);
-    when(taskContainerDef.getType()).thenReturn("Map");
-    when(taskContainerDef.getExecutionType()).thenReturn(null);
-    when(taskContainerDef.getAllocationId()).thenReturn(allocationId);
-    when(taskContainerDef.getRequestDelay()).thenReturn(requestDelay);
-    return ContainerSimulator.createFromTaskContainerDefinition(
-        taskContainerDef);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestReservationSystemInvariants.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestReservationSystemInvariants.java
deleted file mode 100644
index 22e1e2e729e..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestReservationSystemInvariants.java
+++ /dev/null
@@ -1,77 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import java.util.Arrays;
-import java.util.Collection;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.server.resourcemanager.monitor.invariants.InvariantsChecker;
-import org.apache.hadoop.yarn.server.resourcemanager.monitor.invariants.ReservationInvariantsChecker;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.junit.runners.Parameterized.Parameters;
-
-import net.jcip.annotations.NotThreadSafe;
-
-/**
- * This test performs an SLS run enabling a
- * {@code ReservationInvariantsChecker}.
- */
-@RunWith(value = Parameterized.class)
-@NotThreadSafe
-public class TestReservationSystemInvariants extends BaseSLSRunnerTest {
-
-  @Parameters(name = "Testing with: {1}, {0}, (nodeFile {3})")
-  public static Collection<Object[]> data() {
-    // Test with both schedulers, and all three trace types
-    return Arrays.asList(new Object[][] {
-        {CapacityScheduler.class.getCanonicalName(), "SYNTH",
-            "src/test/resources/syn.json", null},
-        {FairScheduler.class.getCanonicalName(), "SYNTH",
-            "src/test/resources/syn.json", null}
-    });
-  }
-
-  @Test(timeout = 120000)
-  @SuppressWarnings("all")
-  public void testSimulatorRunning() throws Exception {
-
-    Configuration conf = new Configuration(false);
-    conf.set(YarnConfiguration.RM_SCHEDULER, schedulerType);
-    conf.setBoolean(YarnConfiguration.RM_SCHEDULER_ENABLE_MONITORS, true);
-    conf.set(YarnConfiguration.RM_SCHEDULER_MONITOR_POLICIES,
-        ReservationInvariantsChecker.class.getCanonicalName());
-    conf.setBoolean(InvariantsChecker.THROW_ON_VIOLATION, true);
-
-
-    long timeTillShutDownInSec = 90;
-    runSLS(conf, timeTillShutDownInSec);
-
-  }
-
-  @Override
-  public void setup() {
-
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSDagAMSimulator.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSDagAMSimulator.java
deleted file mode 100644
index 54158c0083c..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSDagAMSimulator.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import net.jcip.annotations.NotThreadSafe;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.junit.runners.Parameterized.Parameters;
-
-import java.util.Arrays;
-import java.util.Collection;
-
-/**
- * This test performs simple runs of the SLS with the generic syn json format.
- */
-@RunWith(value = Parameterized.class)
-@NotThreadSafe
-public class TestSLSDagAMSimulator extends BaseSLSRunnerTest {
-
-  @Parameters(name = "Testing with: {1}, {0}, (nodeFile {3})")
-  public static Collection<Object[]> data() {
-
-    String capScheduler = CapacityScheduler.class.getCanonicalName();
-    String fairScheduler = FairScheduler.class.getCanonicalName();
-    String synthTraceFile = "src/test/resources/sls_dag.json";
-    String nodeFile = "src/test/resources/nodes.json";
-
-    // Test with both schedulers
-    return Arrays.asList(new Object[][] {
-
-        // covering the no nodeFile case
-        {capScheduler, "SLS", synthTraceFile, null },
-
-        // covering new commandline and CapacityScheduler
-        {capScheduler, "SLS", synthTraceFile, nodeFile },
-
-        // covering FairScheduler
-        {fairScheduler, "SLS", synthTraceFile, nodeFile },
-    });
-  }
-
-  @Before
-  public void setup() {
-    ongoingInvariantFile = "src/test/resources/ongoing-invariants.txt";
-    exitInvariantFile = "src/test/resources/exit-invariants.txt";
-  }
-
-  @Test(timeout = 90000)
-  @SuppressWarnings("all")
-  public void testSimulatorRunning() throws Exception {
-    Configuration conf = new Configuration(false);
-    long timeTillShutdownInsec = 20L;
-    runSLS(conf, timeTillShutdownInsec);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSGenericSynth.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSGenericSynth.java
deleted file mode 100644
index 79ebe219bfc..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSGenericSynth.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import net.jcip.annotations.NotThreadSafe;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.junit.runners.Parameterized.Parameters;
-
-import java.util.Arrays;
-import java.util.Collection;
-
-/**
- * This test performs simple runs of the SLS with the generic syn json format.
- */
-@RunWith(value = Parameterized.class)
-@NotThreadSafe
-public class TestSLSGenericSynth extends BaseSLSRunnerTest {
-
-  @Parameters(name = "Testing with: {1}, {0}, (nodeFile {3})")
-  public static Collection<Object[]> data() {
-
-    String capScheduler = CapacityScheduler.class.getCanonicalName();
-    String fairScheduler = FairScheduler.class.getCanonicalName();
-    String synthTraceFile = "src/test/resources/syn_generic.json";
-    String nodeFile = "src/test/resources/nodes.json";
-
-    // Test with both schedulers
-    return Arrays.asList(new Object[][] {
-
-        // covering the no nodeFile case
-        {capScheduler, "SYNTH", synthTraceFile, null },
-
-        // covering new commandline and CapacityScheduler
-        {capScheduler, "SYNTH", synthTraceFile, nodeFile },
-
-        // covering FairScheduler
-        {fairScheduler, "SYNTH", synthTraceFile, nodeFile },
-    });
-  }
-
-  @Before
-  public void setup() {
-    ongoingInvariantFile = "src/test/resources/ongoing-invariants.txt";
-    exitInvariantFile = "src/test/resources/exit-invariants.txt";
-  }
-
-  @Test(timeout = 90000)
-  @SuppressWarnings("all")
-  public void testSimulatorRunning() throws Exception {
-    Configuration conf = new Configuration(false);
-    long timeTillShutdownInsec = 20L;
-    runSLS(conf, timeTillShutdownInsec);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSRunner.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSRunner.java
deleted file mode 100644
index 2463ccf06a9..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSRunner.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import net.jcip.annotations.NotThreadSafe;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.junit.runners.Parameterized.*;
-
-import java.security.Security;
-import java.util.*;
-
-import static org.junit.Assert.assertEquals;
-
-/**
- * This test performs simple runs of the SLS with different trace types and
- * schedulers.
- */
-@RunWith(value = Parameterized.class)
-@NotThreadSafe
-public class TestSLSRunner extends BaseSLSRunnerTest {
-
-  @Parameters(name = "Testing with: {1}, {0}, (nodeFile {3})")
-  public static Collection<Object[]> data() {
-
-    String capScheduler = CapacityScheduler.class.getCanonicalName();
-    String fairScheduler = FairScheduler.class.getCanonicalName();
-    String slsTraceFile = "src/test/resources/inputsls.json";
-    String rumenTraceFile = "src/main/data/2jobs2min-rumen-jh.json";
-    String synthTraceFile = "src/test/resources/syn.json";
-    String nodeFile = "src/test/resources/nodes.json";
-
-    // Test with both schedulers, and all three load producers.
-    return Arrays.asList(new Object[][] {
-
-        // covering old commandline in tests
-        {capScheduler, "OLD_RUMEN", rumenTraceFile, nodeFile },
-        {capScheduler, "OLD_SLS", slsTraceFile, nodeFile },
-
-        // covering the no nodeFile case
-        {capScheduler, "SYNTH", synthTraceFile, null },
-        {capScheduler, "RUMEN", rumenTraceFile, null },
-        {capScheduler, "SLS", slsTraceFile, null },
-
-        // covering new commandline and CapacityScheduler
-        {capScheduler, "SYNTH", synthTraceFile, nodeFile },
-        {capScheduler, "RUMEN", rumenTraceFile, nodeFile },
-        {capScheduler, "SLS", slsTraceFile, nodeFile },
-
-        // covering FairScheduler
-        {fairScheduler, "SYNTH", synthTraceFile, nodeFile },
-        {fairScheduler, "RUMEN", rumenTraceFile, nodeFile },
-        {fairScheduler, "SLS", slsTraceFile, nodeFile }
-    });
-  }
-
-  @Before
-  public void setup() {
-    ongoingInvariantFile = "src/test/resources/ongoing-invariants.txt";
-    exitInvariantFile = "src/test/resources/exit-invariants.txt";
-  }
-
-  @Test(timeout = 90000)
-  @SuppressWarnings("all")
-  public void testSimulatorRunning() throws Exception {
-    Configuration conf = new Configuration(false);
-    long timeTillShutdownInsec = 20L;
-    runSLS(conf, timeTillShutdownInsec);
-  }
-
-  /**
-   * Test to check whether caching is enabled based on config.
-   */
-  @Test
-  public void testEnableCaching() {
-    String networkCacheDefault = Security.getProperty(
-        SLSRunner.NETWORK_CACHE_TTL);
-    String networkNegativeCacheDefault =
-        Security.getProperty(SLSRunner.NETWORK_NEGATIVE_CACHE_TTL);
-
-    try {
-      Configuration conf = new Configuration(false);
-      // check when dns caching is disabled
-      conf.setBoolean(SLSConfiguration.DNS_CACHING_ENABLED, false);
-      SLSRunner.enableDNSCaching(conf);
-      assertEquals(networkCacheDefault,
-          Security.getProperty(SLSRunner.NETWORK_CACHE_TTL));
-      assertEquals(networkNegativeCacheDefault,
-          Security.getProperty(SLSRunner.NETWORK_NEGATIVE_CACHE_TTL));
-
-      // check when dns caching is enabled
-      conf.setBoolean(SLSConfiguration.DNS_CACHING_ENABLED, true);
-      SLSRunner.enableDNSCaching(conf);
-      assertEquals("-1",
-          Security.getProperty(SLSRunner.NETWORK_CACHE_TTL));
-      assertEquals("-1",
-          Security.getProperty(SLSRunner.NETWORK_NEGATIVE_CACHE_TTL));
-    } finally {
-      // set security settings back to default
-      Security.setProperty(SLSRunner.NETWORK_CACHE_TTL,
-          String.valueOf(networkCacheDefault));
-      Security.setProperty(SLSRunner.NETWORK_NEGATIVE_CACHE_TTL,
-          String.valueOf(networkNegativeCacheDefault));
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSStreamAMSynth.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSStreamAMSynth.java
deleted file mode 100644
index a5d30e02d85..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSLSStreamAMSynth.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls;
-
-import net.jcip.annotations.NotThreadSafe;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.junit.runners.Parameterized.Parameters;
-
-import java.util.Arrays;
-import java.util.Collection;
-
-/**
- * This test performs simple runs of the SLS with the generic syn json format.
- */
-@RunWith(value = Parameterized.class)
-@NotThreadSafe
-public class TestSLSStreamAMSynth extends BaseSLSRunnerTest {
-
-  @Parameters(name = "Testing with: {1}, {0}, (nodeFile {3})")
-  public static Collection<Object[]> data() {
-
-    String capScheduler = CapacityScheduler.class.getCanonicalName();
-    String fairScheduler = FairScheduler.class.getCanonicalName();
-    String synthTraceFile = "src/test/resources/syn_stream.json";
-    String nodeFile = "src/test/resources/nodes.json";
-
-    // Test with both schedulers
-    return Arrays.asList(new Object[][] {
-
-        // covering the no nodeFile case
-        {capScheduler, "SYNTH", synthTraceFile, null },
-
-        // covering new commandline and CapacityScheduler
-        {capScheduler, "SYNTH", synthTraceFile, nodeFile },
-
-        // covering FairScheduler
-        {fairScheduler, "SYNTH", synthTraceFile, nodeFile },
-    });
-  }
-
-  @Before
-  public void setup() {
-    ongoingInvariantFile = "src/test/resources/ongoing-invariants.txt";
-    exitInvariantFile = "src/test/resources/exit-invariants.txt";
-  }
-
-  @Test(timeout = 90000)
-  @SuppressWarnings("all")
-  public void testSimulatorRunning() throws Exception {
-    Configuration conf = new Configuration(false);
-    long timeTillShutdownInsec = 20L;
-    runSLS(conf, timeTillShutdownInsec);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSynthJobGeneration.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSynthJobGeneration.java
deleted file mode 100644
index dd12a10f946..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/TestSynthJobGeneration.java
+++ /dev/null
@@ -1,266 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls;
-
-import org.apache.commons.math3.random.JDKRandomGenerator;
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.sls.synthetic.SynthJob;
-import org.apache.hadoop.yarn.sls.synthetic.SynthTraceJobProducer;
-
-import com.fasterxml.jackson.core.JsonFactory;
-import com.fasterxml.jackson.core.JsonFactoryBuilder;
-import com.fasterxml.jackson.databind.JsonMappingException;
-import com.fasterxml.jackson.databind.ObjectMapper;
-import org.junit.Assert;
-import org.junit.Test;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.IOException;
-import java.util.Arrays;
-
-import static com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertTrue;
-
-/**
- * Simple test class driving the {@code SynthTraceJobProducer}, and validating
- * jobs produce are within expected range.
- */
-public class TestSynthJobGeneration {
-
-  public final static Logger LOG =
-      LoggerFactory.getLogger(TestSynthJobGeneration.class);
-
-  @Test
-  public void testWorkloadGenerateTime()
-      throws IllegalArgumentException, IOException {
-
-    String workloadJson = "{\"job_classes\": [], \"time_distribution\":["
-        + "{\"time\": 0, \"weight\": 1}, " + "{\"time\": 30, \"weight\": 0},"
-        + "{\"time\": 60, \"weight\": 2}," + "{\"time\": 90, \"weight\": 1}"
-        + "]}";
-
-    JsonFactoryBuilder jsonFactoryBuilder = new JsonFactoryBuilder();
-    jsonFactoryBuilder.configure(JsonFactory.Feature.INTERN_FIELD_NAMES, true);
-    ObjectMapper mapper = new ObjectMapper(jsonFactoryBuilder.build());
-    mapper.configure(FAIL_ON_UNKNOWN_PROPERTIES, false);
-    SynthTraceJobProducer.Workload wl =
-        mapper.readValue(workloadJson, SynthTraceJobProducer.Workload.class);
-
-    JDKRandomGenerator rand = new JDKRandomGenerator();
-    rand.setSeed(0);
-
-    wl.init(rand);
-
-    int bucket0 = 0;
-    int bucket1 = 0;
-    int bucket2 = 0;
-    int bucket3 = 0;
-    for (int i = 0; i < 1000; ++i) {
-      long time = wl.generateSubmissionTime();
-      LOG.info("Generated time " + time);
-      if (time < 30) {
-        bucket0++;
-      } else if (time < 60) {
-        bucket1++;
-      } else if (time < 90) {
-        bucket2++;
-      } else {
-        bucket3++;
-      }
-    }
-
-    Assert.assertTrue(bucket0 > 0);
-    assertEquals(0, bucket1);
-    Assert.assertTrue(bucket2 > 0);
-    Assert.assertTrue(bucket3 > 0);
-    Assert.assertTrue(bucket2 > bucket0);
-    Assert.assertTrue(bucket2 > bucket3);
-
-    LOG.info("bucket0 {}, bucket1 {}, bucket2 {}, bucket3 {}", bucket0, bucket1,
-        bucket2, bucket3);
-
-  }
-
-  @Test
-  public void testMapReduce() throws IllegalArgumentException, IOException {
-
-    Configuration conf = new Configuration();
-
-    conf.set(SynthTraceJobProducer.SLS_SYNTHETIC_TRACE_FILE,
-        "src/test/resources/syn.json");
-
-    SynthTraceJobProducer stjp = new SynthTraceJobProducer(conf);
-
-    LOG.info(stjp.toString());
-
-    SynthJob js = (SynthJob) stjp.getNextJob();
-
-    int jobCount = 0;
-
-    while (js != null) {
-      LOG.info(js.toString());
-      validateJob(js);
-      js = (SynthJob) stjp.getNextJob();
-      jobCount++;
-    }
-
-    Assert.assertEquals(stjp.getNumJobs(), jobCount);
-  }
-
-  @Test
-  public void testGeneric() throws IllegalArgumentException, IOException {
-    Configuration conf = new Configuration();
-
-    conf.set(SynthTraceJobProducer.SLS_SYNTHETIC_TRACE_FILE,
-        "src/test/resources/syn_generic.json");
-
-    SynthTraceJobProducer stjp = new SynthTraceJobProducer(conf);
-
-    LOG.info(stjp.toString());
-
-    SynthJob js = (SynthJob) stjp.getNextJob();
-
-    int jobCount = 0;
-
-    while (js != null) {
-      LOG.info(js.toString());
-      validateJob(js);
-      js = (SynthJob) stjp.getNextJob();
-      jobCount++;
-    }
-
-    Assert.assertEquals(stjp.getNumJobs(), jobCount);
-  }
-
-  @Test
-  public void testStream() throws IllegalArgumentException, IOException {
-    Configuration conf = new Configuration();
-
-    conf.set(SynthTraceJobProducer.SLS_SYNTHETIC_TRACE_FILE,
-        "src/test/resources/syn_stream.json");
-
-    SynthTraceJobProducer stjp = new SynthTraceJobProducer(conf);
-
-    LOG.info(stjp.toString());
-
-    SynthJob js = (SynthJob) stjp.getNextJob();
-
-    int jobCount = 0;
-
-    while (js != null) {
-      LOG.info(js.toString());
-      validateJob(js);
-      js = (SynthJob) stjp.getNextJob();
-      jobCount++;
-    }
-
-    Assert.assertEquals(stjp.getNumJobs(), jobCount);
-  }
-
-  @Test
-  public void testSample() throws IOException {
-
-    JsonFactoryBuilder jsonFactoryBuilder = new JsonFactoryBuilder();
-    jsonFactoryBuilder.configure(JsonFactory.Feature.INTERN_FIELD_NAMES, true);
-    ObjectMapper mapper = new ObjectMapper(jsonFactoryBuilder.build());
-    mapper.configure(FAIL_ON_UNKNOWN_PROPERTIES, false);
-
-    JDKRandomGenerator rand = new JDKRandomGenerator();
-    rand.setSeed(0);
-
-    String valJson = "{\"val\" : 5 }";
-    SynthTraceJobProducer.Sample valSample =
-        mapper.readValue(valJson, SynthTraceJobProducer.Sample.class);
-    valSample.init(rand);
-    int val = valSample.getInt();
-    Assert.assertEquals(5, val);
-
-    String distJson = "{\"val\" : 5, \"std\" : 1 }";
-    SynthTraceJobProducer.Sample distSample =
-        mapper.readValue(distJson, SynthTraceJobProducer.Sample.class);
-    distSample.init(rand);
-    double dist = distSample.getDouble();
-    Assert.assertTrue(dist > 2 && dist < 8);
-
-    String normdistJson = "{\"val\" : 5, \"std\" : 1, \"dist\": \"NORM\" }";
-    SynthTraceJobProducer.Sample normdistSample =
-        mapper.readValue(normdistJson, SynthTraceJobProducer.Sample.class);
-    normdistSample.init(rand);
-    double normdist = normdistSample.getDouble();
-    Assert.assertTrue(normdist > 2 && normdist < 8);
-
-    String discreteJson = "{\"discrete\" : [2, 4, 6, 8]}";
-    SynthTraceJobProducer.Sample discreteSample =
-        mapper.readValue(discreteJson, SynthTraceJobProducer.Sample.class);
-    discreteSample.init(rand);
-    int discrete = discreteSample.getInt();
-    Assert.assertTrue(
-        Arrays.asList(new Integer[] {2, 4, 6, 8}).contains(discrete));
-
-    String discreteWeightsJson =
-        "{\"discrete\" : [2, 4, 6, 8], " + "\"weights\": [0, 0, 0, 1]}";
-    SynthTraceJobProducer.Sample discreteWeightsSample = mapper
-        .readValue(discreteWeightsJson, SynthTraceJobProducer.Sample.class);
-    discreteWeightsSample.init(rand);
-    int discreteWeights = discreteWeightsSample.getInt();
-    Assert.assertEquals(8, discreteWeights);
-
-    String invalidJson = "{\"val\" : 5, \"discrete\" : [2, 4, 6, 8], "
-        + "\"weights\": [0, 0, 0, 1]}";
-    try {
-      mapper.readValue(invalidJson, SynthTraceJobProducer.Sample.class);
-      Assert.fail();
-    } catch (JsonMappingException e) {
-      Assert.assertTrue(e.getMessage().startsWith("Instantiation of"));
-    }
-
-    String invalidDistJson =
-        "{\"val\" : 5, \"std\" : 1, " + "\"dist\": \"INVALID\" }";
-    try {
-      mapper.readValue(invalidDistJson, SynthTraceJobProducer.Sample.class);
-      Assert.fail();
-    } catch (JsonMappingException e) {
-      Assert.assertTrue(e.getMessage().startsWith("Cannot construct instance of"));
-    }
-  }
-
-  private void validateJob(SynthJob js) {
-
-    assertTrue(js.getSubmissionTime() > 0);
-    assertTrue(js.getDuration() > 0);
-    assertTrue(js.getTotalSlotTime() >= 0);
-
-    if (js.hasDeadline()) {
-      assertTrue(js.getDeadline() > js.getSubmissionTime() + js.getDuration());
-    }
-
-    assertTrue(js.getTasks().size() > 0);
-
-    for (SynthJob.SynthTask t : js.getTasks()) {
-      assertNotNull(t.getType());
-      assertTrue(t.getTime() > 0);
-      assertTrue(t.getMemory() > 0);
-      assertTrue(t.getVcores() > 0);
-      assertEquals(ExecutionType.GUARANTEED, t.getExecutionType());
-    }
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/appmaster/TestAMSimulator.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/appmaster/TestAMSimulator.java
deleted file mode 100644
index f5db1684c71..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/appmaster/TestAMSimulator.java
+++ /dev/null
@@ -1,386 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.appmaster;
-
-import com.codahale.metrics.MetricRegistry;
-import java.util.HashMap;
-import org.apache.commons.io.FileUtils;
-import org.apache.hadoop.tools.rumen.datatypes.UserName;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.ExecutionType;
-import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.ReservationId;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-import org.apache.hadoop.yarn.client.cli.RMAdminCLI;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.apache.hadoop.yarn.sls.AMDefinitionRumen;
-import org.apache.hadoop.yarn.sls.TaskContainerDefinition;
-import org.apache.hadoop.yarn.sls.SLSRunner;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.nodemanager.NMSimulator;
-import org.apache.hadoop.yarn.sls.scheduler.*;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.junit.After;
-import org.junit.Assert;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.mockito.Mockito;
-
-import java.io.IOException;
-import java.nio.file.Files;
-import java.nio.file.Path;
-import java.nio.file.Paths;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.ConcurrentMap;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
-
-@RunWith(Parameterized.class)
-public class TestAMSimulator {
-  private ResourceManager rm;
-  private YarnConfiguration conf;
-  private Path metricOutputDir;
-
-  private Class<?> slsScheduler;
-  private Class<?> scheduler;
-
-  @Parameterized.Parameters
-  public static Collection<Object[]> params() {
-    return Arrays.asList(new Object[][] {
-        {SLSFairScheduler.class, FairScheduler.class},
-        {SLSCapacityScheduler.class, CapacityScheduler.class}
-    });
-  }
-
-  public TestAMSimulator(Class<?> slsScheduler, Class<?> scheduler) {
-    this.slsScheduler = slsScheduler;
-    this.scheduler = scheduler;
-  }
-
-  @Before
-  public void setup() {
-    createMetricOutputDir();
-
-    conf = new YarnConfiguration();
-    conf.set(SLSConfiguration.METRICS_OUTPUT_DIR, metricOutputDir.toString());
-    conf.set(YarnConfiguration.RM_SCHEDULER, slsScheduler.getName());
-    conf.set(SLSConfiguration.RM_SCHEDULER, scheduler.getName());
-    conf.set(YarnConfiguration.NODE_LABELS_ENABLED, "true");
-    conf.setBoolean(SLSConfiguration.METRICS_SWITCH, true);
-    rm = new ResourceManager();
-    rm.init(conf);
-    rm.start();
-  }
-
-  class MockAMSimulator extends AMSimulator {
-    @Override
-    protected void processResponseQueue()
-        throws InterruptedException, YarnException, IOException {
-    }
-
-    @Override
-    protected void sendContainerRequest()
-        throws YarnException, IOException, InterruptedException {
-    }
-
-    @Override
-    public void initReservation(ReservationId id, long deadline, long now){
-    }
-
-    @Override
-    protected void checkStop() {
-    }
-  }
-
-  private void verifySchedulerMetrics(String appId) {
-    if (scheduler.equals(FairScheduler.class)) {
-      SchedulerMetrics schedulerMetrics = ((SchedulerWrapper)
-          rm.getResourceScheduler()).getSchedulerMetrics();
-      MetricRegistry metricRegistry = schedulerMetrics.getMetrics();
-      for (FairSchedulerMetrics.Metric metric :
-          FairSchedulerMetrics.Metric.values()) {
-        String key = "variable.app." + appId + "." + metric.getValue() +
-            ".memory";
-        Assert.assertTrue(metricRegistry.getGauges().containsKey(key));
-        Assert.assertNotNull(metricRegistry.getGauges().get(key).getValue());
-      }
-    }
-  }
-
-  private void createMetricOutputDir() {
-    Path testDir =
-        Paths.get(System.getProperty("test.build.data", "target/test-dir"));
-    try {
-      metricOutputDir = Files.createTempDirectory(testDir, "output");
-    } catch (IOException e) {
-      Assert.fail(e.toString());
-    }
-  }
-
-  private void deleteMetricOutputDir() {
-    try {
-      FileUtils.deleteDirectory(metricOutputDir.toFile());
-    } catch (IOException e) {
-      Assert.fail(e.toString());
-    }
-  }
-
-  @Test
-  public void testAMSimulator() throws Exception {
-    // Register one app
-    MockAMSimulator app = new MockAMSimulator();
-    String appId = "app1";
-    String queue = "default";
-    List<ContainerSimulator> containers = new ArrayList<>();
-    HashMap<ApplicationId, AMSimulator> map = new HashMap<>();
-
-    UserName mockUser = mock(UserName.class);
-    when(mockUser.getValue()).thenReturn("user1");
-    AMDefinitionRumen amDef =
-        AMDefinitionRumen.Builder.create()
-        .withUser(mockUser)
-        .withQueue(queue)
-        .withJobId(appId)
-        .withJobStartTime(0)
-        .withJobFinishTime(1000000L)
-        .withAmResource(SLSConfiguration.getAMContainerResource(conf))
-        .withTaskContainers(containers)
-        .build();
-    app.init(amDef, rm, null, true, 0, 1000, map);
-    app.firstStep();
-
-    verifySchedulerMetrics(appId);
-
-    Assert.assertEquals(1, rm.getRMContext().getRMApps().size());
-    Assert.assertNotNull(rm.getRMContext().getRMApps().get(app.appId));
-
-    // Finish this app
-    app.lastStep();
-  }
-
-  @Test
-  public void testAMSimulatorWithNodeLabels() throws Exception {
-    if (scheduler.equals(CapacityScheduler.class)) {
-      // add label to the cluster
-      RMAdminCLI rmAdminCLI = new RMAdminCLI(conf);
-      String[] args = {"-addToClusterNodeLabels", "label1"};
-      rmAdminCLI.run(args);
-
-      MockAMSimulator app = new MockAMSimulator();
-      String appId = "app1";
-      String queue = "default";
-      List<ContainerSimulator> containers = new ArrayList<>();
-      HashMap<ApplicationId, AMSimulator> map = new HashMap<>();
-
-      UserName mockUser = mock(UserName.class);
-      when(mockUser.getValue()).thenReturn("user1");
-      AMDefinitionRumen amDef =
-          AMDefinitionRumen.Builder.create()
-              .withUser(mockUser)
-              .withQueue(queue)
-              .withJobId(appId)
-              .withJobStartTime(0)
-              .withJobFinishTime(1000000L)
-              .withAmResource(SLSConfiguration.getAMContainerResource(conf))
-              .withTaskContainers(containers)
-              .withLabelExpression("label1")
-              .build();
-      app.init(amDef, rm, null, true, 0, 1000, map);
-      app.firstStep();
-
-      verifySchedulerMetrics(appId);
-
-      ConcurrentMap<ApplicationId, RMApp> rmApps =
-          rm.getRMContext().getRMApps();
-      Assert.assertEquals(1, rmApps.size());
-      RMApp rmApp = rmApps.get(app.appId);
-      Assert.assertNotNull(rmApp);
-      Assert.assertEquals("label1", rmApp.getAmNodeLabelExpression());
-    }
-  }
-
-  @Test
-  public void testPackageRequests() throws YarnException {
-    MockAMSimulator app = new MockAMSimulator();
-    List<ContainerSimulator> containerSimulators = new ArrayList<>();
-    Resource resource = Resources.createResource(1024);
-    int priority = 1;
-    ExecutionType execType = ExecutionType.GUARANTEED;
-    String type = "map";
-
-    TaskContainerDefinition.Builder builder =
-        TaskContainerDefinition.Builder.create()
-        .withResource(resource)
-        .withDuration(100)
-        .withPriority(1)
-        .withType(type)
-        .withExecutionType(execType)
-        .withAllocationId(-1)
-        .withRequestDelay(0);
-
-    ContainerSimulator s1 = ContainerSimulator
-        .createFromTaskContainerDefinition(
-            builder.withHostname("/default-rack/h1").build());
-    ContainerSimulator s2 = ContainerSimulator
-        .createFromTaskContainerDefinition(
-            builder.withHostname("/default-rack/h1").build());
-    ContainerSimulator s3 = ContainerSimulator
-        .createFromTaskContainerDefinition(
-            builder.withHostname("/default-rack/h2").build());
-
-    containerSimulators.add(s1);
-    containerSimulators.add(s2);
-    containerSimulators.add(s3);
-
-    List<ResourceRequest> res = app.packageRequests(containerSimulators,
-        priority);
-
-    // total 4 resource requests: any -> 1, rack -> 1, node -> 2
-    // All resource requests for any would be packaged into 1.
-    // All resource requests for racks would be packaged into 1 as all of them
-    // are for same rack.
-    // All resource requests for nodes would be packaged into 2 as there are
-    // two different nodes.
-    Assert.assertEquals(4, res.size());
-    int anyRequestCount = 0;
-    int rackRequestCount = 0;
-    int nodeRequestCount = 0;
-
-    for (ResourceRequest request : res) {
-      String resourceName = request.getResourceName();
-      if (resourceName.equals("*")) {
-        anyRequestCount++;
-      } else if (resourceName.equals("/default-rack")) {
-        rackRequestCount++;
-      } else {
-        nodeRequestCount++;
-      }
-    }
-
-    Assert.assertEquals(1, anyRequestCount);
-    Assert.assertEquals(1, rackRequestCount);
-    Assert.assertEquals(2, nodeRequestCount);
-
-    containerSimulators.clear();
-    s1 = ContainerSimulator.createFromTaskContainerDefinition(
-        createDefaultTaskContainerDefMock(resource, priority, execType, type,
-            "/default-rack/h1", 1));
-    s2 = ContainerSimulator.createFromTaskContainerDefinition(
-        createDefaultTaskContainerDefMock(resource, priority, execType, type,
-            "/default-rack/h1", 2));
-    s3 = ContainerSimulator.createFromTaskContainerDefinition(
-        createDefaultTaskContainerDefMock(resource, priority, execType, type,
-            "/default-rack/h2", 1));
-
-    containerSimulators.add(s1);
-    containerSimulators.add(s2);
-    containerSimulators.add(s3);
-
-    res = app.packageRequests(containerSimulators, priority);
-
-    // total 7 resource requests: any -> 2, rack -> 2, node -> 3
-    // All resource requests for any would be packaged into 2 as there are
-    // two different allocation id.
-    // All resource requests for racks would be packaged into 2 as all of them
-    // are for same rack but for two different allocation id.
-    // All resource requests for nodes would be packaged into 3 as either node
-    // or allocation id is different for each request.
-    Assert.assertEquals(7, res.size());
-
-    anyRequestCount = 0;
-    rackRequestCount = 0;
-    nodeRequestCount = 0;
-
-    for (ResourceRequest request : res) {
-      String resourceName = request.getResourceName();
-      long allocationId = request.getAllocationRequestId();
-      // allocation id should be either 1 or 2
-      Assert.assertTrue(allocationId == 1 || allocationId == 2);
-      if (resourceName.equals("*")) {
-        anyRequestCount++;
-      } else if (resourceName.equals("/default-rack")) {
-        rackRequestCount++;
-      } else {
-        nodeRequestCount++;
-      }
-    }
-
-    Assert.assertEquals(2, anyRequestCount);
-    Assert.assertEquals(2, rackRequestCount);
-    Assert.assertEquals(3, nodeRequestCount);
-  }
-
-  @Test
-  public void testAMSimulatorRanNodesCleared() throws Exception {
-    NMSimulator nm = new NMSimulator();
-    nm.init("/rack1/testNode1", Resources.createResource(1024 * 10, 10), 0, 1000,
-        rm, -1f);
-
-    Map<NodeId, NMSimulator> nmMap = new HashMap<>();
-    nmMap.put(nm.getNode().getNodeID(), nm);
-
-    MockAMSimulator app = new MockAMSimulator();
-    app.appId = ApplicationId.newInstance(0l, 1);
-    SLSRunner slsRunner = Mockito.mock(SLSRunner.class);
-    app.se = slsRunner;
-    when(slsRunner.getNmMap()).thenReturn(nmMap);
-    app.getRanNodes().add(nm.getNode().getNodeID());
-    nm.getNode().getRunningApps().add(app.appId);
-    Assert.assertTrue(nm.getNode().getRunningApps().contains(app.appId));
-
-    app.lastStep();
-    Assert.assertFalse(nm.getNode().getRunningApps().contains(app.appId));
-    Assert.assertTrue(nm.getNode().getRunningApps().isEmpty());
-  }
-  private TaskContainerDefinition createDefaultTaskContainerDefMock(
-      Resource resource, int priority, ExecutionType execType, String type,
-      String hostname, long allocationId) {
-    TaskContainerDefinition taskContainerDef =
-        mock(TaskContainerDefinition.class);
-    when(taskContainerDef.getResource()).thenReturn(resource);
-    when(taskContainerDef.getDuration()).thenReturn(100L);
-    when(taskContainerDef.getPriority()).thenReturn(priority);
-    when(taskContainerDef.getType()).thenReturn(type);
-    when(taskContainerDef.getExecutionType()).thenReturn(execType);
-    when(taskContainerDef.getHostname()).thenReturn(hostname);
-    when(taskContainerDef.getAllocationId()).thenReturn(allocationId);
-    return taskContainerDef;
-  }
-
-  @After
-  public void tearDown() {
-    if (rm != null) {
-      rm.stop();
-    }
-
-    deleteMetricOutputDir();
-  }
-}
\ No newline at end of file
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/nodemanager/TestNMSimulator.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/nodemanager/TestNMSimulator.java
deleted file mode 100644
index 6f7ff179246..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/nodemanager/TestNMSimulator.java
+++ /dev/null
@@ -1,234 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.nodemanager;
-
-import java.util.function.Supplier;
-import org.apache.hadoop.test.GenericTestUtils;
-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.Container;
-import org.apache.hadoop.yarn.api.records.ContainerId;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler;
-import org.apache.hadoop.yarn.server.utils.BuilderUtils;
-import org.apache.hadoop.yarn.sls.conf.SLSConfiguration;
-import org.apache.hadoop.yarn.sls.scheduler.SLSCapacityScheduler;
-import org.apache.hadoop.yarn.sls.scheduler.SLSFairScheduler;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.junit.After;
-import org.junit.Assert;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-
-import java.util.Arrays;
-import java.util.Collection;
-
-@RunWith(Parameterized.class)
-public class TestNMSimulator {
-  private final int GB = 1024;
-  private ResourceManager rm;
-  private YarnConfiguration conf;
-
-  private Class slsScheduler;
-  private Class scheduler;
-
-  @Parameterized.Parameters
-  public static Collection<Object[]> params() {
-    return Arrays.asList(new Object[][] {
-        {SLSFairScheduler.class, FairScheduler.class},
-        {SLSCapacityScheduler.class, CapacityScheduler.class}
-    });
-  }
-
-  public TestNMSimulator(Class slsScheduler, Class scheduler) {
-    this.slsScheduler = slsScheduler;
-    this.scheduler = scheduler;
-  }
-
-  @Before
-  public void setup() {
-    conf = new YarnConfiguration();
-    conf.set(YarnConfiguration.RM_SCHEDULER, slsScheduler.getName());
-    conf.set(SLSConfiguration.RM_SCHEDULER, scheduler.getName());
-    conf.setBoolean(SLSConfiguration.METRICS_SWITCH, false);
-    rm = new ResourceManager();
-    rm.init(conf);
-    rm.start();
-  }
-
-  @Test
-  public void testNMSimulator() throws Exception {
-    // Register one node
-    NMSimulator node1 = new NMSimulator();
-    node1.init("/rack1/node1", Resources.createResource(GB * 10, 10), 0, 1000,
-        rm, -1f);
-    node1.middleStep();
-
-    int numClusterNodes = rm.getResourceScheduler().getNumClusterNodes();
-    int cumulativeSleepTime = 0;
-    int sleepInterval = 100;
-
-    while(numClusterNodes != 1 && cumulativeSleepTime < 5000) {
-      Thread.sleep(sleepInterval);
-      cumulativeSleepTime = cumulativeSleepTime + sleepInterval;
-      numClusterNodes = rm.getResourceScheduler().getNumClusterNodes();
-    }
-
-    GenericTestUtils.waitFor(new Supplier<Boolean>() {
-      @Override public Boolean get() {
-        return rm.getResourceScheduler().getRootQueueMetrics()
-            .getAvailableMB() > 0;
-      }
-    }, 500, 10000);
-
-    Assert.assertEquals(1, rm.getResourceScheduler().getNumClusterNodes());
-    Assert.assertEquals(GB * 10,
-        rm.getResourceScheduler().getRootQueueMetrics().getAvailableMB());
-    Assert.assertEquals(10,
-        rm.getResourceScheduler().getRootQueueMetrics()
-            .getAvailableVirtualCores());
-
-    // Allocate one container on node1
-    ContainerId cId1 = newContainerId(1, 1, 1);
-    Container container1 = Container.newInstance(cId1, null, null,
-        Resources.createResource(GB, 1), null, null);
-    node1.addNewContainer(container1, 100000l, null);
-    Assert.assertTrue("Node1 should have one running container.",
-        node1.getRunningContainers().containsKey(cId1));
-
-    // Allocate one AM container on node1
-    ContainerId cId2 = newContainerId(2, 1, 1);
-    Container container2 = Container.newInstance(cId2, null, null,
-        Resources.createResource(GB, 1), null, null);
-    node1.addNewContainer(container2, -1l, null);
-    Assert.assertTrue("Node1 should have one running AM container",
-        node1.getAMContainers().contains(cId2));
-
-    // Remove containers
-    node1.cleanupContainer(cId1);
-    Assert.assertTrue("Container1 should be removed from Node1.",
-        node1.getCompletedContainers().contains(cId1));
-    node1.cleanupContainer(cId2);
-    Assert.assertFalse("Container2 should be removed from Node1.",
-        node1.getAMContainers().contains(cId2));
-  }
-
-  private ContainerId newContainerId(int appId, int appAttemptId, int cId) {
-    return BuilderUtils.newContainerId(
-        BuilderUtils.newApplicationAttemptId(
-            BuilderUtils.newApplicationId(System.currentTimeMillis(), appId),
-            appAttemptId), cId);
-  }
-
-  @Test
-  public void testNMSimAppAddedAndRemoved() throws Exception {
-    // Register one node
-    NMSimulator node = new NMSimulator();
-    node.init("/rack1/node1", Resources.createResource(GB * 10, 10), 0, 1000,
-        rm, -1f);
-    node.middleStep();
-
-    int numClusterNodes = rm.getResourceScheduler().getNumClusterNodes();
-    int cumulativeSleepTime = 0;
-    int sleepInterval = 100;
-
-    while (numClusterNodes != 1 && cumulativeSleepTime < 5000) {
-      Thread.sleep(sleepInterval);
-      cumulativeSleepTime = cumulativeSleepTime + sleepInterval;
-      numClusterNodes = rm.getResourceScheduler().getNumClusterNodes();
-    }
-
-    GenericTestUtils.waitFor(() ->
-            rm.getResourceScheduler().getRootQueueMetrics()
-                .getAvailableMB() > 0,
-        500, 10000);
-
-    Assert.assertEquals("Node should have no runningApps.",
-        node.getNode().getRunningApps().size(), 0);
-
-    // Allocate one app container on node
-    ApplicationId appId = BuilderUtils.newApplicationId(1, 1);
-    ApplicationAttemptId appAttemptId =
-        BuilderUtils.newApplicationAttemptId(appId, 1);
-    ContainerId cId = BuilderUtils.newContainerId(appAttemptId, 1);
-    Container container = Container.newInstance(cId, null, null,
-        Resources.createResource(GB, 1), null, null);
-    node.addNewContainer(container, 100000l, appId);
-    Assert.assertTrue("Node should have app: "
-            + appId + " in runningApps list.",
-        node.getNode().getRunningApps().contains(appId));
-
-    // Finish the app on the node.
-    node.finishApplication(appId);
-    Assert.assertFalse("Node should not have app: "
-            + appId + " in runningApps list.",
-        node.getNode().getRunningApps().contains(appId));
-    Assert.assertEquals("Node should have no runningApps.",
-        node.getNode().getRunningApps().size(), 0);
-  }
-
-  @Test
-  public void testNMSimNullAppAddedAndRemoved() throws Exception {
-    // Register one node
-    NMSimulator node = new NMSimulator();
-    node.init("/rack1/node1", Resources.createResource(GB * 10, 10), 0, 1000,
-        rm, -1f);
-    node.middleStep();
-
-    int numClusterNodes = rm.getResourceScheduler().getNumClusterNodes();
-    int cumulativeSleepTime = 0;
-    int sleepInterval = 100;
-
-    while (numClusterNodes != 1 && cumulativeSleepTime < 5000) {
-      Thread.sleep(sleepInterval);
-      cumulativeSleepTime = cumulativeSleepTime + sleepInterval;
-      numClusterNodes = rm.getResourceScheduler().getNumClusterNodes();
-    }
-
-    GenericTestUtils.waitFor(() ->
-            rm.getResourceScheduler().getRootQueueMetrics()
-                .getAvailableMB() > 0,
-        500, 10000);
-
-    Assert.assertEquals("Node should have no runningApps.",
-        node.getNode().getRunningApps().size(), 0);
-
-    // Allocate null app container on node
-    ContainerId cId = newContainerId(1, 1, 1);
-    Container container = Container.newInstance(cId, null, null,
-        Resources.createResource(GB, 1), null, null);
-    node.addNewContainer(container, 100000l, null);
-    Assert.assertEquals("Node should have no runningApps if appId is null.",
-        node.getNode().getRunningApps().size(), 0);
-
-    // Finish non-existent app on the node.
-    ApplicationId appId = BuilderUtils.newApplicationId(1, 1);
-    node.finishApplication(appId);
-    Assert.assertEquals("Node should have no runningApps.",
-        node.getNode().getRunningApps().size(), 0);
-  }
-
-  @After
-  public void tearDown() throws Exception {
-    rm.stop();
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/scheduler/TestTaskRunner.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/scheduler/TestTaskRunner.java
deleted file mode 100644
index ce6c1b30b65..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/scheduler/TestTaskRunner.java
+++ /dev/null
@@ -1,247 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.sls.scheduler;
-
-import org.junit.After;
-import org.junit.Assert;
-import org.junit.Before;
-import org.junit.Test;
-
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-
-public class TestTaskRunner {
-  private TaskRunner runner;
-
-  @Before
-  public void setUp() {
-    runner = new TaskRunner();
-    runner.setQueueSize(5);
-  }
-
-  @After
-  public void cleanUp() throws InterruptedException {
-    runner.stop();
-  }
-
-  public static class SingleTask extends TaskRunner.Task {
-    public static CountDownLatch latch = new CountDownLatch(1);
-    public static boolean first;
-
-    public SingleTask(long startTime) {
-      super.init(startTime);
-    }
-
-    @Override
-    public void firstStep() {
-      if (first) {
-        Assert.fail();
-      }
-      first = true;
-      latch.countDown();
-    }
-
-    @Override
-    public void middleStep() {
-      Assert.fail();
-    }
-
-    @Override
-    public void lastStep() {
-      Assert.fail();
-    }
-  }
-
-  @Test
-  public void testSingleTask() throws Exception {
-    runner.start();
-    runner.schedule(new SingleTask(0));
-    SingleTask.latch.await(5000, TimeUnit.MILLISECONDS);
-    Assert.assertTrue(SingleTask.first);
-  }
-
-  public static class DualTask extends TaskRunner.Task {
-    public static CountDownLatch latch = new CountDownLatch(1);
-    public static boolean first;
-    public static boolean last;
-
-    public DualTask(long startTime, long endTime, long interval) {
-      super.init(startTime, endTime, interval);
-    }
-
-    @Override
-    public void firstStep() {
-      if (first) {
-        Assert.fail();
-      }
-      first = true;
-    }
-
-    @Override
-    public void middleStep() {
-      Assert.fail();
-    }
-
-    @Override
-    public void lastStep() {
-      if (last) {
-        Assert.fail();
-      }
-      last = true;
-      latch.countDown();
-    }
-  }
-
-  @Test
-  public void testDualTask() throws Exception {
-    runner.start();
-    runner.schedule(new DualTask(0, 10, 10));
-    DualTask.latch.await(5000, TimeUnit.MILLISECONDS);
-    Assert.assertTrue(DualTask.first);
-    Assert.assertTrue(DualTask.last);
-  }
-
-  public static class TriTask extends TaskRunner.Task {
-    public static CountDownLatch latch = new CountDownLatch(1);
-    public static boolean first;
-    public static boolean middle;
-    public static boolean last;
-
-    public TriTask(long startTime, long endTime, long interval) {
-      super.init(startTime, endTime, interval);
-    }
-
-    @Override
-    public void firstStep() {
-      if (first) {
-        Assert.fail();
-      }
-      first = true;
-    }
-
-    @Override
-    public void middleStep() {
-      if (middle) {
-        Assert.fail();
-      }
-      middle = true;
-    }
-
-    @Override
-    public void lastStep() {
-      if (last) {
-        Assert.fail();
-      }
-      last = true;
-      latch.countDown();
-    }
-  }
-
-  @Test
-  public void testTriTask() throws Exception {
-    runner.start();
-    runner.schedule(new TriTask(0, 10, 5));
-    TriTask.latch.await(5000, TimeUnit.MILLISECONDS);
-    Assert.assertTrue(TriTask.first);
-    Assert.assertTrue(TriTask.middle);
-    Assert.assertTrue(TriTask.last);
-  }
-
-  public static class MultiTask extends TaskRunner.Task {
-    public static CountDownLatch latch = new CountDownLatch(1);
-    public static boolean first;
-    public static int middle;
-    public static boolean last;
-
-    public MultiTask(long startTime, long endTime, long interval) {
-      super.init(startTime, endTime, interval);
-    }
-
-    @Override
-    public void firstStep() {
-      if (first) {
-        Assert.fail();
-      }
-      first = true;
-    }
-
-    @Override
-    public void middleStep() {
-      middle++;
-    }
-
-    @Override
-    public void lastStep() {
-      if (last) {
-        Assert.fail();
-      }
-      last = true;
-      latch.countDown();
-    }
-  }
-
-  @Test
-  public void testMultiTask() throws Exception {
-    runner.start();
-    runner.schedule(new MultiTask(0, 20, 5));
-    MultiTask.latch.await(5000, TimeUnit.MILLISECONDS);
-    Assert.assertTrue(MultiTask.first);
-    Assert.assertEquals((20 - 0) / 5 - 2 + 1, MultiTask.middle);
-    Assert.assertTrue(MultiTask.last);
-  }
-
-
-  public static class PreStartTask extends TaskRunner.Task {
-    public static CountDownLatch latch = new CountDownLatch(1);
-    public static boolean first;
-
-    public PreStartTask(long startTime) {
-      super.init(startTime);
-    }
-
-    @Override
-    public void firstStep() {
-      if (first) {
-        Assert.fail();
-      }
-      first = true;
-      latch.countDown();
-    }
-
-    @Override
-    public void middleStep() {
-    }
-
-    @Override
-    public void lastStep() {
-    }
-  }
-
-  @Test
-  public void testPreStartQueueing() throws Exception {
-    runner.schedule(new PreStartTask(210));
-    Thread.sleep(210);
-    runner.start();
-    long startedAt = System.currentTimeMillis();
-    PreStartTask.latch.await(5000, TimeUnit.MILLISECONDS);
-    long runAt = System.currentTimeMillis();
-    Assert.assertTrue(PreStartTask.first);
-    Assert.assertTrue(runAt - startedAt >= 200);
-  }
-
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/utils/TestSLSUtils.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/utils/TestSLSUtils.java
deleted file mode 100644
index 5376a55cc63..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/utils/TestSLSUtils.java
+++ /dev/null
@@ -1,144 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.utils;
-
-import org.apache.hadoop.yarn.api.records.NodeLabel;
-import org.apache.hadoop.yarn.sls.SLSRunner.NodeDetails;
-import org.apache.hadoop.yarn.util.resource.Resources;
-import org.junit.Assert;
-import org.junit.Test;
-
-import java.io.File;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-
-public class TestSLSUtils {
-
-  @Test
-  public void testGetRackHostname() {
-    String str = "/rack1/node1";
-    String[] rackHostname = SLSUtils.getRackHostName(str);
-    Assert.assertEquals("rack1", rackHostname[0]);
-    Assert.assertEquals("node1", rackHostname[1]);
-
-    str = "/rackA/rackB/node1";
-    rackHostname = SLSUtils.getRackHostName(str);
-    Assert.assertEquals("rackA/rackB", rackHostname[0]);
-    Assert.assertEquals("node1", rackHostname[1]);
-  }
-
-  @Test
-  public void testParseNodesFromNodeFile() throws Exception {
-    String nodeFile = "src/test/resources/nodes.json";
-    Set<NodeDetails> nodeDetails = SLSUtils.parseNodesFromNodeFile(
-        nodeFile, Resources.createResource(1024, 2));
-    Assert.assertEquals(20, nodeDetails.size());
-
-    nodeFile = "src/test/resources/nodes-with-resources.json";
-    nodeDetails = SLSUtils.parseNodesFromNodeFile(
-        nodeFile, Resources.createResource(1024, 2));
-    Assert.assertEquals(4, nodeDetails.size());
-    for (NodeDetails nodeDetail : nodeDetails) {
-      if (nodeDetail.getHostname().equals("/rack1/node1")) {
-        Assert.assertEquals(2048,
-            nodeDetail.getNodeResource().getMemorySize());
-        Assert.assertEquals(6,
-            nodeDetail.getNodeResource().getVirtualCores());
-      } else if (nodeDetail.getHostname().equals("/rack1/node2")) {
-        Assert.assertEquals(1024,
-            nodeDetail.getNodeResource().getMemorySize());
-        Assert.assertEquals(2,
-            nodeDetail.getNodeResource().getVirtualCores());
-        Assert.assertNull(nodeDetail.getLabels());
-      } else if (nodeDetail.getHostname().equals("/rack1/node3")) {
-        Assert.assertEquals(1024,
-            nodeDetail.getNodeResource().getMemorySize());
-        Assert.assertEquals(2,
-            nodeDetail.getNodeResource().getVirtualCores());
-        Assert.assertEquals(2, nodeDetail.getLabels().size());
-        for (NodeLabel nodeLabel : nodeDetail.getLabels()) {
-          if (nodeLabel.getName().equals("label1")) {
-            Assert.assertTrue(nodeLabel.isExclusive());
-          } else if(nodeLabel.getName().equals("label2")) {
-            Assert.assertFalse(nodeLabel.isExclusive());
-          } else {
-            Assert.fail("Unexpected label");
-          }
-        }
-      } else if (nodeDetail.getHostname().equals("/rack1/node4")) {
-        Assert.assertEquals(6144,
-            nodeDetail.getNodeResource().getMemorySize());
-        Assert.assertEquals(12,
-            nodeDetail.getNodeResource().getVirtualCores());
-        Assert.assertEquals(2, nodeDetail.getLabels().size());
-      }
-    }
-  }
-
-  @Test
-  public void testGenerateNodes() {
-    Set<NodeDetails> nodes = SLSUtils.generateNodes(3, 3);
-    Assert.assertEquals("Number of nodes is wrong.", 3, nodes.size());
-    Assert.assertEquals("Number of racks is wrong.", 3, getNumRack(nodes));
-
-    nodes = SLSUtils.generateNodes(3, 1);
-    Assert.assertEquals("Number of nodes is wrong.", 3, nodes.size());
-    Assert.assertEquals("Number of racks is wrong.", 1, getNumRack(nodes));
-
-    nodes = SLSUtils.generateNodes(3, 4);
-    Assert.assertEquals("Number of nodes is wrong.", 3, nodes.size());
-    Assert.assertEquals("Number of racks is wrong.", 3, getNumRack(nodes));
-
-    nodes = SLSUtils.generateNodes(3, 0);
-    Assert.assertEquals("Number of nodes is wrong.", 3, nodes.size());
-    Assert.assertEquals("Number of racks is wrong.", 1, getNumRack(nodes));
-  }
-
-  /**
-   * Tests creation of table mapping based on given node details.
-   * @throws Exception
-   */
-  @Test
-  public void testGenerateNodeTableMapping() throws Exception {
-    Set<NodeDetails> nodes = SLSUtils.generateNodes(3, 3);
-    File tempFile = File.createTempFile("testslsutils", ".tmp");
-    tempFile.deleteOnExit();
-    String fileName = tempFile.getAbsolutePath();
-    SLSUtils.generateNodeTableMapping(nodes, fileName);
-
-    List<String> lines = Files.readAllLines(Paths.get(fileName));
-    Assert.assertEquals(3, lines.size());
-    for (String line : lines) {
-      Assert.assertTrue(line.contains("node"));
-      Assert.assertTrue(line.contains("/rack"));
-    }
-  }
-
-  private int getNumRack(Set<NodeDetails> nodes) {
-    Set<String> racks = new HashSet<>();
-    for (NodeDetails node : nodes) {
-      String[] rackHostname = SLSUtils.getRackHostName(node.getHostname());
-      racks.add(rackHostname[0]);
-    }
-    return racks.size();
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/web/TestSLSWebApp.java b/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/web/TestSLSWebApp.java
deleted file mode 100644
index c3f66a0b74d..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/java/org/apache/hadoop/yarn/sls/web/TestSLSWebApp.java
+++ /dev/null
@@ -1,122 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.sls.web;
-
-import org.junit.Assert;
-import org.apache.commons.io.FileUtils;
-import org.junit.Test;
-
-import java.io.File;
-import java.nio.charset.StandardCharsets;
-import java.text.MessageFormat;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-import java.util.HashMap;
-
-public class TestSLSWebApp {
-
-  @Test
-  public void testSimulateInfoPageHtmlTemplate() throws Exception {
-    String simulateInfoTemplate = FileUtils.readFileToString(
-            new File("src/main/html/simulate.info.html.template"), StandardCharsets.UTF_8);
-
-    Map<String, Object> simulateInfoMap = new HashMap<>();
-    simulateInfoMap.put("Number of racks", 10);
-    simulateInfoMap.put("Number of nodes", 100);
-    simulateInfoMap.put("Node memory (MB)", 1024);
-    simulateInfoMap.put("Node VCores", 1);
-    simulateInfoMap.put("Number of applications", 100);
-    simulateInfoMap.put("Number of tasks", 1000);
-    simulateInfoMap.put("Average tasks per applicaion", 10);
-    simulateInfoMap.put("Number of queues", 4);
-    simulateInfoMap.put("Average applications per queue", 25);
-    simulateInfoMap.put("Estimated simulate time (s)", 10000);
-
-    StringBuilder info = new StringBuilder();
-    for (Map.Entry<String, Object> entry :
-        simulateInfoMap.entrySet()) {
-      info.append("<tr>");
-      info.append("<td class='td1'>" + entry.getKey() + "</td>");
-      info.append("<td class='td2'>" + entry.getValue() + "</td>");
-      info.append("</tr>");
-    }
-
-    String simulateInfo =
-            MessageFormat.format(simulateInfoTemplate, info.toString());
-    Assert.assertTrue("The simulate info html page should not be empty",
-            simulateInfo.length() > 0);
-    for (Map.Entry<String, Object> entry : simulateInfoMap.entrySet()) {
-      Assert.assertTrue("The simulate info html page should have information "
-              + "of " + entry.getKey(), simulateInfo.contains("<td class='td1'>"
-              + entry.getKey() + "</td><td class='td2'>"
-              + entry.getValue() + "</td>"));
-    }
-  }
-
-  @Test
-  public void testSimulatePageHtmlTemplate() throws Exception {
-    String simulateTemplate = FileUtils.readFileToString(
-            new File("src/main/html/simulate.html.template"), StandardCharsets.UTF_8);
-
-    Set<String> queues = new HashSet<String>();
-    queues.add("sls_queue_1");
-    queues.add("sls_queue_2");
-    queues.add("sls_queue_3");
-    String queueInfo = "";
-    int i = 0;
-    for (String queue : queues) {
-      queueInfo += "legends[4][" + i + "] = 'queue" + queue
-              + ".allocated.memory'";
-      queueInfo += "legends[5][" + i + "] = 'queue" + queue
-              + ".allocated.vcores'";
-      i ++;
-    }
-    String simulateInfo = MessageFormat.format(simulateTemplate,
-            queueInfo, "s", 1000, 1000);
-    Assert.assertTrue("The simulate page html page should not be empty",
-            simulateInfo.length() > 0);
-  }
-
-  @Test
-  public void testTrackPageHtmlTemplate() throws Exception {
-    String trackTemplate = FileUtils.readFileToString(
-            new File("src/main/html/track.html.template"), StandardCharsets.UTF_8);
-    String trackedQueueInfo = "";
-    Set<String> trackedQueues = new HashSet<String>();
-    trackedQueues.add("sls_queue_1");
-    trackedQueues.add("sls_queue_2");
-    trackedQueues.add("sls_queue_3");
-    for(String queue : trackedQueues) {
-      trackedQueueInfo += "<option value='Queue " + queue + "'>"
-              + queue + "</option>";
-    }
-    String trackedAppInfo = "";
-    Set<String> trackedApps = new HashSet<String>();
-    trackedApps.add("app_1");
-    trackedApps.add("app_2");
-    for(String job : trackedApps) {
-      trackedAppInfo += "<option value='Job " + job + "'>" + job + "</option>";
-    }
-    String trackInfo = MessageFormat.format(trackTemplate, trackedQueueInfo,
-            trackedAppInfo, "s", 1000, 1000);
-    Assert.assertTrue("The queue/app tracking html page should not be empty",
-            trackInfo.length() > 0);
-  }
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/capacity-scheduler.xml b/hadoop-tools/hadoop-sls/src/test/resources/capacity-scheduler.xml
deleted file mode 100644
index 1762265f6d8..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/capacity-scheduler.xml
+++ /dev/null
@@ -1,70 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<!--
-  This file contains queue allocations for the Capacity Scheduler.
-  Its format is explained in the Capacity Scheduler documentation at
-  http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/CapacityScheduler.html.
-  The documentation also includes a sample config file.
--->
-
-<configuration>
-  <property>
-    <name>yarn.scheduler.capacity.root.queues</name>
-    <value>sls_queue_1,sls_queue_2,sls_queue_3</value>
-    <description>The queues at the this level (root is the root queue).
-    </description>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_1.capacity</name>
-    <value>25</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_1.maximum-capacity</name>
-    <value>100</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_1.reservable</name>
-    <value>true</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_1.show-reservations-as-queues</name>
-    <value>true</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_2.capacity</name>
-    <value>25</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_2.maximum-capacity</name>
-    <value>100</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_3.capacity</name>
-    <value>50</value>
-  </property>
-
-  <property>
-    <name>yarn.scheduler.capacity.root.sls_queue_3.maximum-capacity</name>
-    <value>100</value>
-  </property>
-</configuration>
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/exit-invariants.txt b/hadoop-tools/hadoop-sls/src/test/resources/exit-invariants.txt
deleted file mode 100644
index b4a3228be51..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/exit-invariants.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-ActiveApplications >= 0
-AppsCompleted >= 0
-AppsFailed >= 0
-AppsKilled >= 0
-AppsPending >= 0
-AppsRunning >= 0
-AppsSubmitted >= 0
-PendingContainers >= 0
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/fair-scheduler.xml b/hadoop-tools/hadoop-sls/src/test/resources/fair-scheduler.xml
deleted file mode 100644
index 7c46767737f..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/fair-scheduler.xml
+++ /dev/null
@@ -1,52 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<!--
-  This file contains pool and user allocations for the Fair Scheduler.
-  Its format is explained in the Fair Scheduler documentation at
-  http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/FairScheduler.html.
-  The documentation also includes a sample config file.
--->
-
-<allocations>
-  <defaultQueueSchedulingPolicy>drf</defaultQueueSchedulingPolicy>
-  <user name="jenkins">
-    <!-- Limit on running jobs for the user across all pools. If more
-      jobs than this are submitted, only the first <maxRunningJobs> will
-      be scheduled at any given time. Defaults to infinity or the
-      userMaxJobsDefault value set below. -->
-    <maxRunningJobs>1000</maxRunningJobs>
-  </user>
-  <userMaxAppsDefault>1000</userMaxAppsDefault>
-  <queue name="sls_queue_1">
-    <minResources>1024 mb, 1 vcores</minResources>
-    <schedulingPolicy>drf</schedulingPolicy>
-    <weight>0.25</weight>
-    <minSharePreemptionTimeout>2</minSharePreemptionTimeout>
-    <reservation>true</reservation>
-  </queue>
-  <queue name="sls_queue_2">
-    <minResources>1024 mb, 1 vcores</minResources>
-    <schedulingMode>drf</schedulingMode>
-    <weight>0.25</weight>
-    <minSharePreemptionTimeout>2</minSharePreemptionTimeout>
-  </queue>
-  <queue name="sls_queue_3">
-    <minResources>1024 mb, 1 vcores</minResources>
-    <weight>0.5</weight>
-    <schedulingMode>drf</schedulingMode>
-    <minSharePreemptionTimeout>2</minSharePreemptionTimeout>
-  </queue>
-</allocations>
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/inputsls.json b/hadoop-tools/hadoop-sls/src/test/resources/inputsls.json
deleted file mode 100644
index 3d46b5ea6ec..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/inputsls.json
+++ /dev/null
@@ -1,63 +0,0 @@
-{
-  "am.type": "mapreduce",
-  "job.start.ms": 0,
-  "job.end.ms": 95375,
-  "job.queue.name": "sls_queue_1",
-  "job.id": "job_1",
-  "job.user": "default",
-  "job.tasks": [
-    {
-      "container.host": "/default-rack/node1",
-      "container.start.ms": 6664,
-      "container.end.ms": 23707,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED",
-      "container.allocation.id": 1
-    },
-    {
-      "container.host": "/default-rack/node3",
-      "container.start.ms": 6665,
-      "container.end.ms": 21593,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED",
-      "container.allocation.id": 2
-    },
-    {
-      "container.host": "/default-rack/node2",
-      "container.start.ms": 68770,
-      "container.end.ms": 86613,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED",
-      "container.allocation.id": 2
-    }
-  ]
-}
-{
-  "am.type": "mapreduce",
-  "job.start.ms": 105204,
-  "job.end.ms": 197256,
-  "job.queue.name": "sls_queue_2",
-  "job.id": "job_2",
-  "job.user": "default",
-  "job.tasks": [
-    {
-      "container.host": "/default-rack/node1",
-      "container.start.ms": 111822,
-      "container.end.ms": 133985,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED"
-    },
-    {
-      "container.host": "/default-rack/node2",
-      "container.start.ms": 111788,
-      "container.end.ms": 131377,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED"
-    }
-  ]
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/log4j.properties b/hadoop-tools/hadoop-sls/src/test/resources/log4j.properties
deleted file mode 100644
index 81a3f6ad5d2..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,19 +0,0 @@
-#   Licensed under the Apache License, Version 2.0 (the "License");
-#   you may not use this file except in compliance with the License.
-#   You may obtain a copy of the License at
-#
-#       http://www.apache.org/licenses/LICENSE-2.0
-#
-#   Unless required by applicable law or agreed to in writing, software
-#   distributed under the License is distributed on an "AS IS" BASIS,
-#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#   See the License for the specific language governing permissions and
-#   limitations under the License.
-
-# log4j configuration used during build and unit tests
-
-log4j.rootLogger=info,stdout
-log4j.threshold=ALL
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2} (%F:%M(%L)) - %m%n
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/nodes-with-resources.json b/hadoop-tools/hadoop-sls/src/test/resources/nodes-with-resources.json
deleted file mode 100644
index dc5f0203c56..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/nodes-with-resources.json
+++ /dev/null
@@ -1,23 +0,0 @@
-{
-  "rack": "rack1",
-  "nodes": [
-    {
-      "node": "node1",
-      "memory-mb" : 2048,
-      "vcores" : 6
-    },
-    {
-      "node": "node2"
-    },
-    {
-      "node": "node3",
-      "labels": "label1, label2(exclusive=false)"
-    },
-    {
-      "node": "node4",
-      "labels": "label1, label2(exclusive=false)",
-      "memory-mb" : 6144,
-      "vcores" : 12
-    }
-  ]
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/nodes.json b/hadoop-tools/hadoop-sls/src/test/resources/nodes.json
deleted file mode 100644
index 3039554bfdf..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/nodes.json
+++ /dev/null
@@ -1,84 +0,0 @@
-{
-  "rack": "rack1",
-  "nodes": [
-    {
-      "node": "node1"
-    },
-    {
-      "node": "node2"
-    },
-    {
-      "node": "node3"
-    },
-    {
-      "node": "node4"
-    }
-  ]
-}
-{
-  "rack": "rack2",
-  "nodes": [
-    {
-      "node": "node5"
-    },
-    {
-      "node": "node6"
-    },
-    {
-      "node": "node7"
-    },
-    {
-      "node": "node8"
-    }
-  ]
-}
-{
-  "rack": "rack3",
-  "nodes": [
-    {
-      "node": "node9"
-    },
-    {
-      "node": "node10"
-    },
-    {
-      "node": "node11"
-    },
-    {
-      "node": "node12"
-    }
-  ]
-}
-{
-  "rack": "rack4",
-  "nodes": [
-    {
-      "node": "node13"
-    },
-    {
-      "node": "node14"
-    },
-    {
-      "node": "node15"
-    },
-    {
-      "node": "node16"
-    }
-  ]
-}
-{
-  "rack": "rack5",
-  "nodes": [
-    {
-      "node": "node17"
-    },
-    {
-      "node": "node18"
-    },
-    {
-      "node": "node19"
-    },
-    {
-    }
-  ]
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/ongoing-invariants.txt b/hadoop-tools/hadoop-sls/src/test/resources/ongoing-invariants.txt
deleted file mode 100644
index 363ed0d996e..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/ongoing-invariants.txt
+++ /dev/null
@@ -1,54 +0,0 @@
-running_0 >= 0
-running_60 >= 0
-running_300 >= 0
-running_1440 >= 0
-AppsSubmitted >= 0
-AppsRunning >= 0
-AppsPending >= 0
-AppsCompleted >= 0
-AppsKilled >= 0
-AppsFailed >= 0
-AllocatedMB >= 0
-AllocatedVCores >= 0
-AllocatedContainers >= 0
-AggregateContainersAllocated >= 0
-AggregateNodeLocalContainersAllocated >= 0
-AggregateRackLocalContainersAllocated >= 0
-AggregateOffSwitchContainersAllocated >= 0
-AggregateContainersReleased >= 0
-AggregateContainersPreempted >= 0
-AvailableMB >= 0
-AvailableVCores >= 0
-PendingMB >= 0
-PendingVCores >= 0
-PendingContainers >= 0
-ReservedMB >= 0
-ReservedVCores >= 0
-ReservedContainers >= 0
-ActiveUsers >= 0
-ActiveApplications >= 0
-AppAttemptFirstContainerAllocationDelayNumOps >= 0
-AppAttemptFirstContainerAllocationDelayAvgTime >= 0
-MemNonHeapUsedM >= 0
-MemNonHeapCommittedM >= 0
-MemNonHeapMaxM >= 0 || MemNonHeapMaxM == -1
-MemHeapUsedM >= 0
-MemHeapCommittedM >= 0
-MemHeapMaxM >= 0
-MemMaxM >= 0
-GcCountPS_Scavenge >= 0
-GcTimeMillisPS_Scavenge >= 0
-GcCountPS_MarkSweep >= 0
-GcTimeMillisPS_MarkSweep >= 0
-GcCount >= 0
-GcTimeMillis >= 0
-ThreadsNew >= 0
-ThreadsRunnable >= 0
-ThreadsBlocked >= 0
-ThreadsWaiting >= 0
-ThreadsTimedWaiting >= 0
-ThreadsTerminated >= 0
-LogFatal >= 0
-LogError >= 0
-LogWarn >= 0
-LogInfo >= 0
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/simulate.html.template b/hadoop-tools/hadoop-sls/src/test/resources/simulate.html.template
deleted file mode 100644
index 1b897134f1f..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/simulate.html.template
+++ /dev/null
@@ -1,278 +0,0 @@
-<html>
-  <head>
-    <meta charset="utf-8">
-      <link rel="stylesheet" href="css/bootstrap.min.css" media="screen">
-      <link rel="stylesheet" href="css/bootstrap-responsive.min.css">
-      <style type="text/css">
-        body '{' font: 20px sans-serif; '}'
-        .axis path,
-        .axis line '{' fill: none; stroke: #000; shape-rendering: crispEdges; '}'
-        .axis text '{' font-family: sans-serif; font-size: 20px; '}'
-        .line '{' fill: none; stroke: steelblue; stroke-width: 3px; '}'
-        .legend '{'
-          padding: 5px;
-          font: 18px sans-serif;
-          background: yellow;
-          box-shadow: 2px 2px 1px #888;
-        '}'
-        .title '{' font: 24px sans-serif; '}'
-        .divborder '{'
-          border-width: 1px;
-          border-style: solid;
-          border-color: black;
-          margin-top:10px
-        '}'
-      </style>
-      <script src="js/thirdparty/d3.v3.js"></script>
-      <script src="js/thirdparty/jquery.js"></script>
-      <script src="js/thirdparty/bootstrap.min.js"></script>
-    </head>
-  <body>
-    <div class="row">
-      <div class="span10 offset2"><br>
-        <input type="button" style="float: right;" value="Stop"
-               onClick="stop()" />
-      </div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area1"></div>
-      <div class="divborder span8" id="area2"></div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area3"></div>
-      <div class="divborder span8" id="area4"></div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area5"></div>
-      <div class="divborder span8" id="area6"></div>
-    </div>
-    <div class="row">
-      <div class="divborder span8" style="margin-left:50px" id="area7"></div>
-      <div class="span8" id="area8"></div>
-    </div><br/><br/>
-
-    <script>
-      var basetime = 0;
-      var running = 1;
-      var data = [];
-      var width, height;
-      var legends = [];
-      var titles = [];
-      var yLabels = [];
-      var isAreas = [];
-      var svgs = [];
-      var xs = [];
-      var ys = [];
-      var xAxiss = [];
-      var yAxiss = [];
-      var lineAreas = [];
-      var stacks = [];
-
-      // legends
-      legends[0] = [''running.applications'', ''running.containers''];
-      legends[1] = [''jvm.free.memory'', ''jvm.max.memory'', ''jvm.total.memory''];
-      legends[2] = [''cluster.allocated.memory'', ''cluster.available.memory''];
-      legends[3] = [''cluster.allocated.vcores'', ''cluster.available.vcores''];
-      legends[4] = [];
-      legends[5] = [];
-      {0}
-      legends[6] = [''scheduler.allocate.timecost'',
-                    ''scheduler.handle-NODE_ADDED.timecost'',
-                    ''scheduler.handle-NODE_REMOVED.timecost'',
-                    ''scheduler.handle-NODE_UPDATE.timecost'',
-                    ''scheduler.handle-APP_ADDED.timecost'',
-                    ''scheduler.handle-APP_REMOVED.timecost'',
-                    ''scheduler.handle-CONTAINER_EXPIRED.timecost''];
-
-      // title
-      titles[0] = ''Cluster running applications & containers'';
-      titles[1] = ''JVM memory'';
-      titles[2] = ''Cluster allocated & available memory'';
-      titles[3] = ''Cluster allocated & available vcores'';
-      titles[4] = ''Queue allocated memory'';
-      titles[5] = ''Queue allocated vcores'';
-      titles[6] = ''Scheduler allocate & handle operation timecost'';
-
-      // ylabels
-      yLabels[0] = ''Number'';
-      yLabels[1] = ''Memory (GB)'';
-      yLabels[2] = ''Memory (GB)'';
-      yLabels[3] = ''Number'';
-      yLabels[4] = ''Memory (GB)'';
-      yLabels[5] = ''Number'';
-      yLabels[6] = ''Timecost (ms)'';
-
-      // is area?
-      isAreas = [0, 0, 0, 0, 1, 1, 0];
-
-      // draw all charts
-      for (var i = 0; i < 7; i ++) '{'
-        drawEachChart(i);
-      '}'
-
-      // draw each chart
-      function drawEachChart(index) '{'
-        var margin = '{'top: 50, right: 250, bottom: 50, left: 70'}';
-        width = 750 - margin.left - margin.right;
-        height = 420 - margin.top - margin.bottom;
-
-      xs[index] = d3.scale.linear().range([0, width]);
-      ys[index] = d3.scale.linear().range([height, 0]);
-      xAxiss[index] = d3.svg.axis().scale(xs[index]).orient(''bottom'');
-      yAxiss[index] = d3.svg.axis().scale(ys[index]).orient(''left'');
-
-      if (isAreas[index] == 1)'{'
-        lineAreas[index] = d3.svg.area()
-                            .x(function(d) '{' return xs[index](d.time); '}')
-                            .y0(function(d) '{' return ys[index](d.y0); '}')
-                            .y1(function(d) '{' return ys[index](d.y0 + d.y); '}');
-
-        stacks[index] = d3.layout.stack()
-                          .values(function(d) '{' return d.values; '}');
-      '}' else '{'
-        lineAreas[index] = d3.svg.line()
-                            .interpolate(''basis'')
-                            .x(function(d) '{' return xs[index](d.time); '}')
-                            .y(function(d) '{' return ys[index](d.value); '}');
-      '}'
-
-      svgs[index] = d3.select(''#area'' + (index + 1)).append(''svg'')
-        .attr(''width'', width + margin.left + margin.right)
-        .attr(''height'', height + margin.top + margin.bottom)
-        .append(''g'')
-        .attr(''transform'', ''translate('' + margin.left + '','' + margin.top + '')'');
-
-      // x, y and title
-      svgs[index].append(''text'')
-        .attr(''transform'', ''translate('' + (width / 2) + '' ,'' +
-              (height + margin.bottom - 10 ) + '')'')
-        .style(''text-anchor'', ''middle'')
-        .text(''Time ({1})'');
-
-      svgs[index].append(''text'')
-        .attr(''transform'', ''rotate(-90)'')
-        .attr(''y'', 0 - margin.left)
-        .attr(''x'',0 - (height / 2))
-        .attr(''dy'', ''1em'')
-        .style(''text-anchor'', ''middle'')
-        .text(yLabels[index]);
-
-      svgs[index].append(''text'')
-        .attr(''x'', (width / 2))
-        .attr(''y'', 10 - (margin.top / 2))
-        .attr(''text-anchor'', ''middle'')
-        .text(titles[index]);
-    '}'
-
-    // request data
-    function requestData() '{'
-      $.ajax('{'url: ''simulateMetrics'',
-        success: function(point) '{'
-          // update data
-          if (basetime == 0)  basetime = point.time;
-          point.time = (point.time - basetime) / {2};
-          data.push(point);
-
-          // clear old
-          for (var i = 0; i < 7; i ++) '{'
-            svgs[i].selectAll(''g.tick'').remove();
-            svgs[i].selectAll(''g'').remove();
-            var color = d3.scale.category10();
-            color.domain(d3.keys(data[0]).filter(function(key) '{'
-              return $.inArray(key, legends[i]) !== -1;
-            '}'));
-
-            var values;
-            if (isAreas[i] == 1) '{'
-              values = stacks[i](color.domain().map(function(name) '{'
-                return '{'
-                  name: name,
-                  values: data.map(function(d) '{'
-                    return '{'time: d.time, y: d[name]'}';
-                  '}')
-                '}'
-              '}'));
-              xs[i].domain(d3.extent(data, function(d) '{' return d.time;'}'));
-              ys[i].domain([
-                d3.min(values, function(c) '{' return 0; '}'),
-                d3.max(values, function(c) '{' return 1.1 * d3.max(c.values,
-                                        function(v) '{' return v.y + v.y0; '}'); '}')
-              ]);
-            '}' else '{'
-              values = color.domain().map(function(name) '{'
-                return '{'
-                  name: name,
-                  values: data.map(function(d) '{'
-                    return '{'time: d.time, value: d[name]'}';
-                  '}')
-                '}'
-              '}');
-              xs[i].domain(d3.extent(data, function(d) '{' return d.time;'}'));
-              ys[i].domain([
-                d3.min(values, function(c) '{' return 0; '}'),
-                d3.max(values, function(c) '{' return 1.1 * d3.max(c.values,
-                                        function(v) '{' return v.value; '}'); '}')
-              ]);
-            '}'
-
-            svgs[i].append(''g'').attr(''class'', ''x axis'')
-              .attr(''transform'', ''translate(0,'' + height + '')'').call(xAxiss[i]);
-
-            svgs[i].append(''g'').attr(''class'', ''y axis'').call(yAxiss[i]);
-
-            var value = svgs[i].selectAll(''.path'')
-              .data(values).enter().append(''g'').attr(''class'', ''line'');
-
-            if(isAreas[i] == 1) '{'
-              value.append(''path'').attr(''class'', ''area'')
-                    .attr(''d'', function(d) '{'return lineAreas[i](d.values); '}')
-                    .style(''fill'', function(d) '{'return color(d.name); '}');
-            '}' else '{'
-              value.append(''path'').attr(''class'', ''line'')
-                    .attr(''d'', function(d) '{'return lineAreas[i](d.values); '}')
-                    .style(''stroke'', function(d) '{'return color(d.name); '}');
-            '}'
-
-            // legend
-            var legend = svgs[i].append(''g'')
-              .attr(''class'', ''legend'')
-              .attr(''x'', width + 5)
-              .attr(''y'', 25)
-              .attr(''height'', 120)
-              .attr(''width'', 140);
-            legend.selectAll(''g'').data(legends[i])
-              .enter()
-              .append(''g'')
-              .each(function(d, i) '{'
-                var g = d3.select(this);
-                g.append(''rect'')
-                  .attr(''x'', width + 5)
-                  .attr(''y'', i*20)
-                  .attr(''width'', 10)
-                  .attr(''height'', 10)
-                  .style(''fill'', color(d));
-                g.append(''text'')
-                  .attr(''x'', width + 25)
-                  .attr(''y'', i * 20 + 8)
-                  .attr(''height'',30)
-                  .attr(''width'',250)
-                  .style(''fill'', color(d))
-                  .text(d);
-              '}');
-            '}'
-
-            if(running == 1)
-              setTimeout(requestData, {3});
-          '}',
-          cache: false
-        '}');
-      '}'
-
-      // stop
-      function stop() '{'
-        running = 0;
-      '}'
-      requestData();
-    </script>
-  </body>
-</html>
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/simulate.info.html.template b/hadoop-tools/hadoop-sls/src/test/resources/simulate.info.html.template
deleted file mode 100644
index ead508fed9a..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/simulate.info.html.template
+++ /dev/null
@@ -1,50 +0,0 @@
-<html>
-  <head>
-    <meta charset="utf-8">
-    <style type="text/css">
-      .td1 '{'
-        border-width: 1px;
-        padding: 8px;
-        border-style: solid;
-        border-color: #666666;
-        background-color: #dedede;
-        width: 50%;
-      '}'
-      table.gridtable '{'
-        font-family: verdana,arial,sans-serif;
-        font-size:11px;
-        color:#333333;
-        border-width: 1px;
-        border-color: #666666;
-        border-collapse: collapse;
-        margin-top: 80px;
-      '}'
-      .td2 '{'
-        border-width: 1px;
-        padding: 8px;
-        border-style: solid;
-        border-color: #666666;
-        background-color: #ffffff;
-        width: 50%;
-      '}'
-    </style>
-  </head>
-  <body>
-    <table class="gridtable" align="center" width="400px">
-      <tr>
-        <td colspan="2" class="td2" align="center">
-          <b>SLS Simulate Information</b>
-        </td>
-      </tr>
-      {0}
-      <tr>
-        <td align="center" height="80px">
-          <a href="simulate">Simulation Charts</a>
-        </td>
-        <td align="center">
-          <a href="track">Tracked Jobs & Queues</a>
-        </td>
-      </tr>
-    </table>
-  </body>
-</html>
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/sls-runner.xml b/hadoop-tools/hadoop-sls/src/test/resources/sls-runner.xml
deleted file mode 100644
index 1c76aa97305..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/sls-runner.xml
+++ /dev/null
@@ -1,89 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<configuration>
-
-  <!-- SLSRunner configuration -->
-  <property>
-    <name>yarn.sls.runner.pool.size</name>
-    <value>100</value>
-  </property>
-  
-  <!-- Nodes configuration -->
-  <property>
-    <name>yarn.sls.nm.memory.mb</name>
-    <value>100240</value>
-  </property>
-  <property>
-    <name>yarn.sls.nm.vcores</name>
-    <value>100</value>
-  </property>
-  <property>
-    <name>yarn.sls.nm.heartbeat.interval.ms</name>
-    <value>1000</value>
-  </property>
-  
-  <!-- Apps configuration -->
-  <property>
-    <name>yarn.sls.am.heartbeat.interval.ms</name>
-    <value>1000</value>
-  </property>
-  <property>
-    <name>yarn.sls.am.type.mapreduce</name>
-    <value>org.apache.hadoop.yarn.sls.appmaster.MRAMSimulator</value>
-  </property>
-  <property>
-    <name>yarn.sls.am.type.stream</name>
-    <value>org.apache.hadoop.yarn.sls.appmaster.StreamAMSimulator</value>
-  </property>
-  <property>
-    <name>yarn.sls.am.type.dag</name>
-    <value>org.apache.hadoop.yarn.sls.appmaster.DAGAMSimulator</value>
-  </property>
-
-  <!-- Containers configuration -->
-  <property>
-    <name>yarn.sls.container.memory.mb</name>
-    <value>1024</value>
-  </property>
-  <property>
-    <name>yarn.sls.container.vcores</name>
-    <value>1</value>
-  </property>
-
-  <!--  metrics  -->
-  <property>
-    <name>yarn.sls.metrics.switch</name>
-    <value>ON</value>
-  </property>
-  <property>
-    <name>yarn.sls.metrics.web.address.port</name>
-    <value>10001</value>
-  </property>
-  <property>
-    <name>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler</name>
-    <value>org.apache.hadoop.yarn.sls.scheduler.FifoSchedulerMetrics</value>
-  </property>
-  <property>
-    <name>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</name>
-    <value>org.apache.hadoop.yarn.sls.scheduler.FairSchedulerMetrics</value>
-  </property>
-  <property>
-    <name>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</name>
-    <value>org.apache.hadoop.yarn.sls.scheduler.CapacitySchedulerMetrics</value>
-  </property>
-
-</configuration>
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/sls_dag.json b/hadoop-tools/hadoop-sls/src/test/resources/sls_dag.json
deleted file mode 100644
index 13e2adcab8a..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/sls_dag.json
+++ /dev/null
@@ -1,62 +0,0 @@
-{
-  "yarn.sls.am.type": "dag",
-  "job.start.ms": 0,
-  "job.end.ms": 95375,
-  "job.queue.name": "sls_queue_1",
-  "job.id": "job_1",
-  "job.user": "default",
-  "job.tasks": [
-    {
-      "container.host": "/default-rack/node1",
-      "container.request.delay": 1000,
-      "container.start.ms": 6664,
-      "container.end.ms": 23707,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED"
-    },
-    {
-      "container.host": "/default-rack/node3",
-      "container.request.delay": 1500,
-      "container.start.ms": 6665,
-      "container.end.ms": 21593,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED"
-    },
-    {
-      "container.host": "/default-rack/node2",
-      "container.start.ms": 68770,
-      "container.end.ms": 86613,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED"
-    }
-  ]
-}
-{
-  "yarn.sls.am.type": "dag",
-  "job.start.ms": 105204,
-  "job.end.ms": 197256,
-  "job.queue.name": "sls_queue_2",
-  "job.id": "job_2",
-  "job.user": "default",
-  "job.tasks": [
-    {
-      "container.host": "/default-rack/node1",
-      "container.start.ms": 111822,
-      "container.end.ms": 133985,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED"
-    },
-    {
-      "container.host": "/default-rack/node2",
-      "container.start.ms": 111788,
-      "container.end.ms": 131377,
-      "container.priority": 20,
-      "container.type": "map",
-      "container.execution.type": "GUARANTEED"
-    }
-  ]
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/syn.json b/hadoop-tools/hadoop-sls/src/test/resources/syn.json
deleted file mode 100644
index 2e0cb5cebdd..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/syn.json
+++ /dev/null
@@ -1,55 +0,0 @@
-{
-  "description": "tiny jobs workload",
-  "num_nodes": 20,
-  "nodes_per_rack": 4,
-  "num_jobs": 10,
-  "rand_seed": 2,
-  "workloads": [
-    {
-      "workload_name": "tiny-test",
-      "workload_weight": 0.5,
-      "description": "Sort jobs",
-      "queue_name": "sls_queue_1",
-      "job_classes": [
-        {
-          "class_name": "class_1",
-          "user_name": "foobar",
-          "class_weight": 1.0,
-          "mtasks_avg": 5,
-          "mtasks_stddev": 1,
-          "rtasks_avg": 5,
-          "rtasks_stddev": 1,
-          "dur_avg": 60,
-          "dur_stddev": 5,
-          "mtime_avg": 10,
-          "mtime_stddev": 2,
-          "rtime_avg": 20,
-          "rtime_stddev": 4,
-          "map_max_memory_avg": 1024,
-          "map_max_memory_stddev": 0.001,
-          "map_execution_type": "GUARANTEED",
-          "reduce_max_memory_avg": 2048,
-          "reduce_max_memory_stddev": 0.001,
-          "reduce_execution_type": "GUARANTEED",
-          "map_max_vcores_avg": 1,
-          "map_max_vcores_stddev": 0.001,
-          "reduce_max_vcores_avg": 2,
-          "reduce_max_vcores_stddev": 0.001,
-          "chance_of_reservation": 0.5,
-          "deadline_factor_avg": 10.0,
-          "deadline_factor_stddev": 0.001
-        }
-      ],
-      "time_distribution": [
-        {
-          "time": 1,
-          "weight": 100
-        },
-        {
-          "time": 60,
-          "weight": 0
-        }
-      ]
-    }
-  ]
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/syn_generic.json b/hadoop-tools/hadoop-sls/src/test/resources/syn_generic.json
deleted file mode 100644
index 3afb9530e6b..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/syn_generic.json
+++ /dev/null
@@ -1,56 +0,0 @@
-{
-  "description": "tiny jobs workload",
-  "num_nodes": 20,
-  "nodes_per_rack": 4,
-  "num_jobs": 10,
-  "rand_seed": 2,
-  "workloads": [
-    {
-      "workload_name": "tiny-test",
-      "workload_weight": 0.5,
-      "description": "Sort jobs",
-      "queue_name": "sls_queue_1",
-      "job_classes": [
-        {
-          "class_name": "class_1",
-          "user_name": "foobar",
-          "class_weight": 1.0,
-          "type": "mapreduce",
-          "deadline_factor": {"val": 10},
-          "duration": {"val": 60, "std": 5},
-          "reservation": {"val": 0.5},
-          "tasks":[
-            {
-              "type": "map",
-              "priority": 20,
-              "count": { "val": 5, "std": 1},
-              "time": {"val": 10, "std": 2},
-              "max_memory": {"val": 1024},
-              "max_vcores": {"val": 1},
-              "execution_type": "GUARANTEED"
-            },
-            {
-              "type": "reduce",
-              "priority": 10,
-              "count": { "val": 5, "std": 1},
-              "time": {"val": 20, "std": 4},
-              "max_memory": {"val": 2048},
-              "max_vcores": {"val": 2},
-              "execution_type": "GUARANTEED"
-            }
-          ]
-        }
-      ],
-      "time_distribution": [
-        {
-          "time": 1,
-          "weight": 100
-        },
-        {
-          "time": 60,
-          "weight": 0
-        }
-      ]
-    }
-  ]
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/syn_stream.json b/hadoop-tools/hadoop-sls/src/test/resources/syn_stream.json
deleted file mode 100644
index a52de408849..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/syn_stream.json
+++ /dev/null
@@ -1,47 +0,0 @@
-{
-  "description": "stream workload",
-  "num_nodes": 20,
-  "nodes_per_rack": 4,
-  "num_jobs": 5,
-  "rand_seed": 2,
-  "workloads": [
-    {
-      "workload_name": "tiny-test",
-      "workload_weight": 1,
-      "description": "long lived streaming jobs",
-      "queue_name": "sls_queue_1",
-      "job_classes": [
-        {
-          "class_name": "class_1",
-          "user_name": "foobar",
-          "class_weight": 1.0,
-          "type": "stream",
-          "deadline_factor": {"val": 10},
-          "duration": {"val": 30, "std": 5},
-          "reservation": {"val": 0.5},
-          "tasks":[
-            {
-              "type": "stream",
-              "priority": 20,
-              "count": { "val": 2},
-              "time": {"val": 60000},
-              "max_memory": {"val": 4096},
-              "max_vcores": {"val": 4},
-              "execution_type": "GUARANTEED"
-            }
-          ]
-        }
-      ],
-      "time_distribution": [
-        {
-          "time": 1,
-          "weight": 100
-        },
-        {
-          "time": 2,
-          "weight": 0
-        }
-      ]
-    }
-  ]
-}
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/track.html.template b/hadoop-tools/hadoop-sls/src/test/resources/track.html.template
deleted file mode 100644
index 5522b9f7796..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/track.html.template
+++ /dev/null
@@ -1,193 +0,0 @@
-<html>
-  <head>
-    <meta charset="utf-8">
-    <link rel="stylesheet" href="css/bootstrap.min.css" media="screen">
-    <link rel="stylesheet" href="css/bootstrap-responsive.min.css">
-    <style type="text/css">
-      body '{' font: 20px sans-serif;'}'
-      .axis path,
-      .axis line '{' fill: none; stroke: #000; shape-rendering: crispEdges;'}'
-      .axis text '{' font-family: sans-serif; font-size: 20px; '}'
-      .line '{' fill: none; stroke: steelblue; stroke-width: 3px; '}'
-      .legend '{' padding: 5px; font: 18px sans-serif; background: yellow;
-                box-shadow: 2px 2px 1px #888;'}'
-      .title '{' font: 24px sans-serif; '}'
-      .divborder '{' border-width: 1px; border-style: solid; border-color: black;
-                    margin-top:10px '}'
-    </style>
-    <script src="js/thirdparty/d3.v3.js"></script>
-    <script src="js/thirdparty/jquery.js"></script>
-    <script src="js/thirdparty/bootstrap.min.js"></script>
-  </head>
-  <body>
-    <div class="row">
-      <div class="offset4 span8"><br/><br/><br/>
-        Select Tracked Job/Queue:
-        <select id="trackedSelect" onchange="redrawChart()">
-          <option>----Queue----</option>
-          {0}
-          <option>----Job----</option>
-          {1}
-        </select>
-        <input type="button" style="float: right;" value="Stop"
-               onClick="stop()" />
-      </div>
-    </div>
-    <div class="row">
-      <div class="divborder span9 offset4" id="area1"></div>
-    </div>
-    <script>
-      // global variables
-      var basetime = 0;
-      var running = 1;
-      var para = '''';
-      var data = [];
-      var path, line, svg;
-      var x, y;
-      var width, height;
-      var xAxis, yAxis;
-      var legends = [''usage.memory'', ''demand.memory'', ''maxshare.memory'',
-                      ''minshare.memory'', ''fairshare.memory''];
-
-      // stop function
-      function stop() '{'
-        running = 0;
-      '}'
-
-      // select changed event
-      function redrawChart() '{'
-        var value = $(''#trackedSelect'').val();
-        if (value.substring(0, ''Job ''.length) === ''Job ''
-                      || value.substring(0, ''Queue ''.length) === ''Queue '') '{'
-          para = value;
-          running = 0;
-          basetime = 0;
-          data = [];
-          $(''#area1'').empty();
-          drawChart(''Tracking '' + value);
-          running = 1;
-          requestData();
-        }
-      }
-
-      // draw chart
-      function drawChart(title) '{'
-        // location
-        var margin = '{'top: 50, right: 150, bottom: 50, left: 80'}';
-        width = 800 - margin.left - margin.right;
-        height = 420 - margin.top - margin.bottom;
-        x = d3.scale.linear().range([0, width]);
-        y = d3.scale.linear().range([height, 0]);
-        xAxis = d3.svg.axis().scale(x).orient(''bottom'');
-        yAxis = d3.svg.axis().scale(y).orient(''left'');
-        // lines
-        line = d3.svg.line().interpolate(''basis'')
-                .x(function(d) '{' return x(d.time); })
-                .y(function(d) '{' return y(d.value); });
-        // create chart
-        svg = d3.select(''#area1'').append(''svg'')
-                .attr(''width'', width + margin.left + margin.right)
-                .attr(''height'', height + margin.top + margin.bottom)
-                .append(''g'')
-                .attr(''transform'', ''translate('' + margin.left + '','' + margin.top + '')'');
-        // axis labels
-        svg.append(''text'')
-                .attr(''transform'', ''translate('' + (width / 2) + '','' + (height + margin.bottom - 5 ) + '')'')
-                .style(''text-anchor'', ''middle'')
-                .text(''Time ({2})'');
-        svg.append(''text'')
-                .attr(''transform'', ''rotate(-90)'')
-                .attr(''y'', 0 - margin.left)
-                .attr(''x'',0 - (height / 2))
-                .attr(''dy'', ''1em'')
-                .style(''text-anchor'', ''middle'')
-                .text(''Memory (GB)'');
-        // title
-        svg.append(''text'')
-                .attr(''x'', (width / 2))
-                .attr(''y'', 10 - (margin.top / 2))
-                .attr(''text-anchor'', ''middle'')
-                .text(title);
-      '}'
-
-      // request data
-      function requestData() '{'
-        $.ajax('{'url: ''trackMetrics?t='' + para,
-          success: function(point) '{'
-            // clear old
-            svg.selectAll(''g.tick'').remove();
-            svg.selectAll(''g'').remove();
-
-          if(basetime == 0)  basetime = point.time;
-          point.time = (point.time - basetime)/{3};
-          data.push(point);
-
-          var color = d3.scale.category10();
-          color.domain(d3.keys(data[0]).filter(function(key) '{'
-            return $.inArray(key, legends) !== -1;
-          '}'));
-
-          var values = color.domain().map(function(name) '{'
-            return '{'
-              name: name,
-              values: data.map(function(d) '{'
-                return '{' time: d.time, value: d[name]'}';
-              '}')
-            '}';
-          '}');
-
-          // set x/y range
-          x.domain(d3.extent(data, function(d) '{' return d.time; '}'));
-          y.domain([
-            d3.min(values, function(c) '{' return 0 '}'),
-            d3.max(values, function(c) '{' return 1.1 * d3.max(c.values, function(v) '{' return v.value; '}'); '}')
-          ]);
-
-          svg.append(''g'').attr(''class'', ''x axis'')
-            .attr(''transform'', ''translate(0,'' + height + '')'').call(xAxis);
-          svg.append(''g'').attr(''class'', ''y axis'').call(yAxis);
-          var value = svg.selectAll(''.path'')
-            .data(values).enter().append(''g'').attr(''class'', ''line'');
-
-          value.append(''path'').attr(''class'', ''line'')
-            .attr(''d'', function(d) '{'return line(d.values); '}')
-            .style(''stroke'', function(d) '{'return color(d.name); '}');
-
-          // legend
-          var legend = svg.append(''g'')
-            .attr(''class'', ''legend'')
-            .attr(''x'', width + 5)
-            .attr(''y'', 25)
-            .attr(''height'', 120)
-            .attr(''width'', 180);
-
-          legend.selectAll(''g'').data(legends)
-            .enter()
-            .append(''g'')
-            .each(function(d, i) '{'
-              var g = d3.select(this);
-              g.append(''rect'')
-                .attr(''x'', width + 5)
-                .attr(''y'', i * 20)
-                .attr(''width'', 10)
-                .attr(''height'', 10)
-                .style(''fill'', color(d));
-
-              g.append(''text'')
-                .attr(''x'', width + 25)
-                .attr(''y'', i * 20 + 8)
-                .attr(''height'',30)
-                .attr(''width'',250)
-                .style(''fill'', color(d))
-                .text(d);
-            '}');
-
-          if(running == 1)
-            setTimeout(requestData, {4});
-        '}',
-        cache: false
-      '}');
-    '}'
-  </script>
-</body>
-</html>
diff --git a/hadoop-tools/hadoop-sls/src/test/resources/yarn-site.xml b/hadoop-tools/hadoop-sls/src/test/resources/yarn-site.xml
deleted file mode 100644
index 20146fcef66..00000000000
--- a/hadoop-tools/hadoop-sls/src/test/resources/yarn-site.xml
+++ /dev/null
@@ -1,80 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<configuration>
-  <property>
-    <name>yarn.resourcemanager.scheduler.class</name>
-    <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</value>
-    <!-- <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value> -->
-  </property>
-
-  <property>
-    <description>The address of the RM web application.</description>
-    <name>yarn.resourcemanager.webapp.address</name>
-    <value>localhost:18088</value>
-  </property>
-
-  <property>
-    <name>yarn.resourcemanager.resource-tracker.address</name>
-    <value>localhost:18031</value>
-  </property>
-
-  <property>
-    <description>The address of the scheduler interface.</description>
-    <name>yarn.resourcemanager.scheduler.address</name>
-    <value>localhost:18030</value>
-  </property>
-
-  <property>
-    <description>The address of the applications manager interface in the RM.</description>
-    <name>yarn.resourcemanager.address</name>
-    <value>localhost:18032</value>
-  </property>
-
-  <property>
-    <description>The address of the RM admin interface.</description>
-    <name>yarn.resourcemanager.admin.address</name>
-    <value>localhost:18033</value>
-  </property>
-
-  <property>
-    <description>Set to false, to avoid ip check</description>
-    <name>hadoop.security.token.service.use_ip</name>
-    <value>false</value>
-  </property>
-
-  <property>
-    <description>Whether to use preemption. Note that preemption is experimental
-    in the current version. Defaults to false.</description>
-    <name>yarn.scheduler.fair.preemption</name>
-    <value>true</value>
-  </property>
-
-  <property>
-    <description>Whether to allow multiple container assignments in one
-    heartbeat. Defaults to false.</description>
-    <name>yarn.scheduler.fair.assignmultiple</name>
-    <value>true</value>
-  </property>
-
-
-  <property>
-    <description>Enable reservation system.</description>
-    <name>yarn.resourcemanager.reservation-system.enable</name>
-    <value>true</value>
-  </property>
-
-</configuration>
diff --git a/hadoop-tools/hadoop-tools-dist/pom.xml b/hadoop-tools/hadoop-tools-dist/pom.xml
index b07155fb74c..ecf47ef52b1 100644
--- a/hadoop-tools/hadoop-tools-dist/pom.xml
+++ b/hadoop-tools/hadoop-tools-dist/pom.xml
@@ -78,11 +78,6 @@
       <scope>compile</scope>
       <version>${project.version}</version>
     </dependency>
-    <dependency>
-      <groupId>org.apache.hadoop</groupId>
-      <artifactId>hadoop-sls</artifactId>
-      <scope>compile</scope>
-    </dependency>
     <dependency>
       <groupId>org.apache.hadoop</groupId>
       <artifactId>hadoop-azure-datalake</artifactId>
diff --git a/hadoop-tools/pom.xml b/hadoop-tools/pom.xml
index 54bdd157715..744db181673 100644
--- a/hadoop-tools/pom.xml
+++ b/hadoop-tools/pom.xml
@@ -35,7 +35,6 @@
     <module>hadoop-federation-balance</module>
     <module>hadoop-rumen</module>
     <module>hadoop-tools-dist</module>
-    <module>hadoop-sls</module>
     <module>hadoop-azure</module>
     <module>hadoop-aws</module>
     <module>hadoop-azure-datalake</module>
