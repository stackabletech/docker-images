Entirely remove hadoop-yarn-csi

From: Lars Francke <git@lars-francke.de>


---
 .../main/resources/assemblies/hadoop-yarn-dist.xml |   14 
 .../dev-support/findbugs-exclude.xml               |   21 
 .../hadoop-yarn/hadoop-yarn-csi/pom.xml            |  261 -----
 .../hadoop/yarn/csi/adaptor/CsiAdaptorFactory.java |   73 -
 .../csi/adaptor/CsiAdaptorProtocolService.java     |  114 --
 .../yarn/csi/adaptor/CsiAdaptorServices.java       |  108 --
 .../yarn/csi/adaptor/DefaultCsiAdaptorImpl.java    |  124 --
 .../hadoop/yarn/csi/adaptor/package-info.java      |   21 
 .../apache/hadoop/yarn/csi/client/CsiClient.java   |   49 -
 .../hadoop/yarn/csi/client/CsiClientImpl.java      |   82 -
 .../hadoop/yarn/csi/client/CsiGrpcClient.java      |  127 --
 .../hadoop/yarn/csi/client/package-info.java       |   21 
 .../org/apache/hadoop/yarn/csi/package-info.java   |   21 
 .../GetPluginInfoResponseProtoTranslator.java      |   44 -
 .../NodePublishVolumeRequestProtoTranslator.java   |   77 -
 .../NodeUnpublishVolumeRequestProtoTranslator.java |   49 -
 .../yarn/csi/translator/ProtoTranslator.java       |   49 -
 .../csi/translator/ProtoTranslatorFactory.java     |   78 -
 ...teVolumeCapabilitiesRequestProtoTranslator.java |   93 --
 ...nVolumeCapabilitiesResponseProtoTranslator.java |   48 -
 .../hadoop/yarn/csi/translator/package-info.java   |   21 
 .../apache/hadoop/yarn/csi/utils/GrpcHelper.java   |   52 -
 .../apache/hadoop/yarn/csi/utils/package-info.java |   21 
 .../hadoop-yarn-csi/src/main/proto/csi.proto       | 1114 --------------------
 .../hadoop/yarn/csi/adaptor/MockCsiAdaptor.java    |   85 --
 .../yarn/csi/adaptor/TestCsiAdaptorService.java    |  460 --------
 .../adaptor/TestGetPluginInfoRequestResponse.java  |   68 -
 .../csi/adaptor/TestNodePublishVolumeRequest.java  |   57 -
 .../TestValidateVolumeCapabilityRequest.java       |  113 --
 .../TestValidateVolumeCapabilityResponse.java      |   62 -
 .../hadoop/yarn/csi/adaptor/package-info.java      |   21 
 .../hadoop/yarn/csi/client/FakeCsiDriver.java      |   66 -
 .../yarn/csi/client/FakeCsiIdentityService.java    |   42 -
 .../hadoop/yarn/csi/client/ICsiClientTest.java     |   53 -
 .../hadoop/yarn/csi/client/TestCsiClient.java      |   84 --
 .../hadoop/yarn/csi/client/package-info.java       |   21 
 hadoop-yarn-project/hadoop-yarn/pom.xml            |    1 
 37 files changed, 3815 deletions(-)
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/dev-support/findbugs-exclude.xml
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/pom.xml
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorFactory.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorProtocolService.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorServices.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/DefaultCsiAdaptorImpl.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClient.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClientImpl.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiGrpcClient.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/package-info.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/package-info.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/GetPluginInfoResponseProtoTranslator.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodePublishVolumeRequestProtoTranslator.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodeUnpublishVolumeRequestProtoTranslator.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslator.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslatorFactory.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidateVolumeCapabilitiesRequestProtoTranslator.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidationVolumeCapabilitiesResponseProtoTranslator.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/package-info.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/GrpcHelper.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/package-info.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/proto/csi.proto
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/MockCsiAdaptor.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestCsiAdaptorService.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestGetPluginInfoRequestResponse.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestNodePublishVolumeRequest.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityRequest.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityResponse.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiDriver.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiIdentityService.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/ICsiClientTest.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/TestCsiClient.java
 delete mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/package-info.java

diff --git a/hadoop-assemblies/src/main/resources/assemblies/hadoop-yarn-dist.xml b/hadoop-assemblies/src/main/resources/assemblies/hadoop-yarn-dist.xml
index cd86ce4e417..71031593c3c 100644
--- a/hadoop-assemblies/src/main/resources/assemblies/hadoop-yarn-dist.xml
+++ b/hadoop-assemblies/src/main/resources/assemblies/hadoop-yarn-dist.xml
@@ -220,10 +220,6 @@
       <directory>hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/target/lib</directory>
       <outputDirectory>share/hadoop/${hadoop.component}/timelineservice/lib</outputDirectory>
     </fileSet>
-    <fileSet>
-      <directory>hadoop-yarn/hadoop-yarn-csi/target/lib</directory>
-      <outputDirectory>share/hadoop/${hadoop.component}/csi/lib</outputDirectory>
-    </fileSet>
     <fileSet>
       <directory>hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/target/lib</directory>
       <outputDirectory>share/hadoop/${hadoop.component}/timelineservice/lib</outputDirectory>
@@ -266,16 +262,6 @@
         <unpack>false</unpack>
       </binaries>
     </moduleSet>
-    <moduleSet>
-      <includes>
-        <include>org.apache.hadoop:hadoop-yarn-csi</include>
-      </includes>
-      <binaries>
-        <outputDirectory>share/hadoop/${hadoop.component}/csi</outputDirectory>
-        <includeDependencies>false</includeDependencies>
-        <unpack>false</unpack>
-      </binaries>
-    </moduleSet>
     <moduleSet>
       <excludes>
         <exclude>org.apache.hadoop:hadoop-yarn-server-timelineservice*</exclude>
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/dev-support/findbugs-exclude.xml b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/dev-support/findbugs-exclude.xml
deleted file mode 100644
index 6ab0a7fc711..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/dev-support/findbugs-exclude.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-   contributor license agreements.  See the NOTICE file distributed with
-   this work for additional information regarding copyright ownership.
-   The ASF licenses this file to You under the Apache License, Version 2.0
-   (the "License"); you may not use this file except in compliance with
-   the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<FindBugsFilter>
-    <Match>
-        <Package name="csi.v0" />
-    </Match>
-</FindBugsFilter>
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/pom.xml b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/pom.xml
deleted file mode 100644
index 49506137c89..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/pom.xml
+++ /dev/null
@@ -1,261 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <parent>
-        <artifactId>hadoop-yarn</artifactId>
-        <groupId>org.apache.hadoop</groupId>
-        <version>3.4.0</version>
-    </parent>
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>hadoop-yarn-csi</artifactId>
-    <name>Apache Hadoop YARN CSI</name>
-    <packaging>jar</packaging>
-
-    <properties>
-        <grpc.version>1.53.0</grpc.version>
-        <animal-sniffer.version>1.21</animal-sniffer.version>
-    </properties>
-
-    <dependencies>
-        <dependency>
-            <groupId>org.apache.hadoop.thirdparty</groupId>
-            <artifactId>hadoop-shaded-guava</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>com.google.protobuf</groupId>
-            <artifactId>protobuf-java</artifactId>
-            <version>${hadoop.protobuf.version}</version>
-            <scope>${transient.protobuf2.scope}</scope>
-        </dependency>
-        <dependency>
-            <groupId>io.netty</groupId>
-            <artifactId>netty-all</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>io.grpc</groupId>
-            <artifactId>grpc-core</artifactId>
-            <version>${grpc.version}</version>
-            <exclusions>
-                <exclusion>
-                    <groupId>org.codehaus.mojo</groupId>
-                    <artifactId>animal-sniffer-annotations</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.mojo</groupId>
-            <artifactId>animal-sniffer-annotations</artifactId>
-            <version>${animal-sniffer.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>io.grpc</groupId>
-            <artifactId>grpc-protobuf</artifactId>
-            <version>${grpc.version}</version>
-            <exclusions>
-                <!-- Exclude protobuf-java 2.5.0 -->
-                <exclusion>
-                    <groupId>com.google.protobuf</groupId>
-                    <artifactId>protobuf-java</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>io.grpc</groupId>
-            <artifactId>grpc-stub</artifactId>
-            <version>${grpc.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>io.grpc</groupId>
-            <artifactId>grpc-netty</artifactId>
-            <version>${grpc.version}</version>
-            <exclusions>
-                <!-- Contained in netty-all. skip -->
-                <exclusion>
-                    <groupId>io.netty</groupId>
-                    <artifactId>netty-codec-http2</artifactId>
-                </exclusion>
-                <!-- Contained in netty-all. skip -->
-                <exclusion>
-                    <groupId>io.netty</groupId>
-                    <artifactId>netty-handler-proxy</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.assertj</groupId>
-            <artifactId>assertj-core</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.junit.jupiter</groupId>
-            <artifactId>junit-jupiter-api</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.junit.jupiter</groupId>
-            <artifactId>junit-jupiter-engine</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.hadoop</groupId>
-            <artifactId>hadoop-common</artifactId>
-            <type>test-jar</type>
-            <scope>test</scope>
-            <exclusions>
-                <!-- Exclude protobuf-java 2.5.0 -->
-                <exclusion>
-                    <groupId>com.google.protobuf</groupId>
-                    <artifactId>protobuf-java</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.hadoop</groupId>
-            <artifactId>hadoop-common</artifactId>
-            <scope>provided</scope>
-            <exclusions>
-                <!-- Exclude protobuf-java 2.5.0 -->
-                <exclusion>
-                    <groupId>com.google.protobuf</groupId>
-                    <artifactId>protobuf-java</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.hadoop</groupId>
-            <artifactId>hadoop-yarn-common</artifactId>
-            <scope>provided</scope>
-            <exclusions>
-                <!-- Exclude protobuf-java 2.5.0 -->
-                <exclusion>
-                    <groupId>com.google.protobuf</groupId>
-                    <artifactId>protobuf-java</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.hadoop</groupId>
-            <artifactId>hadoop-yarn-api</artifactId>
-            <scope>provided</scope>
-            <exclusions>
-                <!-- Exclude protobuf-java 2.5.0 -->
-                <exclusion>
-                    <groupId>com.google.protobuf</groupId>
-                    <artifactId>protobuf-java</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>javax.annotation</groupId>
-            <artifactId>javax.annotation-api</artifactId>
-            <scope>compile</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-dependency-plugin</artifactId>
-                <executions>
-                    <execution>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>copy-dependencies</goal>
-                        </goals>
-                        <configuration>
-                            <includeScope>runtime</includeScope>
-                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
-                        </configuration>
-                    </execution>
-                </executions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-            </plugin>
-            <plugin>
-                <artifactId>maven-clean-plugin</artifactId>
-                <configuration>
-                    <filesets>
-                        <fileset>
-                            <directory>target/</directory>
-                        </fileset>
-                    </filesets>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.xolstice.maven.plugins</groupId>
-                <artifactId>protobuf-maven-plugin</artifactId>
-                <version>${protobuf-maven-plugin.version}</version>
-                <configuration>
-                    <protocArtifact>com.google.protobuf:protoc:${hadoop.protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
-                    <pluginId>grpc-java</pluginId>
-                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
-                </configuration>
-                <executions>
-                    <execution>
-                        <goals>
-                            <goal>compile</goal>
-                            <goal>compile-custom</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.rat</groupId>
-                <artifactId>apache-rat-plugin</artifactId>
-                <configuration>
-                    <excludes>
-                        <exclude>target/generated-sources/**</exclude>
-                        <exclude>target/surefire-reports/**</exclude>
-                        <exclude>target/protoc-dependencies/**</exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-javadoc-plugin</artifactId>
-                <configuration>
-                    <excludePackageNames>csi.v0</excludePackageNames>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.codehaus.mojo</groupId>
-                <artifactId>build-helper-maven-plugin</artifactId>
-                <executions>
-                    <execution>
-                        <id>add-source</id>
-                        <phase>generate-sources</phase>
-                        <goals>
-                            <goal>add-source</goal>
-                        </goals>
-                        <configuration>
-                            <sources>
-                                <source>${basedir}/target/generated-sources/protobuf/java</source>
-                            </sources>
-                        </configuration>
-                    </execution>
-                </executions>
-            </plugin>
-        </plugins>
-    </build>
-</project>
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorFactory.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorFactory.java
deleted file mode 100644
index 955c36f81f8..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorFactory.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.util.ReflectionUtils;
-import org.apache.hadoop.yarn.api.CsiAdaptorPlugin;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-/**
- * Desired csi-adaptor implementation is configurable, default to
- * CsiAdaptorProtocolService. If user wants to have a different implementation,
- * just to configure a different class for the csi-driver.
- */
-public final class CsiAdaptorFactory {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(CsiAdaptorFactory.class);
-
-  private CsiAdaptorFactory() {
-    // hide constructor for this factory class.
-  }
-
-  /**
-   * Load csi-driver-adaptor from configuration. If the configuration is not
-   * specified, the default implementation
-   * for the adaptor is {@link DefaultCsiAdaptorImpl}. If the configured class
-   * is not a valid variation of {@link CsiAdaptorPlugin} or the class cannot
-   * be found, this function will throw a RuntimeException.
-   * @param driverName
-   * @param conf
-   * @return CsiAdaptorPlugin
-   * @throws YarnException if unable to create the adaptor class.
-   * @throws RuntimeException if given class is not found or not
-   *   an instance of {@link CsiAdaptorPlugin}
-   */
-  public static CsiAdaptorPlugin getAdaptor(String driverName,
-      Configuration conf) throws YarnException {
-    // load configuration
-    String configName = YarnConfiguration.NM_CSI_ADAPTOR_PREFIX
-        + driverName + YarnConfiguration.NM_CSI_ADAPTOR_CLASS;
-    Class<? extends CsiAdaptorPlugin> impl = conf.getClass(configName,
-        DefaultCsiAdaptorImpl.class, CsiAdaptorPlugin.class);
-    if (impl == null) {
-      throw new YarnException("Unable to init csi-adaptor from the"
-          + " class specified via " + configName);
-    }
-
-    // init the adaptor
-    CsiAdaptorPlugin instance = ReflectionUtils.newInstance(impl, conf);
-    LOG.info("csi-adaptor initiated, implementation: "
-        + impl.getCanonicalName());
-    return instance;
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorProtocolService.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorProtocolService.java
deleted file mode 100644
index 300c5bcaa26..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorProtocolService.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.ipc.Server;
-import org.apache.hadoop.service.AbstractService;
-import org.apache.hadoop.yarn.api.CsiAdaptorProtocol;
-import org.apache.hadoop.yarn.api.CsiAdaptorPlugin;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.ipc.YarnRPC;
-import org.apache.hadoop.yarn.util.csi.CsiConfigUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.IOException;
-import java.net.InetSocketAddress;
-
-/**
- * This is a Hadoop RPC server, we uses the Hadoop RPC framework here
- * because we need to stick to the security model current Hadoop supports.
- */
-public class CsiAdaptorProtocolService extends AbstractService
-    implements CsiAdaptorProtocol {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(CsiAdaptorProtocolService.class);
-
-  private Server server;
-  private InetSocketAddress adaptorServiceAddress;
-  private CsiAdaptorPlugin serverImpl;
-
-  public CsiAdaptorProtocolService(CsiAdaptorPlugin adaptorImpl) {
-    super(CsiAdaptorProtocolService.class.getName());
-    this.serverImpl = adaptorImpl;
-  }
-
-  @Override
-  protected void serviceInit(Configuration conf) throws Exception {
-    adaptorServiceAddress = CsiConfigUtils
-        .getCsiAdaptorAddressForDriver(serverImpl.getDriverName(), conf);
-    super.serviceInit(conf);
-  }
-
-  @Override
-  protected void serviceStart() throws Exception {
-    Configuration conf = getConfig();
-    YarnRPC rpc = YarnRPC.create(conf);
-    this.server = rpc.getServer(
-        CsiAdaptorProtocol.class,
-        serverImpl, adaptorServiceAddress, conf, null, 1);
-    this.server.start();
-    LOG.info("{} started, listening on address: {}",
-        CsiAdaptorProtocolService.class.getName(),
-        adaptorServiceAddress.toString());
-    super.serviceStart();
-  }
-
-  @Override
-  protected void serviceStop() throws Exception {
-    if (this.server != null) {
-      this.server.stop();
-    }
-    super.serviceStop();
-  }
-
-  @Override
-  public GetPluginInfoResponse getPluginInfo(
-      GetPluginInfoRequest request) throws YarnException, IOException {
-    return serverImpl.getPluginInfo(request);
-  }
-
-  @Override
-  public ValidateVolumeCapabilitiesResponse validateVolumeCapacity(
-      ValidateVolumeCapabilitiesRequest request) throws YarnException,
-      IOException {
-    return serverImpl.validateVolumeCapacity(request);
-  }
-
-  @Override
-  public NodePublishVolumeResponse nodePublishVolume(
-      NodePublishVolumeRequest request) throws YarnException, IOException {
-    return serverImpl.nodePublishVolume(request);
-  }
-
-  @Override
-  public NodeUnpublishVolumeResponse nodeUnpublishVolume(
-      NodeUnpublishVolumeRequest request) throws YarnException, IOException {
-    return serverImpl.nodeUnpublishVolume(request);
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorServices.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorServices.java
deleted file mode 100644
index 78debbe5baa..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/CsiAdaptorServices.java
+++ /dev/null
@@ -1,108 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.api.CsiAdaptorPlugin;
-import org.apache.hadoop.yarn.server.api.ApplicationInitializationContext;
-import org.apache.hadoop.yarn.server.api.ApplicationTerminationContext;
-import org.apache.hadoop.yarn.server.api.AuxiliaryService;
-import org.apache.hadoop.yarn.util.csi.CsiConfigUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.nio.ByteBuffer;
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * NM manages csi-adaptors as a single NM AUX service, this service
- * manages a set of rpc services and each of them serves one particular
- * csi-driver. It loads all available drivers from configuration, and
- * find a csi-driver-adaptor implementation class for each of them. At last
- * it brings up all of them as a composite service.
- */
-public class CsiAdaptorServices extends AuxiliaryService {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(CsiAdaptorServices.class);
-
-  private List<CsiAdaptorProtocolService> serviceList;
-  protected CsiAdaptorServices() {
-    super(CsiAdaptorServices.class.getName());
-    serviceList = new ArrayList<>();
-  }
-
-  @Override
-  protected void serviceInit(Configuration conf) throws Exception {
-    // load configuration and init adaptors
-    String[] names = CsiConfigUtils.getCsiDriverNames(conf);
-    if (names != null && names.length > 0) {
-      for (String driverName : names) {
-        LOG.info("Adding csi-driver-adaptor for csi-driver {}", driverName);
-        CsiAdaptorPlugin serviceImpl = CsiAdaptorFactory
-            .getAdaptor(driverName, conf);
-        serviceImpl.init(driverName, conf);
-        CsiAdaptorProtocolService service =
-            new CsiAdaptorProtocolService(serviceImpl);
-        serviceList.add(service);
-        service.serviceInit(conf);
-      }
-    }
-    super.serviceInit(conf);
-  }
-
-  @Override
-  protected void serviceStop() throws Exception {
-    if (serviceList != null && serviceList.size() > 0) {
-      for (CsiAdaptorProtocolService service : serviceList) {
-        try {
-          service.serviceStop();
-        } catch (Exception e) {
-          LOG.warn("Unable to stop service " + service.getName(), e);
-        }
-      }
-    }
-  }
-
-  @Override
-  protected void serviceStart() throws Exception {
-    if (serviceList != null && serviceList.size() > 0) {
-      for (CsiAdaptorProtocolService service : serviceList) {
-        service.serviceStart();
-      }
-    }
-  }
-
-  @Override
-  public void initializeApplication(
-      ApplicationInitializationContext initAppContext) {
-    // do nothing
-  }
-
-  @Override
-  public void stopApplication(
-      ApplicationTerminationContext stopAppContext) {
-    // do nothing
-  }
-
-  @Override
-  public ByteBuffer getMetaData() {
-    return ByteBuffer.allocate(0);
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/DefaultCsiAdaptorImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/DefaultCsiAdaptorImpl.java
deleted file mode 100644
index 26ffae46832..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/DefaultCsiAdaptorImpl.java
+++ /dev/null
@@ -1,124 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import csi.v0.Csi;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.api.CsiAdaptorPlugin;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
-import org.apache.hadoop.yarn.csi.client.CsiClient;
-import org.apache.hadoop.yarn.csi.client.CsiClientImpl;
-import org.apache.hadoop.yarn.csi.translator.ProtoTranslatorFactory;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.util.csi.CsiConfigUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.IOException;
-
-/**
- * The default implementation of csi-driver-adaptor service.
- */
-public class DefaultCsiAdaptorImpl implements CsiAdaptorPlugin {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(DefaultCsiAdaptorImpl.class);
-
-  private String driverName;
-  private CsiClient csiClient;
-
-  public DefaultCsiAdaptorImpl() {
-    // use default constructor for reflection
-  }
-
-  @Override
-  public void init(String driverName, Configuration conf)
-      throws YarnException {
-    // if the driver end point is invalid, following code will fail.
-    String driverEndpoint = CsiConfigUtils
-        .getCsiDriverEndpoint(driverName, conf);
-    LOG.info("This csi-adaptor is configured to contact with"
-            + " the csi-driver {} via gRPC endpoint: {}",
-        driverName, driverEndpoint);
-    this.csiClient = new CsiClientImpl(driverEndpoint);
-    this.driverName = driverName;
-  }
-
-  @Override
-  public String getDriverName() {
-    return driverName;
-  }
-
-  @Override
-  public GetPluginInfoResponse getPluginInfo(
-      GetPluginInfoRequest request) throws YarnException, IOException {
-    Csi.GetPluginInfoResponse response = csiClient.getPluginInfo();
-    return ProtoTranslatorFactory.getTranslator(
-        GetPluginInfoResponse.class, Csi.GetPluginInfoResponse.class)
-        .convertFrom(response);
-  }
-
-  @Override
-  public ValidateVolumeCapabilitiesResponse validateVolumeCapacity(
-      ValidateVolumeCapabilitiesRequest request) throws YarnException,
-      IOException {
-    Csi.ValidateVolumeCapabilitiesRequest req = ProtoTranslatorFactory
-        .getTranslator(ValidateVolumeCapabilitiesRequest.class,
-            Csi.ValidateVolumeCapabilitiesRequest.class)
-        .convertTo(request);
-    Csi.ValidateVolumeCapabilitiesResponse response =
-        csiClient.validateVolumeCapabilities(req);
-    return ProtoTranslatorFactory.getTranslator(
-        ValidateVolumeCapabilitiesResponse.class,
-        Csi.ValidateVolumeCapabilitiesResponse.class)
-        .convertFrom(response);
-  }
-
-  @Override
-  public NodePublishVolumeResponse nodePublishVolume(
-      NodePublishVolumeRequest request) throws YarnException, IOException {
-    LOG.debug("Received nodePublishVolume call, request: {}",
-        request);
-    Csi.NodePublishVolumeRequest req = ProtoTranslatorFactory
-        .getTranslator(NodePublishVolumeRequest.class,
-            Csi.NodePublishVolumeRequest.class).convertTo(request);
-    LOG.debug("Translate to CSI proto message: {}", req);
-    csiClient.nodePublishVolume(req);
-    return NodePublishVolumeResponse.newInstance();
-  }
-
-  @Override
-  public NodeUnpublishVolumeResponse nodeUnpublishVolume(
-      NodeUnpublishVolumeRequest request) throws YarnException, IOException {
-    LOG.debug("Received nodeUnpublishVolume call, request: {}",
-        request);
-    Csi.NodeUnpublishVolumeRequest req = ProtoTranslatorFactory
-        .getTranslator(NodeUnpublishVolumeRequest.class,
-            Csi.NodeUnpublishVolumeRequest.class).convertTo(request);
-    LOG.debug("Translate to CSI proto message: {}", req);
-    csiClient.nodeUnpublishVolume(req);
-    return NodeUnpublishVolumeResponse.newInstance();
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java
deleted file mode 100644
index 919aab587aa..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * This package contains CSI adaptor classes.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClient.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClient.java
deleted file mode 100644
index 837b667a5e6..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClient.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.client;
-
-import csi.v0.Csi;
-import csi.v0.Csi.GetPluginInfoResponse;
-
-import java.io.IOException;
-
-/**
- * General interface for a CSI client. This interface defines all APIs
- * that CSI spec supports, including both identity/controller/node service
- * APIs.
- */
-public interface CsiClient {
-
-  /**
-   * Gets some basic info about the CSI plugin, including the driver name,
-   * version and optionally some manifest info.
-   * @return {@link GetPluginInfoResponse}
-   * @throws IOException when unable to get plugin info from the driver.
-   */
-  GetPluginInfoResponse getPluginInfo() throws IOException;
-
-  Csi.ValidateVolumeCapabilitiesResponse validateVolumeCapabilities(
-      Csi.ValidateVolumeCapabilitiesRequest request) throws IOException;
-
-  Csi.NodePublishVolumeResponse nodePublishVolume(
-      Csi.NodePublishVolumeRequest request) throws IOException;
-
-  Csi.NodeUnpublishVolumeResponse nodeUnpublishVolume(
-      Csi.NodeUnpublishVolumeRequest request) throws IOException;
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClientImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClientImpl.java
deleted file mode 100644
index 0a107e16b5e..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiClientImpl.java
+++ /dev/null
@@ -1,82 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.client;
-
-import csi.v0.Csi;
-import csi.v0.Csi.GetPluginInfoRequest;
-import csi.v0.Csi.GetPluginInfoResponse;
-import org.apache.hadoop.yarn.csi.utils.GrpcHelper;
-
-import java.io.IOException;
-import java.net.SocketAddress;
-
-/**
- * A CSI client implementation that communicates with a CSI driver via
- * unix domain socket. It leverages gRPC blocking stubs to synchronize
- * the call with CSI driver. CSI spec is designed as a set of synchronized
- * APIs, in order to make the call idempotent for failure recovery,
- * so the client does the same.
- */
-public class CsiClientImpl implements CsiClient {
-
-  private final SocketAddress address;
-
-  public CsiClientImpl(String address) {
-    this.address = GrpcHelper.getSocketAddress(address);
-  }
-
-  @Override
-  public GetPluginInfoResponse getPluginInfo() throws IOException {
-    try (CsiGrpcClient client = CsiGrpcClient.newBuilder()
-        .setDomainSocketAddress(address).build()) {
-      GetPluginInfoRequest request = GetPluginInfoRequest.getDefaultInstance();
-      return client.createIdentityBlockingStub().getPluginInfo(request);
-    }
-  }
-
-  @Override
-  public Csi.ValidateVolumeCapabilitiesResponse validateVolumeCapabilities(
-      Csi.ValidateVolumeCapabilitiesRequest request) throws IOException {
-    try (CsiGrpcClient client = CsiGrpcClient.newBuilder()
-        .setDomainSocketAddress(address).build()) {
-      return client.createControllerBlockingStub()
-          .validateVolumeCapabilities(request);
-    }
-  }
-
-  @Override
-  public Csi.NodePublishVolumeResponse nodePublishVolume(
-      Csi.NodePublishVolumeRequest request) throws IOException {
-    try (CsiGrpcClient client = CsiGrpcClient.newBuilder()
-        .setDomainSocketAddress(address).build()) {
-      return client.createNodeBlockingStub()
-          .nodePublishVolume(request);
-    }
-  }
-
-  @Override
-  public Csi.NodeUnpublishVolumeResponse nodeUnpublishVolume(
-      Csi.NodeUnpublishVolumeRequest request) throws IOException {
-    try (CsiGrpcClient client = CsiGrpcClient.newBuilder()
-        .setDomainSocketAddress(address).build()) {
-      return client.createNodeBlockingStub()
-          .nodeUnpublishVolume(request);
-    }
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiGrpcClient.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiGrpcClient.java
deleted file mode 100644
index af6eec23565..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/CsiGrpcClient.java
+++ /dev/null
@@ -1,127 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.client;
-
-import csi.v0.ControllerGrpc;
-import csi.v0.IdentityGrpc;
-import csi.v0.NodeGrpc;
-import io.grpc.ManagedChannel;
-import io.grpc.netty.NettyChannelBuilder;
-import io.netty.channel.epoll.EpollDomainSocketChannel;
-import io.netty.channel.epoll.EpollEventLoopGroup;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.util.concurrent.DefaultThreadFactory;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.IOException;
-import java.net.SocketAddress;
-import java.util.concurrent.TimeUnit;
-
-/**
- * A CSI gRPC client, it connects a CSI driver via a given unix domain socket.
- */
-public final class CsiGrpcClient implements AutoCloseable {
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(CsiGrpcClient.class);
-
-  private final ManagedChannel channel;
-
-  private CsiGrpcClient(ManagedChannel channel) {
-    this.channel = channel;
-  }
-
-  public static GrpcClientBuilder newBuilder() {
-    return new GrpcClientBuilder();
-  }
-
-  /**
-   * The Grpc Client builder.
-   */
-  public static class GrpcClientBuilder {
-
-    private SocketAddress socket;
-
-    public GrpcClientBuilder setDomainSocketAddress(SocketAddress address) {
-      this.socket = address;
-      return this;
-    }
-
-    private ManagedChannel getChannel(SocketAddress socketAddress)
-        throws IOException {
-      DefaultThreadFactory tf = new DefaultThreadFactory(
-          "yarn-csi-client-", true);
-      EpollEventLoopGroup loopGroup = new EpollEventLoopGroup(0, tf);
-      if (socketAddress instanceof DomainSocketAddress) {
-        ManagedChannel channel = NettyChannelBuilder.forAddress(socketAddress)
-            .channelType(EpollDomainSocketChannel.class)
-            .eventLoopGroup(loopGroup)
-            .usePlaintext()
-            .build();
-        return channel;
-      } else {
-        throw new IOException("Currently only unix domain socket is supported");
-      }
-    }
-
-    public CsiGrpcClient build() throws IOException {
-      ManagedChannel socketChannel = getChannel(socket);
-      return new CsiGrpcClient(socketChannel);
-    }
-  }
-
-  /**
-   * Shutdown the communication channel gracefully,
-   * wait for 5 seconds before it is enforced.
-   */
-  @Override
-  public void close() {
-    try {
-      this.channel.shutdown().awaitTermination(5, TimeUnit.SECONDS);
-    } catch (InterruptedException e) {
-      LOG.error("Failed to gracefully shutdown"
-          + " gRPC communication channel in 5 seconds", e);
-    }
-  }
-
-  /**
-   * Creates a blocking stub for CSI identity plugin on the given channel.
-   * @return the blocking stub
-   */
-  public IdentityGrpc.IdentityBlockingStub createIdentityBlockingStub() {
-    return IdentityGrpc.newBlockingStub(channel);
-  }
-
-  /**
-   * Creates a blocking stub for CSI controller plugin on the given channel.
-   * @return the blocking stub
-   */
-  public ControllerGrpc.ControllerBlockingStub createControllerBlockingStub(){
-    return ControllerGrpc.newBlockingStub(channel);
-  }
-
-  /**
-   * Creates a blocking stub for CSI node plugin on the given channel.
-   * @return the blocking stub
-   */
-  public NodeGrpc.NodeBlockingStub createNodeBlockingStub() {
-    return NodeGrpc.newBlockingStub(channel);
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/package-info.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/package-info.java
deleted file mode 100644
index 54afe1b8b0a..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/client/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * This package contains CSI client classes.
- */
-package org.apache.hadoop.yarn.csi.client;
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/package-info.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/package-info.java
deleted file mode 100644
index ee61f871b78..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * This package contains classes for CSI.
- */
-package org.apache.hadoop.yarn.csi;
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/GetPluginInfoResponseProtoTranslator.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/GetPluginInfoResponseProtoTranslator.java
deleted file mode 100644
index bcf634addcb..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/GetPluginInfoResponseProtoTranslator.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.translator;
-
-import csi.v0.Csi;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoResponse;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-
-/**
- * Protobuf message translator for GetPluginInfoResponse and
- * Csi.GetPluginInfoResponse.
- */
-public class GetPluginInfoResponseProtoTranslator<A, B> implements
-    ProtoTranslator<GetPluginInfoResponse, Csi.GetPluginInfoResponse> {
-
-  @Override public Csi.GetPluginInfoResponse convertTo(
-      GetPluginInfoResponse messageA) throws YarnException {
-    return Csi.GetPluginInfoResponse.newBuilder()
-        .setName(messageA.getDriverName())
-        .setVendorVersion(messageA.getVersion())
-        .build();
-  }
-
-  @Override public GetPluginInfoResponse convertFrom(
-      Csi.GetPluginInfoResponse messageB) throws YarnException {
-    return GetPluginInfoResponse.newInstance(messageB.getName(),
-        messageB.getVendorVersion());
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodePublishVolumeRequestProtoTranslator.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodePublishVolumeRequestProtoTranslator.java
deleted file mode 100644
index e86dd3fcc9f..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodePublishVolumeRequestProtoTranslator.java
+++ /dev/null
@@ -1,77 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.translator;
-
-import csi.v0.Csi;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-
-/**
- * This class helps to transform a YARN side NodePublishVolumeRequest
- * to corresponding CSI protocol message.
- * @param <A> YARN NodePublishVolumeRequest
- * @param <B> CSI NodePublishVolumeRequest
- */
-public class NodePublishVolumeRequestProtoTranslator<A, B> implements
-    ProtoTranslator<NodePublishVolumeRequest,
-        Csi.NodePublishVolumeRequest> {
-
-  @Override
-  public Csi.NodePublishVolumeRequest convertTo(
-      NodePublishVolumeRequest messageA) throws YarnException {
-    Csi.NodePublishVolumeRequest.Builder builder =
-        Csi.NodePublishVolumeRequest.newBuilder();
-    ValidateVolumeCapabilitiesRequest.VolumeCapability cap =
-        messageA.getVolumeCapability();
-    Csi.VolumeCapability csiVolumeCap = Csi.VolumeCapability.newBuilder()
-        .setAccessMode(Csi.VolumeCapability.AccessMode.newBuilder()
-            .setModeValue(cap.getAccessMode().ordinal())) // access mode
-        // TODO support block
-        .setMount(Csi.VolumeCapability.MountVolume.newBuilder()
-            // TODO support fsType
-            .setFsType("xfs") // fs type
-            .addAllMountFlags(cap.getMountFlags())) // mount flags
-        .build();
-    builder.setVolumeCapability(csiVolumeCap);
-    builder.setVolumeId(messageA.getVolumeId());
-    builder.setTargetPath(messageA.getTargetPath());
-    builder.setReadonly(messageA.getReadOnly());
-    builder.putAllNodePublishSecrets(messageA.getSecrets());
-    builder.putAllPublishInfo(messageA.getPublishContext());
-    builder.setStagingTargetPath(messageA.getStagingPath());
-    return builder.build();
-  }
-
-  @Override
-  public NodePublishVolumeRequest convertFrom(
-      Csi.NodePublishVolumeRequest messageB) throws YarnException {
-    Csi.VolumeCapability cap0 = messageB.getVolumeCapability();
-    ValidateVolumeCapabilitiesRequest.VolumeCapability cap =
-        new ValidateVolumeCapabilitiesRequest.VolumeCapability(
-            ValidateVolumeCapabilitiesRequest.AccessMode
-                .valueOf(cap0.getAccessMode().getMode().name()),
-            ValidateVolumeCapabilitiesRequest.VolumeType.FILE_SYSTEM,
-            cap0.getMount().getMountFlagsList());
-    return NodePublishVolumeRequest.newInstance(
-        messageB.getVolumeId(), messageB.getReadonly(),
-        messageB.getTargetPath(), messageB.getStagingTargetPath(),
-        cap, messageB.getPublishInfoMap(),
-        messageB.getNodePublishSecretsMap());
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodeUnpublishVolumeRequestProtoTranslator.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodeUnpublishVolumeRequestProtoTranslator.java
deleted file mode 100644
index 485237e3697..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/NodeUnpublishVolumeRequestProtoTranslator.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.translator;
-
-import csi.v0.Csi;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeRequest;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-
-/**
- * This class helps to transform a YARN side NodeUnpublishVolumeRequest
- * to corresponding CSI protocol message.
- * @param <A> YARN NodeUnpublishVolumeRequest
- * @param <B> CSI NodeUnpublishVolumeRequest
- */
-public class NodeUnpublishVolumeRequestProtoTranslator<A, B> implements
-    ProtoTranslator<NodeUnpublishVolumeRequest,
-        Csi.NodeUnpublishVolumeRequest> {
-
-  @Override
-  public Csi.NodeUnpublishVolumeRequest convertTo(
-      NodeUnpublishVolumeRequest messageA) throws YarnException {
-    return Csi.NodeUnpublishVolumeRequest.newBuilder()
-        .setVolumeId(messageA.getVolumeId())
-        .setTargetPath(messageA.getTargetPath())
-        .build();
-  }
-
-  @Override
-  public NodeUnpublishVolumeRequest convertFrom(
-      Csi.NodeUnpublishVolumeRequest messageB) throws YarnException {
-    return NodeUnpublishVolumeRequest
-        .newInstance(messageB.getVolumeId(), messageB.getTargetPath());
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslator.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslator.java
deleted file mode 100644
index 93cb44128d8..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslator.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.translator;
-
-import org.apache.hadoop.yarn.exceptions.YarnException;
-
-/**
- * ProtoTranslator converts a YARN side message to CSI proto message
- * and vice versa. Each CSI proto message should have a corresponding
- * YARN side message implementation, and a transformer to convert them
- * one to the other. This layer helps we to hide CSI spec messages
- * from YARN components.
- *
- * @param <A> YARN side internal messages
- * @param <B> CSI proto messages
- */
-public interface ProtoTranslator<A, B> {
-
-  /**
-   * Convert message from type A to type B.
-   * @param messageA
-   * @return messageB
-   * @throws YarnException
-   */
-  B convertTo(A messageA) throws YarnException;
-
-  /**
-   * Convert message from type B to type A.
-   * @param messageB
-   * @return messageA
-   * @throws YarnException
-   */
-  A convertFrom(B messageB) throws YarnException;
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslatorFactory.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslatorFactory.java
deleted file mode 100644
index 1a7306f0bf2..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslatorFactory.java
+++ /dev/null
@@ -1,78 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.translator;
-
-import csi.v0.Csi;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoResponse;
-
-/**
- * Factory class to get desired proto transformer instance.
- */
-public final class ProtoTranslatorFactory {
-
-  private ProtoTranslatorFactory() {
-    // hide constructor for the factory class
-  }
-
-  /**
-   * Get a {@link ProtoTranslator} based on the given input message
-   * types. If the type is not supported, a IllegalArgumentException
-   * will be thrown. When adding more transformers to this factory class,
-   * note each transformer works exactly for one message to another
-   * (and vice versa). For each type of the message, make sure there is
-   * a corresponding unit test added, such as
-   * TestValidateVolumeCapabilitiesRequest.
-   *
-   * @param yarnProto yarn proto message
-   * @param csiProto CSI proto message
-   * @param <A> yarn proto message
-   * @param <B> CSI proto message
-   * @throws IllegalArgumentException
-   *   when given types are not supported
-   * @return
-   *   a proto message transformer that transforms
-   *   YARN internal proto message to CSI
-   */
-  public static <A, B> ProtoTranslator<A, B> getTranslator(
-      Class<A> yarnProto, Class<B> csiProto) {
-    if (yarnProto == ValidateVolumeCapabilitiesRequest.class
-        && csiProto == Csi.ValidateVolumeCapabilitiesRequest.class) {
-      return new ValidateVolumeCapabilitiesRequestProtoTranslator();
-    } else if (yarnProto == ValidateVolumeCapabilitiesResponse.class
-        && csiProto == Csi.ValidateVolumeCapabilitiesResponse.class) {
-      return new ValidationVolumeCapabilitiesResponseProtoTranslator();
-    } else if (yarnProto == NodePublishVolumeRequest.class
-        && csiProto == Csi.NodePublishVolumeRequest.class) {
-      return new NodePublishVolumeRequestProtoTranslator();
-    } else if (yarnProto == GetPluginInfoResponse.class
-        && csiProto == Csi.GetPluginInfoResponse.class) {
-      return new GetPluginInfoResponseProtoTranslator();
-    } else if (yarnProto == NodeUnpublishVolumeRequest.class
-        && csiProto == Csi.NodeUnpublishVolumeRequest.class) {
-      return new NodeUnpublishVolumeRequestProtoTranslator();
-    }
-    throw new IllegalArgumentException("A problem is found while processing"
-        + " proto message translating. Unexpected message types,"
-        + " no transformer is found can handle the transformation from type "
-        + yarnProto.getName() + " <-> " + csiProto.getName());
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidateVolumeCapabilitiesRequestProtoTranslator.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidateVolumeCapabilitiesRequestProtoTranslator.java
deleted file mode 100644
index a74c47a9f6e..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidateVolumeCapabilitiesRequestProtoTranslator.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.translator;
-
-import csi.v0.Csi;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.VolumeCapability;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.VolumeType;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Proto message translator for ValidateVolumeCapabilitiesRequest.
- * @param <A> ValidateVolumeCapabilitiesRequest
- * @param <B> Csi.ValidateVolumeCapabilitiesRequest
- */
-public class ValidateVolumeCapabilitiesRequestProtoTranslator<A, B>
-    implements ProtoTranslator<ValidateVolumeCapabilitiesRequest,
-            Csi.ValidateVolumeCapabilitiesRequest> {
-
-  @Override
-  public Csi.ValidateVolumeCapabilitiesRequest convertTo(
-      ValidateVolumeCapabilitiesRequest request) throws YarnException {
-    Csi.ValidateVolumeCapabilitiesRequest.Builder buidler =
-        Csi.ValidateVolumeCapabilitiesRequest.newBuilder();
-    buidler.setVolumeId(request.getVolumeId());
-    if (request.getVolumeCapabilities() != null
-        && request.getVolumeCapabilities().size() > 0) {
-      buidler.putAllVolumeAttributes(request.getVolumeAttributes());
-    }
-    for (VolumeCapability cap :
-        request.getVolumeCapabilities()) {
-      Csi.VolumeCapability.AccessMode accessMode =
-          Csi.VolumeCapability.AccessMode.newBuilder()
-              .setModeValue(cap.getAccessMode().ordinal())
-              .build();
-      Csi.VolumeCapability.MountVolume mountVolume =
-          Csi.VolumeCapability.MountVolume.newBuilder()
-              .addAllMountFlags(cap.getMountFlags())
-              .build();
-      Csi.VolumeCapability capability =
-          Csi.VolumeCapability.newBuilder()
-              .setAccessMode(accessMode)
-              .setMount(mountVolume)
-              .build();
-      buidler.addVolumeCapabilities(capability);
-    }
-    return buidler.build();
-  }
-
-  @Override
-  public ValidateVolumeCapabilitiesRequest convertFrom(
-      Csi.ValidateVolumeCapabilitiesRequest request) throws YarnException {
-    ValidateVolumeCapabilitiesRequest result = ValidateVolumeCapabilitiesRequest
-        .newInstance(request.getVolumeId(), request.getVolumeAttributesMap());
-    for (Csi.VolumeCapability csiCap :
-        request.getVolumeCapabilitiesList()) {
-      ValidateVolumeCapabilitiesRequest.AccessMode mode =
-          ValidateVolumeCapabilitiesRequest.AccessMode
-              .valueOf(csiCap.getAccessMode().getMode().name());
-      if (!csiCap.hasMount()) {
-        throw new YarnException("Invalid request,"
-            + " mount is not found in the request.");
-      }
-      List<String> mountFlags = new ArrayList<>();
-      for (int i=0; i<csiCap.getMount().getMountFlagsCount(); i++) {
-        mountFlags.add(csiCap.getMount().getMountFlags(i));
-      }
-      VolumeCapability capability = new VolumeCapability(mode,
-          VolumeType.FILE_SYSTEM, mountFlags);
-      result.addVolumeCapability(capability);
-    }
-    return result;
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidationVolumeCapabilitiesResponseProtoTranslator.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidationVolumeCapabilitiesResponseProtoTranslator.java
deleted file mode 100644
index fd42712625e..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ValidationVolumeCapabilitiesResponseProtoTranslator.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.translator;
-
-import csi.v0.Csi;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-
-/**
- * Proto message translator for ValidateVolumeCapabilitiesResponse.
- * @param <A> ValidateVolumeCapabilitiesResponse
- * @param <B> Csi.ValidateVolumeCapabilitiesResponse
- */
-public class ValidationVolumeCapabilitiesResponseProtoTranslator<A, B>
-    implements ProtoTranslator<ValidateVolumeCapabilitiesResponse,
-            Csi.ValidateVolumeCapabilitiesResponse> {
-
-  @Override
-  public Csi.ValidateVolumeCapabilitiesResponse convertTo(
-      ValidateVolumeCapabilitiesResponse response) throws YarnException {
-    return Csi.ValidateVolumeCapabilitiesResponse.newBuilder()
-        .setSupported(response.isSupported())
-        .setMessage(response.getResponseMessage())
-        .build();
-  }
-
-  @Override
-  public ValidateVolumeCapabilitiesResponse convertFrom(
-      Csi.ValidateVolumeCapabilitiesResponse response) throws YarnException {
-    return ValidateVolumeCapabilitiesResponse.newInstance(
-        response.getSupported(), response.getMessage());
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/package-info.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/package-info.java
deleted file mode 100644
index c0964cdf089..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * This package contains classes for protocol translation between YARN and CSI.
- */
-package org.apache.hadoop.yarn.csi.translator;
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/GrpcHelper.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/GrpcHelper.java
deleted file mode 100644
index a00f78a2ab7..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/GrpcHelper.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.utils;
-
-import io.netty.channel.unix.DomainSocketAddress;
-
-import java.io.File;
-import java.net.SocketAddress;
-
-/**
- * Helper classes for gRPC utility functions.
- */
-public final class GrpcHelper {
-
-  protected static final String UNIX_DOMAIN_SOCKET_PREFIX = "unix://";
-
-  private GrpcHelper() {
-    // hide constructor for utility class
-  }
-
-  public static SocketAddress getSocketAddress(String value) {
-    if (value.startsWith(UNIX_DOMAIN_SOCKET_PREFIX)) {
-      String filePath = value.substring(UNIX_DOMAIN_SOCKET_PREFIX.length());
-      File file = new File(filePath);
-      if (!file.isAbsolute()) {
-        throw new IllegalArgumentException(
-            "Unix domain socket file path must be absolute, file: " + value);
-      }
-      // Create the SocketAddress referencing the file.
-      return new DomainSocketAddress(file);
-    } else {
-      throw new IllegalArgumentException("Given address " + value
-          + " is not a valid unix domain socket path");
-    }
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/package-info.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/package-info.java
deleted file mode 100644
index 9ead276a625..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/utils/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * This package contains utility classes for CSI.
- */
-package org.apache.hadoop.yarn.csi.utils;
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/proto/csi.proto b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/proto/csi.proto
deleted file mode 100644
index e9301bc6bc9..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/proto/csi.proto
+++ /dev/null
@@ -1,1114 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-// https://github.com/container-storage-interface/spec/blob/v0.3.0/csi.proto
-// ** v0.3 **
-
-// Code generated by make; DO NOT EDIT.
-syntax = "proto3";
-package csi.v0;
-
-import "google/protobuf/wrappers.proto";
-
-option go_package = "csi";
-service Identity {
-    rpc GetPluginInfo(GetPluginInfoRequest)
-    returns (GetPluginInfoResponse) {}
-
-    rpc GetPluginCapabilities(GetPluginCapabilitiesRequest)
-    returns (GetPluginCapabilitiesResponse) {}
-
-    rpc Probe (ProbeRequest)
-    returns (ProbeResponse) {}
-}
-
-service Controller {
-    rpc CreateVolume (CreateVolumeRequest)
-    returns (CreateVolumeResponse) {}
-
-    rpc DeleteVolume (DeleteVolumeRequest)
-    returns (DeleteVolumeResponse) {}
-
-    rpc ControllerPublishVolume (ControllerPublishVolumeRequest)
-    returns (ControllerPublishVolumeResponse) {}
-
-    rpc ControllerUnpublishVolume (ControllerUnpublishVolumeRequest)
-    returns (ControllerUnpublishVolumeResponse) {}
-
-    rpc ValidateVolumeCapabilities (ValidateVolumeCapabilitiesRequest)
-    returns (ValidateVolumeCapabilitiesResponse) {}
-
-    rpc ListVolumes (ListVolumesRequest)
-    returns (ListVolumesResponse) {}
-
-    rpc GetCapacity (GetCapacityRequest)
-    returns (GetCapacityResponse) {}
-
-    rpc ControllerGetCapabilities (ControllerGetCapabilitiesRequest)
-    returns (ControllerGetCapabilitiesResponse) {}
-
-    rpc CreateSnapshot (CreateSnapshotRequest)
-    returns (CreateSnapshotResponse) {}
-
-    rpc DeleteSnapshot (DeleteSnapshotRequest)
-    returns (DeleteSnapshotResponse) {}
-
-    rpc ListSnapshots (ListSnapshotsRequest)
-    returns (ListSnapshotsResponse) {}
-}
-
-service Node {
-    rpc NodeStageVolume (NodeStageVolumeRequest)
-    returns (NodeStageVolumeResponse) {}
-
-    rpc NodeUnstageVolume (NodeUnstageVolumeRequest)
-    returns (NodeUnstageVolumeResponse) {}
-
-    rpc NodePublishVolume (NodePublishVolumeRequest)
-    returns (NodePublishVolumeResponse) {}
-
-    rpc NodeUnpublishVolume (NodeUnpublishVolumeRequest)
-    returns (NodeUnpublishVolumeResponse) {}
-
-    // NodeGetId is being deprecated in favor of NodeGetInfo and will be
-    // removed in CSI 1.0. Existing drivers, however, may depend on this
-    // RPC call and hence this RPC call MUST be implemented by the CSI
-    // plugin prior to v1.0.
-    rpc NodeGetId (NodeGetIdRequest)
-    returns (NodeGetIdResponse) {
-        option deprecated = true;
-    }
-
-    rpc NodeGetCapabilities (NodeGetCapabilitiesRequest)
-    returns (NodeGetCapabilitiesResponse) {}
-
-    // Prior to CSI 1.0 - CSI plugins MUST implement both NodeGetId and
-    // NodeGetInfo RPC calls.
-    rpc NodeGetInfo (NodeGetInfoRequest)
-    returns (NodeGetInfoResponse) {}
-}
-message GetPluginInfoRequest {
-    // Intentionally empty.
-}
-
-message GetPluginInfoResponse {
-    // The name MUST follow reverse domain name notation format
-    // (https://en.wikipedia.org/wiki/Reverse_domain_name_notation).
-    // It SHOULD include the plugin's host company name and the plugin
-    // name, to minimize the possibility of collisions. It MUST be 63
-    // characters or less, beginning and ending with an alphanumeric
-    // character ([a-z0-9A-Z]) with dashes (-), underscores (_),
-    // dots (.), and alphanumerics between. This field is REQUIRED.
-    string name = 1;
-
-    // This field is REQUIRED. Value of this field is opaque to the CO.
-    string vendor_version = 2;
-
-    // This field is OPTIONAL. Values are opaque to the CO.
-    map<string, string> manifest = 3;
-}
-message GetPluginCapabilitiesRequest {
-    // Intentionally empty.
-}
-
-message GetPluginCapabilitiesResponse {
-    // All the capabilities that the controller service supports. This
-    // field is OPTIONAL.
-    repeated PluginCapability capabilities = 2;
-}
-
-// Specifies a capability of the plugin.
-message PluginCapability {
-    message Service {
-        enum Type {
-            UNKNOWN = 0;
-
-            // CONTROLLER_SERVICE indicates that the Plugin provides RPCs for
-            // the ControllerService. Plugins SHOULD provide this capability.
-            // In rare cases certain plugins may wish to omit the
-            // ControllerService entirely from their implementation, but such
-            // SHOULD NOT be the common case.
-            // The presence of this capability determines whether the CO will
-            // attempt to invoke the REQUIRED ControllerService RPCs, as well
-            // as specific RPCs as indicated by ControllerGetCapabilities.
-            CONTROLLER_SERVICE = 1;
-
-            // ACCESSIBILITY_CONSTRAINTS indicates that the volumes for this
-            // plugin may not be equally accessible by all nodes in the
-            // cluster. The CO MUST use the topology information returned by
-            // CreateVolumeRequest along with the topology information
-            // returned by NodeGetInfo to ensure that a given volume is
-            // accessible from a given node when scheduling workloads.
-            ACCESSIBILITY_CONSTRAINTS = 2;
-        }
-        Type type = 1;
-    }
-
-    oneof type {
-        // Service that the plugin supports.
-        Service service = 1;
-    }
-}
-message ProbeRequest {
-    // Intentionally empty.
-}
-
-message ProbeResponse {
-    // Readiness allows a plugin to report its initialization status back
-    // to the CO. Initialization for some plugins MAY be time consuming
-    // and it is important for a CO to distinguish between the following
-    // cases:
-    //
-    // 1) The plugin is in an unhealthy state and MAY need restarting. In
-    //    this case a gRPC error code SHALL be returned.
-    // 2) The plugin is still initializing, but is otherwise perfectly
-    //    healthy. In this case a successful response SHALL be returned
-    //    with a readiness value of `false`. Calls to the plugin's
-    //    Controller and/or Node services MAY fail due to an incomplete
-    //    initialization state.
-    // 3) The plugin has finished initializing and is ready to service
-    //    calls to its Controller and/or Node services. A successful
-    //    response is returned with a readiness value of `true`.
-    //
-    // This field is OPTIONAL. If not present, the caller SHALL assume
-    // that the plugin is in a ready state and is accepting calls to its
-    // Controller and/or Node services (according to the plugin's reported
-    // capabilities).
-    .google.protobuf.BoolValue ready = 1;
-}
-message CreateVolumeRequest {
-    // The suggested name for the storage space. This field is REQUIRED.
-    // It serves two purposes:
-    // 1) Idempotency - This name is generated by the CO to achieve
-    //    idempotency. If `CreateVolume` fails, the volume may or may not
-    //    be provisioned. In this case, the CO may call `CreateVolume`
-    //    again, with the same name, to ensure the volume exists. The
-    //    Plugin should ensure that multiple `CreateVolume` calls for the
-    //    same name do not result in more than one piece of storage
-    //    provisioned corresponding to that name. If a Plugin is unable to
-    //    enforce idempotency, the CO's error recovery logic could result
-    //    in multiple (unused) volumes being provisioned.
-    // 2) Suggested name - Some storage systems allow callers to specify
-    //    an identifier by which to refer to the newly provisioned
-    //    storage. If a storage system supports this, it can optionally
-    //    use this name as the identifier for the new volume.
-    string name = 1;
-
-    // This field is OPTIONAL. This allows the CO to specify the capacity
-    // requirement of the volume to be provisioned. If not specified, the
-    // Plugin MAY choose an implementation-defined capacity range. If
-    // specified it MUST always be honored, even when creating volumes
-    // from a source; which may force some backends to internally extend
-    // the volume after creating it.
-
-    CapacityRange capacity_range = 2;
-
-    // The capabilities that the provisioned volume MUST have: the Plugin
-    // MUST provision a volume that could satisfy ALL of the
-    // capabilities specified in this list. The Plugin MUST assume that
-    // the CO MAY use the  provisioned volume later with ANY of the
-    // capabilities specified in this list. This also enables the CO to do
-    // early validation: if ANY of the specified volume capabilities are
-    // not supported by the Plugin, the call SHALL fail. This field is
-    // REQUIRED.
-    repeated VolumeCapability volume_capabilities = 3;
-
-    // Plugin specific parameters passed in as opaque key-value pairs.
-    // This field is OPTIONAL. The Plugin is responsible for parsing and
-    // validating these parameters. COs will treat these as opaque.
-    map<string, string> parameters = 4;
-
-    // Secrets required by plugin to complete volume creation request.
-    // This field is OPTIONAL. Refer to the `Secrets Requirements`
-    // section on how to use this field.
-    map<string, string> controller_create_secrets = 5;
-
-    // If specified, the new volume will be pre-populated with data from
-    // this source. This field is OPTIONAL.
-    VolumeContentSource volume_content_source = 6;
-
-    // Specifies where (regions, zones, racks, etc.) the provisioned
-    // volume MUST be accessible from.
-    // An SP SHALL advertise the requirements for topological
-    // accessibility information in documentation. COs SHALL only specify
-    // topological accessibility information supported by the SP.
-    // This field is OPTIONAL.
-    // This field SHALL NOT be specified unless the SP has the
-    // ACCESSIBILITY_CONSTRAINTS plugin capability.
-    // If this field is not specified and the SP has the
-    // ACCESSIBILITY_CONSTRAINTS plugin capability, the SP MAY choose
-    // where the provisioned volume is accessible from.
-    TopologyRequirement accessibility_requirements = 7;
-}
-
-// Specifies what source the volume will be created from. One of the
-// type fields MUST be specified.
-message VolumeContentSource {
-    message SnapshotSource {
-        // Contains identity information for the existing source snapshot.
-        // This field is REQUIRED. Plugin is REQUIRED to support creating
-        // volume from snapshot if it supports the capability
-        // CREATE_DELETE_SNAPSHOT.
-        string id = 1;
-    }
-
-    oneof type {
-        SnapshotSource snapshot = 1;
-    }
-}
-
-message CreateVolumeResponse {
-    // Contains all attributes of the newly created volume that are
-    // relevant to the CO along with information required by the Plugin
-    // to uniquely identify the volume. This field is REQUIRED.
-    Volume volume = 1;
-}
-
-// Specify a capability of a volume.
-message VolumeCapability {
-    // Indicate that the volume will be accessed via the block device API.
-    message BlockVolume {
-        // Intentionally empty, for now.
-    }
-
-    // Indicate that the volume will be accessed via the filesystem API.
-    message MountVolume {
-        // The filesystem type. This field is OPTIONAL.
-        // An empty string is equal to an unspecified field value.
-        string fs_type = 1;
-
-        // The mount options that can be used for the volume. This field is
-        // OPTIONAL. `mount_flags` MAY contain sensitive information.
-        // Therefore, the CO and the Plugin MUST NOT leak this information
-        // to untrusted entities. The total size of this repeated field
-        // SHALL NOT exceed 4 KiB.
-        repeated string mount_flags = 2;
-    }
-
-    // Specify how a volume can be accessed.
-    message AccessMode {
-        enum Mode {
-            UNKNOWN = 0;
-
-            // Can only be published once as read/write on a single node, at
-            // any given time.
-            SINGLE_NODE_WRITER = 1;
-
-            // Can only be published once as readonly on a single node, at
-            // any given time.
-            SINGLE_NODE_READER_ONLY = 2;
-
-            // Can be published as readonly at multiple nodes simultaneously.
-            MULTI_NODE_READER_ONLY = 3;
-
-            // Can be published at multiple nodes simultaneously. Only one of
-            // the node can be used as read/write. The rest will be readonly.
-            MULTI_NODE_SINGLE_WRITER = 4;
-
-            // Can be published as read/write at multiple nodes
-            // simultaneously.
-            MULTI_NODE_MULTI_WRITER = 5;
-        }
-
-        // This field is REQUIRED.
-        Mode mode = 1;
-    }
-
-    // Specifies what API the volume will be accessed using. One of the
-    // following fields MUST be specified.
-    oneof access_type {
-        BlockVolume block = 1;
-        MountVolume mount = 2;
-    }
-
-    // This is a REQUIRED field.
-    AccessMode access_mode = 3;
-}
-
-// The capacity of the storage space in bytes. To specify an exact size,
-// `required_bytes` and `limit_bytes` SHALL be set to the same value. At
-// least one of the these fields MUST be specified.
-message CapacityRange {
-    // Volume MUST be at least this big. This field is OPTIONAL.
-    // A value of 0 is equal to an unspecified field value.
-    // The value of this field MUST NOT be negative.
-    int64 required_bytes = 1;
-
-    // Volume MUST not be bigger than this. This field is OPTIONAL.
-    // A value of 0 is equal to an unspecified field value.
-    // The value of this field MUST NOT be negative.
-    int64 limit_bytes = 2;
-}
-
-// The information about a provisioned volume.
-message Volume {
-    // The capacity of the volume in bytes. This field is OPTIONAL. If not
-    // set (value of 0), it indicates that the capacity of the volume is
-    // unknown (e.g., NFS share).
-    // The value of this field MUST NOT be negative.
-    int64 capacity_bytes = 1;
-
-    // Contains identity information for the created volume. This field is
-    // REQUIRED. The identity information will be used by the CO in
-    // subsequent calls to refer to the provisioned volume.
-    string id = 2;
-
-    // Attributes reflect static properties of a volume and MUST be passed
-    // to volume validation and publishing calls.
-    // Attributes SHALL be opaque to a CO. Attributes SHALL NOT be mutable
-    // and SHALL be safe for the CO to cache. Attributes SHOULD NOT
-    // contain sensitive information. Attributes MAY NOT uniquely identify
-    // a volume. A volume uniquely identified by `id` SHALL always report
-    // the same attributes. This field is OPTIONAL and when present MUST
-    // be passed to volume validation and publishing calls.
-    map<string, string> attributes = 3;
-
-    // If specified, indicates that the volume is not empty and is
-    // pre-populated with data from the specified source.
-    // This field is OPTIONAL.
-    VolumeContentSource content_source = 4;
-
-    // Specifies where (regions, zones, racks, etc.) the provisioned
-    // volume is accessible from.
-    // A plugin that returns this field MUST also set the
-    // ACCESSIBILITY_CONSTRAINTS plugin capability.
-    // An SP MAY specify multiple topologies to indicate the volume is
-    // accessible from multiple locations.
-    // COs MAY use this information along with the topology information
-    // returned by NodeGetInfo to ensure that a given volume is accessible
-    // from a given node when scheduling workloads.
-    // This field is OPTIONAL. If it is not specified, the CO MAY assume
-    // the volume is equally accessible from all nodes in the cluster and
-    // may schedule workloads referencing the volume on any available
-    // node.
-    //
-    // Example 1:
-    //   accessible_topology = {"region": "R1", "zone": "Z2"}
-    // Indicates a volume accessible only from the "region" "R1" and the
-    // "zone" "Z2".
-    //
-    // Example 2:
-    //   accessible_topology =
-    //     {"region": "R1", "zone": "Z2"},
-    //     {"region": "R1", "zone": "Z3"}
-    // Indicates a volume accessible from both "zone" "Z2" and "zone" "Z3"
-    // in the "region" "R1".
-    repeated Topology accessible_topology = 5;
-}
-
-message TopologyRequirement {
-    // Specifies the list of topologies the provisioned volume MUST be
-    // accessible from.
-    // This field is OPTIONAL. If TopologyRequirement is specified either
-    // requisite or preferred or both MUST be specified.
-    //
-    // If requisite is specified, the provisioned volume MUST be
-    // accessible from at least one of the requisite topologies.
-    //
-    // Given
-    //   x = number of topologies provisioned volume is accessible from
-    //   n = number of requisite topologies
-    // The CO MUST ensure n >= 1. The SP MUST ensure x >= 1
-    // If x==n, than the SP MUST make the provisioned volume available to
-    // all topologies from the list of requisite topologies. If it is
-    // unable to do so, the SP MUST fail the CreateVolume call.
-    // For example, if a volume should be accessible from a single zone,
-    // and requisite =
-    //   {"region": "R1", "zone": "Z2"}
-    // then the provisioned volume MUST be accessible from the "region"
-    // "R1" and the "zone" "Z2".
-    // Similarly, if a volume should be accessible from two zones, and
-    // requisite =
-    //   {"region": "R1", "zone": "Z2"},
-    //   {"region": "R1", "zone": "Z3"}
-    // then the provisioned volume MUST be accessible from the "region"
-    // "R1" and both "zone" "Z2" and "zone" "Z3".
-    //
-    // If x<n, than the SP SHALL choose x unique topologies from the list
-    // of requisite topologies. If it is unable to do so, the SP MUST fail
-    // the CreateVolume call.
-    // For example, if a volume should be accessible from a single zone,
-    // and requisite =
-    //   {"region": "R1", "zone": "Z2"},
-    //   {"region": "R1", "zone": "Z3"}
-    // then the SP may choose to make the provisioned volume available in
-    // either the "zone" "Z2" or the "zone" "Z3" in the "region" "R1".
-    // Similarly, if a volume should be accessible from two zones, and
-    // requisite =
-    //   {"region": "R1", "zone": "Z2"},
-    //   {"region": "R1", "zone": "Z3"},
-    //   {"region": "R1", "zone": "Z4"}
-    // then the provisioned volume MUST be accessible from any combination
-    // of two unique topologies: e.g. "R1/Z2" and "R1/Z3", or "R1/Z2" and
-    //  "R1/Z4", or "R1/Z3" and "R1/Z4".
-    //
-    // If x>n, than the SP MUST make the provisioned volume available from
-    // all topologies from the list of requisite topologies and MAY choose
-    // the remaining x-n unique topologies from the list of all possible
-    // topologies. If it is unable to do so, the SP MUST fail the
-    // CreateVolume call.
-    // For example, if a volume should be accessible from two zones, and
-    // requisite =
-    //   {"region": "R1", "zone": "Z2"}
-    // then the provisioned volume MUST be accessible from the "region"
-    // "R1" and the "zone" "Z2" and the SP may select the second zone
-    // independently, e.g. "R1/Z4".
-    repeated Topology requisite = 1;
-
-    // Specifies the list of topologies the CO would prefer the volume to
-    // be provisioned in.
-    //
-    // This field is OPTIONAL. If TopologyRequirement is specified either
-    // requisite or preferred or both MUST be specified.
-    //
-    // An SP MUST attempt to make the provisioned volume available using
-    // the preferred topologies in order from first to last.
-    //
-    // If requisite is specified, all topologies in preferred list MUST
-    // also be present in the list of requisite topologies.
-    //
-    // If the SP is unable to to make the provisioned volume available
-    // from any of the preferred topologies, the SP MAY choose a topology
-    // from the list of requisite topologies.
-    // If the list of requisite topologies is not specified, then the SP
-    // MAY choose from the list of all possible topologies.
-    // If the list of requisite topologies is specified and the SP is
-    // unable to to make the provisioned volume available from any of the
-    // requisite topologies it MUST fail the CreateVolume call.
-    //
-    // Example 1:
-    // Given a volume should be accessible from a single zone, and
-    // requisite =
-    //   {"region": "R1", "zone": "Z2"},
-    //   {"region": "R1", "zone": "Z3"}
-    // preferred =
-    //   {"region": "R1", "zone": "Z3"}
-    // then the the SP SHOULD first attempt to make the provisioned volume
-    // available from "zone" "Z3" in the "region" "R1" and fall back to
-    // "zone" "Z2" in the "region" "R1" if that is not possible.
-    //
-    // Example 2:
-    // Given a volume should be accessible from a single zone, and
-    // requisite =
-    //   {"region": "R1", "zone": "Z2"},
-    //   {"region": "R1", "zone": "Z3"},
-    //   {"region": "R1", "zone": "Z4"},
-    //   {"region": "R1", "zone": "Z5"}
-    // preferred =
-    //   {"region": "R1", "zone": "Z4"},
-    //   {"region": "R1", "zone": "Z2"}
-    // then the the SP SHOULD first attempt to make the provisioned volume
-    // accessible from "zone" "Z4" in the "region" "R1" and fall back to
-    // "zone" "Z2" in the "region" "R1" if that is not possible. If that
-    // is not possible, the SP may choose between either the "zone"
-    // "Z3" or "Z5" in the "region" "R1".
-    //
-    // Example 3:
-    // Given a volume should be accessible from TWO zones (because an
-    // opaque parameter in CreateVolumeRequest, for example, specifies
-    // the volume is accessible from two zones, aka synchronously
-    // replicated), and
-    // requisite =
-    //   {"region": "R1", "zone": "Z2"},
-    //   {"region": "R1", "zone": "Z3"},
-    //   {"region": "R1", "zone": "Z4"},
-    //   {"region": "R1", "zone": "Z5"}
-    // preferred =
-    //   {"region": "R1", "zone": "Z5"},
-    //   {"region": "R1", "zone": "Z3"}
-    // then the the SP SHOULD first attempt to make the provisioned volume
-    // accessible from the combination of the two "zones" "Z5" and "Z3" in
-    // the "region" "R1". If that's not possible, it should fall back to
-    // a combination of "Z5" and other possibilities from the list of
-    // requisite. If that's not possible, it should fall back  to a
-    // combination of "Z3" and other possibilities from the list of
-    // requisite. If that's not possible, it should fall back  to a
-    // combination of other possibilities from the list of requisite.
-    repeated Topology preferred = 2;
-}
-
-// Topology is a map of topological domains to topological segments.
-// A topological domain is a sub-division of a cluster, like "region",
-// "zone", "rack", etc.
-// A topological segment is a specific instance of a topological domain,
-// like "zone3", "rack3", etc.
-// For example {"com.company/zone": "Z1", "com.company/rack": "R3"}
-// Valid keys have two segments: an optional prefix and name, separated
-// by a slash (/), for example: "com.company.example/zone".
-// The key name segment is required. The prefix is optional.
-// Both the key name and the prefix MUST each be 63 characters or less,
-// begin and end with an alphanumeric character ([a-z0-9A-Z]) and
-// contain only dashes (-), underscores (_), dots (.), or alphanumerics
-// in between, for example "zone".
-// The key prefix MUST follow reverse domain name notation format
-// (https://en.wikipedia.org/wiki/Reverse_domain_name_notation).
-// The key prefix SHOULD include the plugin's host company name and/or
-// the plugin name, to minimize the possibility of collisions with keys
-// from other plugins.
-// If a key prefix is specified, it MUST be identical across all
-// topology keys returned by the SP (across all RPCs).
-// Keys MUST be case-insensitive. Meaning the keys "Zone" and "zone"
-// MUST not both exist.
-// Each value (topological segment) MUST contain 1 or more strings.
-// Each string MUST be 63 characters or less and begin and end with an
-// alphanumeric character with '-', '_', '.', or alphanumerics in
-// between.
-message Topology {
-    map<string, string> segments = 1;
-}
-message DeleteVolumeRequest {
-    // The ID of the volume to be deprovisioned.
-    // This field is REQUIRED.
-    string volume_id = 1;
-
-    // Secrets required by plugin to complete volume deletion request.
-    // This field is OPTIONAL. Refer to the `Secrets Requirements`
-    // section on how to use this field.
-    map<string, string> controller_delete_secrets = 2;
-}
-
-message DeleteVolumeResponse {
-    // Intentionally empty.
-}
-message ControllerPublishVolumeRequest {
-    // The ID of the volume to be used on a node.
-    // This field is REQUIRED.
-    string volume_id = 1;
-
-    // The ID of the node. This field is REQUIRED. The CO SHALL set this
-    // field to match the node ID returned by `NodeGetInfo`.
-    string node_id = 2;
-
-    // The capability of the volume the CO expects the volume to have.
-    // This is a REQUIRED field.
-    VolumeCapability volume_capability = 3;
-
-    // Whether to publish the volume in readonly mode. This field is
-    // REQUIRED.
-    bool readonly = 4;
-
-    // Secrets required by plugin to complete controller publish volume
-    // request. This field is OPTIONAL. Refer to the
-    // `Secrets Requirements` section on how to use this field.
-    map<string, string> controller_publish_secrets = 5;
-
-    // Attributes of the volume to be used on a node. This field is
-    // OPTIONAL and MUST match the attributes of the Volume identified
-    // by `volume_id`.
-    map<string, string> volume_attributes = 6;
-}
-
-message ControllerPublishVolumeResponse {
-    // The SP specific information that will be passed to the Plugin in
-    // the subsequent `NodeStageVolume` or `NodePublishVolume` calls
-    // for the given volume.
-    // This information is opaque to the CO. This field is OPTIONAL.
-    map<string, string> publish_info = 1;
-}
-message ControllerUnpublishVolumeRequest {
-    // The ID of the volume. This field is REQUIRED.
-    string volume_id = 1;
-
-    // The ID of the node. This field is OPTIONAL. The CO SHOULD set this
-    // field to match the node ID returned by `NodeGetInfo` or leave it
-    // unset. If the value is set, the SP MUST unpublish the volume from
-    // the specified node. If the value is unset, the SP MUST unpublish
-    // the volume from all nodes it is published to.
-    string node_id = 2;
-
-    // Secrets required by plugin to complete controller unpublish volume
-    // request. This SHOULD be the same secrets passed to the
-    // ControllerPublishVolume call for the specified volume.
-    // This field is OPTIONAL. Refer to the `Secrets Requirements`
-    // section on how to use this field.
-    map<string, string> controller_unpublish_secrets = 3;
-}
-
-message ControllerUnpublishVolumeResponse {
-    // Intentionally empty.
-}
-message ValidateVolumeCapabilitiesRequest {
-    // The ID of the volume to check. This field is REQUIRED.
-    string volume_id = 1;
-
-    // The capabilities that the CO wants to check for the volume. This
-    // call SHALL return "supported" only if all the volume capabilities
-    // specified below are supported. This field is REQUIRED.
-    repeated VolumeCapability volume_capabilities = 2;
-
-    // Attributes of the volume to check. This field is OPTIONAL and MUST
-    // match the attributes of the Volume identified by `volume_id`.
-    map<string, string> volume_attributes = 3;
-
-    // Specifies where (regions, zones, racks, etc.) the caller believes
-    // the volume is accessible from.
-    // A caller MAY specify multiple topologies to indicate they believe
-    // the volume to be accessible from multiple locations.
-    // This field is OPTIONAL. This field SHALL NOT be set unless the
-    // plugin advertises the ACCESSIBILITY_CONSTRAINTS capability.
-    repeated Topology accessible_topology = 4;
-}
-
-message ValidateVolumeCapabilitiesResponse {
-    // True if the Plugin supports the specified capabilities for the
-    // given volume. This field is REQUIRED.
-    bool supported = 1;
-
-    // Message to the CO if `supported` above is false. This field is
-    // OPTIONAL.
-    // An empty string is equal to an unspecified field value.
-    string message = 2;
-}
-message ListVolumesRequest {
-    // If specified (non-zero value), the Plugin MUST NOT return more
-    // entries than this number in the response. If the actual number of
-    // entries is more than this number, the Plugin MUST set `next_token`
-    // in the response which can be used to get the next page of entries
-    // in the subsequent `ListVolumes` call. This field is OPTIONAL. If
-    // not specified (zero value), it means there is no restriction on the
-    // number of entries that can be returned.
-    // The value of this field MUST NOT be negative.
-    int32 max_entries = 1;
-
-    // A token to specify where to start paginating. Set this field to
-    // `next_token` returned by a previous `ListVolumes` call to get the
-    // next page of entries. This field is OPTIONAL.
-    // An empty string is equal to an unspecified field value.
-    string starting_token = 2;
-}
-
-message ListVolumesResponse {
-    message Entry {
-        Volume volume = 1;
-    }
-
-    repeated Entry entries = 1;
-
-    // This token allows you to get the next page of entries for
-    // `ListVolumes` request. If the number of entries is larger than
-    // `max_entries`, use the `next_token` as a value for the
-    // `starting_token` field in the next `ListVolumes` request. This
-    // field is OPTIONAL.
-    // An empty string is equal to an unspecified field value.
-    string next_token = 2;
-}
-message GetCapacityRequest {
-    // If specified, the Plugin SHALL report the capacity of the storage
-    // that can be used to provision volumes that satisfy ALL of the
-    // specified `volume_capabilities`. These are the same
-    // `volume_capabilities` the CO will use in `CreateVolumeRequest`.
-    // This field is OPTIONAL.
-    repeated VolumeCapability volume_capabilities = 1;
-
-    // If specified, the Plugin SHALL report the capacity of the storage
-    // that can be used to provision volumes with the given Plugin
-    // specific `parameters`. These are the same `parameters` the CO will
-    // use in `CreateVolumeRequest`. This field is OPTIONAL.
-    map<string, string> parameters = 2;
-
-    // If specified, the Plugin SHALL report the capacity of the storage
-    // that can be used to provision volumes that in the specified
-    // `accessible_topology`. This is the same as the
-    // `accessible_topology` the CO returns in a `CreateVolumeResponse`.
-    // This field is OPTIONAL. This field SHALL NOT be set unless the
-    // plugin advertises the ACCESSIBILITY_CONSTRAINTS capability.
-    Topology accessible_topology = 3;
-}
-
-message GetCapacityResponse {
-    // The available capacity, in bytes, of the storage that can be used
-    // to provision volumes. If `volume_capabilities` or `parameters` is
-    // specified in the request, the Plugin SHALL take those into
-    // consideration when calculating the available capacity of the
-    // storage. This field is REQUIRED.
-    // The value of this field MUST NOT be negative.
-    int64 available_capacity = 1;
-}
-message ControllerGetCapabilitiesRequest {
-    // Intentionally empty.
-}
-
-message ControllerGetCapabilitiesResponse {
-    // All the capabilities that the controller service supports. This
-    // field is OPTIONAL.
-    repeated ControllerServiceCapability capabilities = 2;
-}
-
-// Specifies a capability of the controller service.
-message ControllerServiceCapability {
-    message RPC {
-        enum Type {
-            UNKNOWN = 0;
-            CREATE_DELETE_VOLUME = 1;
-            PUBLISH_UNPUBLISH_VOLUME = 2;
-            LIST_VOLUMES = 3;
-            GET_CAPACITY = 4;
-            // Currently the only way to consume a snapshot is to create
-            // a volume from it. Therefore plugins supporting
-            // CREATE_DELETE_SNAPSHOT MUST support creating volume from
-            // snapshot.
-            CREATE_DELETE_SNAPSHOT = 5;
-            // LIST_SNAPSHOTS is NOT REQUIRED. For plugins that need to upload
-            // a snapshot after it is being cut, LIST_SNAPSHOTS COULD be used
-            // with the snapshot_id as the filter to query whether the
-            // uploading process is complete or not.
-            LIST_SNAPSHOTS = 6;
-        }
-
-        Type type = 1;
-    }
-
-    oneof type {
-        // RPC that the controller supports.
-        RPC rpc = 1;
-    }
-}
-message CreateSnapshotRequest {
-    // The ID of the source volume to be snapshotted.
-    // This field is REQUIRED.
-    string source_volume_id = 1;
-
-    // The suggested name for the snapshot. This field is REQUIRED for
-    // idempotency.
-    string name = 2;
-
-    // Secrets required by plugin to complete snapshot creation request.
-    // This field is OPTIONAL. Refer to the `Secrets Requirements`
-    // section on how to use this field.
-    map<string, string> create_snapshot_secrets = 3;
-
-    // Plugin specific parameters passed in as opaque key-value pairs.
-    // This field is OPTIONAL. The Plugin is responsible for parsing and
-    // validating these parameters. COs will treat these as opaque.
-    // Use cases for opaque parameters:
-    // - Specify a policy to automatically clean up the snapshot.
-    // - Specify an expiration date for the snapshot.
-    // - Specify whether the snapshot is readonly or read/write.
-    // - Specify if the snapshot should be replicated to some place.
-    // - Specify primary or secondary for replication systems that
-    //   support snapshotting only on primary.
-    map<string, string> parameters = 4;
-}
-
-message CreateSnapshotResponse {
-    // Contains all attributes of the newly created snapshot that are
-    // relevant to the CO along with information required by the Plugin
-    // to uniquely identify the snapshot. This field is REQUIRED.
-    Snapshot snapshot = 1;
-}
-
-// The information about a provisioned snapshot.
-message Snapshot {
-    // This is the complete size of the snapshot in bytes. The purpose of
-    // this field is to give CO guidance on how much space is needed to
-    // create a volume from this snapshot. The size of the volume MUST NOT
-    // be less than the size of the source snapshot. This field is
-    // OPTIONAL. If this field is not set, it indicates that this size is
-    // unknown. The value of this field MUST NOT be negative and a size of
-    // zero means it is unspecified.
-    int64 size_bytes = 1;
-
-    // Uniquely identifies a snapshot and is generated by the plugin. It
-    // will not change over time. This field is REQUIRED. The identity
-    // information will be used by the CO in subsequent calls to refer to
-    // the provisioned snapshot.
-    string id = 2;
-
-    // Identity information for the source volume. Note that creating a
-    // snapshot from a snapshot is not supported here so the source has to
-    // be a volume. This field is REQUIRED.
-    string source_volume_id = 3;
-
-    // Timestamp when the point-in-time snapshot is taken on the storage
-    // system. The format of this field should be a Unix nanoseconds time
-    // encoded as an int64. On Unix, the command `date +%s%N` returns the
-    // current time in nanoseconds since 1970-01-01 00:00:00 UTC. This
-    // field is REQUIRED.
-    int64 created_at = 4;
-
-    // The status of a snapshot.
-    SnapshotStatus status = 5;
-}
-
-// The status of a snapshot.
-message SnapshotStatus {
-    enum Type {
-        UNKNOWN = 0;
-        // A snapshot is ready for use.
-        READY = 1;
-        // A snapshot is cut and is now being uploaded.
-        // Some cloud providers and storage systems uploads the snapshot
-        // to the cloud after the snapshot is cut. During this phase,
-        // `thaw` can be done so the application can be running again if
-        // `freeze` was done before taking the snapshot.
-        UPLOADING = 2;
-        // An error occurred during the snapshot uploading process.
-        // This error status is specific for uploading because
-        // `CreateSnaphot` is a blocking call before the snapshot is
-        // cut and therefore it SHOULD NOT come back with an error
-        // status when an error occurs. Instead a gRPC error code SHALL
-        // be returned by `CreateSnapshot` when an error occurs before
-        // a snapshot is cut.
-        ERROR_UPLOADING = 3;
-    }
-    // This field is REQUIRED.
-    Type type = 1;
-
-    // Additional information to describe why a snapshot ended up in the
-    // `ERROR_UPLOADING` status. This field is OPTIONAL.
-    string details = 2;
-}
-message DeleteSnapshotRequest {
-    // The ID of the snapshot to be deleted.
-    // This field is REQUIRED.
-    string snapshot_id = 1;
-
-    // Secrets required by plugin to complete snapshot deletion request.
-    // This field is OPTIONAL. Refer to the `Secrets Requirements`
-    // section on how to use this field.
-    map<string, string> delete_snapshot_secrets = 2;
-}
-
-message DeleteSnapshotResponse {}
-// List all snapshots on the storage system regardless of how they were
-// created.
-message ListSnapshotsRequest {
-    // If specified (non-zero value), the Plugin MUST NOT return more
-    // entries than this number in the response. If the actual number of
-    // entries is more than this number, the Plugin MUST set `next_token`
-    // in the response which can be used to get the next page of entries
-    // in the subsequent `ListSnapshots` call. This field is OPTIONAL. If
-    // not specified (zero value), it means there is no restriction on the
-    // number of entries that can be returned.
-    // The value of this field MUST NOT be negative.
-    int32 max_entries = 1;
-
-    // A token to specify where to start paginating. Set this field to
-    // `next_token` returned by a previous `ListSnapshots` call to get the
-    // next page of entries. This field is OPTIONAL.
-    // An empty string is equal to an unspecified field value.
-    string starting_token = 2;
-
-    // Identity information for the source volume. This field is OPTIONAL.
-    // It can be used to list snapshots by volume.
-    string source_volume_id = 3;
-
-    // Identity information for a specific snapshot. This field is
-    // OPTIONAL. It can be used to list only a specific snapshot.
-    // ListSnapshots will return with current snapshot information
-    // and will not block if the snapshot is being uploaded.
-    string snapshot_id = 4;
-}
-
-message ListSnapshotsResponse {
-    message Entry {
-        Snapshot snapshot = 1;
-    }
-
-    repeated Entry entries = 1;
-
-    // This token allows you to get the next page of entries for
-    // `ListSnapshots` request. If the number of entries is larger than
-    // `max_entries`, use the `next_token` as a value for the
-    // `starting_token` field in the next `ListSnapshots` request. This
-    // field is OPTIONAL.
-    // An empty string is equal to an unspecified field value.
-    string next_token = 2;
-}
-message NodeStageVolumeRequest {
-    // The ID of the volume to publish. This field is REQUIRED.
-    string volume_id = 1;
-
-    // The CO SHALL set this field to the value returned by
-    // `ControllerPublishVolume` if the corresponding Controller Plugin
-    // has `PUBLISH_UNPUBLISH_VOLUME` controller capability, and SHALL be
-    // left unset if the corresponding Controller Plugin does not have
-    // this capability. This is an OPTIONAL field.
-    map<string, string> publish_info = 2;
-
-    // The path to which the volume will be published. It MUST be an
-    // absolute path in the root filesystem of the process serving this
-    // request. The CO SHALL ensure that there is only one
-    // staging_target_path per volume.
-    // This is a REQUIRED field.
-    string staging_target_path = 3;
-
-    // The capability of the volume the CO expects the volume to have.
-    // This is a REQUIRED field.
-    VolumeCapability volume_capability = 4;
-
-    // Secrets required by plugin to complete node stage volume request.
-    // This field is OPTIONAL. Refer to the `Secrets Requirements`
-    // section on how to use this field.
-    map<string, string> node_stage_secrets = 5;
-
-    // Attributes of the volume to publish. This field is OPTIONAL and
-    // MUST match the attributes of the `Volume` identified by
-    // `volume_id`.
-    map<string, string> volume_attributes = 6;
-}
-
-message NodeStageVolumeResponse {
-    // Intentionally empty.
-}
-message NodeUnstageVolumeRequest {
-    // The ID of the volume. This field is REQUIRED.
-    string volume_id = 1;
-
-    // The path at which the volume was published. It MUST be an absolute
-    // path in the root filesystem of the process serving this request.
-    // This is a REQUIRED field.
-    string staging_target_path = 2;
-}
-
-message NodeUnstageVolumeResponse {
-    // Intentionally empty.
-}
-message NodePublishVolumeRequest {
-    // The ID of the volume to publish. This field is REQUIRED.
-    string volume_id = 1;
-
-    // The CO SHALL set this field to the value returned by
-    // `ControllerPublishVolume` if the corresponding Controller Plugin
-    // has `PUBLISH_UNPUBLISH_VOLUME` controller capability, and SHALL be
-    // left unset if the corresponding Controller Plugin does not have
-    // this capability. This is an OPTIONAL field.
-    map<string, string> publish_info = 2;
-
-    // The path to which the device was mounted by `NodeStageVolume`.
-    // It MUST be an absolute path in the root filesystem of the process
-    // serving this request.
-    // It MUST be set if the Node Plugin implements the
-    // `STAGE_UNSTAGE_VOLUME` node capability.
-    // This is an OPTIONAL field.
-    string staging_target_path = 3;
-
-    // The path to which the volume will be published. It MUST be an
-    // absolute path in the root filesystem of the process serving this
-    // request. The CO SHALL ensure uniqueness of target_path per volume.
-    // The CO SHALL ensure that the path exists, and that the process
-    // serving the request has `read` and `write` permissions to the path.
-    // This is a REQUIRED field.
-    string target_path = 4;
-
-    // The capability of the volume the CO expects the volume to have.
-    // This is a REQUIRED field.
-    VolumeCapability volume_capability = 5;
-
-    // Whether to publish the volume in readonly mode. This field is
-    // REQUIRED.
-    bool readonly = 6;
-
-    // Secrets required by plugin to complete node publish volume request.
-    // This field is OPTIONAL. Refer to the `Secrets Requirements`
-    // section on how to use this field.
-    map<string, string> node_publish_secrets = 7;
-
-    // Attributes of the volume to publish. This field is OPTIONAL and
-    // MUST match the attributes of the Volume identified by
-    // `volume_id`.
-    map<string, string> volume_attributes = 8;
-}
-
-message NodePublishVolumeResponse {
-    // Intentionally empty.
-}
-message NodeUnpublishVolumeRequest {
-    // The ID of the volume. This field is REQUIRED.
-    string volume_id = 1;
-
-    // The path at which the volume was published. It MUST be an absolute
-    // path in the root filesystem of the process serving this request.
-    // This is a REQUIRED field.
-    string target_path = 2;
-}
-
-message NodeUnpublishVolumeResponse {
-    // Intentionally empty.
-}
-message NodeGetIdRequest {
-    // Intentionally empty.
-}
-
-message NodeGetIdResponse {
-    // The ID of the node as understood by the SP which SHALL be used by
-    // CO in subsequent `ControllerPublishVolume`.
-    // This is a REQUIRED field.
-    string node_id = 1;
-}
-message NodeGetCapabilitiesRequest {
-    // Intentionally empty.
-}
-
-message NodeGetCapabilitiesResponse {
-    // All the capabilities that the node service supports. This field
-    // is OPTIONAL.
-    repeated NodeServiceCapability capabilities = 1;
-}
-
-// Specifies a capability of the node service.
-message NodeServiceCapability {
-    message RPC {
-        enum Type {
-            UNKNOWN = 0;
-            STAGE_UNSTAGE_VOLUME = 1;
-        }
-
-        Type type = 1;
-    }
-
-    oneof type {
-        // RPC that the controller supports.
-        RPC rpc = 1;
-    }
-}
-message NodeGetInfoRequest {
-}
-
-message NodeGetInfoResponse {
-    // The ID of the node as understood by the SP which SHALL be used by
-    // CO in subsequent calls to `ControllerPublishVolume`.
-    // This is a REQUIRED field.
-    string node_id = 1;
-
-    // Maximum number of volumes that controller can publish to the node.
-    // If value is not set or zero CO SHALL decide how many volumes of
-    // this type can be published by the controller to the node. The
-    // plugin MUST NOT set negative values here.
-    // This field is OPTIONAL.
-    int64 max_volumes_per_node = 2;
-
-    // Specifies where (regions, zones, racks, etc.) the node is
-    // accessible from.
-    // A plugin that returns this field MUST also set the
-    // ACCESSIBILITY_CONSTRAINTS plugin capability.
-    // COs MAY use this information along with the topology information
-    // returned in CreateVolumeResponse to ensure that a given volume is
-    // accessible from a given node when scheduling workloads.
-    // This field is OPTIONAL. If it is not specified, the CO MAY assume
-    // the node is not subject to any topological constraint, and MAY
-    // schedule workloads that reference any volume V, such that there are
-    // no topological constraints declared for V.
-    //
-    // Example 1:
-    //   accessible_topology =
-    //     {"region": "R1", "zone": "R2"}
-    // Indicates the node exists within the "region" "R1" and the "zone"
-    // "Z2".
-    Topology accessible_topology = 3;
-}
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/MockCsiAdaptor.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/MockCsiAdaptor.java
deleted file mode 100644
index 4bcc5092861..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/MockCsiAdaptor.java
+++ /dev/null
@@ -1,85 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.yarn.api.CsiAdaptorPlugin;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-
-import java.io.IOException;
-
-/**
- * This class is used by {@link TestCsiAdaptorService} for testing.
- * It gives some dummy implementation for a adaptor plugin, and used to
- * verify the plugin can be properly loaded by NM and execution logic is
- * as expected.
- *
- * This is created as a separated class instead of an inner class, because
- * {@link CsiAdaptorServices} is loading classes using conf.getClass(),
- * the utility class is unable to resolve inner classes.
- */
-public class MockCsiAdaptor implements CsiAdaptorPlugin {
-
-  private String driverName;
-
-  @Override
-  public void init(String driverName, Configuration conf)
-      throws YarnException {
-    this.driverName = driverName;
-  }
-
-  @Override
-  public String getDriverName() {
-    return this.driverName;
-  }
-
-  @Override
-  public GetPluginInfoResponse getPluginInfo(
-      GetPluginInfoRequest request) throws YarnException, IOException {
-    return GetPluginInfoResponse.newInstance(driverName,
-        "1.0");
-  }
-
-  @Override
-  public ValidateVolumeCapabilitiesResponse validateVolumeCapacity(
-      ValidateVolumeCapabilitiesRequest request)
-      throws YarnException, IOException {
-    return ValidateVolumeCapabilitiesResponse.newInstance(true,
-        "verified via MockCsiAdaptor");
-  }
-
-  @Override
-  public NodePublishVolumeResponse nodePublishVolume(
-      NodePublishVolumeRequest request) throws YarnException, IOException {
-    return null;
-  }
-
-  @Override
-  public NodeUnpublishVolumeResponse nodeUnpublishVolume(
-      NodeUnpublishVolumeRequest request) throws YarnException, IOException {
-    return null;
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestCsiAdaptorService.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestCsiAdaptorService.java
deleted file mode 100644
index cc147113973..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestCsiAdaptorService.java
+++ /dev/null
@@ -1,460 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import csi.v0.Csi;
-import org.apache.commons.io.FileUtils;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.net.NetUtils;
-import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.service.ServiceStateException;
-import org.apache.hadoop.test.GenericTestUtils;
-import org.apache.hadoop.thirdparty.com.google.common.collect.ImmutableList;
-import org.apache.hadoop.thirdparty.com.google.common.collect.ImmutableMap;
-import org.apache.hadoop.yarn.api.CsiAdaptorProtocol;
-import org.apache.hadoop.yarn.api.CsiAdaptorPlugin;
-import org.apache.hadoop.yarn.api.impl.pb.client.CsiAdaptorProtocolPBClientImpl;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.ValidateVolumeCapabilitiesRequestPBImpl;
-import org.apache.hadoop.yarn.client.NMProxy;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.ipc.YarnRPC;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import java.io.File;
-import java.io.IOException;
-import java.net.InetSocketAddress;
-import java.net.ServerSocket;
-
-import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-import static org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.AccessMode.MULTI_NODE_MULTI_WRITER;
-import static org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.VolumeType.FILE_SYSTEM;
-
-/**
- * UT for {@link CsiAdaptorProtocolService}.
- */
-public class TestCsiAdaptorService {
-
-  private static File testRoot = null;
-  private static String domainSocket = null;
-
-  @BeforeAll
-  public static void setUp() throws IOException {
-    testRoot = GenericTestUtils.getTestDir("csi-test");
-    File socketPath = new File(testRoot, "csi.sock");
-    FileUtils.forceMkdirParent(socketPath);
-    domainSocket = "unix://" + socketPath.getAbsolutePath();
-  }
-
-  @AfterAll
-  public static void tearDown() throws IOException {
-    if (testRoot != null) {
-      FileUtils.deleteDirectory(testRoot);
-    }
-  }
-
-  private interface FakeCsiAdaptor extends CsiAdaptorPlugin {
-
-    default void init(String driverName, Configuration conf)
-        throws YarnException {
-      return;
-    }
-
-    default String getDriverName() {
-      return null;
-    }
-
-    default GetPluginInfoResponse getPluginInfo(GetPluginInfoRequest request)
-        throws YarnException, IOException {
-      return null;
-    }
-
-    default ValidateVolumeCapabilitiesResponse validateVolumeCapacity(
-        ValidateVolumeCapabilitiesRequest request) throws YarnException,
-        IOException {
-      return null;
-    }
-
-    default NodePublishVolumeResponse nodePublishVolume(
-        NodePublishVolumeRequest request) throws YarnException, IOException {
-      return null;
-    }
-
-    default NodeUnpublishVolumeResponse nodeUnpublishVolume(
-        NodeUnpublishVolumeRequest request) throws YarnException, IOException{
-      return null;
-    }
-  }
-
-  @Test
-  void testValidateVolume() throws IOException, YarnException {
-    ServerSocket ss = new ServerSocket(0);
-    ss.close();
-    InetSocketAddress address = new InetSocketAddress(ss.getLocalPort());
-    Configuration conf = new Configuration();
-    conf.setSocketAddr(
-        YarnConfiguration.NM_CSI_ADAPTOR_PREFIX + "test-driver.address",
-        address);
-    conf.set(
-        YarnConfiguration.NM_CSI_DRIVER_PREFIX + "test-driver.endpoint",
-        "unix:///tmp/test-driver.sock");
-
-    // inject a fake CSI adaptor
-    // this client validates if the ValidateVolumeCapabilitiesRequest
-    // is integrity, and then reply a fake response
-    CsiAdaptorPlugin plugin = new FakeCsiAdaptor() {
-      @Override
-      public String getDriverName() {
-        return "test-driver";
-      }
-
-
-      @Override
-      public GetPluginInfoResponse getPluginInfo(GetPluginInfoRequest request) {
-        return GetPluginInfoResponse.newInstance("test-plugin", "0.1");
-      }
-
-      @Override
-      public ValidateVolumeCapabilitiesResponse validateVolumeCapacity(
-          ValidateVolumeCapabilitiesRequest request) throws YarnException,
-          IOException {
-        // validate we get all info from the request
-        assertEquals("volume-id-0000123", request.getVolumeId());
-        assertEquals(1, request.getVolumeCapabilities().size());
-        assertEquals(Csi.VolumeCapability.AccessMode
-                .newBuilder().setModeValue(5).build().getMode().name(),
-            request.getVolumeCapabilities().get(0).getAccessMode().name());
-        assertEquals(2, request.getVolumeCapabilities().get(0)
-            .getMountFlags().size());
-        assertTrue(request.getVolumeCapabilities().get(0)
-            .getMountFlags().contains("mountFlag1"));
-        assertTrue(request.getVolumeCapabilities().get(0)
-            .getMountFlags().contains("mountFlag2"));
-        assertEquals(2, request.getVolumeAttributes().size());
-        assertEquals("v1", request.getVolumeAttributes().get("k1"));
-        assertEquals("v2", request.getVolumeAttributes().get("k2"));
-        // return a fake result
-        return ValidateVolumeCapabilitiesResponse
-            .newInstance(false, "this is a test");
-      }
-    };
-
-    CsiAdaptorProtocolService service =
-        new CsiAdaptorProtocolService(plugin);
-    service.init(conf);
-    service.start();
-
-    try (CsiAdaptorProtocolPBClientImpl client =
-        new CsiAdaptorProtocolPBClientImpl(1L, address, new Configuration())) {
-      ValidateVolumeCapabilitiesRequest request =
-          ValidateVolumeCapabilitiesRequestPBImpl
-              .newInstance("volume-id-0000123",
-                  ImmutableList.of(
-                      new ValidateVolumeCapabilitiesRequest
-                          .VolumeCapability(
-                          MULTI_NODE_MULTI_WRITER, FILE_SYSTEM,
-                          ImmutableList.of("mountFlag1", "mountFlag2"))),
-                  ImmutableMap.of("k1", "v1", "k2", "v2"));
-
-      ValidateVolumeCapabilitiesResponse response = client
-          .validateVolumeCapacity(request);
-
-      assertEquals(false, response.isSupported());
-      assertEquals("this is a test", response.getResponseMessage());
-    } finally {
-      service.stop();
-    }
-  }
-
-  @Test
-  void testValidateVolumeWithNMProxy() throws Exception {
-    ServerSocket ss = new ServerSocket(0);
-    ss.close();
-    InetSocketAddress address = new InetSocketAddress(ss.getLocalPort());
-    Configuration conf = new Configuration();
-    conf.setSocketAddr(
-        YarnConfiguration.NM_CSI_ADAPTOR_PREFIX + "test-driver.address",
-        address);
-    conf.set(
-        YarnConfiguration.NM_CSI_DRIVER_PREFIX + "test-driver.endpoint",
-        "unix:///tmp/test-driver.sock");
-
-    // inject a fake CSI adaptor
-    // this client validates if the ValidateVolumeCapabilitiesRequest
-    // is integrity, and then reply a fake response
-    FakeCsiAdaptor plugin = new FakeCsiAdaptor() {
-      @Override
-      public String getDriverName() {
-        return "test-driver";
-      }
-
-      @Override
-      public GetPluginInfoResponse getPluginInfo(
-          GetPluginInfoRequest request) throws YarnException, IOException {
-        return GetPluginInfoResponse.newInstance("test-plugin", "0.1");
-      }
-
-      @Override
-      public ValidateVolumeCapabilitiesResponse validateVolumeCapacity(
-          ValidateVolumeCapabilitiesRequest request)
-          throws YarnException, IOException {
-        // validate we get all info from the request
-        assertEquals("volume-id-0000123", request.getVolumeId());
-        assertEquals(1, request.getVolumeCapabilities().size());
-        assertEquals(
-            Csi.VolumeCapability.AccessMode.newBuilder().setModeValue(5)
-                .build().getMode().name(),
-            request.getVolumeCapabilities().get(0).getAccessMode().name());
-        assertEquals(2,
-            request.getVolumeCapabilities().get(0).getMountFlags().size());
-        assertTrue(request.getVolumeCapabilities().get(0).getMountFlags()
-            .contains("mountFlag1"));
-        assertTrue(request.getVolumeCapabilities().get(0).getMountFlags()
-            .contains("mountFlag2"));
-        assertEquals(2, request.getVolumeAttributes().size());
-        assertEquals("v1", request.getVolumeAttributes().get("k1"));
-        assertEquals("v2", request.getVolumeAttributes().get("k2"));
-        // return a fake result
-        return ValidateVolumeCapabilitiesResponse
-            .newInstance(false, "this is a test");
-      }
-    };
-
-    CsiAdaptorProtocolService service =
-        new CsiAdaptorProtocolService(plugin);
-    service.init(conf);
-    service.start();
-
-    YarnRPC rpc = YarnRPC.create(conf);
-    UserGroupInformation currentUser = UserGroupInformation.getCurrentUser();
-    CsiAdaptorProtocol adaptorClient = NMProxy
-        .createNMProxy(conf, CsiAdaptorProtocol.class, currentUser, rpc,
-            NetUtils.createSocketAddrForHost("localhost", ss.getLocalPort()));
-    ValidateVolumeCapabilitiesRequest request =
-        ValidateVolumeCapabilitiesRequestPBImpl
-            .newInstance("volume-id-0000123",
-                ImmutableList.of(new ValidateVolumeCapabilitiesRequest
-                    .VolumeCapability(
-                    MULTI_NODE_MULTI_WRITER, FILE_SYSTEM,
-                    ImmutableList.of("mountFlag1", "mountFlag2"))),
-                ImmutableMap.of("k1", "v1", "k2", "v2"));
-
-    ValidateVolumeCapabilitiesResponse response = adaptorClient
-        .validateVolumeCapacity(request);
-    assertEquals(false, response.isSupported());
-    assertEquals("this is a test", response.getResponseMessage());
-
-    service.stop();
-  }
-
-  @Test
-  void testMissingConfiguration() {
-    assertThrows(ServiceStateException.class, () -> {
-      Configuration conf = new Configuration();
-      CsiAdaptorProtocolService service =
-          new CsiAdaptorProtocolService(new FakeCsiAdaptor() {
-          });
-      service.init(conf);
-    });
-  }
-
-  @Test
-  void testInvalidServicePort() {
-    assertThrows(ServiceStateException.class, () -> {
-      Configuration conf = new Configuration();
-      conf.set(YarnConfiguration.NM_CSI_ADAPTOR_PREFIX
-          + "test-driver-0001.address",
-          "0.0.0.0:-100"); // this is an invalid address
-      CsiAdaptorProtocolService service =
-          new CsiAdaptorProtocolService(new FakeCsiAdaptor() {
-          });
-      service.init(conf);
-    });
-  }
-
-  @Test
-  void testInvalidHost() {
-    assertThrows(ServiceStateException.class, () -> {
-      Configuration conf = new Configuration();
-      conf.set(YarnConfiguration.NM_CSI_ADAPTOR_PREFIX
-          + "test-driver-0001.address",
-          "192.0.1:8999"); // this is an invalid ip address
-      CsiAdaptorProtocolService service =
-          new CsiAdaptorProtocolService(new FakeCsiAdaptor() {
-          });
-      service.init(conf);
-    });
-  }
-
-  @Test
-  void testCustomizedAdaptor() throws IOException, YarnException {
-    ServerSocket ss = new ServerSocket(0);
-    ss.close();
-    InetSocketAddress address = new InetSocketAddress(ss.getLocalPort());
-    Configuration conf = new Configuration();
-    conf.set(YarnConfiguration.NM_CSI_DRIVER_NAMES, "customized-driver");
-    conf.setSocketAddr(
-        YarnConfiguration.NM_CSI_ADAPTOR_PREFIX + "customized-driver.address",
-        address);
-    conf.set(
-        YarnConfiguration.NM_CSI_ADAPTOR_PREFIX + "customized-driver.class",
-        "org.apache.hadoop.yarn.csi.adaptor.MockCsiAdaptor");
-    conf.set(
-        YarnConfiguration.NM_CSI_DRIVER_PREFIX + "customized-driver.endpoint",
-        "unix:///tmp/customized-driver.sock");
-
-    CsiAdaptorServices services =
-        new CsiAdaptorServices();
-    services.init(conf);
-    services.start();
-
-    YarnRPC rpc = YarnRPC.create(conf);
-    UserGroupInformation currentUser = UserGroupInformation.getCurrentUser();
-    CsiAdaptorProtocol adaptorClient = NMProxy
-        .createNMProxy(conf, CsiAdaptorProtocol.class, currentUser, rpc,
-            NetUtils.createSocketAddrForHost("localhost", ss.getLocalPort()));
-
-    // Test getPluginInfo
-    GetPluginInfoResponse pluginInfo =
-        adaptorClient.getPluginInfo(GetPluginInfoRequest.newInstance());
-    assertThat(pluginInfo.getDriverName()).isEqualTo("customized-driver");
-    assertThat(pluginInfo.getVersion()).isEqualTo("1.0");
-
-    // Test validateVolumeCapacity
-    ValidateVolumeCapabilitiesRequest request =
-        ValidateVolumeCapabilitiesRequestPBImpl
-            .newInstance("volume-id-0000123",
-                ImmutableList.of(new ValidateVolumeCapabilitiesRequest
-                    .VolumeCapability(
-                    MULTI_NODE_MULTI_WRITER, FILE_SYSTEM,
-                    ImmutableList.of("mountFlag1", "mountFlag2"))),
-                ImmutableMap.of("k1", "v1", "k2", "v2"));
-
-    ValidateVolumeCapabilitiesResponse response = adaptorClient
-        .validateVolumeCapacity(request);
-    assertEquals(true, response.isSupported());
-    assertEquals("verified via MockCsiAdaptor",
-        response.getResponseMessage());
-
-    services.stop();
-  }
-
-  @Test
-  void testMultipleCsiAdaptors() throws IOException, YarnException {
-    ServerSocket driver1Addr = new ServerSocket(0);
-    ServerSocket driver2Addr = new ServerSocket(0);
-
-    InetSocketAddress address1 =
-        new InetSocketAddress(driver1Addr.getLocalPort());
-    InetSocketAddress address2 =
-        new InetSocketAddress(driver2Addr.getLocalPort());
-
-    Configuration conf = new Configuration();
-
-    // Two csi-drivers configured
-    conf.set(YarnConfiguration.NM_CSI_DRIVER_NAMES,
-        "customized-driver-1,customized-driver-2");
-
-    // customized-driver-1
-    conf.setSocketAddr(YarnConfiguration.NM_CSI_ADAPTOR_PREFIX
-        + "customized-driver-1.address", address1);
-    conf.set(YarnConfiguration.NM_CSI_ADAPTOR_PREFIX
-        + "customized-driver-1.class",
-        "org.apache.hadoop.yarn.csi.adaptor.MockCsiAdaptor");
-    conf.set(YarnConfiguration.NM_CSI_DRIVER_PREFIX
-        + "customized-driver-1.endpoint",
-        "unix:///tmp/customized-driver-1.sock");
-
-    // customized-driver-2
-    conf.setSocketAddr(YarnConfiguration.NM_CSI_ADAPTOR_PREFIX
-        + "customized-driver-2.address", address2);
-    conf.set(YarnConfiguration.NM_CSI_ADAPTOR_PREFIX
-        + "customized-driver-2.class",
-        "org.apache.hadoop.yarn.csi.adaptor.MockCsiAdaptor");
-    conf.set(YarnConfiguration.NM_CSI_DRIVER_PREFIX
-        + "customized-driver-2.endpoint",
-        "unix:///tmp/customized-driver-2.sock");
-
-    driver1Addr.close();
-    driver2Addr.close();
-
-    CsiAdaptorServices services =
-        new CsiAdaptorServices();
-    services.init(conf);
-    services.start();
-
-    YarnRPC rpc = YarnRPC.create(conf);
-    UserGroupInformation currentUser = UserGroupInformation.getCurrentUser();
-    CsiAdaptorProtocol client1 = NMProxy
-        .createNMProxy(conf, CsiAdaptorProtocol.class, currentUser, rpc,
-            NetUtils.createSocketAddrForHost("localhost",
-                driver1Addr.getLocalPort()));
-
-    // ***************************************************
-    // Verify talking with customized-driver-1
-    // ***************************************************
-    // Test getPluginInfo
-    GetPluginInfoResponse pluginInfo =
-        client1.getPluginInfo(GetPluginInfoRequest.newInstance());
-    assertThat(pluginInfo.getDriverName()).isEqualTo("customized-driver-1");
-    assertThat(pluginInfo.getVersion()).isEqualTo("1.0");
-
-    // Test validateVolumeCapacity
-    ValidateVolumeCapabilitiesRequest request =
-        ValidateVolumeCapabilitiesRequestPBImpl
-            .newInstance("driver-1-volume-00001",
-                ImmutableList.of(new ValidateVolumeCapabilitiesRequest
-                    .VolumeCapability(
-                    MULTI_NODE_MULTI_WRITER, FILE_SYSTEM,
-                    ImmutableList.of())), ImmutableMap.of());
-
-    ValidateVolumeCapabilitiesResponse response = client1
-        .validateVolumeCapacity(request);
-    assertEquals(true, response.isSupported());
-    assertEquals("verified via MockCsiAdaptor",
-        response.getResponseMessage());
-
-
-    // ***************************************************
-    // Verify talking with customized-driver-2
-    // ***************************************************
-    CsiAdaptorProtocol client2 = NMProxy
-        .createNMProxy(conf, CsiAdaptorProtocol.class, currentUser, rpc,
-            NetUtils.createSocketAddrForHost("localhost",
-                driver2Addr.getLocalPort()));
-    GetPluginInfoResponse pluginInfo2 =
-        client2.getPluginInfo(GetPluginInfoRequest.newInstance());
-    assertThat(pluginInfo2.getDriverName()).isEqualTo("customized-driver-2");
-    assertThat(pluginInfo2.getVersion()).isEqualTo("1.0");
-
-    services.stop();
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestGetPluginInfoRequestResponse.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestGetPluginInfoRequestResponse.java
deleted file mode 100644
index a6591091e5a..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestGetPluginInfoRequestResponse.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.yarn.api.protocolrecords.GetPluginInfoResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.GetPluginInfoRequestPBImpl;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.GetPluginInfoResponsePBImpl;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos;
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertNotNull;
-
-/**
- * Verify the integrity of GetPluginInfoRequest and GetPluginInfoResponse.
- */
-public class TestGetPluginInfoRequestResponse {
-
-  @Test
-  void testGetPluginInfoRequestPBRecord() {
-    CsiAdaptorProtos.GetPluginInfoRequest requestProto =
-        CsiAdaptorProtos.GetPluginInfoRequest.newBuilder().build();
-    GetPluginInfoRequestPBImpl pbImpl =
-        new GetPluginInfoRequestPBImpl(requestProto);
-    assertNotNull(pbImpl);
-    assertEquals(requestProto, pbImpl.getProto());
-  }
-
-  @Test
-  void testGetPluginInfoResponsePBRecord() {
-    CsiAdaptorProtos.GetPluginInfoResponse responseProto =
-        CsiAdaptorProtos.GetPluginInfoResponse.newBuilder()
-            .setName("test-driver")
-            .setVendorVersion("1.0.1")
-            .build();
-
-    GetPluginInfoResponsePBImpl pbImpl =
-        new GetPluginInfoResponsePBImpl(responseProto);
-    assertEquals("test-driver", pbImpl.getDriverName());
-    assertEquals("1.0.1", pbImpl.getVersion());
-    assertEquals(responseProto, pbImpl.getProto());
-
-    GetPluginInfoResponse pbImpl2 = GetPluginInfoResponsePBImpl
-        .newInstance("test-driver", "1.0.1");
-    assertEquals("test-driver", pbImpl2.getDriverName());
-    assertEquals("1.0.1", pbImpl2.getVersion());
-
-    CsiAdaptorProtos.GetPluginInfoResponse proto =
-        ((GetPluginInfoResponsePBImpl) pbImpl2).getProto();
-    assertEquals("test-driver", proto.getName());
-    assertEquals("1.0.1", proto.getVendorVersion());
-  }
-}
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestNodePublishVolumeRequest.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestNodePublishVolumeRequest.java
deleted file mode 100644
index 77c60fd6d11..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestNodePublishVolumeRequest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.NodePublishVolumeRequestPBImpl;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos.VolumeCapability.AccessMode;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos.VolumeCapability.VolumeType;
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertFalse;
-
-/**
- * UT for NodePublishVolumeRequest.
- */
-public class TestNodePublishVolumeRequest {
-
-  @Test
-  void testPBRecord() {
-    CsiAdaptorProtos.VolumeCapability capability =
-        CsiAdaptorProtos.VolumeCapability.newBuilder()
-            .setAccessMode(AccessMode.MULTI_NODE_READER_ONLY)
-            .setVolumeType(VolumeType.FILE_SYSTEM)
-            .build();
-    CsiAdaptorProtos.NodePublishVolumeRequest proto =
-        CsiAdaptorProtos.NodePublishVolumeRequest.newBuilder()
-            .setReadonly(false)
-            .setVolumeId("test-vol-000001")
-            .setTargetPath("/mnt/data")
-            .setStagingTargetPath("/mnt/staging")
-            .setVolumeCapability(capability)
-            .build();
-
-    NodePublishVolumeRequestPBImpl pbImpl =
-        new NodePublishVolumeRequestPBImpl(proto);
-    assertEquals("test-vol-000001", pbImpl.getVolumeId());
-    assertEquals("/mnt/data", pbImpl.getTargetPath());
-    assertEquals("/mnt/staging", pbImpl.getStagingPath());
-    assertFalse(pbImpl.getReadOnly());
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityRequest.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityRequest.java
deleted file mode 100644
index 0c1d243a625..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityRequest.java
+++ /dev/null
@@ -1,113 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.thirdparty.com.google.common.collect.ImmutableList;
-import org.apache.hadoop.thirdparty.com.google.common.collect.ImmutableMap;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.VolumeCapability;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.ValidateVolumeCapabilitiesRequestPBImpl;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos.VolumeCapability.AccessMode;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos.VolumeCapability.VolumeType;
-import org.apache.hadoop.yarn.proto.YarnProtos;
-import org.junit.jupiter.api.Test;
-
-import static org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.AccessMode.MULTI_NODE_MULTI_WRITER;
-import static org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.VolumeType.FILE_SYSTEM;
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-/**
- * UT for message exchanges.
- */
-public class TestValidateVolumeCapabilityRequest {
-
-  @Test
-  void testPBRecord() {
-    CsiAdaptorProtos.VolumeCapability vcProto =
-        CsiAdaptorProtos.VolumeCapability.newBuilder()
-            .setAccessMode(AccessMode.MULTI_NODE_MULTI_WRITER)
-            .setVolumeType(VolumeType.FILE_SYSTEM)
-            .addMountFlags("flag0")
-            .addMountFlags("flag1")
-            .build();
-
-    CsiAdaptorProtos.ValidateVolumeCapabilitiesRequest requestProto =
-        CsiAdaptorProtos.ValidateVolumeCapabilitiesRequest.newBuilder()
-            .setVolumeId("volume-id-0000001")
-            .addVolumeCapabilities(vcProto)
-            .addVolumeAttributes(YarnProtos.StringStringMapProto
-                .newBuilder().setKey("attr0")
-                .setValue("value0")
-                .build())
-            .addVolumeAttributes(YarnProtos.StringStringMapProto
-                .newBuilder().setKey("attr1")
-                .setValue("value1")
-                .build())
-            .build();
-
-    ValidateVolumeCapabilitiesRequestPBImpl request =
-        new ValidateVolumeCapabilitiesRequestPBImpl(requestProto);
-
-    assertEquals("volume-id-0000001", request.getVolumeId());
-    assertEquals(2, request.getVolumeAttributes().size());
-    assertEquals("value0", request.getVolumeAttributes().get("attr0"));
-    assertEquals("value1", request.getVolumeAttributes().get("attr1"));
-    assertEquals(1, request.getVolumeCapabilities().size());
-    VolumeCapability vc =
-        request.getVolumeCapabilities().get(0);
-    assertEquals(MULTI_NODE_MULTI_WRITER, vc.getAccessMode());
-    assertEquals(FILE_SYSTEM, vc.getVolumeType());
-    assertEquals(2, vc.getMountFlags().size());
-
-    assertEquals(requestProto, request.getProto());
-  }
-
-  @Test
-  void testNewInstance() {
-    ValidateVolumeCapabilitiesRequest pbImpl =
-        ValidateVolumeCapabilitiesRequestPBImpl
-            .newInstance("volume-id-0000123",
-                ImmutableList.of(
-                    new VolumeCapability(
-                        MULTI_NODE_MULTI_WRITER, FILE_SYSTEM,
-                        ImmutableList.of("mountFlag1", "mountFlag2"))),
-                ImmutableMap.of("k1", "v1", "k2", "v2"));
-
-    assertEquals("volume-id-0000123", pbImpl.getVolumeId());
-    assertEquals(1, pbImpl.getVolumeCapabilities().size());
-    assertEquals(FILE_SYSTEM,
-        pbImpl.getVolumeCapabilities().get(0).getVolumeType());
-    assertEquals(MULTI_NODE_MULTI_WRITER,
-        pbImpl.getVolumeCapabilities().get(0).getAccessMode());
-    assertEquals(2, pbImpl.getVolumeAttributes().size());
-
-    CsiAdaptorProtos.ValidateVolumeCapabilitiesRequest proto =
-        ((ValidateVolumeCapabilitiesRequestPBImpl) pbImpl).getProto();
-    assertEquals("volume-id-0000123", proto.getVolumeId());
-    assertEquals(1, proto.getVolumeCapabilitiesCount());
-    assertEquals(AccessMode.MULTI_NODE_MULTI_WRITER,
-        proto.getVolumeCapabilities(0).getAccessMode());
-    assertEquals(VolumeType.FILE_SYSTEM,
-        proto.getVolumeCapabilities(0).getVolumeType());
-    assertEquals(2, proto.getVolumeCapabilities(0)
-        .getMountFlagsCount());
-    assertEquals(2, proto.getVolumeCapabilities(0)
-        .getMountFlagsList().size());
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityResponse.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityResponse.java
deleted file mode 100644
index ee80bf4d0c6..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/TestValidateVolumeCapabilityResponse.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
-
-import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.ValidateVolumeCapabilitiesResponsePBImpl;
-import org.apache.hadoop.yarn.proto.CsiAdaptorProtos;
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-/**
- * UT for message exchanges.
- */
-public class TestValidateVolumeCapabilityResponse {
-
-  @Test
-  void testPBRecord() {
-    CsiAdaptorProtos.ValidateVolumeCapabilitiesResponse proto =
-        CsiAdaptorProtos.ValidateVolumeCapabilitiesResponse.newBuilder()
-            .setSupported(true)
-            .setMessage("capability is supported")
-            .build();
-
-    ValidateVolumeCapabilitiesResponsePBImpl pbImpl =
-        new ValidateVolumeCapabilitiesResponsePBImpl(proto);
-
-    assertEquals(true, pbImpl.isSupported());
-    assertEquals("capability is supported", pbImpl.getResponseMessage());
-    assertEquals(proto, pbImpl.getProto());
-  }
-
-  @Test
-  void testNewInstance() {
-    ValidateVolumeCapabilitiesResponse pbImpl =
-        ValidateVolumeCapabilitiesResponsePBImpl
-            .newInstance(false, "capability not supported");
-    assertEquals(false, pbImpl.isSupported());
-    assertEquals("capability not supported",
-        pbImpl.getResponseMessage());
-
-    CsiAdaptorProtos.ValidateVolumeCapabilitiesResponse proto =
-        ((ValidateVolumeCapabilitiesResponsePBImpl) pbImpl).getProto();
-    assertEquals(false, proto.getSupported());
-    assertEquals("capability not supported", proto.getMessage());
-  }
-}
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java
deleted file mode 100644
index ecc7fc2c7e7..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/adaptor/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * This package contains UT classes for CSI adaptor.
- */
-package org.apache.hadoop.yarn.csi.adaptor;
\ No newline at end of file
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiDriver.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiDriver.java
deleted file mode 100644
index 0c6de32e519..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiDriver.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.client;
-
-import io.grpc.Server;
-import io.grpc.netty.NettyServerBuilder;
-import io.netty.channel.epoll.EpollEventLoopGroup;
-import io.netty.channel.epoll.EpollServerDomainSocketChannel;
-import org.apache.hadoop.yarn.csi.utils.GrpcHelper;
-
-import java.io.IOException;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-/**
- * A fake implementation of CSI driver.
- * This is for testing purpose only.
- */
-public class FakeCsiDriver {
-
-  private static final Logger LOG = LoggerFactory
-      .getLogger(FakeCsiDriver.class.getName());
-
-  private Server server;
-  private String socketAddress;
-
-  public FakeCsiDriver(String socketAddress) {
-    this.socketAddress = socketAddress;
-  }
-
-  public void start() throws IOException {
-    EpollEventLoopGroup group = new EpollEventLoopGroup();
-    server = NettyServerBuilder
-        .forAddress(GrpcHelper.getSocketAddress(socketAddress))
-        .channelType(EpollServerDomainSocketChannel.class)
-        .workerEventLoopGroup(group)
-        .bossEventLoopGroup(group)
-        .addService(new FakeCsiIdentityService())
-        .build();
-    server.start();
-    LOG.info("Server started, listening on " + socketAddress);
-  }
-
-  public void stop() {
-    if (server != null) {
-      server.shutdown();
-      LOG.info("Server has been shutdown");
-    }
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiIdentityService.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiIdentityService.java
deleted file mode 100644
index 0ecdcbe3780..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/FakeCsiIdentityService.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.client;
-
-import csi.v0.Csi.GetPluginInfoRequest;
-import csi.v0.Csi.GetPluginInfoResponse;
-import csi.v0.IdentityGrpc;
-import io.grpc.stub.StreamObserver;
-
-/**
- * A fake implementation of CSI identity plugin gRPC service.
- * This is for testing purpose only.
- */
-public class FakeCsiIdentityService extends IdentityGrpc.IdentityImplBase {
-
-  @Override
-  public void getPluginInfo(GetPluginInfoRequest request,
-      StreamObserver<GetPluginInfoResponse> responseObserver) {
-    GetPluginInfoResponse response = GetPluginInfoResponse.newBuilder()
-        .setName("fake-csi-identity-service")
-        .setVendorVersion("0.1")
-        .build();
-    responseObserver.onNext(response);
-    responseObserver.onCompleted();
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/ICsiClientTest.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/ICsiClientTest.java
deleted file mode 100644
index 2f150cb8dfb..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/ICsiClientTest.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.yarn.csi.client;
-
-import csi.v0.Csi;
-
-import java.io.IOException;
-
-/**
- * This interface is used only in testing. It gives default implementation
- * of all methods.
- */
-public interface ICsiClientTest extends CsiClient {
-
-  @Override
-  default Csi.GetPluginInfoResponse getPluginInfo()
-      throws IOException {
-    return null;
-  }
-
-  @Override
-  default Csi.ValidateVolumeCapabilitiesResponse validateVolumeCapabilities(
-      Csi.ValidateVolumeCapabilitiesRequest request) throws IOException {
-    return null;
-  }
-
-  @Override
-  default Csi.NodePublishVolumeResponse nodePublishVolume(
-      Csi.NodePublishVolumeRequest request) throws IOException {
-    return null;
-  }
-
-  @Override
-  default Csi.NodeUnpublishVolumeResponse nodeUnpublishVolume(
-      Csi.NodeUnpublishVolumeRequest request) throws IOException {
-    return null;
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/TestCsiClient.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/TestCsiClient.java
deleted file mode 100644
index 059cc90c4f3..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/TestCsiClient.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.hadoop.yarn.csi.client;
-
-import csi.v0.Csi;
-import org.apache.commons.io.FileUtils;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.Assumptions;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.File;
-import java.io.IOException;
-import java.nio.file.Files;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-/**
- * Test class for CSI client.
- */
-public class TestCsiClient {
-  private static final Logger LOG = LoggerFactory.getLogger(TestCsiClient.class);
-  private static File testRoot = null;
-  private static String domainSocket = null;
-  private static FakeCsiDriver driver = null;
-
-  @BeforeAll
-  public static void setUp() throws IOException {
-    // Use /tmp to fix bind failure caused by the long file name
-    File tmpDir = new File(System.getProperty("java.io.tmpdir"));
-    testRoot = Files
-        .createTempDirectory(tmpDir.toPath(), "test").toFile();
-    File socketPath = new File(testRoot, "csi.sock");
-    FileUtils.forceMkdirParent(socketPath);
-    domainSocket = "unix://" + socketPath.getAbsolutePath();
-    LOG.info("Create unix domain socket: {}", domainSocket);
-    driver = new FakeCsiDriver(domainSocket);
-  }
-
-  @AfterAll
-  public static void tearDown() throws IOException {
-    if (testRoot != null) {
-      FileUtils.deleteDirectory(testRoot);
-    }
-  }
-
-  @BeforeEach
-  public void beforeMethod() {
-    // Skip tests on non-linux systems
-    String osName = System.getProperty("os.name").toLowerCase();
-    Assumptions.assumeTrue(osName.contains("nix") || osName.contains("nux"));
-  }
-
-  @Test
-  void testIdentityService() throws IOException {
-    try {
-      driver.start();
-      CsiClient client = new CsiClientImpl(domainSocket);
-      Csi.GetPluginInfoResponse response = client.getPluginInfo();
-      assertEquals("fake-csi-identity-service", response.getName());
-    } finally {
-      driver.stop();
-    }
-  }
-}
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/package-info.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/package-info.java
deleted file mode 100644
index e90175daa96..00000000000
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/test/java/org/apache/hadoop/yarn/csi/client/package-info.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-/**
- * This package contains classes for CSI client library testing.
- */
-package org.apache.hadoop.yarn.csi.client;
diff --git a/hadoop-yarn-project/hadoop-yarn/pom.xml b/hadoop-yarn-project/hadoop-yarn/pom.xml
index d3ce9fef41f..4e45c200fc3 100644
--- a/hadoop-yarn-project/hadoop-yarn/pom.xml
+++ b/hadoop-yarn-project/hadoop-yarn/pom.xml
@@ -244,7 +244,6 @@
     <module>hadoop-yarn-client</module>
     <module>hadoop-yarn-registry</module>
     <module>hadoop-yarn-ui</module>
-    <module>hadoop-yarn-csi</module>
   </modules>
   <!--  -->
 </project>
