#!/usr/bin/env bash
#
# Usage: start-namenode <options> namenode [namenode-options]
# Options:
#   --help
#   --config <path-to-hadoop-conf-folder>
#
# Checks if "dfs.namenode.name.dir" exists and is formatted. If so it starts the namenode,
# otherwise it tries to format it first.
#

#set -x

CONF_DIR=""
NAMENODE_NAME_DIR=""

MYDIR=$(dirname $0)
HDFS_BIN_DIR=$MYDIR

function parse_args {
  while true; do
    echo "processing arg $1"
    case $1 in
      --config)
        shift
        CONF_DIR=$1
        shift
      ;;
      --help)
        echo  "Usage: start-namenode <options> namenode [namenode-options]"
        echo  "Options:"
        echo  "  --help"
        echo  "  --config <path-to-hadoop-conf-folder>"
        exit
      ;;
      *)
        break
      ;;
    esac
  done

  if [ ! -d "$CONF_DIR" ]; then
    echo "Missing namenode configuration file."
    exit 1
  fi

}

function parse_namenode_name_dir {
  local CONF_FILE="$CONF_DIR/hdfs-site.xml"

  if [ -f $CONF_FILE ]; then
    NAMENODE_NAME_DIR=$(grep -A1 dfs.namenode.name.dir $CONF_FILE | grep value | sed "s/\s*<\/*value>//g")
  fi
}

function check_namenode_dir {
  if ! $HDFS_BIN_DIR/hdfs dfs -test -f "$NAMENODE_NAME_DIR/current/VERSION"; then
    echo "Formatting $NAMENODE_NAME_DIR ..."
    $HDFS_BIN_DIR/hdfs --config $CONF_DIR namenode -format -nonInteractive || exit 1
  fi
}

function start_namenode {
  $HDFS_BIN_DIR/hdfs --config $CONF_DIR namenode
}

function main {
  parse_args $@
  parse_namenode_name_dir
  check_namenode_dir
  start_namenode
}

main $@
