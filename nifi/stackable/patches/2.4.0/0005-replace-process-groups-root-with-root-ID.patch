From 7d3774380339871ab4890b898eb35e4a8d4fc995 Mon Sep 17 00:00:00 2001
From: Andrew Kenworthy <andrew.kenworthy@stackable.tech>
Date: Fri, 10 Oct 2025 15:28:56 +0200
Subject: replace process groups root with root ID

---
 .../FileAccessPolicyProvider.java             | 24 +++++++++++++++++++
 .../nifi/controller/StandardFlowService.java  |  5 ++++
 2 files changed, 29 insertions(+)

diff --git a/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java b/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java
index 5363bb5619..ca9758f32c 100644
--- a/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java
+++ b/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java
@@ -744,6 +744,30 @@ public class FileAccessPolicyProvider implements ConfigurableAccessPolicyProvide
         }
     }
 
+    /**
+     * Replaces process group root references with the process group ID.
+     * Relevant when a static authorizations file is provided, which can
+     * then use "root" as a placeholder.
+     */
+    public void replaceWithRootGroupId() throws JAXBException {
+        if (rootGroupId != null) {
+            Authorizations authorizations = this.authorizationsHolder.get().getAuthorizations();
+            boolean authorizationsChanged = false;
+            for (Policy policy: authorizations.getPolicies().getPolicy()) {
+                String resource = policy.getResource();
+                String processGroupRoot = ResourceType.ProcessGroup.getValue() + "/root";
+                if (resource.endsWith(processGroupRoot)) {
+                    int pos = resource.indexOf(processGroupRoot);
+                    policy.setResource(resource.substring(0, pos) + ResourceType.ProcessGroup.getValue() + "/" + rootGroupId);
+                    authorizationsChanged = true;
+                }
+            }
+            if (authorizationsChanged) {
+                saveAuthorizations(authorizations);
+            }
+        }
+    }
+
     /**
      * Creates and adds an access policy for the given resource, group identity, and actions to the specified authorizations.
      *
diff --git a/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowService.java b/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowService.java
index 09f4d38f77..dad44540de 100644
--- a/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowService.java
+++ b/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowService.java
@@ -933,6 +933,11 @@ public class StandardFlowService implements FlowService, ProtocolHandler {
             // start the processors as indicated by the dataflow
             controller.onFlowInitialized(autoResumeState);
 
+            // this should be done once the flow has been initialized
+            if (this.authorizer instanceof org.apache.nifi.authorization.FileAccessPolicyProvider) {
+                ((org.apache.nifi.authorization.FileAccessPolicyProvider) this.authorizer).replaceWithRootGroupId();
+            }
+
             loadSnippets(dataFlow.getSnippets());
 
             controller.startHeartbeating();
