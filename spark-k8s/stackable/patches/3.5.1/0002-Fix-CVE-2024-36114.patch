From 3892892d934387d20c6d8fd45f126e054bef55b8 Mon Sep 17 00:00:00 2001
From: Siegfried Weber <mail@siegfriedweber.net>
Date: Mon, 11 Nov 2024 10:00:15 +0100
Subject: Fix CVE-2024-36114

see https://github.com/stackabletech/vulnerabilities/issues/834

Aircompressor is a library with ports of the Snappy, LZO, LZ4, and
Zstandard compression algorithms to Java. All decompressor
implementations of Aircompressor (LZ4, LZO, Snappy, Zstandard) can crash
the JVM for certain input, and in some cases also leak the content of
other memory of the Java process (which could contain sensitive
information). When decompressing certain data, the decompressors try to
access memory outside the bounds of the given byte arrays or byte
buffers. Because Aircompressor uses the JDK class sun.misc.Unsafe to
speed up memory access, no additional bounds checks are performed and
this has similar security consequences as out-of-bounds access in C or
C++, namely it can lead to non-deterministic behavior or crash the JVM.
Users should update to Aircompressor 0.27 or newer where these issues
have been fixed. When decompressing data from untrusted users, this can
be exploited for a denial-of-service attack by crashing the JVM, or to
leak other sensitive information from the Java process. There are no
known workarounds for this issue.
---
 pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pom.xml b/pom.xml
index 6cca7db7bf..fb9254e0cd 100644
--- a/pom.xml
+++ b/pom.xml
@@ -2558,7 +2558,7 @@
       <dependency>
         <groupId>io.airlift</groupId>
         <artifactId>aircompressor</artifactId>
-        <version>0.26</version>
+        <version>0.27</version>
       </dependency>
       <dependency>
         <groupId>org.apache.orc</groupId>
